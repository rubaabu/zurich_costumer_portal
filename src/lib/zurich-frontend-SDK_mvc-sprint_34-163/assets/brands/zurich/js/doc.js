/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	var require;var require;/*!
	 * Date:      Mon Sep 25 2017 17:17:32 GMT+0200 (CEST)
	 * Date-ISO:  2017-09-25T15:17:32.247Z
	 * Timestamp: 1506352652
	 * Release:   mvc-sprint_34-163
	 * Revision:  95460b186fa9628b033736dab5ed2930dd017485
	 */
	/******/ (function(modules) { // webpackBootstrap
	/******/ 	// The module cache
	/******/ 	var installedModules = {};
	
	/******/ 	// The require function
	/******/ 	function __webpack_require__(moduleId) {
	
	/******/ 		// Check if module is in cache
	/******/ 		if(installedModules[moduleId])
	/******/ 			return installedModules[moduleId].exports;
	
	/******/ 		// Create a new module (and put it into the cache)
	/******/ 		var module = installedModules[moduleId] = {
	/******/ 			exports: {},
	/******/ 			id: moduleId,
	/******/ 			loaded: false
	/******/ 		};
	
	/******/ 		// Execute the module function
	/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
	
	/******/ 		// Flag the module as loaded
	/******/ 		module.loaded = true;
	
	/******/ 		// Return the exports of the module
	/******/ 		return module.exports;
	/******/ 	}
	
	
	/******/ 	// expose the modules object (__webpack_modules__)
	/******/ 	__webpack_require__.m = modules;
	
	/******/ 	// expose the module cache
	/******/ 	__webpack_require__.c = installedModules;
	
	/******/ 	// __webpack_public_path__
	/******/ 	__webpack_require__.p = "";
	
	/******/ 	// Load entry module and return exports
	/******/ 	return __webpack_require__(0);
	/******/ })
	/************************************************************************/
	/******/ ([
	/* 0 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* START - Essentials generated entry point */
	
		__webpack_require__(1);
		__webpack_require__(3);
		__webpack_require__(5);
		__webpack_require__(6);
		__webpack_require__(7);
		__webpack_require__(8);
		__webpack_require__(9);
		__webpack_require__(10);
		__webpack_require__(11);
		__webpack_require__(12);
		__webpack_require__(20);
		__webpack_require__(23);
		__webpack_require__(24);
		__webpack_require__(26);
		__webpack_require__(27);
		__webpack_require__(28);
		__webpack_require__(29);
		__webpack_require__(30);
		__webpack_require__(31);
		__webpack_require__(34);
		__webpack_require__(35);
		__webpack_require__(36);
		__webpack_require__(41);
		__webpack_require__(42);
		__webpack_require__(43);
		__webpack_require__(44);
		__webpack_require__(45);
		__webpack_require__(46);
		__webpack_require__(47);
		__webpack_require__(48);
		__webpack_require__(49);
		__webpack_require__(50);
		__webpack_require__(51);
		__webpack_require__(52);
		__webpack_require__(53);
		__webpack_require__(54);
		__webpack_require__(55);
		__webpack_require__(56);
		__webpack_require__(57);
		__webpack_require__(58);
		__webpack_require__(59);
		__webpack_require__(60);
		__webpack_require__(61);
		__webpack_require__(62);
		__webpack_require__(63);
		__webpack_require__(64);
		__webpack_require__(65);
		__webpack_require__(66);
		__webpack_require__(264);
		__webpack_require__(612);
		__webpack_require__(613);
		__webpack_require__(614);
		__webpack_require__(618);
		__webpack_require__(619);
		__webpack_require__(623);
		__webpack_require__(624);
		__webpack_require__(630);
		__webpack_require__(631);
		__webpack_require__(632);
		__webpack_require__(633);
		__webpack_require__(634);
		__webpack_require__(635);
		__webpack_require__(636);
		__webpack_require__(637);
		__webpack_require__(638);
		__webpack_require__(639);
		__webpack_require__(642);
		__webpack_require__(643);
		__webpack_require__(644);
		__webpack_require__(645);
		__webpack_require__(646);
		__webpack_require__(647);
		__webpack_require__(648);
		__webpack_require__(649);
		__webpack_require__(650);
		__webpack_require__(651);
		__webpack_require__(652);
		__webpack_require__(653);
	
		/* END - Essentials generated entry point */
	
	/***/ },
	/* 1 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(module) {
		/*
		 *
		 * More info at [www.dropzonejs.com](http://www.dropzonejs.com)
		 *
		 * Copyright (c) 2012, Matias Meno
		 *
		 * Permission is hereby granted, free of charge, to any person obtaining a copy
		 * of this software and associated documentation files (the "Software"), to deal
		 * in the Software without restriction, including without limitation the rights
		 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		 * copies of the Software, and to permit persons to whom the Software is
		 * furnished to do so, subject to the following conditions:
		 *
		 * The above copyright notice and this permission notice shall be included in
		 * all copies or substantial portions of the Software.
		 *
		 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		 * THE SOFTWARE.
		 *
		 */
	
		(function() {
			var Dropzone, Emitter, camelize, contentLoaded, detectVerticalSquash, drawImageIOSFix, noop, without,
				__slice = [].slice,
				__hasProp = {}.hasOwnProperty,
				__extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };
	
			noop = function() {};
	
			Emitter = (function() {
				function Emitter() {}
	
				Emitter.prototype.addEventListener = Emitter.prototype.on;
	
				Emitter.prototype.on = function(event, fn) {
					this._callbacks = this._callbacks || {};
					if (!this._callbacks[event]) {
						this._callbacks[event] = [];
					}
					this._callbacks[event].push(fn);
					return this;
				};
	
				Emitter.prototype.emit = function() {
					var args, callback, callbacks, event, _i, _len;
					event = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
					this._callbacks = this._callbacks || {};
					callbacks = this._callbacks[event];
					if (callbacks) {
						for (_i = 0, _len = callbacks.length; _i < _len; _i++) {
							callback = callbacks[_i];
							callback.apply(this, args);
						}
					}
					return this;
				};
	
				Emitter.prototype.removeListener = Emitter.prototype.off;
	
				Emitter.prototype.removeAllListeners = Emitter.prototype.off;
	
				Emitter.prototype.removeEventListener = Emitter.prototype.off;
	
				Emitter.prototype.off = function(event, fn) {
					var callback, callbacks, i, _i, _len;
					if (!this._callbacks || arguments.length === 0) {
						this._callbacks = {};
						return this;
					}
					callbacks = this._callbacks[event];
					if (!callbacks) {
						return this;
					}
					if (arguments.length === 1) {
						delete this._callbacks[event];
						return this;
					}
					for (i = _i = 0, _len = callbacks.length; _i < _len; i = ++_i) {
						callback = callbacks[i];
						if (callback === fn) {
							callbacks.splice(i, 1);
							break;
						}
					}
					return this;
				};
	
				return Emitter;
	
			})();
	
			Dropzone = (function(_super) {
				var extend, resolveOption;
	
				__extends(Dropzone, _super);
	
				Dropzone.prototype.Emitter = Emitter;
	
	
				/*
				 This is a list of all available events you can register on a dropzone object.
	
				 You can register an event handler like this:
	
				 dropzone.on("dragEnter", function() { });
				 */
	
				Dropzone.prototype.events = ["drop", "dragstart", "dragend", "dragenter", "dragover", "dragleave", "addedfile", "addedfiles", "removedfile", "thumbnail", "error", "errormultiple", "processing", "processingmultiple", "uploadprogress", "totaluploadprogress", "sending", "sendingmultiple", "success", "successmultiple", "canceled", "canceledmultiple", "complete", "completemultiple", "reset", "maxfilesexceeded", "maxfilesreached", "queuecomplete"];
	
				Dropzone.prototype.defaultOptions = {
					url: null,
					method: "post",
					withCredentials: false,
					parallelUploads: 2,
					uploadMultiple: false,
					maxFilesize: 256,
					paramName: "file",
					createImageThumbnails: true,
					maxThumbnailFilesize: 10,
					thumbnailWidth: 120,
					thumbnailHeight: 120,
					filesizeBase: 1000,
					maxFiles: null,
					params: {},
					clickable: true,
					ignoreHiddenFiles: true,
					acceptedFiles: null,
					acceptedMimeTypes: null,
					autoProcessQueue: true,
					autoQueue: true,
					addRemoveLinks: false,
					previewsContainer: null,
					hiddenInputContainer: "body",
					capture: null,
					renameFilename: null,
					dictDefaultMessage: "Drop files here to upload",
					dictFallbackMessage: "Your browser does not support drag'n'drop file uploads.",
					dictFallbackText: "Please use the fallback form below to upload your files like in the olden days.",
					dictFileTooBig: "File is too big ({{filesize}}MiB). Max filesize: {{maxFilesize}}MiB.",
					dictInvalidFileType: "You can't upload files of this type.",
					dictResponseError: "Server responded with {{statusCode}} code.",
					dictCancelUpload: "Cancel upload",
					dictCancelUploadConfirmation: "Are you sure you want to cancel this upload?",
					dictRemoveFile: "Remove file",
					dictRemoveFileConfirmation: null,
					dictMaxFilesExceeded: "You can not upload any more files.",
					accept: function(file, done) {
						return done();
					},
					init: function() {
						return noop;
					},
					forceFallback: false,
					fallback: function() {
						var child, messageElement, span, _i, _len, _ref;
						this.element.className = "" + this.element.className + " dz-browser-not-supported";
						_ref = this.element.getElementsByTagName("div");
						for (_i = 0, _len = _ref.length; _i < _len; _i++) {
							child = _ref[_i];
							if (/(^| )dz-message($| )/.test(child.className)) {
								messageElement = child;
								child.className = "dz-message";
								continue;
							}
						}
						if (!messageElement) {
							messageElement = Dropzone.createElement("<div class=\"dz-message\"><span></span></div>");
							this.element.appendChild(messageElement);
						}
						span = messageElement.getElementsByTagName("span")[0];
						if (span) {
							if (span.textContent != null) {
								span.textContent = this.options.dictFallbackMessage;
							} else if (span.innerText != null) {
								span.innerText = this.options.dictFallbackMessage;
							}
						}
						return this.element.appendChild(this.getFallbackForm());
					},
					resize: function(file) {
						var info, srcRatio, trgRatio;
						info = {
							srcX: 0,
							srcY: 0,
							srcWidth: file.width,
							srcHeight: file.height
						};
						srcRatio = file.width / file.height;
						info.optWidth = this.options.thumbnailWidth;
						info.optHeight = this.options.thumbnailHeight;
						if ((info.optWidth == null) && (info.optHeight == null)) {
							info.optWidth = info.srcWidth;
							info.optHeight = info.srcHeight;
						} else if (info.optWidth == null) {
							info.optWidth = srcRatio * info.optHeight;
						} else if (info.optHeight == null) {
							info.optHeight = (1 / srcRatio) * info.optWidth;
						}
						trgRatio = info.optWidth / info.optHeight;
						if (file.height < info.optHeight || file.width < info.optWidth) {
							info.trgHeight = info.srcHeight;
							info.trgWidth = info.srcWidth;
						} else {
							if (srcRatio > trgRatio) {
								info.srcHeight = file.height;
								info.srcWidth = info.srcHeight * trgRatio;
							} else {
								info.srcWidth = file.width;
								info.srcHeight = info.srcWidth / trgRatio;
							}
						}
						info.srcX = (file.width - info.srcWidth) / 2;
						info.srcY = (file.height - info.srcHeight) / 2;
						return info;
					},
	
					/*
					 Those functions register themselves to the events on init and handle all
					 the user interface specific stuff. Overwriting them won't break the upload
					 but can break the way it's displayed.
					 You can overwrite them if you don't like the default behavior. If you just
					 want to add an additional event handler, register it on the dropzone object
					 and don't overwrite those options.
					 */
					drop: function(e) {
						return this.element.classList.remove("dz-drag-hover");
					},
					dragstart: noop,
					dragend: function(e) {
						return this.element.classList.remove("dz-drag-hover");
					},
					dragenter: function(e) {
						return this.element.classList.add("dz-drag-hover");
					},
					dragover: function(e) {
						return this.element.classList.add("dz-drag-hover");
					},
					dragleave: function(e) {
						return this.element.classList.remove("dz-drag-hover");
					},
					paste: noop,
					reset: function() {
						return this.element.classList.remove("dz-started");
					},
					addedfile: function(file) {
						var node, removeFileEvent, removeLink, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2, _results;
						if (this.element === this.previewsContainer) {
							this.element.classList.add("dz-started");
						}
						if (this.previewsContainer) {
							file.previewElement = Dropzone.createElement(this.options.previewTemplate.trim());
							file.previewTemplate = file.previewElement;
							this.previewsContainer.appendChild(file.previewElement);
							_ref = file.previewElement.querySelectorAll("[data-dz-name]");
							for (_i = 0, _len = _ref.length; _i < _len; _i++) {
								node = _ref[_i];
								node.textContent = this._renameFilename(file.name);
							}
							_ref1 = file.previewElement.querySelectorAll("[data-dz-size]");
							for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
								node = _ref1[_j];
								node.innerHTML = this.filesize(file.size);
							}
							if (this.options.addRemoveLinks) {
								file._removeLink = Dropzone.createElement("<a class=\"dz-remove\" href=\"javascript:undefined;\" data-dz-remove>" + this.options.dictRemoveFile + "</a>");
								file.previewElement.appendChild(file._removeLink);
							}
							removeFileEvent = (function(_this) {
								return function(e) {
									e.preventDefault();
									e.stopPropagation();
									if (file.status === Dropzone.UPLOADING) {
										return Dropzone.confirm(_this.options.dictCancelUploadConfirmation, function() {
											return _this.removeFile(file);
										});
									} else {
										if (_this.options.dictRemoveFileConfirmation) {
											return Dropzone.confirm(_this.options.dictRemoveFileConfirmation, function() {
												return _this.removeFile(file);
											});
										} else {
											return _this.removeFile(file);
										}
									}
								};
							})(this);
							_ref2 = file.previewElement.querySelectorAll("[data-dz-remove]");
							_results = [];
							for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {
								removeLink = _ref2[_k];
								_results.push(removeLink.addEventListener("click", removeFileEvent));
							}
							return _results;
						}
					},
					removedfile: function(file) {
						var _ref;
						if (file.previewElement) {
							if ((_ref = file.previewElement) != null) {
								_ref.parentNode.removeChild(file.previewElement);
							}
						}
						return this._updateMaxFilesReachedClass();
					},
					thumbnail: function(file, dataUrl) {
						var thumbnailElement, _i, _len, _ref;
						if (file.previewElement) {
							file.previewElement.classList.remove("dz-file-preview");
							_ref = file.previewElement.querySelectorAll("[data-dz-thumbnail]");
							for (_i = 0, _len = _ref.length; _i < _len; _i++) {
								thumbnailElement = _ref[_i];
								thumbnailElement.alt = file.name;
								thumbnailElement.src = dataUrl;
							}
							return setTimeout(((function(_this) {
								return function() {
									return file.previewElement.classList.add("dz-image-preview");
								};
							})(this)), 1);
						}
					},
					error: function(file, message) {
						var node, _i, _len, _ref, _results;
						if (file.previewElement) {
							file.previewElement.classList.add("dz-error");
							if (typeof message !== "String" && message.error) {
								message = message.error;
							}
							_ref = file.previewElement.querySelectorAll("[data-dz-errormessage]");
							_results = [];
							for (_i = 0, _len = _ref.length; _i < _len; _i++) {
								node = _ref[_i];
								_results.push(node.textContent = message);
							}
							return _results;
						}
					},
					errormultiple: noop,
					processing: function(file) {
						if (file.previewElement) {
							file.previewElement.classList.add("dz-processing");
							if (file._removeLink) {
								return file._removeLink.textContent = this.options.dictCancelUpload;
							}
						}
					},
					processingmultiple: noop,
					uploadprogress: function(file, progress, bytesSent) {
						var node, _i, _len, _ref, _results;
						if (file.previewElement) {
							_ref = file.previewElement.querySelectorAll("[data-dz-uploadprogress]");
							_results = [];
							for (_i = 0, _len = _ref.length; _i < _len; _i++) {
								node = _ref[_i];
								if (node.nodeName === 'PROGRESS') {
									_results.push(node.value = progress);
								} else {
									_results.push(node.style.width = "" + progress + "%");
								}
							}
							return _results;
						}
					},
					totaluploadprogress: noop,
					sending: noop,
					sendingmultiple: noop,
					success: function(file) {
						if (file.previewElement) {
							return file.previewElement.classList.add("dz-success");
						}
					},
					successmultiple: noop,
					canceled: function(file) {
						return this.emit("error", file, "Upload canceled.");
					},
					canceledmultiple: noop,
					complete: function(file) {
						if (file._removeLink) {
							file._removeLink.textContent = this.options.dictRemoveFile;
						}
						if (file.previewElement) {
							return file.previewElement.classList.add("dz-complete");
						}
					},
					completemultiple: noop,
					maxfilesexceeded: noop,
					maxfilesreached: noop,
					queuecomplete: noop,
					addedfiles: noop,
					previewTemplate: "<div class=\"dz-preview dz-file-preview\">\n  <div class=\"dz-image\"><img data-dz-thumbnail /></div>\n  <div class=\"dz-details\">\n    <div class=\"dz-size\"><span data-dz-size></span></div>\n    <div class=\"dz-filename\"><span data-dz-name></span></div>\n  </div>\n  <div class=\"dz-progress\"><span class=\"dz-upload\" data-dz-uploadprogress></span></div>\n  <div class=\"dz-error-message\"><span data-dz-errormessage></span></div>\n  <div class=\"dz-success-mark\">\n    <svg width=\"54px\" height=\"54px\" viewBox=\"0 0 54 54\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:sketch=\"http://www.bohemiancoding.com/sketch/ns\">\n      <title>Check</title>\n      <defs></defs>\n      <g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" sketch:type=\"MSPage\">\n        <path d=\"M23.5,31.8431458 L17.5852419,25.9283877 C16.0248253,24.3679711 13.4910294,24.366835 11.9289322,25.9289322 C10.3700136,27.4878508 10.3665912,30.0234455 11.9283877,31.5852419 L20.4147581,40.0716123 C20.5133999,40.1702541 20.6159315,40.2626649 20.7218615,40.3488435 C22.2835669,41.8725651 24.794234,41.8626202 26.3461564,40.3106978 L43.3106978,23.3461564 C44.8771021,21.7797521 44.8758057,19.2483887 43.3137085,17.6862915 C41.7547899,16.1273729 39.2176035,16.1255422 37.6538436,17.6893022 L23.5,31.8431458 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z\" id=\"Oval-2\" stroke-opacity=\"0.198794158\" stroke=\"#747474\" fill-opacity=\"0.816519475\" fill=\"#FFFFFF\" sketch:type=\"MSShapeGroup\"></path>\n      </g>\n    </svg>\n  </div>\n  <div class=\"dz-error-mark\">\n    <svg width=\"54px\" height=\"54px\" viewBox=\"0 0 54 54\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:sketch=\"http://www.bohemiancoding.com/sketch/ns\">\n      <title>Error</title>\n      <defs></defs>\n      <g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" sketch:type=\"MSPage\">\n        <g id=\"Check-+-Oval-2\" sketch:type=\"MSLayerGroup\" stroke=\"#747474\" stroke-opacity=\"0.198794158\" fill=\"#FFFFFF\" fill-opacity=\"0.816519475\">\n          <path d=\"M32.6568542,29 L38.3106978,23.3461564 C39.8771021,21.7797521 39.8758057,19.2483887 38.3137085,17.6862915 C36.7547899,16.1273729 34.2176035,16.1255422 32.6538436,17.6893022 L27,23.3431458 L21.3461564,17.6893022 C19.7823965,16.1255422 17.2452101,16.1273729 15.6862915,17.6862915 C14.1241943,19.2483887 14.1228979,21.7797521 15.6893022,23.3461564 L21.3431458,29 L15.6893022,34.6538436 C14.1228979,36.2202479 14.1241943,38.7516113 15.6862915,40.3137085 C17.2452101,41.8726271 19.7823965,41.8744578 21.3461564,40.3106978 L27,34.6568542 L32.6538436,40.3106978 C34.2176035,41.8744578 36.7547899,41.8726271 38.3137085,40.3137085 C39.8758057,38.7516113 39.8771021,36.2202479 38.3106978,34.6538436 L32.6568542,29 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z\" id=\"Oval-2\" sketch:type=\"MSShapeGroup\"></path>\n        </g>\n      </g>\n    </svg>\n  </div>\n</div>"
				};
	
				extend = function() {
					var key, object, objects, target, val, _i, _len;
					target = arguments[0], objects = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
					for (_i = 0, _len = objects.length; _i < _len; _i++) {
						object = objects[_i];
						for (key in object) {
							val = object[key];
							target[key] = val;
						}
					}
					return target;
				};
	
				function Dropzone(element, options) {
					var elementOptions, fallback, _ref;
					this.element = element;
					this.version = Dropzone.version;
					this.defaultOptions.previewTemplate = this.defaultOptions.previewTemplate.replace(/\n*/g, "");
					this.clickableElements = [];
					this.listeners = [];
					this.files = [];
					if (typeof this.element === "string") {
						this.element = document.querySelector(this.element);
					}
					if (!(this.element && (this.element.nodeType != null))) {
						throw new Error("Invalid dropzone element.");
					}
					if (this.element.dropzone) {
						throw new Error("Dropzone already attached.");
					}
					Dropzone.instances.push(this);
					this.element.dropzone = this;
					elementOptions = (_ref = Dropzone.optionsForElement(this.element)) != null ? _ref : {};
					this.options = extend({}, this.defaultOptions, elementOptions, options != null ? options : {});
					if (this.options.forceFallback || !Dropzone.isBrowserSupported()) {
						return this.options.fallback.call(this);
					}
					if (this.options.url == null) {
						this.options.url = this.element.getAttribute("action");
					}
					if (!this.options.url) {
						throw new Error("No URL provided.");
					}
					if (this.options.acceptedFiles && this.options.acceptedMimeTypes) {
						throw new Error("You can't provide both 'acceptedFiles' and 'acceptedMimeTypes'. 'acceptedMimeTypes' is deprecated.");
					}
					if (this.options.acceptedMimeTypes) {
						this.options.acceptedFiles = this.options.acceptedMimeTypes;
						delete this.options.acceptedMimeTypes;
					}
					this.options.method = this.options.method.toUpperCase();
					if ((fallback = this.getExistingFallback()) && fallback.parentNode) {
						fallback.parentNode.removeChild(fallback);
					}
					if (this.options.previewsContainer !== false) {
						if (this.options.previewsContainer) {
							this.previewsContainer = Dropzone.getElement(this.options.previewsContainer, "previewsContainer");
						} else {
							this.previewsContainer = this.element;
						}
					}
					if (this.options.clickable) {
						if (this.options.clickable === true) {
							this.clickableElements = [this.element];
						} else {
							this.clickableElements = Dropzone.getElements(this.options.clickable, "clickable");
						}
					}
					this.init();
				}
	
				Dropzone.prototype.getAcceptedFiles = function() {
					var file, _i, _len, _ref, _results;
					_ref = this.files;
					_results = [];
					for (_i = 0, _len = _ref.length; _i < _len; _i++) {
						file = _ref[_i];
						if (file.accepted) {
							_results.push(file);
						}
					}
					return _results;
				};
	
				Dropzone.prototype.getRejectedFiles = function() {
					var file, _i, _len, _ref, _results;
					_ref = this.files;
					_results = [];
					for (_i = 0, _len = _ref.length; _i < _len; _i++) {
						file = _ref[_i];
						if (!file.accepted) {
							_results.push(file);
						}
					}
					return _results;
				};
	
				Dropzone.prototype.getFilesWithStatus = function(status) {
					var file, _i, _len, _ref, _results;
					_ref = this.files;
					_results = [];
					for (_i = 0, _len = _ref.length; _i < _len; _i++) {
						file = _ref[_i];
						if (file.status === status) {
							_results.push(file);
						}
					}
					return _results;
				};
	
				Dropzone.prototype.getQueuedFiles = function() {
					return this.getFilesWithStatus(Dropzone.QUEUED);
				};
	
				Dropzone.prototype.getUploadingFiles = function() {
					return this.getFilesWithStatus(Dropzone.UPLOADING);
				};
	
				Dropzone.prototype.getAddedFiles = function() {
					return this.getFilesWithStatus(Dropzone.ADDED);
				};
	
				Dropzone.prototype.getActiveFiles = function() {
					var file, _i, _len, _ref, _results;
					_ref = this.files;
					_results = [];
					for (_i = 0, _len = _ref.length; _i < _len; _i++) {
						file = _ref[_i];
						if (file.status === Dropzone.UPLOADING || file.status === Dropzone.QUEUED) {
							_results.push(file);
						}
					}
					return _results;
				};
	
				Dropzone.prototype.init = function() {
					var eventName, noPropagation, setupHiddenFileInput, _i, _len, _ref, _ref1;
					if (this.element.tagName === "form") {
						this.element.setAttribute("enctype", "multipart/form-data");
					}
					if (this.element.classList.contains("dropzone") && !this.element.querySelector(".dz-message")) {
						this.element.appendChild(Dropzone.createElement("<div class=\"dz-default dz-message\"><span>" + this.options.dictDefaultMessage + "</span></div>"));
					}
					if (this.clickableElements.length) {
						setupHiddenFileInput = (function(_this) {
							return function() {
								if (_this.hiddenFileInput) {
									_this.hiddenFileInput.parentNode.removeChild(_this.hiddenFileInput);
								}
								_this.hiddenFileInput = document.createElement("input");
								_this.hiddenFileInput.setAttribute("type", "file");
								if ((_this.options.maxFiles == null) || _this.options.maxFiles > 1) {
									_this.hiddenFileInput.setAttribute("multiple", "multiple");
								}
								_this.hiddenFileInput.className = "dz-hidden-input";
								if (_this.options.acceptedFiles != null) {
									_this.hiddenFileInput.setAttribute("accept", _this.options.acceptedFiles);
								}
								if (_this.options.capture != null) {
									_this.hiddenFileInput.setAttribute("capture", _this.options.capture);
								}
								_this.hiddenFileInput.style.visibility = "hidden";
								_this.hiddenFileInput.style.position = "absolute";
								_this.hiddenFileInput.style.top = "0";
								_this.hiddenFileInput.style.left = "0";
								_this.hiddenFileInput.style.height = "0";
								_this.hiddenFileInput.style.width = "0";
								document.querySelector(_this.options.hiddenInputContainer).appendChild(_this.hiddenFileInput);
								return _this.hiddenFileInput.addEventListener("change", function() {
									var file, files, _i, _len;
									files = _this.hiddenFileInput.files;
									if (files.length) {
										for (_i = 0, _len = files.length; _i < _len; _i++) {
											file = files[_i];
											_this.addFile(file);
										}
									}
									_this.emit("addedfiles", files);
									return setupHiddenFileInput();
								});
							};
						})(this);
						setupHiddenFileInput();
					}
					this.URL = (_ref = window.URL) != null ? _ref : window.webkitURL;
					_ref1 = this.events;
					for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
						eventName = _ref1[_i];
						this.on(eventName, this.options[eventName]);
					}
					this.on("uploadprogress", (function(_this) {
						return function() {
							return _this.updateTotalUploadProgress();
						};
					})(this));
					this.on("removedfile", (function(_this) {
						return function() {
							return _this.updateTotalUploadProgress();
						};
					})(this));
					this.on("canceled", (function(_this) {
						return function(file) {
							return _this.emit("complete", file);
						};
					})(this));
					this.on("complete", (function(_this) {
						return function(file) {
							if (_this.getAddedFiles().length === 0 && _this.getUploadingFiles().length === 0 && _this.getQueuedFiles().length === 0) {
								return setTimeout((function() {
									return _this.emit("queuecomplete");
								}), 0);
							}
						};
					})(this));
					noPropagation = function(e) {
						e.stopPropagation();
						if (e.preventDefault) {
							return e.preventDefault();
						} else {
							return e.returnValue = false;
						}
					};
					this.listeners = [
						{
							element: this.element,
							events: {
								"dragstart": (function(_this) {
									return function(e) {
										return _this.emit("dragstart", e);
									};
								})(this),
								"dragenter": (function(_this) {
									return function(e) {
										noPropagation(e);
										return _this.emit("dragenter", e);
									};
								})(this),
								"dragover": (function(_this) {
									return function(e) {
										var efct;
										try {
											efct = e.dataTransfer.effectAllowed;
										} catch (_error) {}
										e.dataTransfer.dropEffect = 'move' === efct || 'linkMove' === efct ? 'move' : 'copy';
										noPropagation(e);
										return _this.emit("dragover", e);
									};
								})(this),
								"dragleave": (function(_this) {
									return function(e) {
										return _this.emit("dragleave", e);
									};
								})(this),
								"drop": (function(_this) {
									return function(e) {
										noPropagation(e);
										return _this.drop(e);
									};
								})(this),
								"dragend": (function(_this) {
									return function(e) {
										return _this.emit("dragend", e);
									};
								})(this)
							}
						}
					];
					this.clickableElements.forEach((function(_this) {
						return function(clickableElement) {
							return _this.listeners.push({
								element: clickableElement,
								events: {
									"click": function(evt) {
										if ((clickableElement !== _this.element) || (evt.target === _this.element || Dropzone.elementInside(evt.target, _this.element.querySelector(".dz-message")))) {
											_this.hiddenFileInput.click();
										}
										return true;
									}
								}
							});
						};
					})(this));
					this.enable();
					return this.options.init.call(this);
				};
	
				Dropzone.prototype.destroy = function() {
					var _ref;
					this.disable();
					this.removeAllFiles(true);
					if ((_ref = this.hiddenFileInput) != null ? _ref.parentNode : void 0) {
						this.hiddenFileInput.parentNode.removeChild(this.hiddenFileInput);
						this.hiddenFileInput = null;
					}
					delete this.element.dropzone;
					return Dropzone.instances.splice(Dropzone.instances.indexOf(this), 1);
				};
	
				Dropzone.prototype.updateTotalUploadProgress = function() {
					var activeFiles, file, totalBytes, totalBytesSent, totalUploadProgress, _i, _len, _ref;
					totalBytesSent = 0;
					totalBytes = 0;
					activeFiles = this.getActiveFiles();
					if (activeFiles.length) {
						_ref = this.getActiveFiles();
						for (_i = 0, _len = _ref.length; _i < _len; _i++) {
							file = _ref[_i];
							totalBytesSent += file.upload.bytesSent;
							totalBytes += file.upload.total;
						}
						totalUploadProgress = 100 * totalBytesSent / totalBytes;
					} else {
						totalUploadProgress = 100;
					}
					return this.emit("totaluploadprogress", totalUploadProgress, totalBytes, totalBytesSent);
				};
	
				Dropzone.prototype._getParamName = function(n) {
					if (typeof this.options.paramName === "function") {
						return this.options.paramName(n);
					} else {
						return "" + this.options.paramName + (this.options.uploadMultiple ? "[" + n + "]" : "");
					}
				};
	
				Dropzone.prototype._renameFilename = function(name) {
					if (typeof this.options.renameFilename !== "function") {
						return name;
					}
					return this.options.renameFilename(name);
				};
	
				Dropzone.prototype.getFallbackForm = function() {
					var existingFallback, fields, fieldsString, form;
					if (existingFallback = this.getExistingFallback()) {
						return existingFallback;
					}
					fieldsString = "<div class=\"dz-fallback\">";
					if (this.options.dictFallbackText) {
						fieldsString += "<p>" + this.options.dictFallbackText + "</p>";
					}
					fieldsString += "<input type=\"file\" name=\"" + (this._getParamName(0)) + "\" " + (this.options.uploadMultiple ? 'multiple="multiple"' : void 0) + " /><input type=\"submit\" value=\"Upload!\"></div>";
					fields = Dropzone.createElement(fieldsString);
					if (this.element.tagName !== "FORM") {
						form = Dropzone.createElement("<form action=\"" + this.options.url + "\" enctype=\"multipart/form-data\" method=\"" + this.options.method + "\"></form>");
						form.appendChild(fields);
					} else {
						this.element.setAttribute("enctype", "multipart/form-data");
						this.element.setAttribute("method", this.options.method);
					}
					return form != null ? form : fields;
				};
	
				Dropzone.prototype.getExistingFallback = function() {
					var fallback, getFallback, tagName, _i, _len, _ref;
					getFallback = function(elements) {
						var el, _i, _len;
						for (_i = 0, _len = elements.length; _i < _len; _i++) {
							el = elements[_i];
							if (/(^| )fallback($| )/.test(el.className)) {
								return el;
							}
						}
					};
					_ref = ["div", "form"];
					for (_i = 0, _len = _ref.length; _i < _len; _i++) {
						tagName = _ref[_i];
						if (fallback = getFallback(this.element.getElementsByTagName(tagName))) {
							return fallback;
						}
					}
				};
	
				Dropzone.prototype.setupEventListeners = function() {
					var elementListeners, event, listener, _i, _len, _ref, _results;
					_ref = this.listeners;
					_results = [];
					for (_i = 0, _len = _ref.length; _i < _len; _i++) {
						elementListeners = _ref[_i];
						_results.push((function() {
							var _ref1, _results1;
							_ref1 = elementListeners.events;
							_results1 = [];
							for (event in _ref1) {
								listener = _ref1[event];
								_results1.push(elementListeners.element.addEventListener(event, listener, false));
							}
							return _results1;
						})());
					}
					return _results;
				};
	
				Dropzone.prototype.removeEventListeners = function() {
					var elementListeners, event, listener, _i, _len, _ref, _results;
					_ref = this.listeners;
					_results = [];
					for (_i = 0, _len = _ref.length; _i < _len; _i++) {
						elementListeners = _ref[_i];
						_results.push((function() {
							var _ref1, _results1;
							_ref1 = elementListeners.events;
							_results1 = [];
							for (event in _ref1) {
								listener = _ref1[event];
								_results1.push(elementListeners.element.removeEventListener(event, listener, false));
							}
							return _results1;
						})());
					}
					return _results;
				};
	
				Dropzone.prototype.disable = function() {
					var file, _i, _len, _ref, _results;
					this.clickableElements.forEach(function(element) {
						return element.classList.remove("dz-clickable");
					});
					this.removeEventListeners();
					_ref = this.files;
					_results = [];
					for (_i = 0, _len = _ref.length; _i < _len; _i++) {
						file = _ref[_i];
						_results.push(this.cancelUpload(file));
					}
					return _results;
				};
	
				Dropzone.prototype.enable = function() {
					this.clickableElements.forEach(function(element) {
						return element.classList.add("dz-clickable");
					});
					return this.setupEventListeners();
				};
	
				Dropzone.prototype.filesize = function(size) {
					var cutoff, i, selectedSize, selectedUnit, unit, units, _i, _len;
					selectedSize = 0;
					selectedUnit = "b";
					if (size > 0) {
						units = ['TB', 'GB', 'MB', 'KB', 'b'];
						for (i = _i = 0, _len = units.length; _i < _len; i = ++_i) {
							unit = units[i];
							cutoff = Math.pow(this.options.filesizeBase, 4 - i) / 10;
							if (size >= cutoff) {
								selectedSize = size / Math.pow(this.options.filesizeBase, 4 - i);
								selectedUnit = unit;
								break;
							}
						}
						selectedSize = Math.round(10 * selectedSize) / 10;
					}
					return "<strong>" + selectedSize + "</strong> " + selectedUnit;
				};
	
				Dropzone.prototype._updateMaxFilesReachedClass = function() {
					if ((this.options.maxFiles != null) && this.getAcceptedFiles().length >= this.options.maxFiles) {
						if (this.getAcceptedFiles().length === this.options.maxFiles) {
							this.emit('maxfilesreached', this.files);
						}
						return this.element.classList.add("dz-max-files-reached");
					} else {
						return this.element.classList.remove("dz-max-files-reached");
					}
				};
	
				Dropzone.prototype.drop = function(e) {
					var files, items;
					if (!e.dataTransfer) {
						return;
					}
					this.emit("drop", e);
					files = e.dataTransfer.files;
					this.emit("addedfiles", files);
					if (files.length) {
						items = e.dataTransfer.items;
						if (items && items.length && (items[0].webkitGetAsEntry != null)) {
							this._addFilesFromItems(items);
						} else {
							this.handleFiles(files);
						}
					}
				};
	
				Dropzone.prototype.paste = function(e) {
					var items, _ref;
					if ((e != null ? (_ref = e.clipboardData) != null ? _ref.items : void 0 : void 0) == null) {
						return;
					}
					this.emit("paste", e);
					items = e.clipboardData.items;
					if (items.length) {
						return this._addFilesFromItems(items);
					}
				};
	
				Dropzone.prototype.handleFiles = function(files) {
					var file, _i, _len, _results;
					_results = [];
					for (_i = 0, _len = files.length; _i < _len; _i++) {
						file = files[_i];
						_results.push(this.addFile(file));
					}
					return _results;
				};
	
				Dropzone.prototype._addFilesFromItems = function(items) {
					var entry, item, _i, _len, _results;
					_results = [];
					for (_i = 0, _len = items.length; _i < _len; _i++) {
						item = items[_i];
						if ((item.webkitGetAsEntry != null) && (entry = item.webkitGetAsEntry())) {
							if (entry.isFile) {
								_results.push(this.addFile(item.getAsFile()));
							} else if (entry.isDirectory) {
								_results.push(this._addFilesFromDirectory(entry, entry.name));
							} else {
								_results.push(void 0);
							}
						} else if (item.getAsFile != null) {
							if ((item.kind == null) || item.kind === "file") {
								_results.push(this.addFile(item.getAsFile()));
							} else {
								_results.push(void 0);
							}
						} else {
							_results.push(void 0);
						}
					}
					return _results;
				};
	
				Dropzone.prototype._addFilesFromDirectory = function(directory, path) {
					var dirReader, errorHandler, readEntries;
					dirReader = directory.createReader();
					errorHandler = function(error) {
						return typeof console !== "undefined" && console !== null ? typeof console.log === "function" ? console.log(error) : void 0 : void 0;
					};
					readEntries = (function(_this) {
						return function() {
							return dirReader.readEntries(function(entries) {
								var entry, _i, _len;
								if (entries.length > 0) {
									for (_i = 0, _len = entries.length; _i < _len; _i++) {
										entry = entries[_i];
										if (entry.isFile) {
											entry.file(function(file) {
												if (_this.options.ignoreHiddenFiles && file.name.substring(0, 1) === '.') {
													return;
												}
												file.fullPath = "" + path + "/" + file.name;
												return _this.addFile(file);
											});
										} else if (entry.isDirectory) {
											_this._addFilesFromDirectory(entry, "" + path + "/" + entry.name);
										}
									}
									readEntries();
								}
								return null;
							}, errorHandler);
						};
					})(this);
					return readEntries();
				};
	
				Dropzone.prototype.accept = function(file, done) {
					if (file.size > this.options.maxFilesize * 1024 * 1024) {
						return done(this.options.dictFileTooBig.replace("{{filesize}}", Math.round(file.size / 1024 / 10.24) / 100).replace("{{maxFilesize}}", this.options.maxFilesize));
					} else if (!Dropzone.isValidFile(file, this.options.acceptedFiles)) {
						return done(this.options.dictInvalidFileType);
					} else if ((this.options.maxFiles != null) && this.getAcceptedFiles().length >= this.options.maxFiles) {
						done(this.options.dictMaxFilesExceeded.replace("{{maxFiles}}", this.options.maxFiles));
						return this.emit("maxfilesexceeded", file);
					} else {
						return this.options.accept.call(this, file, done);
					}
				};
	
				Dropzone.prototype.addFile = function(file) {
					file.upload = {
						progress: 0,
						total: file.size,
						bytesSent: 0
					};
					this.files.push(file);
					file.status = Dropzone.ADDED;
					this.emit("addedfile", file);
					this._enqueueThumbnail(file);
					return this.accept(file, (function(_this) {
						return function(error) {
							if (error) {
								file.accepted = false;
								_this._errorProcessing([file], error);
							} else {
								file.accepted = true;
								if (_this.options.autoQueue) {
									_this.enqueueFile(file);
								}
							}
							return _this._updateMaxFilesReachedClass();
						};
					})(this));
				};
	
				Dropzone.prototype.enqueueFiles = function(files) {
					var file, _i, _len;
					for (_i = 0, _len = files.length; _i < _len; _i++) {
						file = files[_i];
						this.enqueueFile(file);
					}
					return null;
				};
	
				Dropzone.prototype.enqueueFile = function(file) {
					if (file.status === Dropzone.ADDED && file.accepted === true) {
						file.status = Dropzone.QUEUED;
						if (this.options.autoProcessQueue) {
							return setTimeout(((function(_this) {
								return function() {
									return _this.processQueue();
								};
							})(this)), 0);
						}
					} else {
						throw new Error("This file can't be queued because it has already been processed or was rejected.");
					}
				};
	
				Dropzone.prototype._thumbnailQueue = [];
	
				Dropzone.prototype._processingThumbnail = false;
	
				Dropzone.prototype._enqueueThumbnail = function(file) {
					if (this.options.createImageThumbnails && file.type.match(/image.*/) && file.size <= this.options.maxThumbnailFilesize * 1024 * 1024) {
						this._thumbnailQueue.push(file);
						return setTimeout(((function(_this) {
							return function() {
								return _this._processThumbnailQueue();
							};
						})(this)), 0);
					}
				};
	
				Dropzone.prototype._processThumbnailQueue = function() {
					if (this._processingThumbnail || this._thumbnailQueue.length === 0) {
						return;
					}
					this._processingThumbnail = true;
					return this.createThumbnail(this._thumbnailQueue.shift(), (function(_this) {
						return function() {
							_this._processingThumbnail = false;
							return _this._processThumbnailQueue();
						};
					})(this));
				};
	
				Dropzone.prototype.removeFile = function(file) {
					if (file.status === Dropzone.UPLOADING) {
						this.cancelUpload(file);
					}
					this.files = without(this.files, file);
					this.emit("removedfile", file);
					if (this.files.length === 0) {
						return this.emit("reset");
					}
				};
	
				Dropzone.prototype.removeAllFiles = function(cancelIfNecessary) {
					var file, _i, _len, _ref;
					if (cancelIfNecessary == null) {
						cancelIfNecessary = false;
					}
					_ref = this.files.slice();
					for (_i = 0, _len = _ref.length; _i < _len; _i++) {
						file = _ref[_i];
						if (file.status !== Dropzone.UPLOADING || cancelIfNecessary) {
							this.removeFile(file);
						}
					}
					return null;
				};
	
				Dropzone.prototype.createThumbnail = function(file, callback) {
					var fileReader;
					fileReader = new FileReader;
					fileReader.onload = (function(_this) {
						return function() {
							if (file.type === "image/svg+xml") {
								_this.emit("thumbnail", file, fileReader.result);
								if (callback != null) {
									callback();
								}
								return;
							}
							return _this.createThumbnailFromUrl(file, fileReader.result, callback);
						};
					})(this);
					return fileReader.readAsDataURL(file);
				};
	
				Dropzone.prototype.createThumbnailFromUrl = function(file, imageUrl, callback, crossOrigin) {
					var img;
					img = document.createElement("img");
					if (crossOrigin) {
						img.crossOrigin = crossOrigin;
					}
					img.onload = (function(_this) {
						return function() {
							var canvas, ctx, resizeInfo, thumbnail, _ref, _ref1, _ref2, _ref3;
							file.width = img.width;
							file.height = img.height;
							resizeInfo = _this.options.resize.call(_this, file);
							if (resizeInfo.trgWidth == null) {
								resizeInfo.trgWidth = resizeInfo.optWidth;
							}
							if (resizeInfo.trgHeight == null) {
								resizeInfo.trgHeight = resizeInfo.optHeight;
							}
							canvas = document.createElement("canvas");
							ctx = canvas.getContext("2d");
							canvas.width = resizeInfo.trgWidth;
							canvas.height = resizeInfo.trgHeight;
							drawImageIOSFix(ctx, img, (_ref = resizeInfo.srcX) != null ? _ref : 0, (_ref1 = resizeInfo.srcY) != null ? _ref1 : 0, resizeInfo.srcWidth, resizeInfo.srcHeight, (_ref2 = resizeInfo.trgX) != null ? _ref2 : 0, (_ref3 = resizeInfo.trgY) != null ? _ref3 : 0, resizeInfo.trgWidth, resizeInfo.trgHeight);
							thumbnail = canvas.toDataURL("image/png");
							_this.emit("thumbnail", file, thumbnail);
							if (callback != null) {
								return callback();
							}
						};
					})(this);
					if (callback != null) {
						img.onerror = callback;
					}
					return img.src = imageUrl;
				};
	
				Dropzone.prototype.processQueue = function() {
					var i, parallelUploads, processingLength, queuedFiles;
					parallelUploads = this.options.parallelUploads;
					processingLength = this.getUploadingFiles().length;
					i = processingLength;
					if (processingLength >= parallelUploads) {
						return;
					}
					queuedFiles = this.getQueuedFiles();
					if (!(queuedFiles.length > 0)) {
						return;
					}
					if (this.options.uploadMultiple) {
						return this.processFiles(queuedFiles.slice(0, parallelUploads - processingLength));
					} else {
						while (i < parallelUploads) {
							if (!queuedFiles.length) {
								return;
							}
							this.processFile(queuedFiles.shift());
							i++;
						}
					}
				};
	
				Dropzone.prototype.processFile = function(file) {
					return this.processFiles([file]);
				};
	
				Dropzone.prototype.processFiles = function(files) {
					var file, _i, _len;
					for (_i = 0, _len = files.length; _i < _len; _i++) {
						file = files[_i];
						file.processing = true;
						file.status = Dropzone.UPLOADING;
						this.emit("processing", file);
					}
					if (this.options.uploadMultiple) {
						this.emit("processingmultiple", files);
					}
					return this.uploadFiles(files);
				};
	
				Dropzone.prototype._getFilesWithXhr = function(xhr) {
					var file, files;
					return files = (function() {
						var _i, _len, _ref, _results;
						_ref = this.files;
						_results = [];
						for (_i = 0, _len = _ref.length; _i < _len; _i++) {
							file = _ref[_i];
							if (file.xhr === xhr) {
								_results.push(file);
							}
						}
						return _results;
					}).call(this);
				};
	
				Dropzone.prototype.cancelUpload = function(file) {
					var groupedFile, groupedFiles, _i, _j, _len, _len1, _ref;
					if (file.status === Dropzone.UPLOADING) {
						groupedFiles = this._getFilesWithXhr(file.xhr);
						for (_i = 0, _len = groupedFiles.length; _i < _len; _i++) {
							groupedFile = groupedFiles[_i];
							groupedFile.status = Dropzone.CANCELED;
						}
						file.xhr.abort();
						for (_j = 0, _len1 = groupedFiles.length; _j < _len1; _j++) {
							groupedFile = groupedFiles[_j];
							this.emit("canceled", groupedFile);
						}
						if (this.options.uploadMultiple) {
							this.emit("canceledmultiple", groupedFiles);
						}
					} else if ((_ref = file.status) === Dropzone.ADDED || _ref === Dropzone.QUEUED) {
						file.status = Dropzone.CANCELED;
						this.emit("canceled", file);
						if (this.options.uploadMultiple) {
							this.emit("canceledmultiple", [file]);
						}
					}
					if (this.options.autoProcessQueue) {
						return this.processQueue();
					}
				};
	
				resolveOption = function() {
					var args, option;
					option = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
					if (typeof option === 'function') {
						return option.apply(this, args);
					}
					return option;
				};
	
				Dropzone.prototype.uploadFile = function(file) {
					return this.uploadFiles([file]);
				};
	
				Dropzone.prototype.uploadFiles = function(files) {
					var file, formData, handleError, headerName, headerValue, headers, i, input, inputName, inputType, key, method, option, progressObj, response, updateProgress, url, value, xhr, _i, _j, _k, _l, _len, _len1, _len2, _len3, _m, _ref, _ref1, _ref2, _ref3, _ref4, _ref5;
					xhr = new XMLHttpRequest();
					for (_i = 0, _len = files.length; _i < _len; _i++) {
						file = files[_i];
						file.xhr = xhr;
					}
					method = resolveOption(this.options.method, files);
					url = resolveOption(this.options.url, files);
					xhr.open(method, url, true);
					xhr.withCredentials = !!this.options.withCredentials;
					response = null;
					handleError = (function(_this) {
						return function() {
							var _j, _len1, _results;
							_results = [];
							for (_j = 0, _len1 = files.length; _j < _len1; _j++) {
								file = files[_j];
								_results.push(_this._errorProcessing(files, response || _this.options.dictResponseError.replace("{{statusCode}}", xhr.status), xhr));
							}
							return _results;
						};
					})(this);
					updateProgress = (function(_this) {
						return function(e) {
							var allFilesFinished, progress, _j, _k, _l, _len1, _len2, _len3, _results;
							if (e != null) {
								progress = 100 * e.loaded / e.total;
								for (_j = 0, _len1 = files.length; _j < _len1; _j++) {
									file = files[_j];
									file.upload = {
										progress: progress,
										total: e.total,
										bytesSent: e.loaded
									};
								}
							} else {
								allFilesFinished = true;
								progress = 100;
								for (_k = 0, _len2 = files.length; _k < _len2; _k++) {
									file = files[_k];
									if (!(file.upload.progress === 100 && file.upload.bytesSent === file.upload.total)) {
										allFilesFinished = false;
									}
									file.upload.progress = progress;
									file.upload.bytesSent = file.upload.total;
								}
								if (allFilesFinished) {
									return;
								}
							}
							_results = [];
							for (_l = 0, _len3 = files.length; _l < _len3; _l++) {
								file = files[_l];
								_results.push(_this.emit("uploadprogress", file, progress, file.upload.bytesSent));
							}
							return _results;
						};
					})(this);
					xhr.onload = (function(_this) {
						return function(e) {
							var _ref;
							if (files[0].status === Dropzone.CANCELED) {
								return;
							}
							if (xhr.readyState !== 4) {
								return;
							}
							response = xhr.responseText;
							if (xhr.getResponseHeader("content-type") && ~xhr.getResponseHeader("content-type").indexOf("application/json")) {
								try {
									response = JSON.parse(response);
								} catch (_error) {
									e = _error;
									response = "Invalid JSON response from server.";
								}
							}
							updateProgress();
							if (!((200 <= (_ref = xhr.status) && _ref < 300))) {
								return handleError();
							} else {
								return _this._finished(files, response, e);
							}
						};
					})(this);
					xhr.onerror = (function(_this) {
						return function() {
							if (files[0].status === Dropzone.CANCELED) {
								return;
							}
							return handleError();
						};
					})(this);
					progressObj = (_ref = xhr.upload) != null ? _ref : xhr;
					progressObj.onprogress = updateProgress;
					headers = {
						"Accept": "application/json",
						"Cache-Control": "no-cache",
						"X-Requested-With": "XMLHttpRequest"
					};
					if (this.options.headers) {
						extend(headers, this.options.headers);
					}
					for (headerName in headers) {
						headerValue = headers[headerName];
						if (headerValue) {
							xhr.setRequestHeader(headerName, headerValue);
						}
					}
					formData = new FormData();
					if (this.options.params) {
						_ref1 = this.options.params;
						for (key in _ref1) {
							value = _ref1[key];
							formData.append(key, value);
						}
					}
					for (_j = 0, _len1 = files.length; _j < _len1; _j++) {
						file = files[_j];
						this.emit("sending", file, xhr, formData);
					}
					if (this.options.uploadMultiple) {
						this.emit("sendingmultiple", files, xhr, formData);
					}
					if (this.element.tagName === "FORM") {
						_ref2 = this.element.querySelectorAll("input, textarea, select, button");
						for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {
							input = _ref2[_k];
							inputName = input.getAttribute("name");
							inputType = input.getAttribute("type");
							if (input.tagName === "SELECT" && input.hasAttribute("multiple")) {
								_ref3 = input.options;
								for (_l = 0, _len3 = _ref3.length; _l < _len3; _l++) {
									option = _ref3[_l];
									if (option.selected) {
										formData.append(inputName, option.value);
									}
								}
							} else if (!inputType || ((_ref4 = inputType.toLowerCase()) !== "checkbox" && _ref4 !== "radio") || input.checked) {
								formData.append(inputName, input.value);
							}
						}
					}
					for (i = _m = 0, _ref5 = files.length - 1; 0 <= _ref5 ? _m <= _ref5 : _m >= _ref5; i = 0 <= _ref5 ? ++_m : --_m) {
						formData.append(this._getParamName(i), files[i], this._renameFilename(files[i].name));
					}
					return this.submitRequest(xhr, formData, files);
				};
	
				Dropzone.prototype.submitRequest = function(xhr, formData, files) {
					return xhr.send(formData);
				};
	
				Dropzone.prototype._finished = function(files, responseText, e) {
					var file, _i, _len;
					for (_i = 0, _len = files.length; _i < _len; _i++) {
						file = files[_i];
						file.status = Dropzone.SUCCESS;
						this.emit("success", file, responseText, e);
						this.emit("complete", file);
					}
					if (this.options.uploadMultiple) {
						this.emit("successmultiple", files, responseText, e);
						this.emit("completemultiple", files);
					}
					if (this.options.autoProcessQueue) {
						return this.processQueue();
					}
				};
	
				Dropzone.prototype._errorProcessing = function(files, message, xhr) {
					var file, _i, _len;
					for (_i = 0, _len = files.length; _i < _len; _i++) {
						file = files[_i];
						file.status = Dropzone.ERROR;
						this.emit("error", file, message, xhr);
						this.emit("complete", file);
					}
					if (this.options.uploadMultiple) {
						this.emit("errormultiple", files, message, xhr);
						this.emit("completemultiple", files);
					}
					if (this.options.autoProcessQueue) {
						return this.processQueue();
					}
				};
	
				return Dropzone;
	
			})(Emitter);
	
			Dropzone.version = "4.3.0";
	
			Dropzone.options = {};
	
			Dropzone.optionsForElement = function(element) {
				if (element.getAttribute("id")) {
					return Dropzone.options[camelize(element.getAttribute("id"))];
				} else {
					return void 0;
				}
			};
	
			Dropzone.instances = [];
	
			Dropzone.forElement = function(element) {
				if (typeof element === "string") {
					element = document.querySelector(element);
				}
				if ((element != null ? element.dropzone : void 0) == null) {
					throw new Error("No Dropzone found for given element. This is probably because you're trying to access it before Dropzone had the time to initialize. Use the `init` option to setup any additional observers on your Dropzone.");
				}
				return element.dropzone;
			};
	
			Dropzone.autoDiscover = true;
	
			Dropzone.discover = function() {
				var checkElements, dropzone, dropzones, _i, _len, _results;
				if (document.querySelectorAll) {
					dropzones = document.querySelectorAll(".dropzone");
				} else {
					dropzones = [];
					checkElements = function(elements) {
						var el, _i, _len, _results;
						_results = [];
						for (_i = 0, _len = elements.length; _i < _len; _i++) {
							el = elements[_i];
							if (/(^| )dropzone($| )/.test(el.className)) {
								_results.push(dropzones.push(el));
							} else {
								_results.push(void 0);
							}
						}
						return _results;
					};
					checkElements(document.getElementsByTagName("div"));
					checkElements(document.getElementsByTagName("form"));
				}
				_results = [];
				for (_i = 0, _len = dropzones.length; _i < _len; _i++) {
					dropzone = dropzones[_i];
					if (Dropzone.optionsForElement(dropzone) !== false) {
						_results.push(new Dropzone(dropzone));
					} else {
						_results.push(void 0);
					}
				}
				return _results;
			};
	
			Dropzone.blacklistedBrowsers = [/opera.*Macintosh.*version\/12/i];
	
			Dropzone.isBrowserSupported = function() {
				var capableBrowser, regex, _i, _len, _ref;
				capableBrowser = true;
				if (window.File && window.FileReader && window.FileList && window.Blob && window.FormData && document.querySelector) {
					if (!("classList" in document.createElement("a"))) {
						capableBrowser = false;
					} else {
						_ref = Dropzone.blacklistedBrowsers;
						for (_i = 0, _len = _ref.length; _i < _len; _i++) {
							regex = _ref[_i];
							if (regex.test(navigator.userAgent)) {
								capableBrowser = false;
								continue;
							}
						}
					}
				} else {
					capableBrowser = false;
				}
				return capableBrowser;
			};
	
			without = function(list, rejectedItem) {
				var item, _i, _len, _results;
				_results = [];
				for (_i = 0, _len = list.length; _i < _len; _i++) {
					item = list[_i];
					if (item !== rejectedItem) {
						_results.push(item);
					}
				}
				return _results;
			};
	
			camelize = function(str) {
				return str.replace(/[\-_](\w)/g, function(match) {
					return match.charAt(1).toUpperCase();
				});
			};
	
			Dropzone.createElement = function(string) {
				var div;
				div = document.createElement("div");
				div.innerHTML = string;
				return div.childNodes[0];
			};
	
			Dropzone.elementInside = function(element, container) {
				if (element === container) {
					return true;
				}
				while (element = element.parentNode) {
					if (element === container) {
						return true;
					}
				}
				return false;
			};
	
			Dropzone.getElement = function(el, name) {
				var element;
				if (typeof el === "string") {
					element = document.querySelector(el);
				} else if (el.nodeType != null) {
					element = el;
				}
				if (element == null) {
					throw new Error("Invalid `" + name + "` option provided. Please provide a CSS selector or a plain HTML element.");
				}
				return element;
			};
	
			Dropzone.getElements = function(els, name) {
				var e, el, elements, _i, _j, _len, _len1, _ref;
				if (els instanceof Array) {
					elements = [];
					try {
						for (_i = 0, _len = els.length; _i < _len; _i++) {
							el = els[_i];
							elements.push(this.getElement(el, name));
						}
					} catch (_error) {
						e = _error;
						elements = null;
					}
				} else if (typeof els === "string") {
					elements = [];
					_ref = document.querySelectorAll(els);
					for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
						el = _ref[_j];
						elements.push(el);
					}
				} else if (els.nodeType != null) {
					elements = [els];
				}
				if (!((elements != null) && elements.length)) {
					throw new Error("Invalid `" + name + "` option provided. Please provide a CSS selector, a plain HTML element or a list of those.");
				}
				return elements;
			};
	
			Dropzone.confirm = function(question, accepted, rejected) {
				if (window.confirm(question)) {
					return accepted();
				} else if (rejected != null) {
					return rejected();
				}
			};
	
			Dropzone.isValidFile = function(file, acceptedFiles) {
				var baseMimeType, mimeType, validType, _i, _len;
				if (!acceptedFiles) {
					return true;
				}
				acceptedFiles = acceptedFiles.split(",");
				mimeType = file.type;
				baseMimeType = mimeType.replace(/\/.*$/, "");
				for (_i = 0, _len = acceptedFiles.length; _i < _len; _i++) {
					validType = acceptedFiles[_i];
					validType = validType.trim();
					if (validType.charAt(0) === ".") {
						if (file.name.toLowerCase().indexOf(validType.toLowerCase(), file.name.length - validType.length) !== -1) {
							return true;
						}
					} else if (/\/\*$/.test(validType)) {
						if (baseMimeType === validType.replace(/\/.*$/, "")) {
							return true;
						}
					} else {
						if (mimeType === validType) {
							return true;
						}
					}
				}
				return false;
			};
	
			if (typeof jQuery !== "undefined" && jQuery !== null) {
				jQuery.fn.dropzone = function(options) {
					return this.each(function() {
						return new Dropzone(this, options);
					});
				};
			}
	
			if (typeof module !== "undefined" && module !== null) {
				module.exports = Dropzone;
			} else {
				window.Dropzone = Dropzone;
			}
	
			Dropzone.ADDED = "added";
	
			Dropzone.QUEUED = "queued";
	
			Dropzone.ACCEPTED = Dropzone.QUEUED;
	
			Dropzone.UPLOADING = "uploading";
	
			Dropzone.PROCESSING = Dropzone.UPLOADING;
	
			Dropzone.CANCELED = "canceled";
	
			Dropzone.ERROR = "error";
	
			Dropzone.SUCCESS = "success";
	
	
			/*
	
			 Bugfix for iOS 6 and 7
			 Source: http://stackoverflow.com/questions/11929099/html5-canvas-drawimage-ratio-bug-ios
			 based on the work of https://github.com/stomita/ios-imagefile-megapixel
			 */
	
			detectVerticalSquash = function(img) {
				var alpha, canvas, ctx, data, ey, ih, iw, py, ratio, sy;
				iw = img.naturalWidth;
				ih = img.naturalHeight;
				canvas = document.createElement("canvas");
				canvas.width = 1;
				canvas.height = ih;
				ctx = canvas.getContext("2d");
				ctx.drawImage(img, 0, 0);
				data = ctx.getImageData(0, 0, 1, ih).data;
				sy = 0;
				ey = ih;
				py = ih;
				while (py > sy) {
					alpha = data[(py - 1) * 4 + 3];
					if (alpha === 0) {
						ey = py;
					} else {
						sy = py;
					}
					py = (ey + sy) >> 1;
				}
				ratio = py / ih;
				if (ratio === 0) {
					return 1;
				} else {
					return ratio;
				}
			};
	
			drawImageIOSFix = function(ctx, img, sx, sy, sw, sh, dx, dy, dw, dh) {
				var vertSquashRatio;
				vertSquashRatio = detectVerticalSquash(img);
				return ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh / vertSquashRatio);
			};
	
	
			/*
			 * contentloaded.js
			 *
			 * Author: Diego Perini (diego.perini at gmail.com)
			 * Summary: cross-browser wrapper for DOMContentLoaded
			 * Updated: 20101020
			 * License: MIT
			 * Version: 1.2
			 *
			 * URL:
			 * http://javascript.nwbox.com/ContentLoaded/
			 * http://javascript.nwbox.com/ContentLoaded/MIT-LICENSE
			 */
	
			contentLoaded = function(win, fn) {
				var add, doc, done, init, poll, pre, rem, root, top;
				done = false;
				top = true;
				doc = win.document;
				root = doc.documentElement;
				add = (doc.addEventListener ? "addEventListener" : "attachEvent");
				rem = (doc.addEventListener ? "removeEventListener" : "detachEvent");
				pre = (doc.addEventListener ? "" : "on");
				init = function(e) {
					if (e.type === "readystatechange" && doc.readyState !== "complete") {
						return;
					}
					(e.type === "load" ? win : doc)[rem](pre + e.type, init, false);
					if (!done && (done = true)) {
						return fn.call(win, e.type || e);
					}
				};
				poll = function() {
					var e;
					try {
						root.doScroll("left");
					} catch (_error) {
						e = _error;
						setTimeout(poll, 50);
						return;
					}
					return init("poll");
				};
				if (doc.readyState !== "complete") {
					if (doc.createEventObject && root.doScroll) {
						try {
							top = !win.frameElement;
						} catch (_error) {}
						if (top) {
							poll();
						}
					}
					doc[add](pre + "DOMContentLoaded", init, false);
					doc[add](pre + "readystatechange", init, false);
					return win[add](pre + "load", init, false);
				}
			};
	
			Dropzone._autoDiscoverFunction = function() {
				if (Dropzone.autoDiscover) {
					return Dropzone.discover();
				}
			};
	
			contentLoaded(window, Dropzone._autoDiscoverFunction);
	
		}).call(this);
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)(module)))
	
	/***/ },
	/* 2 */
	/***/ function(module, exports) {
	
		module.exports = function(module) {
			if(!module.webpackPolyfill) {
				module.deprecate = function() {};
				module.paths = [];
				// module.parent = undefined by default
				module.children = [];
				module.webpackPolyfill = 1;
			}
			return module;
		}
	
	
	/***/ },
	/* 3 */
	/***/ function(module, exports, __webpack_require__) {
	
		var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*! jQuery UI - v1.11.4 - 2016-06-23
		* http://jqueryui.com
		* Includes: core.js, widget.js, position.js, datepicker.js
		* Copyright jQuery Foundation and other contributors; Licensed MIT */
	
		(function( factory ) {
			if ( true ) {
	
				// AMD. Register as an anonymous module.
				!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(4) ], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
			} else {
	
				// Browser globals
				factory( jQuery );
			}
		}(function( $ ) {
		/*!
		 * jQuery UI Core 1.11.4
		 * http://jqueryui.com
		 *
		 * Copyright jQuery Foundation and other contributors
		 * Released under the MIT license.
		 * http://jquery.org/license
		 *
		 * http://api.jqueryui.com/category/ui-core/
		 */
	
	
		// $.ui might exist from components with no dependencies, e.g., $.ui.position
		$.ui = $.ui || {};
	
		$.extend( $.ui, {
			version: "1.11.4",
	
			keyCode: {
				BACKSPACE: 8,
				COMMA: 188,
				DELETE: 46,
				DOWN: 40,
				END: 35,
				ENTER: 13,
				ESCAPE: 27,
				HOME: 36,
				LEFT: 37,
				PAGE_DOWN: 34,
				PAGE_UP: 33,
				PERIOD: 190,
				RIGHT: 39,
				SPACE: 32,
				TAB: 9,
				UP: 38
			}
		});
	
		// plugins
		$.fn.extend({
			scrollParent: function( includeHidden ) {
				var position = this.css( "position" ),
					excludeStaticParent = position === "absolute",
					overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,
					scrollParent = this.parents().filter( function() {
						var parent = $( this );
						if ( excludeStaticParent && parent.css( "position" ) === "static" ) {
							return false;
						}
						return overflowRegex.test( parent.css( "overflow" ) + parent.css( "overflow-y" ) + parent.css( "overflow-x" ) );
					}).eq( 0 );
	
				return position === "fixed" || !scrollParent.length ? $( this[ 0 ].ownerDocument || document ) : scrollParent;
			},
	
			uniqueId: (function() {
				var uuid = 0;
	
				return function() {
					return this.each(function() {
						if ( !this.id ) {
							this.id = "ui-id-" + ( ++uuid );
						}
					});
				};
			})(),
	
			removeUniqueId: function() {
				return this.each(function() {
					if ( /^ui-id-\d+$/.test( this.id ) ) {
						$( this ).removeAttr( "id" );
					}
				});
			}
		});
	
		// selectors
		function focusable( element, isTabIndexNotNaN ) {
			var map, mapName, img,
				nodeName = element.nodeName.toLowerCase();
			if ( "area" === nodeName ) {
				map = element.parentNode;
				mapName = map.name;
				if ( !element.href || !mapName || map.nodeName.toLowerCase() !== "map" ) {
					return false;
				}
				img = $( "img[usemap='#" + mapName + "']" )[ 0 ];
				return !!img && visible( img );
			}
			return ( /^(input|select|textarea|button|object)$/.test( nodeName ) ?
				!element.disabled :
				"a" === nodeName ?
					element.href || isTabIndexNotNaN :
					isTabIndexNotNaN) &&
				// the element and all of its ancestors must be visible
				visible( element );
		}
	
		function visible( element ) {
			return $.expr.filters.visible( element ) &&
				!$( element ).parents().addBack().filter(function() {
					return $.css( this, "visibility" ) === "hidden";
				}).length;
		}
	
		$.extend( $.expr[ ":" ], {
			data: $.expr.createPseudo ?
				$.expr.createPseudo(function( dataName ) {
					return function( elem ) {
						return !!$.data( elem, dataName );
					};
				}) :
				// support: jQuery <1.8
				function( elem, i, match ) {
					return !!$.data( elem, match[ 3 ] );
				},
	
			focusable: function( element ) {
				return focusable( element, !isNaN( $.attr( element, "tabindex" ) ) );
			},
	
			tabbable: function( element ) {
				var tabIndex = $.attr( element, "tabindex" ),
					isTabIndexNaN = isNaN( tabIndex );
				return ( isTabIndexNaN || tabIndex >= 0 ) && focusable( element, !isTabIndexNaN );
			}
		});
	
		// support: jQuery <1.8
		if ( !$( "<a>" ).outerWidth( 1 ).jquery ) {
			$.each( [ "Width", "Height" ], function( i, name ) {
				var side = name === "Width" ? [ "Left", "Right" ] : [ "Top", "Bottom" ],
					type = name.toLowerCase(),
					orig = {
						innerWidth: $.fn.innerWidth,
						innerHeight: $.fn.innerHeight,
						outerWidth: $.fn.outerWidth,
						outerHeight: $.fn.outerHeight
					};
	
				function reduce( elem, size, border, margin ) {
					$.each( side, function() {
						size -= parseFloat( $.css( elem, "padding" + this ) ) || 0;
						if ( border ) {
							size -= parseFloat( $.css( elem, "border" + this + "Width" ) ) || 0;
						}
						if ( margin ) {
							size -= parseFloat( $.css( elem, "margin" + this ) ) || 0;
						}
					});
					return size;
				}
	
				$.fn[ "inner" + name ] = function( size ) {
					if ( size === undefined ) {
						return orig[ "inner" + name ].call( this );
					}
	
					return this.each(function() {
						$( this ).css( type, reduce( this, size ) + "px" );
					});
				};
	
				$.fn[ "outer" + name] = function( size, margin ) {
					if ( typeof size !== "number" ) {
						return orig[ "outer" + name ].call( this, size );
					}
	
					return this.each(function() {
						$( this).css( type, reduce( this, size, true, margin ) + "px" );
					});
				};
			});
		}
	
		// support: jQuery <1.8
		if ( !$.fn.addBack ) {
			$.fn.addBack = function( selector ) {
				return this.add( selector == null ?
					this.prevObject : this.prevObject.filter( selector )
				);
			};
		}
	
		// support: jQuery 1.6.1, 1.6.2 (http://bugs.jquery.com/ticket/9413)
		if ( $( "<a>" ).data( "a-b", "a" ).removeData( "a-b" ).data( "a-b" ) ) {
			$.fn.removeData = (function( removeData ) {
				return function( key ) {
					if ( arguments.length ) {
						return removeData.call( this, $.camelCase( key ) );
					} else {
						return removeData.call( this );
					}
				};
			})( $.fn.removeData );
		}
	
		// deprecated
		$.ui.ie = !!/msie [\w.]+/.exec( navigator.userAgent.toLowerCase() );
	
		$.fn.extend({
			focus: (function( orig ) {
				return function( delay, fn ) {
					return typeof delay === "number" ?
						this.each(function() {
							var elem = this;
							setTimeout(function() {
								$( elem ).focus();
								if ( fn ) {
									fn.call( elem );
								}
							}, delay );
						}) :
						orig.apply( this, arguments );
				};
			})( $.fn.focus ),
	
			disableSelection: (function() {
				var eventType = "onselectstart" in document.createElement( "div" ) ?
					"selectstart" :
					"mousedown";
	
				return function() {
					return this.bind( eventType + ".ui-disableSelection", function( event ) {
						event.preventDefault();
					});
				};
			})(),
	
			enableSelection: function() {
				return this.unbind( ".ui-disableSelection" );
			},
	
			zIndex: function( zIndex ) {
				if ( zIndex !== undefined ) {
					return this.css( "zIndex", zIndex );
				}
	
				if ( this.length ) {
					var elem = $( this[ 0 ] ), position, value;
					while ( elem.length && elem[ 0 ] !== document ) {
						// Ignore z-index if position is set to a value where z-index is ignored by the browser
						// This makes behavior of this function consistent across browsers
						// WebKit always returns auto if the element is positioned
						position = elem.css( "position" );
						if ( position === "absolute" || position === "relative" || position === "fixed" ) {
							// IE returns 0 when zIndex is not specified
							// other browsers return a string
							// we ignore the case of nested elements with an explicit value of 0
							// <div style="z-index: -10;"><div style="z-index: 0;"></div></div>
							value = parseInt( elem.css( "zIndex" ), 10 );
							if ( !isNaN( value ) && value !== 0 ) {
								return value;
							}
						}
						elem = elem.parent();
					}
				}
	
				return 0;
			}
		});
	
		// $.ui.plugin is deprecated. Use $.widget() extensions instead.
		$.ui.plugin = {
			add: function( module, option, set ) {
				var i,
					proto = $.ui[ module ].prototype;
				for ( i in set ) {
					proto.plugins[ i ] = proto.plugins[ i ] || [];
					proto.plugins[ i ].push( [ option, set[ i ] ] );
				}
			},
			call: function( instance, name, args, allowDisconnected ) {
				var i,
					set = instance.plugins[ name ];
	
				if ( !set ) {
					return;
				}
	
				if ( !allowDisconnected && ( !instance.element[ 0 ].parentNode || instance.element[ 0 ].parentNode.nodeType === 11 ) ) {
					return;
				}
	
				for ( i = 0; i < set.length; i++ ) {
					if ( instance.options[ set[ i ][ 0 ] ] ) {
						set[ i ][ 1 ].apply( instance.element, args );
					}
				}
			}
		};
	
	
		/*!
		 * jQuery UI Widget 1.11.4
		 * http://jqueryui.com
		 *
		 * Copyright jQuery Foundation and other contributors
		 * Released under the MIT license.
		 * http://jquery.org/license
		 *
		 * http://api.jqueryui.com/jQuery.widget/
		 */
	
	
		var widget_uuid = 0,
			widget_slice = Array.prototype.slice;
	
		$.cleanData = (function( orig ) {
			return function( elems ) {
				var events, elem, i;
				for ( i = 0; (elem = elems[i]) != null; i++ ) {
					try {
	
						// Only trigger remove when necessary to save time
						events = $._data( elem, "events" );
						if ( events && events.remove ) {
							$( elem ).triggerHandler( "remove" );
						}
	
					// http://bugs.jquery.com/ticket/8235
					} catch ( e ) {}
				}
				orig( elems );
			};
		})( $.cleanData );
	
		$.widget = function( name, base, prototype ) {
			var fullName, existingConstructor, constructor, basePrototype,
				// proxiedPrototype allows the provided prototype to remain unmodified
				// so that it can be used as a mixin for multiple widgets (#8876)
				proxiedPrototype = {},
				namespace = name.split( "." )[ 0 ];
	
			name = name.split( "." )[ 1 ];
			fullName = namespace + "-" + name;
	
			if ( !prototype ) {
				prototype = base;
				base = $.Widget;
			}
	
			// create selector for plugin
			$.expr[ ":" ][ fullName.toLowerCase() ] = function( elem ) {
				return !!$.data( elem, fullName );
			};
	
			$[ namespace ] = $[ namespace ] || {};
			existingConstructor = $[ namespace ][ name ];
			constructor = $[ namespace ][ name ] = function( options, element ) {
				// allow instantiation without "new" keyword
				if ( !this._createWidget ) {
					return new constructor( options, element );
				}
	
				// allow instantiation without initializing for simple inheritance
				// must use "new" keyword (the code above always passes args)
				if ( arguments.length ) {
					this._createWidget( options, element );
				}
			};
			// extend with the existing constructor to carry over any static properties
			$.extend( constructor, existingConstructor, {
				version: prototype.version,
				// copy the object used to create the prototype in case we need to
				// redefine the widget later
				_proto: $.extend( {}, prototype ),
				// track widgets that inherit from this widget in case this widget is
				// redefined after a widget inherits from it
				_childConstructors: []
			});
	
			basePrototype = new base();
			// we need to make the options hash a property directly on the new instance
			// otherwise we'll modify the options hash on the prototype that we're
			// inheriting from
			basePrototype.options = $.widget.extend( {}, basePrototype.options );
			$.each( prototype, function( prop, value ) {
				if ( !$.isFunction( value ) ) {
					proxiedPrototype[ prop ] = value;
					return;
				}
				proxiedPrototype[ prop ] = (function() {
					var _super = function() {
							return base.prototype[ prop ].apply( this, arguments );
						},
						_superApply = function( args ) {
							return base.prototype[ prop ].apply( this, args );
						};
					return function() {
						var __super = this._super,
							__superApply = this._superApply,
							returnValue;
	
						this._super = _super;
						this._superApply = _superApply;
	
						returnValue = value.apply( this, arguments );
	
						this._super = __super;
						this._superApply = __superApply;
	
						return returnValue;
					};
				})();
			});
			constructor.prototype = $.widget.extend( basePrototype, {
				// TODO: remove support for widgetEventPrefix
				// always use the name + a colon as the prefix, e.g., draggable:start
				// don't prefix for widgets that aren't DOM-based
				widgetEventPrefix: existingConstructor ? (basePrototype.widgetEventPrefix || name) : name
			}, proxiedPrototype, {
				constructor: constructor,
				namespace: namespace,
				widgetName: name,
				widgetFullName: fullName
			});
	
			// If this widget is being redefined then we need to find all widgets that
			// are inheriting from it and redefine all of them so that they inherit from
			// the new version of this widget. We're essentially trying to replace one
			// level in the prototype chain.
			if ( existingConstructor ) {
				$.each( existingConstructor._childConstructors, function( i, child ) {
					var childPrototype = child.prototype;
	
					// redefine the child widget using the same prototype that was
					// originally used, but inherit from the new version of the base
					$.widget( childPrototype.namespace + "." + childPrototype.widgetName, constructor, child._proto );
				});
				// remove the list of existing child constructors from the old constructor
				// so the old child constructors can be garbage collected
				delete existingConstructor._childConstructors;
			} else {
				base._childConstructors.push( constructor );
			}
	
			$.widget.bridge( name, constructor );
	
			return constructor;
		};
	
		$.widget.extend = function( target ) {
			var input = widget_slice.call( arguments, 1 ),
				inputIndex = 0,
				inputLength = input.length,
				key,
				value;
			for ( ; inputIndex < inputLength; inputIndex++ ) {
				for ( key in input[ inputIndex ] ) {
					value = input[ inputIndex ][ key ];
					if ( input[ inputIndex ].hasOwnProperty( key ) && value !== undefined ) {
						// Clone objects
						if ( $.isPlainObject( value ) ) {
							target[ key ] = $.isPlainObject( target[ key ] ) ?
								$.widget.extend( {}, target[ key ], value ) :
								// Don't extend strings, arrays, etc. with objects
								$.widget.extend( {}, value );
						// Copy everything else by reference
						} else {
							target[ key ] = value;
						}
					}
				}
			}
			return target;
		};
	
		$.widget.bridge = function( name, object ) {
			var fullName = object.prototype.widgetFullName || name;
			$.fn[ name ] = function( options ) {
				var isMethodCall = typeof options === "string",
					args = widget_slice.call( arguments, 1 ),
					returnValue = this;
	
				if ( isMethodCall ) {
					this.each(function() {
						var methodValue,
							instance = $.data( this, fullName );
						if ( options === "instance" ) {
							returnValue = instance;
							return false;
						}
						if ( !instance ) {
							return $.error( "cannot call methods on " + name + " prior to initialization; " +
								"attempted to call method '" + options + "'" );
						}
						if ( !$.isFunction( instance[options] ) || options.charAt( 0 ) === "_" ) {
							return $.error( "no such method '" + options + "' for " + name + " widget instance" );
						}
						methodValue = instance[ options ].apply( instance, args );
						if ( methodValue !== instance && methodValue !== undefined ) {
							returnValue = methodValue && methodValue.jquery ?
								returnValue.pushStack( methodValue.get() ) :
								methodValue;
							return false;
						}
					});
				} else {
	
					// Allow multiple hashes to be passed on init
					if ( args.length ) {
						options = $.widget.extend.apply( null, [ options ].concat(args) );
					}
	
					this.each(function() {
						var instance = $.data( this, fullName );
						if ( instance ) {
							instance.option( options || {} );
							if ( instance._init ) {
								instance._init();
							}
						} else {
							$.data( this, fullName, new object( options, this ) );
						}
					});
				}
	
				return returnValue;
			};
		};
	
		$.Widget = function( /* options, element */ ) {};
		$.Widget._childConstructors = [];
	
		$.Widget.prototype = {
			widgetName: "widget",
			widgetEventPrefix: "",
			defaultElement: "<div>",
			options: {
				disabled: false,
	
				// callbacks
				create: null
			},
			_createWidget: function( options, element ) {
				element = $( element || this.defaultElement || this )[ 0 ];
				this.element = $( element );
				this.uuid = widget_uuid++;
				this.eventNamespace = "." + this.widgetName + this.uuid;
	
				this.bindings = $();
				this.hoverable = $();
				this.focusable = $();
	
				if ( element !== this ) {
					$.data( element, this.widgetFullName, this );
					this._on( true, this.element, {
						remove: function( event ) {
							if ( event.target === element ) {
								this.destroy();
							}
						}
					});
					this.document = $( element.style ?
						// element within the document
						element.ownerDocument :
						// element is window or document
						element.document || element );
					this.window = $( this.document[0].defaultView || this.document[0].parentWindow );
				}
	
				this.options = $.widget.extend( {},
					this.options,
					this._getCreateOptions(),
					options );
	
				this._create();
				this._trigger( "create", null, this._getCreateEventData() );
				this._init();
			},
			_getCreateOptions: $.noop,
			_getCreateEventData: $.noop,
			_create: $.noop,
			_init: $.noop,
	
			destroy: function() {
				this._destroy();
				// we can probably remove the unbind calls in 2.0
				// all event bindings should go through this._on()
				this.element
					.unbind( this.eventNamespace )
					.removeData( this.widgetFullName )
					// support: jquery <1.6.3
					// http://bugs.jquery.com/ticket/9413
					.removeData( $.camelCase( this.widgetFullName ) );
				this.widget()
					.unbind( this.eventNamespace )
					.removeAttr( "aria-disabled" )
					.removeClass(
						this.widgetFullName + "-disabled " +
						"ui-state-disabled" );
	
				// clean up events and states
				this.bindings.unbind( this.eventNamespace );
				this.hoverable.removeClass( "ui-state-hover" );
				this.focusable.removeClass( "ui-state-focus" );
			},
			_destroy: $.noop,
	
			widget: function() {
				return this.element;
			},
	
			option: function( key, value ) {
				var options = key,
					parts,
					curOption,
					i;
	
				if ( arguments.length === 0 ) {
					// don't return a reference to the internal hash
					return $.widget.extend( {}, this.options );
				}
	
				if ( typeof key === "string" ) {
					// handle nested keys, e.g., "foo.bar" => { foo: { bar: ___ } }
					options = {};
					parts = key.split( "." );
					key = parts.shift();
					if ( parts.length ) {
						curOption = options[ key ] = $.widget.extend( {}, this.options[ key ] );
						for ( i = 0; i < parts.length - 1; i++ ) {
							curOption[ parts[ i ] ] = curOption[ parts[ i ] ] || {};
							curOption = curOption[ parts[ i ] ];
						}
						key = parts.pop();
						if ( arguments.length === 1 ) {
							return curOption[ key ] === undefined ? null : curOption[ key ];
						}
						curOption[ key ] = value;
					} else {
						if ( arguments.length === 1 ) {
							return this.options[ key ] === undefined ? null : this.options[ key ];
						}
						options[ key ] = value;
					}
				}
	
				this._setOptions( options );
	
				return this;
			},
			_setOptions: function( options ) {
				var key;
	
				for ( key in options ) {
					this._setOption( key, options[ key ] );
				}
	
				return this;
			},
			_setOption: function( key, value ) {
				this.options[ key ] = value;
	
				if ( key === "disabled" ) {
					this.widget()
						.toggleClass( this.widgetFullName + "-disabled", !!value );
	
					// If the widget is becoming disabled, then nothing is interactive
					if ( value ) {
						this.hoverable.removeClass( "ui-state-hover" );
						this.focusable.removeClass( "ui-state-focus" );
					}
				}
	
				return this;
			},
	
			enable: function() {
				return this._setOptions({ disabled: false });
			},
			disable: function() {
				return this._setOptions({ disabled: true });
			},
	
			_on: function( suppressDisabledCheck, element, handlers ) {
				var delegateElement,
					instance = this;
	
				// no suppressDisabledCheck flag, shuffle arguments
				if ( typeof suppressDisabledCheck !== "boolean" ) {
					handlers = element;
					element = suppressDisabledCheck;
					suppressDisabledCheck = false;
				}
	
				// no element argument, shuffle and use this.element
				if ( !handlers ) {
					handlers = element;
					element = this.element;
					delegateElement = this.widget();
				} else {
					element = delegateElement = $( element );
					this.bindings = this.bindings.add( element );
				}
	
				$.each( handlers, function( event, handler ) {
					function handlerProxy() {
						// allow widgets to customize the disabled handling
						// - disabled as an array instead of boolean
						// - disabled class as method for disabling individual parts
						if ( !suppressDisabledCheck &&
								( instance.options.disabled === true ||
									$( this ).hasClass( "ui-state-disabled" ) ) ) {
							return;
						}
						return ( typeof handler === "string" ? instance[ handler ] : handler )
							.apply( instance, arguments );
					}
	
					// copy the guid so direct unbinding works
					if ( typeof handler !== "string" ) {
						handlerProxy.guid = handler.guid =
							handler.guid || handlerProxy.guid || $.guid++;
					}
	
					var match = event.match( /^([\w:-]*)\s*(.*)$/ ),
						eventName = match[1] + instance.eventNamespace,
						selector = match[2];
					if ( selector ) {
						delegateElement.delegate( selector, eventName, handlerProxy );
					} else {
						element.bind( eventName, handlerProxy );
					}
				});
			},
	
			_off: function( element, eventName ) {
				eventName = (eventName || "").split( " " ).join( this.eventNamespace + " " ) +
					this.eventNamespace;
				element.unbind( eventName ).undelegate( eventName );
	
				// Clear the stack to avoid memory leaks (#10056)
				this.bindings = $( this.bindings.not( element ).get() );
				this.focusable = $( this.focusable.not( element ).get() );
				this.hoverable = $( this.hoverable.not( element ).get() );
			},
	
			_delay: function( handler, delay ) {
				function handlerProxy() {
					return ( typeof handler === "string" ? instance[ handler ] : handler )
						.apply( instance, arguments );
				}
				var instance = this;
				return setTimeout( handlerProxy, delay || 0 );
			},
	
			_hoverable: function( element ) {
				this.hoverable = this.hoverable.add( element );
				this._on( element, {
					mouseenter: function( event ) {
						$( event.currentTarget ).addClass( "ui-state-hover" );
					},
					mouseleave: function( event ) {
						$( event.currentTarget ).removeClass( "ui-state-hover" );
					}
				});
			},
	
			_focusable: function( element ) {
				this.focusable = this.focusable.add( element );
				this._on( element, {
					focusin: function( event ) {
						$( event.currentTarget ).addClass( "ui-state-focus" );
					},
					focusout: function( event ) {
						$( event.currentTarget ).removeClass( "ui-state-focus" );
					}
				});
			},
	
			_trigger: function( type, event, data ) {
				var prop, orig,
					callback = this.options[ type ];
	
				data = data || {};
				event = $.Event( event );
				event.type = ( type === this.widgetEventPrefix ?
					type :
					this.widgetEventPrefix + type ).toLowerCase();
				// the original event may come from any element
				// so we need to reset the target on the new event
				event.target = this.element[ 0 ];
	
				// copy original event properties over to the new event
				orig = event.originalEvent;
				if ( orig ) {
					for ( prop in orig ) {
						if ( !( prop in event ) ) {
							event[ prop ] = orig[ prop ];
						}
					}
				}
	
				this.element.trigger( event, data );
				return !( $.isFunction( callback ) &&
					callback.apply( this.element[0], [ event ].concat( data ) ) === false ||
					event.isDefaultPrevented() );
			}
		};
	
		$.each( { show: "fadeIn", hide: "fadeOut" }, function( method, defaultEffect ) {
			$.Widget.prototype[ "_" + method ] = function( element, options, callback ) {
				if ( typeof options === "string" ) {
					options = { effect: options };
				}
				var hasOptions,
					effectName = !options ?
						method :
						options === true || typeof options === "number" ?
							defaultEffect :
							options.effect || defaultEffect;
				options = options || {};
				if ( typeof options === "number" ) {
					options = { duration: options };
				}
				hasOptions = !$.isEmptyObject( options );
				options.complete = callback;
				if ( options.delay ) {
					element.delay( options.delay );
				}
				if ( hasOptions && $.effects && $.effects.effect[ effectName ] ) {
					element[ method ]( options );
				} else if ( effectName !== method && element[ effectName ] ) {
					element[ effectName ]( options.duration, options.easing, callback );
				} else {
					element.queue(function( next ) {
						$( this )[ method ]();
						if ( callback ) {
							callback.call( element[ 0 ] );
						}
						next();
					});
				}
			};
		});
	
		var widget = $.widget;
	
	
		/*!
		 * jQuery UI Position 1.11.4
		 * http://jqueryui.com
		 *
		 * Copyright jQuery Foundation and other contributors
		 * Released under the MIT license.
		 * http://jquery.org/license
		 *
		 * http://api.jqueryui.com/position/
		 */
	
		(function() {
	
		$.ui = $.ui || {};
	
		var cachedScrollbarWidth, supportsOffsetFractions,
			max = Math.max,
			abs = Math.abs,
			round = Math.round,
			rhorizontal = /left|center|right/,
			rvertical = /top|center|bottom/,
			roffset = /[\+\-]\d+(\.[\d]+)?%?/,
			rposition = /^\w+/,
			rpercent = /%$/,
			_position = $.fn.position;
	
		function getOffsets( offsets, width, height ) {
			return [
				parseFloat( offsets[ 0 ] ) * ( rpercent.test( offsets[ 0 ] ) ? width / 100 : 1 ),
				parseFloat( offsets[ 1 ] ) * ( rpercent.test( offsets[ 1 ] ) ? height / 100 : 1 )
			];
		}
	
		function parseCss( element, property ) {
			return parseInt( $.css( element, property ), 10 ) || 0;
		}
	
		function getDimensions( elem ) {
			var raw = elem[0];
			if ( raw.nodeType === 9 ) {
				return {
					width: elem.width(),
					height: elem.height(),
					offset: { top: 0, left: 0 }
				};
			}
			if ( $.isWindow( raw ) ) {
				return {
					width: elem.width(),
					height: elem.height(),
					offset: { top: elem.scrollTop(), left: elem.scrollLeft() }
				};
			}
			if ( raw.preventDefault ) {
				return {
					width: 0,
					height: 0,
					offset: { top: raw.pageY, left: raw.pageX }
				};
			}
			return {
				width: elem.outerWidth(),
				height: elem.outerHeight(),
				offset: elem.offset()
			};
		}
	
		$.position = {
			scrollbarWidth: function() {
				if ( cachedScrollbarWidth !== undefined ) {
					return cachedScrollbarWidth;
				}
				var w1, w2,
					div = $( "<div style='display:block;position:absolute;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>" ),
					innerDiv = div.children()[0];
	
				$( "body" ).append( div );
				w1 = innerDiv.offsetWidth;
				div.css( "overflow", "scroll" );
	
				w2 = innerDiv.offsetWidth;
	
				if ( w1 === w2 ) {
					w2 = div[0].clientWidth;
				}
	
				div.remove();
	
				return (cachedScrollbarWidth = w1 - w2);
			},
			getScrollInfo: function( within ) {
				var overflowX = within.isWindow || within.isDocument ? "" :
						within.element.css( "overflow-x" ),
					overflowY = within.isWindow || within.isDocument ? "" :
						within.element.css( "overflow-y" ),
					hasOverflowX = overflowX === "scroll" ||
						( overflowX === "auto" && within.width < within.element[0].scrollWidth ),
					hasOverflowY = overflowY === "scroll" ||
						( overflowY === "auto" && within.height < within.element[0].scrollHeight );
				return {
					width: hasOverflowY ? $.position.scrollbarWidth() : 0,
					height: hasOverflowX ? $.position.scrollbarWidth() : 0
				};
			},
			getWithinInfo: function( element ) {
				var withinElement = $( element || window ),
					isWindow = $.isWindow( withinElement[0] ),
					isDocument = !!withinElement[ 0 ] && withinElement[ 0 ].nodeType === 9;
				return {
					element: withinElement,
					isWindow: isWindow,
					isDocument: isDocument,
					offset: withinElement.offset() || { left: 0, top: 0 },
					scrollLeft: withinElement.scrollLeft(),
					scrollTop: withinElement.scrollTop(),
	
					// support: jQuery 1.6.x
					// jQuery 1.6 doesn't support .outerWidth/Height() on documents or windows
					width: isWindow || isDocument ? withinElement.width() : withinElement.outerWidth(),
					height: isWindow || isDocument ? withinElement.height() : withinElement.outerHeight()
				};
			}
		};
	
		$.fn.position = function( options ) {
			if ( !options || !options.of ) {
				return _position.apply( this, arguments );
			}
	
			// make a copy, we don't want to modify arguments
			options = $.extend( {}, options );
	
			var atOffset, targetWidth, targetHeight, targetOffset, basePosition, dimensions,
				target = $( options.of ),
				within = $.position.getWithinInfo( options.within ),
				scrollInfo = $.position.getScrollInfo( within ),
				collision = ( options.collision || "flip" ).split( " " ),
				offsets = {};
	
			dimensions = getDimensions( target );
			if ( target[0].preventDefault ) {
				// force left top to allow flipping
				options.at = "left top";
			}
			targetWidth = dimensions.width;
			targetHeight = dimensions.height;
			targetOffset = dimensions.offset;
			// clone to reuse original targetOffset later
			basePosition = $.extend( {}, targetOffset );
	
			// force my and at to have valid horizontal and vertical positions
			// if a value is missing or invalid, it will be converted to center
			$.each( [ "my", "at" ], function() {
				var pos = ( options[ this ] || "" ).split( " " ),
					horizontalOffset,
					verticalOffset;
	
				if ( pos.length === 1) {
					pos = rhorizontal.test( pos[ 0 ] ) ?
						pos.concat( [ "center" ] ) :
						rvertical.test( pos[ 0 ] ) ?
							[ "center" ].concat( pos ) :
							[ "center", "center" ];
				}
				pos[ 0 ] = rhorizontal.test( pos[ 0 ] ) ? pos[ 0 ] : "center";
				pos[ 1 ] = rvertical.test( pos[ 1 ] ) ? pos[ 1 ] : "center";
	
				// calculate offsets
				horizontalOffset = roffset.exec( pos[ 0 ] );
				verticalOffset = roffset.exec( pos[ 1 ] );
				offsets[ this ] = [
					horizontalOffset ? horizontalOffset[ 0 ] : 0,
					verticalOffset ? verticalOffset[ 0 ] : 0
				];
	
				// reduce to just the positions without the offsets
				options[ this ] = [
					rposition.exec( pos[ 0 ] )[ 0 ],
					rposition.exec( pos[ 1 ] )[ 0 ]
				];
			});
	
			// normalize collision option
			if ( collision.length === 1 ) {
				collision[ 1 ] = collision[ 0 ];
			}
	
			if ( options.at[ 0 ] === "right" ) {
				basePosition.left += targetWidth;
			} else if ( options.at[ 0 ] === "center" ) {
				basePosition.left += targetWidth / 2;
			}
	
			if ( options.at[ 1 ] === "bottom" ) {
				basePosition.top += targetHeight;
			} else if ( options.at[ 1 ] === "center" ) {
				basePosition.top += targetHeight / 2;
			}
	
			atOffset = getOffsets( offsets.at, targetWidth, targetHeight );
			basePosition.left += atOffset[ 0 ];
			basePosition.top += atOffset[ 1 ];
	
			return this.each(function() {
				var collisionPosition, using,
					elem = $( this ),
					elemWidth = elem.outerWidth(),
					elemHeight = elem.outerHeight(),
					marginLeft = parseCss( this, "marginLeft" ),
					marginTop = parseCss( this, "marginTop" ),
					collisionWidth = elemWidth + marginLeft + parseCss( this, "marginRight" ) + scrollInfo.width,
					collisionHeight = elemHeight + marginTop + parseCss( this, "marginBottom" ) + scrollInfo.height,
					position = $.extend( {}, basePosition ),
					myOffset = getOffsets( offsets.my, elem.outerWidth(), elem.outerHeight() );
	
				if ( options.my[ 0 ] === "right" ) {
					position.left -= elemWidth;
				} else if ( options.my[ 0 ] === "center" ) {
					position.left -= elemWidth / 2;
				}
	
				if ( options.my[ 1 ] === "bottom" ) {
					position.top -= elemHeight;
				} else if ( options.my[ 1 ] === "center" ) {
					position.top -= elemHeight / 2;
				}
	
				position.left += myOffset[ 0 ];
				position.top += myOffset[ 1 ];
	
				// if the browser doesn't support fractions, then round for consistent results
				if ( !supportsOffsetFractions ) {
					position.left = round( position.left );
					position.top = round( position.top );
				}
	
				collisionPosition = {
					marginLeft: marginLeft,
					marginTop: marginTop
				};
	
				$.each( [ "left", "top" ], function( i, dir ) {
					if ( $.ui.position[ collision[ i ] ] ) {
						$.ui.position[ collision[ i ] ][ dir ]( position, {
							targetWidth: targetWidth,
							targetHeight: targetHeight,
							elemWidth: elemWidth,
							elemHeight: elemHeight,
							collisionPosition: collisionPosition,
							collisionWidth: collisionWidth,
							collisionHeight: collisionHeight,
							offset: [ atOffset[ 0 ] + myOffset[ 0 ], atOffset [ 1 ] + myOffset[ 1 ] ],
							my: options.my,
							at: options.at,
							within: within,
							elem: elem
						});
					}
				});
	
				if ( options.using ) {
					// adds feedback as second argument to using callback, if present
					using = function( props ) {
						var left = targetOffset.left - position.left,
							right = left + targetWidth - elemWidth,
							top = targetOffset.top - position.top,
							bottom = top + targetHeight - elemHeight,
							feedback = {
								target: {
									element: target,
									left: targetOffset.left,
									top: targetOffset.top,
									width: targetWidth,
									height: targetHeight
								},
								element: {
									element: elem,
									left: position.left,
									top: position.top,
									width: elemWidth,
									height: elemHeight
								},
								horizontal: right < 0 ? "left" : left > 0 ? "right" : "center",
								vertical: bottom < 0 ? "top" : top > 0 ? "bottom" : "middle"
							};
						if ( targetWidth < elemWidth && abs( left + right ) < targetWidth ) {
							feedback.horizontal = "center";
						}
						if ( targetHeight < elemHeight && abs( top + bottom ) < targetHeight ) {
							feedback.vertical = "middle";
						}
						if ( max( abs( left ), abs( right ) ) > max( abs( top ), abs( bottom ) ) ) {
							feedback.important = "horizontal";
						} else {
							feedback.important = "vertical";
						}
						options.using.call( this, props, feedback );
					};
				}
	
				elem.offset( $.extend( position, { using: using } ) );
			});
		};
	
		$.ui.position = {
			fit: {
				left: function( position, data ) {
					var within = data.within,
						withinOffset = within.isWindow ? within.scrollLeft : within.offset.left,
						outerWidth = within.width,
						collisionPosLeft = position.left - data.collisionPosition.marginLeft,
						overLeft = withinOffset - collisionPosLeft,
						overRight = collisionPosLeft + data.collisionWidth - outerWidth - withinOffset,
						newOverRight;
	
					// element is wider than within
					if ( data.collisionWidth > outerWidth ) {
						// element is initially over the left side of within
						if ( overLeft > 0 && overRight <= 0 ) {
							newOverRight = position.left + overLeft + data.collisionWidth - outerWidth - withinOffset;
							position.left += overLeft - newOverRight;
						// element is initially over right side of within
						} else if ( overRight > 0 && overLeft <= 0 ) {
							position.left = withinOffset;
						// element is initially over both left and right sides of within
						} else {
							if ( overLeft > overRight ) {
								position.left = withinOffset + outerWidth - data.collisionWidth;
							} else {
								position.left = withinOffset;
							}
						}
					// too far left -> align with left edge
					} else if ( overLeft > 0 ) {
						position.left += overLeft;
					// too far right -> align with right edge
					} else if ( overRight > 0 ) {
						position.left -= overRight;
					// adjust based on position and margin
					} else {
						position.left = max( position.left - collisionPosLeft, position.left );
					}
				},
				top: function( position, data ) {
					var within = data.within,
						withinOffset = within.isWindow ? within.scrollTop : within.offset.top,
						outerHeight = data.within.height,
						collisionPosTop = position.top - data.collisionPosition.marginTop,
						overTop = withinOffset - collisionPosTop,
						overBottom = collisionPosTop + data.collisionHeight - outerHeight - withinOffset,
						newOverBottom;
	
					// element is taller than within
					if ( data.collisionHeight > outerHeight ) {
						// element is initially over the top of within
						if ( overTop > 0 && overBottom <= 0 ) {
							newOverBottom = position.top + overTop + data.collisionHeight - outerHeight - withinOffset;
							position.top += overTop - newOverBottom;
						// element is initially over bottom of within
						} else if ( overBottom > 0 && overTop <= 0 ) {
							position.top = withinOffset;
						// element is initially over both top and bottom of within
						} else {
							if ( overTop > overBottom ) {
								position.top = withinOffset + outerHeight - data.collisionHeight;
							} else {
								position.top = withinOffset;
							}
						}
					// too far up -> align with top
					} else if ( overTop > 0 ) {
						position.top += overTop;
					// too far down -> align with bottom edge
					} else if ( overBottom > 0 ) {
						position.top -= overBottom;
					// adjust based on position and margin
					} else {
						position.top = max( position.top - collisionPosTop, position.top );
					}
				}
			},
			flip: {
				left: function( position, data ) {
					var within = data.within,
						withinOffset = within.offset.left + within.scrollLeft,
						outerWidth = within.width,
						offsetLeft = within.isWindow ? within.scrollLeft : within.offset.left,
						collisionPosLeft = position.left - data.collisionPosition.marginLeft,
						overLeft = collisionPosLeft - offsetLeft,
						overRight = collisionPosLeft + data.collisionWidth - outerWidth - offsetLeft,
						myOffset = data.my[ 0 ] === "left" ?
							-data.elemWidth :
							data.my[ 0 ] === "right" ?
								data.elemWidth :
								0,
						atOffset = data.at[ 0 ] === "left" ?
							data.targetWidth :
							data.at[ 0 ] === "right" ?
								-data.targetWidth :
								0,
						offset = -2 * data.offset[ 0 ],
						newOverRight,
						newOverLeft;
	
					if ( overLeft < 0 ) {
						newOverRight = position.left + myOffset + atOffset + offset + data.collisionWidth - outerWidth - withinOffset;
						if ( newOverRight < 0 || newOverRight < abs( overLeft ) ) {
							position.left += myOffset + atOffset + offset;
						}
					} else if ( overRight > 0 ) {
						newOverLeft = position.left - data.collisionPosition.marginLeft + myOffset + atOffset + offset - offsetLeft;
						if ( newOverLeft > 0 || abs( newOverLeft ) < overRight ) {
							position.left += myOffset + atOffset + offset;
						}
					}
				},
				top: function( position, data ) {
					var within = data.within,
						withinOffset = within.offset.top + within.scrollTop,
						outerHeight = within.height,
						offsetTop = within.isWindow ? within.scrollTop : within.offset.top,
						collisionPosTop = position.top - data.collisionPosition.marginTop,
						overTop = collisionPosTop - offsetTop,
						overBottom = collisionPosTop + data.collisionHeight - outerHeight - offsetTop,
						top = data.my[ 1 ] === "top",
						myOffset = top ?
							-data.elemHeight :
							data.my[ 1 ] === "bottom" ?
								data.elemHeight :
								0,
						atOffset = data.at[ 1 ] === "top" ?
							data.targetHeight :
							data.at[ 1 ] === "bottom" ?
								-data.targetHeight :
								0,
						offset = -2 * data.offset[ 1 ],
						newOverTop,
						newOverBottom;
					if ( overTop < 0 ) {
						newOverBottom = position.top + myOffset + atOffset + offset + data.collisionHeight - outerHeight - withinOffset;
						if ( newOverBottom < 0 || newOverBottom < abs( overTop ) ) {
							position.top += myOffset + atOffset + offset;
						}
					} else if ( overBottom > 0 ) {
						newOverTop = position.top - data.collisionPosition.marginTop + myOffset + atOffset + offset - offsetTop;
						if ( newOverTop > 0 || abs( newOverTop ) < overBottom ) {
							position.top += myOffset + atOffset + offset;
						}
					}
				}
			},
			flipfit: {
				left: function() {
					$.ui.position.flip.left.apply( this, arguments );
					$.ui.position.fit.left.apply( this, arguments );
				},
				top: function() {
					$.ui.position.flip.top.apply( this, arguments );
					$.ui.position.fit.top.apply( this, arguments );
				}
			}
		};
	
		// fraction support test
		(function() {
			var testElement, testElementParent, testElementStyle, offsetLeft, i,
				body = document.getElementsByTagName( "body" )[ 0 ],
				div = document.createElement( "div" );
	
			//Create a "fake body" for testing based on method used in jQuery.support
			testElement = document.createElement( body ? "div" : "body" );
			testElementStyle = {
				visibility: "hidden",
				width: 0,
				height: 0,
				border: 0,
				margin: 0,
				background: "none"
			};
			if ( body ) {
				$.extend( testElementStyle, {
					position: "absolute",
					left: "-1000px",
					top: "-1000px"
				});
			}
			for ( i in testElementStyle ) {
				testElement.style[ i ] = testElementStyle[ i ];
			}
			testElement.appendChild( div );
			testElementParent = body || document.documentElement;
			testElementParent.insertBefore( testElement, testElementParent.firstChild );
	
			div.style.cssText = "position: absolute; left: 10.7432222px;";
	
			offsetLeft = $( div ).offset().left;
			supportsOffsetFractions = offsetLeft > 10 && offsetLeft < 11;
	
			testElement.innerHTML = "";
			testElementParent.removeChild( testElement );
		})();
	
		})();
	
		var position = $.ui.position;
	
	
		/*!
		 * jQuery UI Datepicker 1.11.4
		 * http://jqueryui.com
		 *
		 * Copyright jQuery Foundation and other contributors
		 * Released under the MIT license.
		 * http://jquery.org/license
		 *
		 * http://api.jqueryui.com/datepicker/
		 */
	
	
		$.extend($.ui, { datepicker: { version: "1.11.4" } });
	
		var datepicker_instActive;
	
		function datepicker_getZindex( elem ) {
			var position, value;
			while ( elem.length && elem[ 0 ] !== document ) {
				// Ignore z-index if position is set to a value where z-index is ignored by the browser
				// This makes behavior of this function consistent across browsers
				// WebKit always returns auto if the element is positioned
				position = elem.css( "position" );
				if ( position === "absolute" || position === "relative" || position === "fixed" ) {
					// IE returns 0 when zIndex is not specified
					// other browsers return a string
					// we ignore the case of nested elements with an explicit value of 0
					// <div style="z-index: -10;"><div style="z-index: 0;"></div></div>
					value = parseInt( elem.css( "zIndex" ), 10 );
					if ( !isNaN( value ) && value !== 0 ) {
						return value;
					}
				}
				elem = elem.parent();
			}
	
			return 0;
		}
		/* Date picker manager.
		   Use the singleton instance of this class, $.datepicker, to interact with the date picker.
		   Settings for (groups of) date pickers are maintained in an instance object,
		   allowing multiple different settings on the same page. */
	
		function Datepicker() {
			this._curInst = null; // The current instance in use
			this._keyEvent = false; // If the last event was a key event
			this._disabledInputs = []; // List of date picker inputs that have been disabled
			this._datepickerShowing = false; // True if the popup picker is showing , false if not
			this._inDialog = false; // True if showing within a "dialog", false if not
			this._mainDivId = "ui-datepicker-div"; // The ID of the main datepicker division
			this._inlineClass = "ui-datepicker-inline"; // The name of the inline marker class
			this._appendClass = "ui-datepicker-append"; // The name of the append marker class
			this._triggerClass = "ui-datepicker-trigger"; // The name of the trigger marker class
			this._dialogClass = "ui-datepicker-dialog"; // The name of the dialog marker class
			this._disableClass = "ui-datepicker-disabled"; // The name of the disabled covering marker class
			this._unselectableClass = "ui-datepicker-unselectable"; // The name of the unselectable cell marker class
			this._currentClass = "ui-datepicker-current-day"; // The name of the current day marker class
			this._dayOverClass = "ui-datepicker-days-cell-over"; // The name of the day hover marker class
			this.regional = []; // Available regional settings, indexed by language code
			this.regional[""] = { // Default regional settings
				closeText: "Done", // Display text for close link
				prevText: "Prev", // Display text for previous month link
				nextText: "Next", // Display text for next month link
				currentText: "Today", // Display text for current month link
				monthNames: ["January","February","March","April","May","June",
					"July","August","September","October","November","December"], // Names of months for drop-down and formatting
				monthNamesShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], // For formatting
				dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], // For formatting
				dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], // For formatting
				dayNamesMin: ["Su","Mo","Tu","We","Th","Fr","Sa"], // Column headings for days starting at Sunday
				weekHeader: "Wk", // Column header for week of the year
				dateFormat: "mm/dd/yy", // See format options on parseDate
				firstDay: 0, // The first day of the week, Sun = 0, Mon = 1, ...
				isRTL: false, // True if right-to-left language, false if left-to-right
				showMonthAfterYear: false, // True if the year select precedes month, false for month then year
				yearSuffix: "" // Additional text to append to the year in the month headers
			};
			this._defaults = { // Global defaults for all the date picker instances
				showOn: "focus", // "focus" for popup on focus,
					// "button" for trigger button, or "both" for either
				showAnim: "fadeIn", // Name of jQuery animation for popup
				showOptions: {}, // Options for enhanced animations
				defaultDate: null, // Used when field is blank: actual date,
					// +/-number for offset from today, null for today
				appendText: "", // Display text following the input box, e.g. showing the format
				buttonText: "...", // Text for trigger button
				buttonImage: "", // URL for trigger button image
				buttonImageOnly: false, // True if the image appears alone, false if it appears on a button
				hideIfNoPrevNext: false, // True to hide next/previous month links
					// if not applicable, false to just disable them
				navigationAsDateFormat: false, // True if date formatting applied to prev/today/next links
				gotoCurrent: false, // True if today link goes back to current selection instead
				changeMonth: false, // True if month can be selected directly, false if only prev/next
				changeYear: false, // True if year can be selected directly, false if only prev/next
				yearRange: "c-10:c+10", // Range of years to display in drop-down,
					// either relative to today's year (-nn:+nn), relative to currently displayed year
					// (c-nn:c+nn), absolute (nnnn:nnnn), or a combination of the above (nnnn:-n)
				showOtherMonths: false, // True to show dates in other months, false to leave blank
				selectOtherMonths: false, // True to allow selection of dates in other months, false for unselectable
				showWeek: false, // True to show week of the year, false to not show it
				calculateWeek: this.iso8601Week, // How to calculate the week of the year,
					// takes a Date and returns the number of the week for it
				shortYearCutoff: "+10", // Short year values < this are in the current century,
					// > this are in the previous century,
					// string value starting with "+" for current year + value
				minDate: null, // The earliest selectable date, or null for no limit
				maxDate: null, // The latest selectable date, or null for no limit
				duration: "fast", // Duration of display/closure
				beforeShowDay: null, // Function that takes a date and returns an array with
					// [0] = true if selectable, false if not, [1] = custom CSS class name(s) or "",
					// [2] = cell title (optional), e.g. $.datepicker.noWeekends
				beforeShow: null, // Function that takes an input field and
					// returns a set of custom settings for the date picker
				onSelect: null, // Define a callback function when a date is selected
				onChangeMonthYear: null, // Define a callback function when the month or year is changed
				onClose: null, // Define a callback function when the datepicker is closed
				numberOfMonths: 1, // Number of months to show at a time
				showCurrentAtPos: 0, // The position in multipe months at which to show the current month (starting at 0)
				stepMonths: 1, // Number of months to step back/forward
				stepBigMonths: 12, // Number of months to step back/forward for the big links
				altField: "", // Selector for an alternate field to store selected dates into
				altFormat: "", // The date format to use for the alternate field
				constrainInput: true, // The input is constrained by the current date format
				showButtonPanel: false, // True to show button panel, false to not show it
				autoSize: false, // True to size the input for the date format, false to leave as is
				disabled: false // The initial disabled state
			};
			$.extend(this._defaults, this.regional[""]);
			this.regional.en = $.extend( true, {}, this.regional[ "" ]);
			this.regional[ "en-US" ] = $.extend( true, {}, this.regional.en );
			this.dpDiv = datepicker_bindHover($("<div id='" + this._mainDivId + "' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>"));
		}
	
		$.extend(Datepicker.prototype, {
			/* Class name added to elements to indicate already configured with a date picker. */
			markerClassName: "hasDatepicker",
	
			//Keep track of the maximum number of rows displayed (see #7043)
			maxRows: 4,
	
			// TODO rename to "widget" when switching to widget factory
			_widgetDatepicker: function() {
				return this.dpDiv;
			},
	
			/* Override the default settings for all instances of the date picker.
			 * @param  settings  object - the new settings to use as defaults (anonymous object)
			 * @return the manager object
			 */
			setDefaults: function(settings) {
				datepicker_extendRemove(this._defaults, settings || {});
				return this;
			},
	
			/* Attach the date picker to a jQuery selection.
			 * @param  target	element - the target input field or division or span
			 * @param  settings  object - the new settings to use for this date picker instance (anonymous)
			 */
			_attachDatepicker: function(target, settings) {
				var nodeName, inline, inst;
				nodeName = target.nodeName.toLowerCase();
				inline = (nodeName === "div" || nodeName === "span");
				if (!target.id) {
					this.uuid += 1;
					target.id = "dp" + this.uuid;
				}
				inst = this._newInst($(target), inline);
				inst.settings = $.extend({}, settings || {});
				if (nodeName === "input") {
					this._connectDatepicker(target, inst);
				} else if (inline) {
					this._inlineDatepicker(target, inst);
				}
			},
	
			/* Create a new instance object. */
			_newInst: function(target, inline) {
				var id = target[0].id.replace(/([^A-Za-z0-9_\-])/g, "\\\\$1"); // escape jQuery meta chars
				return {id: id, input: target, // associated target
					selectedDay: 0, selectedMonth: 0, selectedYear: 0, // current selection
					drawMonth: 0, drawYear: 0, // month being drawn
					inline: inline, // is datepicker inline or not
					dpDiv: (!inline ? this.dpDiv : // presentation div
					datepicker_bindHover($("<div class='" + this._inlineClass + " ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>")))};
			},
	
			/* Attach the date picker to an input field. */
			_connectDatepicker: function(target, inst) {
				var input = $(target);
				inst.append = $([]);
				inst.trigger = $([]);
				if (input.hasClass(this.markerClassName)) {
					return;
				}
				this._attachments(input, inst);
				input.addClass(this.markerClassName).keydown(this._doKeyDown).
					keypress(this._doKeyPress).keyup(this._doKeyUp);
				this._autoSize(inst);
				$.data(target, "datepicker", inst);
				//If disabled option is true, disable the datepicker once it has been attached to the input (see ticket #5665)
				if( inst.settings.disabled ) {
					this._disableDatepicker( target );
				}
			},
	
			/* Make attachments based on settings. */
			_attachments: function(input, inst) {
				var showOn, buttonText, buttonImage,
					appendText = this._get(inst, "appendText"),
					isRTL = this._get(inst, "isRTL");
	
				if (inst.append) {
					inst.append.remove();
				}
				if (appendText) {
					inst.append = $("<span class='" + this._appendClass + "'>" + appendText + "</span>");
					input[isRTL ? "before" : "after"](inst.append);
				}
	
				input.unbind("focus", this._showDatepicker);
	
				if (inst.trigger) {
					inst.trigger.remove();
				}
	
				showOn = this._get(inst, "showOn");
				if (showOn === "focus" || showOn === "both") { // pop-up date picker when in the marked field
					input.focus(this._showDatepicker);
				}
				if (showOn === "button" || showOn === "both") { // pop-up date picker when button clicked
					buttonText = this._get(inst, "buttonText");
					buttonImage = this._get(inst, "buttonImage");
					inst.trigger = $(this._get(inst, "buttonImageOnly") ?
						$("<img/>").addClass(this._triggerClass).
							attr({ src: buttonImage, alt: buttonText, title: buttonText }) :
						$("<button type='button'></button>").addClass(this._triggerClass).
							html(!buttonImage ? buttonText : $("<img/>").attr(
							{ src:buttonImage, alt:buttonText, title:buttonText })));
					input[isRTL ? "before" : "after"](inst.trigger);
					inst.trigger.click(function() {
						if ($.datepicker._datepickerShowing && $.datepicker._lastInput === input[0]) {
							$.datepicker._hideDatepicker();
						} else if ($.datepicker._datepickerShowing && $.datepicker._lastInput !== input[0]) {
							$.datepicker._hideDatepicker();
							$.datepicker._showDatepicker(input[0]);
						} else {
							$.datepicker._showDatepicker(input[0]);
						}
						return false;
					});
				}
			},
	
			/* Apply the maximum length for the date format. */
			_autoSize: function(inst) {
				if (this._get(inst, "autoSize") && !inst.inline) {
					var findMax, max, maxI, i,
						date = new Date(2009, 12 - 1, 20), // Ensure double digits
						dateFormat = this._get(inst, "dateFormat");
	
					if (dateFormat.match(/[DM]/)) {
						findMax = function(names) {
							max = 0;
							maxI = 0;
							for (i = 0; i < names.length; i++) {
								if (names[i].length > max) {
									max = names[i].length;
									maxI = i;
								}
							}
							return maxI;
						};
						date.setMonth(findMax(this._get(inst, (dateFormat.match(/MM/) ?
							"monthNames" : "monthNamesShort"))));
						date.setDate(findMax(this._get(inst, (dateFormat.match(/DD/) ?
							"dayNames" : "dayNamesShort"))) + 20 - date.getDay());
					}
					inst.input.attr("size", this._formatDate(inst, date).length);
				}
			},
	
			/* Attach an inline date picker to a div. */
			_inlineDatepicker: function(target, inst) {
				var divSpan = $(target);
				if (divSpan.hasClass(this.markerClassName)) {
					return;
				}
				divSpan.addClass(this.markerClassName).append(inst.dpDiv);
				$.data(target, "datepicker", inst);
				this._setDate(inst, this._getDefaultDate(inst), true);
				this._updateDatepicker(inst);
				this._updateAlternate(inst);
				//If disabled option is true, disable the datepicker before showing it (see ticket #5665)
				if( inst.settings.disabled ) {
					this._disableDatepicker( target );
				}
				// Set display:block in place of inst.dpDiv.show() which won't work on disconnected elements
				// http://bugs.jqueryui.com/ticket/7552 - A Datepicker created on a detached div has zero height
				inst.dpDiv.css( "display", "block" );
			},
	
			/* Pop-up the date picker in a "dialog" box.
			 * @param  input element - ignored
			 * @param  date	string or Date - the initial date to display
			 * @param  onSelect  function - the function to call when a date is selected
			 * @param  settings  object - update the dialog date picker instance's settings (anonymous object)
			 * @param  pos int[2] - coordinates for the dialog's position within the screen or
			 *					event - with x/y coordinates or
			 *					leave empty for default (screen centre)
			 * @return the manager object
			 */
			_dialogDatepicker: function(input, date, onSelect, settings, pos) {
				var id, browserWidth, browserHeight, scrollX, scrollY,
					inst = this._dialogInst; // internal instance
	
				if (!inst) {
					this.uuid += 1;
					id = "dp" + this.uuid;
					this._dialogInput = $("<input type='text' id='" + id +
						"' style='position: absolute; top: -100px; width: 0px;'/>");
					this._dialogInput.keydown(this._doKeyDown);
					$("body").append(this._dialogInput);
					inst = this._dialogInst = this._newInst(this._dialogInput, false);
					inst.settings = {};
					$.data(this._dialogInput[0], "datepicker", inst);
				}
				datepicker_extendRemove(inst.settings, settings || {});
				date = (date && date.constructor === Date ? this._formatDate(inst, date) : date);
				this._dialogInput.val(date);
	
				this._pos = (pos ? (pos.length ? pos : [pos.pageX, pos.pageY]) : null);
				if (!this._pos) {
					browserWidth = document.documentElement.clientWidth;
					browserHeight = document.documentElement.clientHeight;
					scrollX = document.documentElement.scrollLeft || document.body.scrollLeft;
					scrollY = document.documentElement.scrollTop || document.body.scrollTop;
					this._pos = // should use actual width/height below
						[(browserWidth / 2) - 100 + scrollX, (browserHeight / 2) - 150 + scrollY];
				}
	
				// move input on screen for focus, but hidden behind dialog
				this._dialogInput.css("left", (this._pos[0] + 20) + "px").css("top", this._pos[1] + "px");
				inst.settings.onSelect = onSelect;
				this._inDialog = true;
				this.dpDiv.addClass(this._dialogClass);
				this._showDatepicker(this._dialogInput[0]);
				if ($.blockUI) {
					$.blockUI(this.dpDiv);
				}
				$.data(this._dialogInput[0], "datepicker", inst);
				return this;
			},
	
			/* Detach a datepicker from its control.
			 * @param  target	element - the target input field or division or span
			 */
			_destroyDatepicker: function(target) {
				var nodeName,
					$target = $(target),
					inst = $.data(target, "datepicker");
	
				if (!$target.hasClass(this.markerClassName)) {
					return;
				}
	
				nodeName = target.nodeName.toLowerCase();
				$.removeData(target, "datepicker");
				if (nodeName === "input") {
					inst.append.remove();
					inst.trigger.remove();
					$target.removeClass(this.markerClassName).
						unbind("focus", this._showDatepicker).
						unbind("keydown", this._doKeyDown).
						unbind("keypress", this._doKeyPress).
						unbind("keyup", this._doKeyUp);
				} else if (nodeName === "div" || nodeName === "span") {
					$target.removeClass(this.markerClassName).empty();
				}
	
				if ( datepicker_instActive === inst ) {
					datepicker_instActive = null;
				}
			},
	
			/* Enable the date picker to a jQuery selection.
			 * @param  target	element - the target input field or division or span
			 */
			_enableDatepicker: function(target) {
				var nodeName, inline,
					$target = $(target),
					inst = $.data(target, "datepicker");
	
				if (!$target.hasClass(this.markerClassName)) {
					return;
				}
	
				nodeName = target.nodeName.toLowerCase();
				if (nodeName === "input") {
					target.disabled = false;
					inst.trigger.filter("button").
						each(function() { this.disabled = false; }).end().
						filter("img").css({opacity: "1.0", cursor: ""});
				} else if (nodeName === "div" || nodeName === "span") {
					inline = $target.children("." + this._inlineClass);
					inline.children().removeClass("ui-state-disabled");
					inline.find("select.ui-datepicker-month, select.ui-datepicker-year").
						prop("disabled", false);
				}
				this._disabledInputs = $.map(this._disabledInputs,
					function(value) { return (value === target ? null : value); }); // delete entry
			},
	
			/* Disable the date picker to a jQuery selection.
			 * @param  target	element - the target input field or division or span
			 */
			_disableDatepicker: function(target) {
				var nodeName, inline,
					$target = $(target),
					inst = $.data(target, "datepicker");
	
				if (!$target.hasClass(this.markerClassName)) {
					return;
				}
	
				nodeName = target.nodeName.toLowerCase();
				if (nodeName === "input") {
					target.disabled = true;
					inst.trigger.filter("button").
						each(function() { this.disabled = true; }).end().
						filter("img").css({opacity: "0.5", cursor: "default"});
				} else if (nodeName === "div" || nodeName === "span") {
					inline = $target.children("." + this._inlineClass);
					inline.children().addClass("ui-state-disabled");
					inline.find("select.ui-datepicker-month, select.ui-datepicker-year").
						prop("disabled", true);
				}
				this._disabledInputs = $.map(this._disabledInputs,
					function(value) { return (value === target ? null : value); }); // delete entry
				this._disabledInputs[this._disabledInputs.length] = target;
			},
	
			/* Is the first field in a jQuery collection disabled as a datepicker?
			 * @param  target	element - the target input field or division or span
			 * @return boolean - true if disabled, false if enabled
			 */
			_isDisabledDatepicker: function(target) {
				if (!target) {
					return false;
				}
				for (var i = 0; i < this._disabledInputs.length; i++) {
					if (this._disabledInputs[i] === target) {
						return true;
					}
				}
				return false;
			},
	
			/* Retrieve the instance data for the target control.
			 * @param  target  element - the target input field or division or span
			 * @return  object - the associated instance data
			 * @throws  error if a jQuery problem getting data
			 */
			_getInst: function(target) {
				try {
					return $.data(target, "datepicker");
				}
				catch (err) {
					throw "Missing instance data for this datepicker";
				}
			},
	
			/* Update or retrieve the settings for a date picker attached to an input field or division.
			 * @param  target  element - the target input field or division or span
			 * @param  name	object - the new settings to update or
			 *				string - the name of the setting to change or retrieve,
			 *				when retrieving also "all" for all instance settings or
			 *				"defaults" for all global defaults
			 * @param  value   any - the new value for the setting
			 *				(omit if above is an object or to retrieve a value)
			 */
			_optionDatepicker: function(target, name, value) {
				var settings, date, minDate, maxDate,
					inst = this._getInst(target);
	
				if (arguments.length === 2 && typeof name === "string") {
					return (name === "defaults" ? $.extend({}, $.datepicker._defaults) :
						(inst ? (name === "all" ? $.extend({}, inst.settings) :
						this._get(inst, name)) : null));
				}
	
				settings = name || {};
				if (typeof name === "string") {
					settings = {};
					settings[name] = value;
				}
	
				if (inst) {
					if (this._curInst === inst) {
						this._hideDatepicker();
					}
	
					date = this._getDateDatepicker(target, true);
					minDate = this._getMinMaxDate(inst, "min");
					maxDate = this._getMinMaxDate(inst, "max");
					datepicker_extendRemove(inst.settings, settings);
					// reformat the old minDate/maxDate values if dateFormat changes and a new minDate/maxDate isn't provided
					if (minDate !== null && settings.dateFormat !== undefined && settings.minDate === undefined) {
						inst.settings.minDate = this._formatDate(inst, minDate);
					}
					if (maxDate !== null && settings.dateFormat !== undefined && settings.maxDate === undefined) {
						inst.settings.maxDate = this._formatDate(inst, maxDate);
					}
					if ( "disabled" in settings ) {
						if ( settings.disabled ) {
							this._disableDatepicker(target);
						} else {
							this._enableDatepicker(target);
						}
					}
					this._attachments($(target), inst);
					this._autoSize(inst);
					this._setDate(inst, date);
					this._updateAlternate(inst);
					this._updateDatepicker(inst);
				}
			},
	
			// change method deprecated
			_changeDatepicker: function(target, name, value) {
				this._optionDatepicker(target, name, value);
			},
	
			/* Redraw the date picker attached to an input field or division.
			 * @param  target  element - the target input field or division or span
			 */
			_refreshDatepicker: function(target) {
				var inst = this._getInst(target);
				if (inst) {
					this._updateDatepicker(inst);
				}
			},
	
			/* Set the dates for a jQuery selection.
			 * @param  target element - the target input field or division or span
			 * @param  date	Date - the new date
			 */
			_setDateDatepicker: function(target, date) {
				var inst = this._getInst(target);
				if (inst) {
					this._setDate(inst, date);
					this._updateDatepicker(inst);
					this._updateAlternate(inst);
				}
			},
	
			/* Get the date(s) for the first entry in a jQuery selection.
			 * @param  target element - the target input field or division or span
			 * @param  noDefault boolean - true if no default date is to be used
			 * @return Date - the current date
			 */
			_getDateDatepicker: function(target, noDefault) {
				var inst = this._getInst(target);
				if (inst && !inst.inline) {
					this._setDateFromField(inst, noDefault);
				}
				return (inst ? this._getDate(inst) : null);
			},
	
			/* Handle keystrokes. */
			_doKeyDown: function(event) {
				var onSelect, dateStr, sel,
					inst = $.datepicker._getInst(event.target),
					handled = true,
					isRTL = inst.dpDiv.is(".ui-datepicker-rtl");
	
				inst._keyEvent = true;
				if ($.datepicker._datepickerShowing) {
					switch (event.keyCode) {
						case 9: $.datepicker._hideDatepicker();
								handled = false;
								break; // hide on tab out
						case 13: sel = $("td." + $.datepicker._dayOverClass + ":not(." +
											$.datepicker._currentClass + ")", inst.dpDiv);
								if (sel[0]) {
									$.datepicker._selectDay(event.target, inst.selectedMonth, inst.selectedYear, sel[0]);
								}
	
								onSelect = $.datepicker._get(inst, "onSelect");
								if (onSelect) {
									dateStr = $.datepicker._formatDate(inst);
	
									// trigger custom callback
									onSelect.apply((inst.input ? inst.input[0] : null), [dateStr, inst]);
								} else {
									$.datepicker._hideDatepicker();
								}
	
								return false; // don't submit the form
						case 27: $.datepicker._hideDatepicker();
								break; // hide on escape
						case 33: $.datepicker._adjustDate(event.target, (event.ctrlKey ?
									-$.datepicker._get(inst, "stepBigMonths") :
									-$.datepicker._get(inst, "stepMonths")), "M");
								break; // previous month/year on page up/+ ctrl
						case 34: $.datepicker._adjustDate(event.target, (event.ctrlKey ?
									+$.datepicker._get(inst, "stepBigMonths") :
									+$.datepicker._get(inst, "stepMonths")), "M");
								break; // next month/year on page down/+ ctrl
						case 35: if (event.ctrlKey || event.metaKey) {
									$.datepicker._clearDate(event.target);
								}
								handled = event.ctrlKey || event.metaKey;
								break; // clear on ctrl or command +end
						case 36: if (event.ctrlKey || event.metaKey) {
									$.datepicker._gotoToday(event.target);
								}
								handled = event.ctrlKey || event.metaKey;
								break; // current on ctrl or command +home
						case 37: if (event.ctrlKey || event.metaKey) {
									$.datepicker._adjustDate(event.target, (isRTL ? +1 : -1), "D");
								}
								handled = event.ctrlKey || event.metaKey;
								// -1 day on ctrl or command +left
								if (event.originalEvent.altKey) {
									$.datepicker._adjustDate(event.target, (event.ctrlKey ?
										-$.datepicker._get(inst, "stepBigMonths") :
										-$.datepicker._get(inst, "stepMonths")), "M");
								}
								// next month/year on alt +left on Mac
								break;
						case 38: if (event.ctrlKey || event.metaKey) {
									$.datepicker._adjustDate(event.target, -7, "D");
								}
								handled = event.ctrlKey || event.metaKey;
								break; // -1 week on ctrl or command +up
						case 39: if (event.ctrlKey || event.metaKey) {
									$.datepicker._adjustDate(event.target, (isRTL ? -1 : +1), "D");
								}
								handled = event.ctrlKey || event.metaKey;
								// +1 day on ctrl or command +right
								if (event.originalEvent.altKey) {
									$.datepicker._adjustDate(event.target, (event.ctrlKey ?
										+$.datepicker._get(inst, "stepBigMonths") :
										+$.datepicker._get(inst, "stepMonths")), "M");
								}
								// next month/year on alt +right
								break;
						case 40: if (event.ctrlKey || event.metaKey) {
									$.datepicker._adjustDate(event.target, +7, "D");
								}
								handled = event.ctrlKey || event.metaKey;
								break; // +1 week on ctrl or command +down
						default: handled = false;
					}
				} else if (event.keyCode === 36 && event.ctrlKey) { // display the date picker on ctrl+home
					$.datepicker._showDatepicker(this);
				} else {
					handled = false;
				}
	
				if (handled) {
					event.preventDefault();
					event.stopPropagation();
				}
			},
	
			/* Filter entered characters - based on date format. */
			_doKeyPress: function(event) {
				var chars, chr,
					inst = $.datepicker._getInst(event.target);
	
				if ($.datepicker._get(inst, "constrainInput")) {
					chars = $.datepicker._possibleChars($.datepicker._get(inst, "dateFormat"));
					chr = String.fromCharCode(event.charCode == null ? event.keyCode : event.charCode);
					return event.ctrlKey || event.metaKey || (chr < " " || !chars || chars.indexOf(chr) > -1);
				}
			},
	
			/* Synchronise manual entry and field/alternate field. */
			_doKeyUp: function(event) {
				var date,
					inst = $.datepicker._getInst(event.target);
	
				if (inst.input.val() !== inst.lastVal) {
					try {
						date = $.datepicker.parseDate($.datepicker._get(inst, "dateFormat"),
							(inst.input ? inst.input.val() : null),
							$.datepicker._getFormatConfig(inst));
	
						if (date) { // only if valid
							$.datepicker._setDateFromField(inst);
							$.datepicker._updateAlternate(inst);
							$.datepicker._updateDatepicker(inst);
						}
					}
					catch (err) {
					}
				}
				return true;
			},
	
			/* Pop-up the date picker for a given input field.
			 * If false returned from beforeShow event handler do not show.
			 * @param  input  element - the input field attached to the date picker or
			 *					event - if triggered by focus
			 */
			_showDatepicker: function(input) {
				input = input.target || input;
				if (input.nodeName.toLowerCase() !== "input") { // find from button/image trigger
					input = $("input", input.parentNode)[0];
				}
	
				if ($.datepicker._isDisabledDatepicker(input) || $.datepicker._lastInput === input) { // already here
					return;
				}
	
				var inst, beforeShow, beforeShowSettings, isFixed,
					offset, showAnim, duration;
	
				inst = $.datepicker._getInst(input);
				if ($.datepicker._curInst && $.datepicker._curInst !== inst) {
					$.datepicker._curInst.dpDiv.stop(true, true);
					if ( inst && $.datepicker._datepickerShowing ) {
						$.datepicker._hideDatepicker( $.datepicker._curInst.input[0] );
					}
				}
	
				beforeShow = $.datepicker._get(inst, "beforeShow");
				beforeShowSettings = beforeShow ? beforeShow.apply(input, [input, inst]) : {};
				if(beforeShowSettings === false){
					return;
				}
				datepicker_extendRemove(inst.settings, beforeShowSettings);
	
				inst.lastVal = null;
				$.datepicker._lastInput = input;
				$.datepicker._setDateFromField(inst);
	
				if ($.datepicker._inDialog) { // hide cursor
					input.value = "";
				}
				if (!$.datepicker._pos) { // position below input
					$.datepicker._pos = $.datepicker._findPos(input);
					$.datepicker._pos[1] += input.offsetHeight; // add the height
				}
	
				isFixed = false;
				$(input).parents().each(function() {
					isFixed |= $(this).css("position") === "fixed";
					return !isFixed;
				});
	
				offset = {left: $.datepicker._pos[0], top: $.datepicker._pos[1]};
				$.datepicker._pos = null;
				//to avoid flashes on Firefox
				inst.dpDiv.empty();
				// determine sizing offscreen
				inst.dpDiv.css({position: "absolute", display: "block", top: "-1000px"});
				$.datepicker._updateDatepicker(inst);
				// fix width for dynamic number of date pickers
				// and adjust position before showing
				offset = $.datepicker._checkOffset(inst, offset, isFixed);
				inst.dpDiv.css({position: ($.datepicker._inDialog && $.blockUI ?
					"static" : (isFixed ? "fixed" : "absolute")), display: "none",
					left: offset.left + "px", top: offset.top + "px"});
	
				if (!inst.inline) {
					showAnim = $.datepicker._get(inst, "showAnim");
					duration = $.datepicker._get(inst, "duration");
					inst.dpDiv.css( "z-index", datepicker_getZindex( $( input ) ) + 1 );
					$.datepicker._datepickerShowing = true;
	
					if ( $.effects && $.effects.effect[ showAnim ] ) {
						inst.dpDiv.show(showAnim, $.datepicker._get(inst, "showOptions"), duration);
					} else {
						inst.dpDiv[showAnim || "show"](showAnim ? duration : null);
					}
	
					if ( $.datepicker._shouldFocusInput( inst ) ) {
						inst.input.focus();
					}
	
					$.datepicker._curInst = inst;
				}
			},
	
			/* Generate the date picker content. */
			_updateDatepicker: function(inst) {
				this.maxRows = 4; //Reset the max number of rows being displayed (see #7043)
				datepicker_instActive = inst; // for delegate hover events
				inst.dpDiv.empty().append(this._generateHTML(inst));
				this._attachHandlers(inst);
	
				var origyearshtml,
					numMonths = this._getNumberOfMonths(inst),
					cols = numMonths[1],
					width = 17,
					activeCell = inst.dpDiv.find( "." + this._dayOverClass + " a" );
	
				if ( activeCell.length > 0 ) {
					datepicker_handleMouseover.apply( activeCell.get( 0 ) );
				}
	
				inst.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width("");
				if (cols > 1) {
					inst.dpDiv.addClass("ui-datepicker-multi-" + cols).css("width", (width * cols) + "em");
				}
				inst.dpDiv[(numMonths[0] !== 1 || numMonths[1] !== 1 ? "add" : "remove") +
					"Class"]("ui-datepicker-multi");
				inst.dpDiv[(this._get(inst, "isRTL") ? "add" : "remove") +
					"Class"]("ui-datepicker-rtl");
	
				if (inst === $.datepicker._curInst && $.datepicker._datepickerShowing && $.datepicker._shouldFocusInput( inst ) ) {
					inst.input.focus();
				}
	
				// deffered render of the years select (to avoid flashes on Firefox)
				if( inst.yearshtml ){
					origyearshtml = inst.yearshtml;
					setTimeout(function(){
						//assure that inst.yearshtml didn't change.
						if( origyearshtml === inst.yearshtml && inst.yearshtml ){
							inst.dpDiv.find("select.ui-datepicker-year:first").replaceWith(inst.yearshtml);
						}
						origyearshtml = inst.yearshtml = null;
					}, 0);
				}
			},
	
			// #6694 - don't focus the input if it's already focused
			// this breaks the change event in IE
			// Support: IE and jQuery <1.9
			_shouldFocusInput: function( inst ) {
				return inst.input && inst.input.is( ":visible" ) && !inst.input.is( ":disabled" ) && !inst.input.is( ":focus" );
			},
	
			/* Check positioning to remain on screen. */
			_checkOffset: function(inst, offset, isFixed) {
				var dpWidth = inst.dpDiv.outerWidth(),
					dpHeight = inst.dpDiv.outerHeight(),
					inputWidth = inst.input ? inst.input.outerWidth() : 0,
					inputHeight = inst.input ? inst.input.outerHeight() : 0,
					viewWidth = document.documentElement.clientWidth + (isFixed ? 0 : $(document).scrollLeft()),
					viewHeight = document.documentElement.clientHeight + (isFixed ? 0 : $(document).scrollTop());
	
				offset.left -= (this._get(inst, "isRTL") ? (dpWidth - inputWidth) : 0);
				offset.left -= (isFixed && offset.left === inst.input.offset().left) ? $(document).scrollLeft() : 0;
				offset.top -= (isFixed && offset.top === (inst.input.offset().top + inputHeight)) ? $(document).scrollTop() : 0;
	
				// now check if datepicker is showing outside window viewport - move to a better place if so.
				offset.left -= Math.min(offset.left, (offset.left + dpWidth > viewWidth && viewWidth > dpWidth) ?
					Math.abs(offset.left + dpWidth - viewWidth) : 0);
				offset.top -= Math.min(offset.top, (offset.top + dpHeight > viewHeight && viewHeight > dpHeight) ?
					Math.abs(dpHeight + inputHeight) : 0);
	
				return offset;
			},
	
			/* Find an object's position on the screen. */
			_findPos: function(obj) {
				var position,
					inst = this._getInst(obj),
					isRTL = this._get(inst, "isRTL");
	
				while (obj && (obj.type === "hidden" || obj.nodeType !== 1 || $.expr.filters.hidden(obj))) {
					obj = obj[isRTL ? "previousSibling" : "nextSibling"];
				}
	
				position = $(obj).offset();
				return [position.left, position.top];
			},
	
			/* Hide the date picker from view.
			 * @param  input  element - the input field attached to the date picker
			 */
			_hideDatepicker: function(input) {
				var showAnim, duration, postProcess, onClose,
					inst = this._curInst;
	
				if (!inst || (input && inst !== $.data(input, "datepicker"))) {
					return;
				}
	
				if (this._datepickerShowing) {
					showAnim = this._get(inst, "showAnim");
					duration = this._get(inst, "duration");
					postProcess = function() {
						$.datepicker._tidyDialog(inst);
					};
	
					// DEPRECATED: after BC for 1.8.x $.effects[ showAnim ] is not needed
					if ( $.effects && ( $.effects.effect[ showAnim ] || $.effects[ showAnim ] ) ) {
						inst.dpDiv.hide(showAnim, $.datepicker._get(inst, "showOptions"), duration, postProcess);
					} else {
						inst.dpDiv[(showAnim === "slideDown" ? "slideUp" :
							(showAnim === "fadeIn" ? "fadeOut" : "hide"))]((showAnim ? duration : null), postProcess);
					}
	
					if (!showAnim) {
						postProcess();
					}
					this._datepickerShowing = false;
	
					onClose = this._get(inst, "onClose");
					if (onClose) {
						onClose.apply((inst.input ? inst.input[0] : null), [(inst.input ? inst.input.val() : ""), inst]);
					}
	
					this._lastInput = null;
					if (this._inDialog) {
						this._dialogInput.css({ position: "absolute", left: "0", top: "-100px" });
						if ($.blockUI) {
							$.unblockUI();
							$("body").append(this.dpDiv);
						}
					}
					this._inDialog = false;
				}
			},
	
			/* Tidy up after a dialog display. */
			_tidyDialog: function(inst) {
				inst.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar");
			},
	
			/* Close date picker if clicked elsewhere. */
			_checkExternalClick: function(event) {
				if (!$.datepicker._curInst) {
					return;
				}
	
				var $target = $(event.target),
					inst = $.datepicker._getInst($target[0]);
	
				if ( ( ( $target[0].id !== $.datepicker._mainDivId &&
						$target.parents("#" + $.datepicker._mainDivId).length === 0 &&
						!$target.hasClass($.datepicker.markerClassName) &&
						!$target.closest("." + $.datepicker._triggerClass).length &&
						$.datepicker._datepickerShowing && !($.datepicker._inDialog && $.blockUI) ) ) ||
					( $target.hasClass($.datepicker.markerClassName) && $.datepicker._curInst !== inst ) ) {
						$.datepicker._hideDatepicker();
				}
			},
	
			/* Adjust one of the date sub-fields. */
			_adjustDate: function(id, offset, period) {
				var target = $(id),
					inst = this._getInst(target[0]);
	
				if (this._isDisabledDatepicker(target[0])) {
					return;
				}
				this._adjustInstDate(inst, offset +
					(period === "M" ? this._get(inst, "showCurrentAtPos") : 0), // undo positioning
					period);
				this._updateDatepicker(inst);
			},
	
			/* Action for current link. */
			_gotoToday: function(id) {
				var date,
					target = $(id),
					inst = this._getInst(target[0]);
	
				if (this._get(inst, "gotoCurrent") && inst.currentDay) {
					inst.selectedDay = inst.currentDay;
					inst.drawMonth = inst.selectedMonth = inst.currentMonth;
					inst.drawYear = inst.selectedYear = inst.currentYear;
				} else {
					date = new Date();
					inst.selectedDay = date.getDate();
					inst.drawMonth = inst.selectedMonth = date.getMonth();
					inst.drawYear = inst.selectedYear = date.getFullYear();
				}
				this._notifyChange(inst);
				this._adjustDate(target);
			},
	
			/* Action for selecting a new month/year. */
			_selectMonthYear: function(id, select, period) {
				var target = $(id),
					inst = this._getInst(target[0]);
	
				inst["selected" + (period === "M" ? "Month" : "Year")] =
				inst["draw" + (period === "M" ? "Month" : "Year")] =
					parseInt(select.options[select.selectedIndex].value,10);
	
				this._notifyChange(inst);
				this._adjustDate(target);
			},
	
			/* Action for selecting a day. */
			_selectDay: function(id, month, year, td) {
				var inst,
					target = $(id);
	
				if ($(td).hasClass(this._unselectableClass) || this._isDisabledDatepicker(target[0])) {
					return;
				}
	
				inst = this._getInst(target[0]);
				inst.selectedDay = inst.currentDay = $("a", td).html();
				inst.selectedMonth = inst.currentMonth = month;
				inst.selectedYear = inst.currentYear = year;
				this._selectDate(id, this._formatDate(inst,
					inst.currentDay, inst.currentMonth, inst.currentYear));
			},
	
			/* Erase the input field and hide the date picker. */
			_clearDate: function(id) {
				var target = $(id);
				this._selectDate(target, "");
			},
	
			/* Update the input field with the selected date. */
			_selectDate: function(id, dateStr) {
				var onSelect,
					target = $(id),
					inst = this._getInst(target[0]);
	
				dateStr = (dateStr != null ? dateStr : this._formatDate(inst));
				if (inst.input) {
					inst.input.val(dateStr);
				}
				this._updateAlternate(inst);
	
				onSelect = this._get(inst, "onSelect");
				if (onSelect) {
					onSelect.apply((inst.input ? inst.input[0] : null), [dateStr, inst]);  // trigger custom callback
				} else if (inst.input) {
					inst.input.trigger("change"); // fire the change event
				}
	
				if (inst.inline){
					this._updateDatepicker(inst);
				} else {
					this._hideDatepicker();
					this._lastInput = inst.input[0];
					if (typeof(inst.input[0]) !== "object") {
						inst.input.focus(); // restore focus
					}
					this._lastInput = null;
				}
			},
	
			/* Update any alternate field to synchronise with the main field. */
			_updateAlternate: function(inst) {
				var altFormat, date, dateStr,
					altField = this._get(inst, "altField");
	
				if (altField) { // update alternate field too
					altFormat = this._get(inst, "altFormat") || this._get(inst, "dateFormat");
					date = this._getDate(inst);
					dateStr = this.formatDate(altFormat, date, this._getFormatConfig(inst));
					$(altField).each(function() { $(this).val(dateStr); });
				}
			},
	
			/* Set as beforeShowDay function to prevent selection of weekends.
			 * @param  date  Date - the date to customise
			 * @return [boolean, string] - is this date selectable?, what is its CSS class?
			 */
			noWeekends: function(date) {
				var day = date.getDay();
				return [(day > 0 && day < 6), ""];
			},
	
			/* Set as calculateWeek to determine the week of the year based on the ISO 8601 definition.
			 * @param  date  Date - the date to get the week for
			 * @return  number - the number of the week within the year that contains this date
			 */
			iso8601Week: function(date) {
				var time,
					checkDate = new Date(date.getTime());
	
				// Find Thursday of this week starting on Monday
				checkDate.setDate(checkDate.getDate() + 4 - (checkDate.getDay() || 7));
	
				time = checkDate.getTime();
				checkDate.setMonth(0); // Compare with Jan 1
				checkDate.setDate(1);
				return Math.floor(Math.round((time - checkDate) / 86400000) / 7) + 1;
			},
	
			/* Parse a string value into a date object.
			 * See formatDate below for the possible formats.
			 *
			 * @param  format string - the expected format of the date
			 * @param  value string - the date in the above format
			 * @param  settings Object - attributes include:
			 *					shortYearCutoff  number - the cutoff year for determining the century (optional)
			 *					dayNamesShort	string[7] - abbreviated names of the days from Sunday (optional)
			 *					dayNames		string[7] - names of the days from Sunday (optional)
			 *					monthNamesShort string[12] - abbreviated names of the months (optional)
			 *					monthNames		string[12] - names of the months (optional)
			 * @return  Date - the extracted date value or null if value is blank
			 */
			parseDate: function (format, value, settings) {
				if (format == null || value == null) {
					throw "Invalid arguments";
				}
	
				value = (typeof value === "object" ? value.toString() : value + "");
				if (value === "") {
					return null;
				}
	
				var iFormat, dim, extra,
					iValue = 0,
					shortYearCutoffTemp = (settings ? settings.shortYearCutoff : null) || this._defaults.shortYearCutoff,
					shortYearCutoff = (typeof shortYearCutoffTemp !== "string" ? shortYearCutoffTemp :
						new Date().getFullYear() % 100 + parseInt(shortYearCutoffTemp, 10)),
					dayNamesShort = (settings ? settings.dayNamesShort : null) || this._defaults.dayNamesShort,
					dayNames = (settings ? settings.dayNames : null) || this._defaults.dayNames,
					monthNamesShort = (settings ? settings.monthNamesShort : null) || this._defaults.monthNamesShort,
					monthNames = (settings ? settings.monthNames : null) || this._defaults.monthNames,
					year = -1,
					month = -1,
					day = -1,
					doy = -1,
					literal = false,
					date,
					// Check whether a format character is doubled
					lookAhead = function(match) {
						var matches = (iFormat + 1 < format.length && format.charAt(iFormat + 1) === match);
						if (matches) {
							iFormat++;
						}
						return matches;
					},
					// Extract a number from the string value
					getNumber = function(match) {
						var isDoubled = lookAhead(match),
							size = (match === "@" ? 14 : (match === "!" ? 20 :
							(match === "y" && isDoubled ? 4 : (match === "o" ? 3 : 2)))),
							minSize = (match === "y" ? size : 1),
							digits = new RegExp("^\\d{" + minSize + "," + size + "}"),
							num = value.substring(iValue).match(digits);
						if (!num) {
							throw "Missing number at position " + iValue;
						}
						iValue += num[0].length;
						return parseInt(num[0], 10);
					},
					// Extract a name from the string value and convert to an index
					getName = function(match, shortNames, longNames) {
						var index = -1,
							names = $.map(lookAhead(match) ? longNames : shortNames, function (v, k) {
								return [ [k, v] ];
							}).sort(function (a, b) {
								return -(a[1].length - b[1].length);
							});
	
						$.each(names, function (i, pair) {
							var name = pair[1];
							if (value.substr(iValue, name.length).toLowerCase() === name.toLowerCase()) {
								index = pair[0];
								iValue += name.length;
								return false;
							}
						});
						if (index !== -1) {
							return index + 1;
						} else {
							throw "Unknown name at position " + iValue;
						}
					},
					// Confirm that a literal character matches the string value
					checkLiteral = function() {
						if (value.charAt(iValue) !== format.charAt(iFormat)) {
							throw "Unexpected literal at position " + iValue;
						}
						iValue++;
					};
	
				for (iFormat = 0; iFormat < format.length; iFormat++) {
					if (literal) {
						if (format.charAt(iFormat) === "'" && !lookAhead("'")) {
							literal = false;
						} else {
							checkLiteral();
						}
					} else {
						switch (format.charAt(iFormat)) {
							case "d":
								day = getNumber("d");
								break;
							case "D":
								getName("D", dayNamesShort, dayNames);
								break;
							case "o":
								doy = getNumber("o");
								break;
							case "m":
								month = getNumber("m");
								break;
							case "M":
								month = getName("M", monthNamesShort, monthNames);
								break;
							case "y":
								year = getNumber("y");
								break;
							case "@":
								date = new Date(getNumber("@"));
								year = date.getFullYear();
								month = date.getMonth() + 1;
								day = date.getDate();
								break;
							case "!":
								date = new Date((getNumber("!") - this._ticksTo1970) / 10000);
								year = date.getFullYear();
								month = date.getMonth() + 1;
								day = date.getDate();
								break;
							case "'":
								if (lookAhead("'")){
									checkLiteral();
								} else {
									literal = true;
								}
								break;
							default:
								checkLiteral();
						}
					}
				}
	
				if (iValue < value.length){
					extra = value.substr(iValue);
					if (!/^\s+/.test(extra)) {
						throw "Extra/unparsed characters found in date: " + extra;
					}
				}
	
				if (year === -1) {
					year = new Date().getFullYear();
				} else if (year < 100) {
					year += new Date().getFullYear() - new Date().getFullYear() % 100 +
						(year <= shortYearCutoff ? 0 : -100);
				}
	
				if (doy > -1) {
					month = 1;
					day = doy;
					do {
						dim = this._getDaysInMonth(year, month - 1);
						if (day <= dim) {
							break;
						}
						month++;
						day -= dim;
					} while (true);
				}
	
				date = this._daylightSavingAdjust(new Date(year, month - 1, day));
				if (date.getFullYear() !== year || date.getMonth() + 1 !== month || date.getDate() !== day) {
					throw "Invalid date"; // E.g. 31/02/00
				}
				return date;
			},
	
			/* Standard date formats. */
			ATOM: "yy-mm-dd", // RFC 3339 (ISO 8601)
			COOKIE: "D, dd M yy",
			ISO_8601: "yy-mm-dd",
			RFC_822: "D, d M y",
			RFC_850: "DD, dd-M-y",
			RFC_1036: "D, d M y",
			RFC_1123: "D, d M yy",
			RFC_2822: "D, d M yy",
			RSS: "D, d M y", // RFC 822
			TICKS: "!",
			TIMESTAMP: "@",
			W3C: "yy-mm-dd", // ISO 8601
	
			_ticksTo1970: (((1970 - 1) * 365 + Math.floor(1970 / 4) - Math.floor(1970 / 100) +
				Math.floor(1970 / 400)) * 24 * 60 * 60 * 10000000),
	
			/* Format a date object into a string value.
			 * The format can be combinations of the following:
			 * d  - day of month (no leading zero)
			 * dd - day of month (two digit)
			 * o  - day of year (no leading zeros)
			 * oo - day of year (three digit)
			 * D  - day name short
			 * DD - day name long
			 * m  - month of year (no leading zero)
			 * mm - month of year (two digit)
			 * M  - month name short
			 * MM - month name long
			 * y  - year (two digit)
			 * yy - year (four digit)
			 * @ - Unix timestamp (ms since 01/01/1970)
			 * ! - Windows ticks (100ns since 01/01/0001)
			 * "..." - literal text
			 * '' - single quote
			 *
			 * @param  format string - the desired format of the date
			 * @param  date Date - the date value to format
			 * @param  settings Object - attributes include:
			 *					dayNamesShort	string[7] - abbreviated names of the days from Sunday (optional)
			 *					dayNames		string[7] - names of the days from Sunday (optional)
			 *					monthNamesShort string[12] - abbreviated names of the months (optional)
			 *					monthNames		string[12] - names of the months (optional)
			 * @return  string - the date in the above format
			 */
			formatDate: function (format, date, settings) {
				if (!date) {
					return "";
				}
	
				var iFormat,
					dayNamesShort = (settings ? settings.dayNamesShort : null) || this._defaults.dayNamesShort,
					dayNames = (settings ? settings.dayNames : null) || this._defaults.dayNames,
					monthNamesShort = (settings ? settings.monthNamesShort : null) || this._defaults.monthNamesShort,
					monthNames = (settings ? settings.monthNames : null) || this._defaults.monthNames,
					// Check whether a format character is doubled
					lookAhead = function(match) {
						var matches = (iFormat + 1 < format.length && format.charAt(iFormat + 1) === match);
						if (matches) {
							iFormat++;
						}
						return matches;
					},
					// Format a number, with leading zero if necessary
					formatNumber = function(match, value, len) {
						var num = "" + value;
						if (lookAhead(match)) {
							while (num.length < len) {
								num = "0" + num;
							}
						}
						return num;
					},
					// Format a name, short or long as requested
					formatName = function(match, value, shortNames, longNames) {
						return (lookAhead(match) ? longNames[value] : shortNames[value]);
					},
					output = "",
					literal = false;
	
				if (date) {
					for (iFormat = 0; iFormat < format.length; iFormat++) {
						if (literal) {
							if (format.charAt(iFormat) === "'" && !lookAhead("'")) {
								literal = false;
							} else {
								output += format.charAt(iFormat);
							}
						} else {
							switch (format.charAt(iFormat)) {
								case "d":
									output += formatNumber("d", date.getDate(), 2);
									break;
								case "D":
									output += formatName("D", date.getDay(), dayNamesShort, dayNames);
									break;
								case "o":
									output += formatNumber("o",
										Math.round((new Date(date.getFullYear(), date.getMonth(), date.getDate()).getTime() - new Date(date.getFullYear(), 0, 0).getTime()) / 86400000), 3);
									break;
								case "m":
									output += formatNumber("m", date.getMonth() + 1, 2);
									break;
								case "M":
									output += formatName("M", date.getMonth(), monthNamesShort, monthNames);
									break;
								case "y":
									output += (lookAhead("y") ? date.getFullYear() :
										(date.getYear() % 100 < 10 ? "0" : "") + date.getYear() % 100);
									break;
								case "@":
									output += date.getTime();
									break;
								case "!":
									output += date.getTime() * 10000 + this._ticksTo1970;
									break;
								case "'":
									if (lookAhead("'")) {
										output += "'";
									} else {
										literal = true;
									}
									break;
								default:
									output += format.charAt(iFormat);
							}
						}
					}
				}
				return output;
			},
	
			/* Extract all possible characters from the date format. */
			_possibleChars: function (format) {
				var iFormat,
					chars = "",
					literal = false,
					// Check whether a format character is doubled
					lookAhead = function(match) {
						var matches = (iFormat + 1 < format.length && format.charAt(iFormat + 1) === match);
						if (matches) {
							iFormat++;
						}
						return matches;
					};
	
				for (iFormat = 0; iFormat < format.length; iFormat++) {
					if (literal) {
						if (format.charAt(iFormat) === "'" && !lookAhead("'")) {
							literal = false;
						} else {
							chars += format.charAt(iFormat);
						}
					} else {
						switch (format.charAt(iFormat)) {
							case "d": case "m": case "y": case "@":
								chars += "0123456789";
								break;
							case "D": case "M":
								return null; // Accept anything
							case "'":
								if (lookAhead("'")) {
									chars += "'";
								} else {
									literal = true;
								}
								break;
							default:
								chars += format.charAt(iFormat);
						}
					}
				}
				return chars;
			},
	
			/* Get a setting value, defaulting if necessary. */
			_get: function(inst, name) {
				return inst.settings[name] !== undefined ?
					inst.settings[name] : this._defaults[name];
			},
	
			/* Parse existing date and initialise date picker. */
			_setDateFromField: function(inst, noDefault) {
				if (inst.input.val() === inst.lastVal) {
					return;
				}
	
				var dateFormat = this._get(inst, "dateFormat"),
					dates = inst.lastVal = inst.input ? inst.input.val() : null,
					defaultDate = this._getDefaultDate(inst),
					date = defaultDate,
					settings = this._getFormatConfig(inst);
	
				try {
					date = this.parseDate(dateFormat, dates, settings) || defaultDate;
				} catch (event) {
					dates = (noDefault ? "" : dates);
				}
				inst.selectedDay = date.getDate();
				inst.drawMonth = inst.selectedMonth = date.getMonth();
				inst.drawYear = inst.selectedYear = date.getFullYear();
				inst.currentDay = (dates ? date.getDate() : 0);
				inst.currentMonth = (dates ? date.getMonth() : 0);
				inst.currentYear = (dates ? date.getFullYear() : 0);
				this._adjustInstDate(inst);
			},
	
			/* Retrieve the default date shown on opening. */
			_getDefaultDate: function(inst) {
				return this._restrictMinMax(inst,
					this._determineDate(inst, this._get(inst, "defaultDate"), new Date()));
			},
	
			/* A date may be specified as an exact value or a relative one. */
			_determineDate: function(inst, date, defaultDate) {
				var offsetNumeric = function(offset) {
						var date = new Date();
						date.setDate(date.getDate() + offset);
						return date;
					},
					offsetString = function(offset) {
						try {
							return $.datepicker.parseDate($.datepicker._get(inst, "dateFormat"),
								offset, $.datepicker._getFormatConfig(inst));
						}
						catch (e) {
							// Ignore
						}
	
						var date = (offset.toLowerCase().match(/^c/) ?
							$.datepicker._getDate(inst) : null) || new Date(),
							year = date.getFullYear(),
							month = date.getMonth(),
							day = date.getDate(),
							pattern = /([+\-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,
							matches = pattern.exec(offset);
	
						while (matches) {
							switch (matches[2] || "d") {
								case "d" : case "D" :
									day += parseInt(matches[1],10); break;
								case "w" : case "W" :
									day += parseInt(matches[1],10) * 7; break;
								case "m" : case "M" :
									month += parseInt(matches[1],10);
									day = Math.min(day, $.datepicker._getDaysInMonth(year, month));
									break;
								case "y": case "Y" :
									year += parseInt(matches[1],10);
									day = Math.min(day, $.datepicker._getDaysInMonth(year, month));
									break;
							}
							matches = pattern.exec(offset);
						}
						return new Date(year, month, day);
					},
					newDate = (date == null || date === "" ? defaultDate : (typeof date === "string" ? offsetString(date) :
						(typeof date === "number" ? (isNaN(date) ? defaultDate : offsetNumeric(date)) : new Date(date.getTime()))));
	
				newDate = (newDate && newDate.toString() === "Invalid Date" ? defaultDate : newDate);
				if (newDate) {
					newDate.setHours(0);
					newDate.setMinutes(0);
					newDate.setSeconds(0);
					newDate.setMilliseconds(0);
				}
				return this._daylightSavingAdjust(newDate);
			},
	
			/* Handle switch to/from daylight saving.
			 * Hours may be non-zero on daylight saving cut-over:
			 * > 12 when midnight changeover, but then cannot generate
			 * midnight datetime, so jump to 1AM, otherwise reset.
			 * @param  date  (Date) the date to check
			 * @return  (Date) the corrected date
			 */
			_daylightSavingAdjust: function(date) {
				if (!date) {
					return null;
				}
				date.setHours(date.getHours() > 12 ? date.getHours() + 2 : 0);
				return date;
			},
	
			/* Set the date(s) directly. */
			_setDate: function(inst, date, noChange) {
				var clear = !date,
					origMonth = inst.selectedMonth,
					origYear = inst.selectedYear,
					newDate = this._restrictMinMax(inst, this._determineDate(inst, date, new Date()));
	
				inst.selectedDay = inst.currentDay = newDate.getDate();
				inst.drawMonth = inst.selectedMonth = inst.currentMonth = newDate.getMonth();
				inst.drawYear = inst.selectedYear = inst.currentYear = newDate.getFullYear();
				if ((origMonth !== inst.selectedMonth || origYear !== inst.selectedYear) && !noChange) {
					this._notifyChange(inst);
				}
				this._adjustInstDate(inst);
				if (inst.input) {
					inst.input.val(clear ? "" : this._formatDate(inst));
				}
			},
	
			/* Retrieve the date(s) directly. */
			_getDate: function(inst) {
				var startDate = (!inst.currentYear || (inst.input && inst.input.val() === "") ? null :
					this._daylightSavingAdjust(new Date(
					inst.currentYear, inst.currentMonth, inst.currentDay)));
					return startDate;
			},
	
			/* Attach the onxxx handlers.  These are declared statically so
			 * they work with static code transformers like Caja.
			 */
			_attachHandlers: function(inst) {
				var stepMonths = this._get(inst, "stepMonths"),
					id = "#" + inst.id.replace( /\\\\/g, "\\" );
				inst.dpDiv.find("[data-handler]").map(function () {
					var handler = {
						prev: function () {
							$.datepicker._adjustDate(id, -stepMonths, "M");
						},
						next: function () {
							$.datepicker._adjustDate(id, +stepMonths, "M");
						},
						hide: function () {
							$.datepicker._hideDatepicker();
						},
						today: function () {
							$.datepicker._gotoToday(id);
						},
						selectDay: function () {
							$.datepicker._selectDay(id, +this.getAttribute("data-month"), +this.getAttribute("data-year"), this);
							return false;
						},
						selectMonth: function () {
							$.datepicker._selectMonthYear(id, this, "M");
							return false;
						},
						selectYear: function () {
							$.datepicker._selectMonthYear(id, this, "Y");
							return false;
						}
					};
					$(this).bind(this.getAttribute("data-event"), handler[this.getAttribute("data-handler")]);
				});
			},
	
			/* Generate the HTML for the current state of the date picker. */
			_generateHTML: function(inst) {
				var maxDraw, prevText, prev, nextText, next, currentText, gotoDate,
					controls, buttonPanel, firstDay, showWeek, dayNames, dayNamesMin,
					monthNames, monthNamesShort, beforeShowDay, showOtherMonths,
					selectOtherMonths, defaultDate, html, dow, row, group, col, selectedDate,
					cornerClass, calender, thead, day, daysInMonth, leadDays, curRows, numRows,
					printDate, dRow, tbody, daySettings, otherMonth, unselectable,
					tempDate = new Date(),
					today = this._daylightSavingAdjust(
						new Date(tempDate.getFullYear(), tempDate.getMonth(), tempDate.getDate())), // clear time
					isRTL = this._get(inst, "isRTL"),
					showButtonPanel = this._get(inst, "showButtonPanel"),
					hideIfNoPrevNext = this._get(inst, "hideIfNoPrevNext"),
					navigationAsDateFormat = this._get(inst, "navigationAsDateFormat"),
					numMonths = this._getNumberOfMonths(inst),
					showCurrentAtPos = this._get(inst, "showCurrentAtPos"),
					stepMonths = this._get(inst, "stepMonths"),
					isMultiMonth = (numMonths[0] !== 1 || numMonths[1] !== 1),
					currentDate = this._daylightSavingAdjust((!inst.currentDay ? new Date(9999, 9, 9) :
						new Date(inst.currentYear, inst.currentMonth, inst.currentDay))),
					minDate = this._getMinMaxDate(inst, "min"),
					maxDate = this._getMinMaxDate(inst, "max"),
					drawMonth = inst.drawMonth - showCurrentAtPos,
					drawYear = inst.drawYear;
	
				if (drawMonth < 0) {
					drawMonth += 12;
					drawYear--;
				}
				if (maxDate) {
					maxDraw = this._daylightSavingAdjust(new Date(maxDate.getFullYear(),
						maxDate.getMonth() - (numMonths[0] * numMonths[1]) + 1, maxDate.getDate()));
					maxDraw = (minDate && maxDraw < minDate ? minDate : maxDraw);
					while (this._daylightSavingAdjust(new Date(drawYear, drawMonth, 1)) > maxDraw) {
						drawMonth--;
						if (drawMonth < 0) {
							drawMonth = 11;
							drawYear--;
						}
					}
				}
				inst.drawMonth = drawMonth;
				inst.drawYear = drawYear;
	
				prevText = this._get(inst, "prevText");
				prevText = (!navigationAsDateFormat ? prevText : this.formatDate(prevText,
					this._daylightSavingAdjust(new Date(drawYear, drawMonth - stepMonths, 1)),
					this._getFormatConfig(inst)));
	
				prev = (this._canAdjustMonth(inst, -1, drawYear, drawMonth) ?
					"<a class='ui-datepicker-prev ui-corner-all' data-handler='prev' data-event='click'" +
					" title='" + prevText + "'><span class='ui-icon ui-icon-circle-triangle-" + ( isRTL ? "e" : "w") + "'>" + prevText + "</span></a>" :
					(hideIfNoPrevNext ? "" : "<a class='ui-datepicker-prev ui-corner-all ui-state-disabled' title='"+ prevText +"'><span class='ui-icon ui-icon-circle-triangle-" + ( isRTL ? "e" : "w") + "'>" + prevText + "</span></a>"));
	
				nextText = this._get(inst, "nextText");
				nextText = (!navigationAsDateFormat ? nextText : this.formatDate(nextText,
					this._daylightSavingAdjust(new Date(drawYear, drawMonth + stepMonths, 1)),
					this._getFormatConfig(inst)));
	
				next = (this._canAdjustMonth(inst, +1, drawYear, drawMonth) ?
					"<a class='ui-datepicker-next ui-corner-all' data-handler='next' data-event='click'" +
					" title='" + nextText + "'><span class='ui-icon ui-icon-circle-triangle-" + ( isRTL ? "w" : "e") + "'>" + nextText + "</span></a>" :
					(hideIfNoPrevNext ? "" : "<a class='ui-datepicker-next ui-corner-all ui-state-disabled' title='"+ nextText + "'><span class='ui-icon ui-icon-circle-triangle-" + ( isRTL ? "w" : "e") + "'>" + nextText + "</span></a>"));
	
				currentText = this._get(inst, "currentText");
				gotoDate = (this._get(inst, "gotoCurrent") && inst.currentDay ? currentDate : today);
				currentText = (!navigationAsDateFormat ? currentText :
					this.formatDate(currentText, gotoDate, this._getFormatConfig(inst)));
	
				controls = (!inst.inline ? "<button type='button' class='ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all' data-handler='hide' data-event='click'>" +
					this._get(inst, "closeText") + "</button>" : "");
	
				buttonPanel = (showButtonPanel) ? "<div class='ui-datepicker-buttonpane ui-widget-content'>" + (isRTL ? controls : "") +
					(this._isInRange(inst, gotoDate) ? "<button type='button' class='ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all' data-handler='today' data-event='click'" +
					">" + currentText + "</button>" : "") + (isRTL ? "" : controls) + "</div>" : "";
	
				firstDay = parseInt(this._get(inst, "firstDay"),10);
				firstDay = (isNaN(firstDay) ? 0 : firstDay);
	
				showWeek = this._get(inst, "showWeek");
				dayNames = this._get(inst, "dayNames");
				dayNamesMin = this._get(inst, "dayNamesMin");
				monthNames = this._get(inst, "monthNames");
				monthNamesShort = this._get(inst, "monthNamesShort");
				beforeShowDay = this._get(inst, "beforeShowDay");
				showOtherMonths = this._get(inst, "showOtherMonths");
				selectOtherMonths = this._get(inst, "selectOtherMonths");
				defaultDate = this._getDefaultDate(inst);
				html = "";
				dow;
				for (row = 0; row < numMonths[0]; row++) {
					group = "";
					this.maxRows = 4;
					for (col = 0; col < numMonths[1]; col++) {
						selectedDate = this._daylightSavingAdjust(new Date(drawYear, drawMonth, inst.selectedDay));
						cornerClass = " ui-corner-all";
						calender = "";
						if (isMultiMonth) {
							calender += "<div class='ui-datepicker-group";
							if (numMonths[1] > 1) {
								switch (col) {
									case 0: calender += " ui-datepicker-group-first";
										cornerClass = " ui-corner-" + (isRTL ? "right" : "left"); break;
									case numMonths[1]-1: calender += " ui-datepicker-group-last";
										cornerClass = " ui-corner-" + (isRTL ? "left" : "right"); break;
									default: calender += " ui-datepicker-group-middle"; cornerClass = ""; break;
								}
							}
							calender += "'>";
						}
						calender += "<div class='ui-datepicker-header ui-widget-header ui-helper-clearfix" + cornerClass + "'>" +
							(/all|left/.test(cornerClass) && row === 0 ? (isRTL ? next : prev) : "") +
							(/all|right/.test(cornerClass) && row === 0 ? (isRTL ? prev : next) : "") +
							this._generateMonthYearHeader(inst, drawMonth, drawYear, minDate, maxDate,
							row > 0 || col > 0, monthNames, monthNamesShort) + // draw month headers
							"</div><table class='ui-datepicker-calendar'><thead>" +
							"<tr>";
						thead = (showWeek ? "<th class='ui-datepicker-week-col'>" + this._get(inst, "weekHeader") + "</th>" : "");
						for (dow = 0; dow < 7; dow++) { // days of the week
							day = (dow + firstDay) % 7;
							thead += "<th scope='col'" + ((dow + firstDay + 6) % 7 >= 5 ? " class='ui-datepicker-week-end'" : "") + ">" +
								"<span title='" + dayNames[day] + "'>" + dayNamesMin[day] + "</span></th>";
						}
						calender += thead + "</tr></thead><tbody>";
						daysInMonth = this._getDaysInMonth(drawYear, drawMonth);
						if (drawYear === inst.selectedYear && drawMonth === inst.selectedMonth) {
							inst.selectedDay = Math.min(inst.selectedDay, daysInMonth);
						}
						leadDays = (this._getFirstDayOfMonth(drawYear, drawMonth) - firstDay + 7) % 7;
						curRows = Math.ceil((leadDays + daysInMonth) / 7); // calculate the number of rows to generate
						numRows = (isMultiMonth ? this.maxRows > curRows ? this.maxRows : curRows : curRows); //If multiple months, use the higher number of rows (see #7043)
						this.maxRows = numRows;
						printDate = this._daylightSavingAdjust(new Date(drawYear, drawMonth, 1 - leadDays));
						for (dRow = 0; dRow < numRows; dRow++) { // create date picker rows
							calender += "<tr>";
							tbody = (!showWeek ? "" : "<td class='ui-datepicker-week-col'>" +
								this._get(inst, "calculateWeek")(printDate) + "</td>");
							for (dow = 0; dow < 7; dow++) { // create date picker days
								daySettings = (beforeShowDay ?
									beforeShowDay.apply((inst.input ? inst.input[0] : null), [printDate]) : [true, ""]);
								otherMonth = (printDate.getMonth() !== drawMonth);
								unselectable = (otherMonth && !selectOtherMonths) || !daySettings[0] ||
									(minDate && printDate < minDate) || (maxDate && printDate > maxDate);
								tbody += "<td class='" +
									((dow + firstDay + 6) % 7 >= 5 ? " ui-datepicker-week-end" : "") + // highlight weekends
									(otherMonth ? " ui-datepicker-other-month" : "") + // highlight days from other months
									((printDate.getTime() === selectedDate.getTime() && drawMonth === inst.selectedMonth && inst._keyEvent) || // user pressed key
									(defaultDate.getTime() === printDate.getTime() && defaultDate.getTime() === selectedDate.getTime()) ?
									// or defaultDate is current printedDate and defaultDate is selectedDate
									" " + this._dayOverClass : "") + // highlight selected day
									(unselectable ? " " + this._unselectableClass + " ui-state-disabled": "") +  // highlight unselectable days
									(otherMonth && !showOtherMonths ? "" : " " + daySettings[1] + // highlight custom dates
									(printDate.getTime() === currentDate.getTime() ? " " + this._currentClass : "") + // highlight selected day
									(printDate.getTime() === today.getTime() ? " ui-datepicker-today" : "")) + "'" + // highlight today (if different)
									((!otherMonth || showOtherMonths) && daySettings[2] ? " title='" + daySettings[2].replace(/'/g, "&#39;") + "'" : "") + // cell title
									(unselectable ? "" : " data-handler='selectDay' data-event='click' data-month='" + printDate.getMonth() + "' data-year='" + printDate.getFullYear() + "'") + ">" + // actions
									(otherMonth && !showOtherMonths ? "&#xa0;" : // display for other months
									(unselectable ? "<span class='ui-state-default'>" + printDate.getDate() + "</span>" : "<a class='ui-state-default" +
									(printDate.getTime() === today.getTime() ? " ui-state-highlight" : "") +
									(printDate.getTime() === currentDate.getTime() ? " ui-state-active" : "") + // highlight selected day
									(otherMonth ? " ui-priority-secondary" : "") + // distinguish dates from other months
									"' href='#'>" + printDate.getDate() + "</a>")) + "</td>"; // display selectable date
								printDate.setDate(printDate.getDate() + 1);
								printDate = this._daylightSavingAdjust(printDate);
							}
							calender += tbody + "</tr>";
						}
						drawMonth++;
						if (drawMonth > 11) {
							drawMonth = 0;
							drawYear++;
						}
						calender += "</tbody></table>" + (isMultiMonth ? "</div>" +
									((numMonths[0] > 0 && col === numMonths[1]-1) ? "<div class='ui-datepicker-row-break'></div>" : "") : "");
						group += calender;
					}
					html += group;
				}
				html += buttonPanel;
				inst._keyEvent = false;
				return html;
			},
	
			/* Generate the month and year header. */
			_generateMonthYearHeader: function(inst, drawMonth, drawYear, minDate, maxDate,
					secondary, monthNames, monthNamesShort) {
	
				var inMinYear, inMaxYear, month, years, thisYear, determineYear, year, endYear,
					changeMonth = this._get(inst, "changeMonth"),
					changeYear = this._get(inst, "changeYear"),
					showMonthAfterYear = this._get(inst, "showMonthAfterYear"),
					html = "<div class='ui-datepicker-title'>",
					monthHtml = "";
	
				// month selection
				if (secondary || !changeMonth) {
					monthHtml += "<span class='ui-datepicker-month'>" + monthNames[drawMonth] + "</span>";
				} else {
					inMinYear = (minDate && minDate.getFullYear() === drawYear);
					inMaxYear = (maxDate && maxDate.getFullYear() === drawYear);
					monthHtml += "<select class='ui-datepicker-month' data-handler='selectMonth' data-event='change'>";
					for ( month = 0; month < 12; month++) {
						if ((!inMinYear || month >= minDate.getMonth()) && (!inMaxYear || month <= maxDate.getMonth())) {
							monthHtml += "<option value='" + month + "'" +
								(month === drawMonth ? " selected='selected'" : "") +
								">" + monthNamesShort[month] + "</option>";
						}
					}
					monthHtml += "</select>";
				}
	
				if (!showMonthAfterYear) {
					html += monthHtml + (secondary || !(changeMonth && changeYear) ? "&#xa0;" : "");
				}
	
				// year selection
				if ( !inst.yearshtml ) {
					inst.yearshtml = "";
					if (secondary || !changeYear) {
						html += "<span class='ui-datepicker-year'>" + drawYear + "</span>";
					} else {
						// determine range of years to display
						years = this._get(inst, "yearRange").split(":");
						thisYear = new Date().getFullYear();
						determineYear = function(value) {
							var year = (value.match(/c[+\-].*/) ? drawYear + parseInt(value.substring(1), 10) :
								(value.match(/[+\-].*/) ? thisYear + parseInt(value, 10) :
								parseInt(value, 10)));
							return (isNaN(year) ? thisYear : year);
						};
						year = determineYear(years[0]);
						endYear = Math.max(year, determineYear(years[1] || ""));
						year = (minDate ? Math.max(year, minDate.getFullYear()) : year);
						endYear = (maxDate ? Math.min(endYear, maxDate.getFullYear()) : endYear);
						inst.yearshtml += "<select class='ui-datepicker-year' data-handler='selectYear' data-event='change'>";
						for (; year <= endYear; year++) {
							inst.yearshtml += "<option value='" + year + "'" +
								(year === drawYear ? " selected='selected'" : "") +
								">" + year + "</option>";
						}
						inst.yearshtml += "</select>";
	
						html += inst.yearshtml;
						inst.yearshtml = null;
					}
				}
	
				html += this._get(inst, "yearSuffix");
				if (showMonthAfterYear) {
					html += (secondary || !(changeMonth && changeYear) ? "&#xa0;" : "") + monthHtml;
				}
				html += "</div>"; // Close datepicker_header
				return html;
			},
	
			/* Adjust one of the date sub-fields. */
			_adjustInstDate: function(inst, offset, period) {
				var year = inst.drawYear + (period === "Y" ? offset : 0),
					month = inst.drawMonth + (period === "M" ? offset : 0),
					day = Math.min(inst.selectedDay, this._getDaysInMonth(year, month)) + (period === "D" ? offset : 0),
					date = this._restrictMinMax(inst, this._daylightSavingAdjust(new Date(year, month, day)));
	
				inst.selectedDay = date.getDate();
				inst.drawMonth = inst.selectedMonth = date.getMonth();
				inst.drawYear = inst.selectedYear = date.getFullYear();
				if (period === "M" || period === "Y") {
					this._notifyChange(inst);
				}
			},
	
			/* Ensure a date is within any min/max bounds. */
			_restrictMinMax: function(inst, date) {
				var minDate = this._getMinMaxDate(inst, "min"),
					maxDate = this._getMinMaxDate(inst, "max"),
					newDate = (minDate && date < minDate ? minDate : date);
				return (maxDate && newDate > maxDate ? maxDate : newDate);
			},
	
			/* Notify change of month/year. */
			_notifyChange: function(inst) {
				var onChange = this._get(inst, "onChangeMonthYear");
				if (onChange) {
					onChange.apply((inst.input ? inst.input[0] : null),
						[inst.selectedYear, inst.selectedMonth + 1, inst]);
				}
			},
	
			/* Determine the number of months to show. */
			_getNumberOfMonths: function(inst) {
				var numMonths = this._get(inst, "numberOfMonths");
				return (numMonths == null ? [1, 1] : (typeof numMonths === "number" ? [1, numMonths] : numMonths));
			},
	
			/* Determine the current maximum date - ensure no time components are set. */
			_getMinMaxDate: function(inst, minMax) {
				return this._determineDate(inst, this._get(inst, minMax + "Date"), null);
			},
	
			/* Find the number of days in a given month. */
			_getDaysInMonth: function(year, month) {
				return 32 - this._daylightSavingAdjust(new Date(year, month, 32)).getDate();
			},
	
			/* Find the day of the week of the first of a month. */
			_getFirstDayOfMonth: function(year, month) {
				return new Date(year, month, 1).getDay();
			},
	
			/* Determines if we should allow a "next/prev" month display change. */
			_canAdjustMonth: function(inst, offset, curYear, curMonth) {
				var numMonths = this._getNumberOfMonths(inst),
					date = this._daylightSavingAdjust(new Date(curYear,
					curMonth + (offset < 0 ? offset : numMonths[0] * numMonths[1]), 1));
	
				if (offset < 0) {
					date.setDate(this._getDaysInMonth(date.getFullYear(), date.getMonth()));
				}
				return this._isInRange(inst, date);
			},
	
			/* Is the given date in the accepted range? */
			_isInRange: function(inst, date) {
				var yearSplit, currentYear,
					minDate = this._getMinMaxDate(inst, "min"),
					maxDate = this._getMinMaxDate(inst, "max"),
					minYear = null,
					maxYear = null,
					years = this._get(inst, "yearRange");
					if (years){
						yearSplit = years.split(":");
						currentYear = new Date().getFullYear();
						minYear = parseInt(yearSplit[0], 10);
						maxYear = parseInt(yearSplit[1], 10);
						if ( yearSplit[0].match(/[+\-].*/) ) {
							minYear += currentYear;
						}
						if ( yearSplit[1].match(/[+\-].*/) ) {
							maxYear += currentYear;
						}
					}
	
				return ((!minDate || date.getTime() >= minDate.getTime()) &&
					(!maxDate || date.getTime() <= maxDate.getTime()) &&
					(!minYear || date.getFullYear() >= minYear) &&
					(!maxYear || date.getFullYear() <= maxYear));
			},
	
			/* Provide the configuration settings for formatting/parsing. */
			_getFormatConfig: function(inst) {
				var shortYearCutoff = this._get(inst, "shortYearCutoff");
				shortYearCutoff = (typeof shortYearCutoff !== "string" ? shortYearCutoff :
					new Date().getFullYear() % 100 + parseInt(shortYearCutoff, 10));
				return {shortYearCutoff: shortYearCutoff,
					dayNamesShort: this._get(inst, "dayNamesShort"), dayNames: this._get(inst, "dayNames"),
					monthNamesShort: this._get(inst, "monthNamesShort"), monthNames: this._get(inst, "monthNames")};
			},
	
			/* Format the given date for display. */
			_formatDate: function(inst, day, month, year) {
				if (!day) {
					inst.currentDay = inst.selectedDay;
					inst.currentMonth = inst.selectedMonth;
					inst.currentYear = inst.selectedYear;
				}
				var date = (day ? (typeof day === "object" ? day :
					this._daylightSavingAdjust(new Date(year, month, day))) :
					this._daylightSavingAdjust(new Date(inst.currentYear, inst.currentMonth, inst.currentDay)));
				return this.formatDate(this._get(inst, "dateFormat"), date, this._getFormatConfig(inst));
			}
		});
	
		/*
		 * Bind hover events for datepicker elements.
		 * Done via delegate so the binding only occurs once in the lifetime of the parent div.
		 * Global datepicker_instActive, set by _updateDatepicker allows the handlers to find their way back to the active picker.
		 */
		function datepicker_bindHover(dpDiv) {
			var selector = "button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";
			return dpDiv.delegate(selector, "mouseout", function() {
					$(this).removeClass("ui-state-hover");
					if (this.className.indexOf("ui-datepicker-prev") !== -1) {
						$(this).removeClass("ui-datepicker-prev-hover");
					}
					if (this.className.indexOf("ui-datepicker-next") !== -1) {
						$(this).removeClass("ui-datepicker-next-hover");
					}
				})
				.delegate( selector, "mouseover", datepicker_handleMouseover );
		}
	
		function datepicker_handleMouseover() {
			if (!$.datepicker._isDisabledDatepicker( datepicker_instActive.inline? datepicker_instActive.dpDiv.parent()[0] : datepicker_instActive.input[0])) {
				$(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover");
				$(this).addClass("ui-state-hover");
				if (this.className.indexOf("ui-datepicker-prev") !== -1) {
					$(this).addClass("ui-datepicker-prev-hover");
				}
				if (this.className.indexOf("ui-datepicker-next") !== -1) {
					$(this).addClass("ui-datepicker-next-hover");
				}
			}
		}
	
		/* jQuery extend now ignores nulls! */
		function datepicker_extendRemove(target, props) {
			$.extend(target, props);
			for (var name in props) {
				if (props[name] == null) {
					target[name] = props[name];
				}
			}
			return target;
		}
	
		/* Invoke the datepicker functionality.
		   @param  options  string - a command, optionally followed by additional parameters or
							Object - settings for attaching new datepicker functionality
		   @return  jQuery object */
		$.fn.datepicker = function(options){
	
			/* Verify an empty collection wasn't passed - Fixes #6976 */
			if ( !this.length ) {
				return this;
			}
	
			/* Initialise the date picker. */
			if (!$.datepicker.initialized) {
				$(document).mousedown($.datepicker._checkExternalClick);
				$.datepicker.initialized = true;
			}
	
			/* Append datepicker main container to body if not exist. */
			if ($("#"+$.datepicker._mainDivId).length === 0) {
				$("body").append($.datepicker.dpDiv);
			}
	
			var otherArgs = Array.prototype.slice.call(arguments, 1);
			if (typeof options === "string" && (options === "isDisabled" || options === "getDate" || options === "widget")) {
				return $.datepicker["_" + options + "Datepicker"].
					apply($.datepicker, [this[0]].concat(otherArgs));
			}
			if (options === "option" && arguments.length === 2 && typeof arguments[1] === "string") {
				return $.datepicker["_" + options + "Datepicker"].
					apply($.datepicker, [this[0]].concat(otherArgs));
			}
			return this.each(function() {
				typeof options === "string" ?
					$.datepicker["_" + options + "Datepicker"].
						apply($.datepicker, [this].concat(otherArgs)) :
					$.datepicker._attachDatepicker(this, options);
			});
		};
	
		$.datepicker = new Datepicker(); // singleton instance
		$.datepicker.initialized = false;
		$.datepicker.uuid = new Date().getTime();
		$.datepicker.version = "1.11.4";
	
		var datepicker = $.datepicker;
	
	
			/* Afrikaans initialisation for the jQuery UI date picker plugin. */
			/* Written by Renier Pretorius. */
	
	
			datepicker.regional['af'] = {
				closeText: 'Selekteer',
				prevText: 'Vorige',
				nextText: 'Volgende',
				currentText: 'Vandag',
				monthNames: ['Januarie','Februarie','Maart','April','Mei','Junie',
					'Julie','Augustus','September','Oktober','November','Desember'],
				monthNamesShort: ['Jan', 'Feb', 'Mrt', 'Apr', 'Mei', 'Jun',
					'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Des'],
				dayNames: ['Sondag', 'Maandag', 'Dinsdag', 'Woensdag', 'Donderdag', 'Vrydag', 'Saterdag'],
				dayNamesShort: ['Son', 'Maa', 'Din', 'Woe', 'Don', 'Vry', 'Sat'],
				dayNamesMin: ['So','Ma','Di','Wo','Do','Vr','Sa'],
				weekHeader: 'Wk',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['af']);
	
			var i18nDatepickerAf = datepicker.regional['af'];
	
	
			/* Algerian Arabic Translation for jQuery UI date picker plugin. (can be used for Tunisia)*/
			/* Mohamed Cherif BOUCHELAGHEM -- cherifbouchelaghem@yahoo.fr */
	
	
	
			datepicker.regional['ar-DZ'] = {
				closeText: 'إغلاق',
				prevText: '&#x3C;السابق',
				nextText: 'التالي&#x3E;',
				currentText: 'اليوم',
				monthNames: ['جانفي', 'فيفري', 'مارس', 'أفريل', 'ماي', 'جوان',
					'جويلية', 'أوت', 'سبتمبر','أكتوبر', 'نوفمبر', 'ديسمبر'],
				monthNamesShort: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'],
				dayNames: ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت'],
				dayNamesShort: ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت'],
				dayNamesMin: ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت'],
				weekHeader: 'أسبوع',
				dateFormat: 'y-mm-dd',
				firstDay: 6,
				isRTL: true,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['ar-DZ']);
	
			var i18nDatepickerArDz = datepicker.regional['ar-DZ'];
	
	
			/* Arabic Translation for jQuery UI date picker plugin. */
			/* Khaled Alhourani -- me@khaledalhourani.com */
			/* NOTE: monthNames are the original months names and they are the Arabic names, not the new months name فبراير - يناير and there isn't any Arabic roots for these months */
	
	
			datepicker.regional['ar'] = {
				closeText: 'إغلاق',
				prevText: '&#x3C;السابق',
				nextText: 'التالي&#x3E;',
				currentText: 'اليوم',
				monthNames: ['كانون الثاني', 'شباط', 'آذار', 'نيسان', 'مايو', 'حزيران',
					'تموز', 'آب', 'أيلول',	'تشرين الأول', 'تشرين الثاني', 'كانون الأول'],
				monthNamesShort: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'],
				dayNames: ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت'],
				dayNamesShort: ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت'],
				dayNamesMin: ['ح', 'ن', 'ث', 'ر', 'خ', 'ج', 'س'],
				weekHeader: 'أسبوع',
				dateFormat: 'y-mm-dd',
				firstDay: 6,
				isRTL: true,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['ar']);
	
			var i18nDatepickerAr = datepicker.regional['ar'];
	
	
			/* Azerbaijani (UTF-8) initialisation for the jQuery UI date picker plugin. */
			/* Written by Jamil Najafov (necefov33@gmail.com). */
	
	
			datepicker.regional['az'] = {
				closeText: 'Bağla',
				prevText: '&#x3C;Geri',
				nextText: 'İrəli&#x3E;',
				currentText: 'Bugün',
				monthNames: ['Yanvar','Fevral','Mart','Aprel','May','İyun',
					'İyul','Avqust','Sentyabr','Oktyabr','Noyabr','Dekabr'],
				monthNamesShort: ['Yan','Fev','Mar','Apr','May','İyun',
					'İyul','Avq','Sen','Okt','Noy','Dek'],
				dayNames: ['Bazar','Bazar ertəsi','Çərşənbə axşamı','Çərşənbə','Cümə axşamı','Cümə','Şənbə'],
				dayNamesShort: ['B','Be','Ça','Ç','Ca','C','Ş'],
				dayNamesMin: ['B','B','Ç','С','Ç','C','Ş'],
				weekHeader: 'Hf',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['az']);
	
			var i18nDatepickerAz = datepicker.regional['az'];
	
	
			/* Belarusian initialisation for the jQuery UI date picker plugin. */
			/* Written by Pavel Selitskas <p.selitskas@gmail.com> */
	
	
			datepicker.regional['be'] = {
				closeText: 'Зачыніць',
				prevText: '&larr;Папяр.',
				nextText: 'Наст.&rarr;',
				currentText: 'Сёньня',
				monthNames: ['Студзень','Люты','Сакавік','Красавік','Травень','Чэрвень',
					'Ліпень','Жнівень','Верасень','Кастрычнік','Лістапад','Сьнежань'],
				monthNamesShort: ['Сту','Лют','Сак','Кра','Тра','Чэр',
					'Ліп','Жні','Вер','Кас','Ліс','Сьн'],
				dayNames: ['нядзеля','панядзелак','аўторак','серада','чацьвер','пятніца','субота'],
				dayNamesShort: ['ндз','пнд','аўт','срд','чцв','птн','сбт'],
				dayNamesMin: ['Нд','Пн','Аў','Ср','Чц','Пт','Сб'],
				weekHeader: 'Тд',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['be']);
	
			var i18nDatepickerBe = datepicker.regional['be'];
	
	
			/* Bulgarian initialisation for the jQuery UI date picker plugin. */
			/* Written by Stoyan Kyosev (http://svest.org). */
	
	
			datepicker.regional['bg'] = {
				closeText: 'затвори',
				prevText: '&#x3C;назад',
				nextText: 'напред&#x3E;',
				nextBigText: '&#x3E;&#x3E;',
				currentText: 'днес',
				monthNames: ['Януари','Февруари','Март','Април','Май','Юни',
					'Юли','Август','Септември','Октомври','Ноември','Декември'],
				monthNamesShort: ['Яну','Фев','Мар','Апр','Май','Юни',
					'Юли','Авг','Сеп','Окт','Нов','Дек'],
				dayNames: ['Неделя','Понеделник','Вторник','Сряда','Четвъртък','Петък','Събота'],
				dayNamesShort: ['Нед','Пон','Вто','Сря','Чет','Пет','Съб'],
				dayNamesMin: ['Не','По','Вт','Ср','Че','Пе','Съ'],
				weekHeader: 'Wk',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['bg']);
	
			var i18nDatepickerBg = datepicker.regional['bg'];
	
	
			/* Bosnian i18n for the jQuery UI date picker plugin. */
			/* Written by Kenan Konjo. */
	
	
			datepicker.regional['bs'] = {
				closeText: 'Zatvori',
				prevText: '&#x3C;',
				nextText: '&#x3E;',
				currentText: 'Danas',
				monthNames: ['Januar','Februar','Mart','April','Maj','Juni',
					'Juli','August','Septembar','Oktobar','Novembar','Decembar'],
				monthNamesShort: ['Jan','Feb','Mar','Apr','Maj','Jun',
					'Jul','Aug','Sep','Okt','Nov','Dec'],
				dayNames: ['Nedelja','Ponedeljak','Utorak','Srijeda','Četvrtak','Petak','Subota'],
				dayNamesShort: ['Ned','Pon','Uto','Sri','Čet','Pet','Sub'],
				dayNamesMin: ['Ne','Po','Ut','Sr','Če','Pe','Su'],
				weekHeader: 'Wk',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['bs']);
	
			var i18nDatepickerBs = datepicker.regional['bs'];
	
	
			/* Inicialització en català per a l'extensió 'UI date picker' per jQuery. */
			/* Writers: (joan.leon@gmail.com). */
	
	
			datepicker.regional['ca'] = {
				closeText: 'Tanca',
				prevText: 'Anterior',
				nextText: 'Següent',
				currentText: 'Avui',
				monthNames: ['gener','febrer','març','abril','maig','juny',
					'juliol','agost','setembre','octubre','novembre','desembre'],
				monthNamesShort: ['gen','feb','març','abr','maig','juny',
					'jul','ag','set','oct','nov','des'],
				dayNames: ['diumenge','dilluns','dimarts','dimecres','dijous','divendres','dissabte'],
				dayNamesShort: ['dg','dl','dt','dc','dj','dv','ds'],
				dayNamesMin: ['dg','dl','dt','dc','dj','dv','ds'],
				weekHeader: 'Set',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['ca']);
	
			var i18nDatepickerCa = datepicker.regional['ca'];
	
	
			/* Czech initialisation for the jQuery UI date picker plugin. */
			/* Written by Tomas Muller (tomas@tomas-muller.net). */
	
	
			datepicker.regional['cs'] = {
				closeText: 'Zavřít',
				prevText: '&#x3C;Dříve',
				nextText: 'Později&#x3E;',
				currentText: 'Nyní',
				monthNames: ['leden','únor','březen','duben','květen','červen',
					'červenec','srpen','září','říjen','listopad','prosinec'],
				monthNamesShort: ['led','úno','bře','dub','kvě','čer',
					'čvc','srp','zář','říj','lis','pro'],
				dayNames: ['neděle', 'pondělí', 'úterý', 'středa', 'čtvrtek', 'pátek', 'sobota'],
				dayNamesShort: ['ne', 'po', 'út', 'st', 'čt', 'pá', 'so'],
				dayNamesMin: ['ne','po','út','st','čt','pá','so'],
				weekHeader: 'Týd',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['cs']);
	
			var i18nDatepickerCs = datepicker.regional['cs'];
	
	
			/* Welsh/UK initialisation for the jQuery UI date picker plugin. */
			/* Written by William Griffiths. */
	
	
			datepicker.regional['cy-GB'] = {
				closeText: 'Done',
				prevText: 'Prev',
				nextText: 'Next',
				currentText: 'Today',
				monthNames: ['Ionawr','Chwefror','Mawrth','Ebrill','Mai','Mehefin',
					'Gorffennaf','Awst','Medi','Hydref','Tachwedd','Rhagfyr'],
				monthNamesShort: ['Ion', 'Chw', 'Maw', 'Ebr', 'Mai', 'Meh',
					'Gor', 'Aws', 'Med', 'Hyd', 'Tac', 'Rha'],
				dayNames: ['Dydd Sul', 'Dydd Llun', 'Dydd Mawrth', 'Dydd Mercher', 'Dydd Iau', 'Dydd Gwener', 'Dydd Sadwrn'],
				dayNamesShort: ['Sul', 'Llu', 'Maw', 'Mer', 'Iau', 'Gwe', 'Sad'],
				dayNamesMin: ['Su','Ll','Ma','Me','Ia','Gw','Sa'],
				weekHeader: 'Wy',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['cy-GB']);
	
			var i18nDatepickerCyGb = datepicker.regional['cy-GB'];
	
	
			/* Danish initialisation for the jQuery UI date picker plugin. */
			/* Written by Jan Christensen ( deletestuff@gmail.com). */
	
	
			datepicker.regional['da'] = {
				closeText: 'Luk',
				prevText: '&#x3C;Forrige',
				nextText: 'Næste&#x3E;',
				currentText: 'Idag',
				monthNames: ['Januar','Februar','Marts','April','Maj','Juni',
					'Juli','August','September','Oktober','November','December'],
				monthNamesShort: ['Jan','Feb','Mar','Apr','Maj','Jun',
					'Jul','Aug','Sep','Okt','Nov','Dec'],
				dayNames: ['Søndag','Mandag','Tirsdag','Onsdag','Torsdag','Fredag','Lørdag'],
				dayNamesShort: ['Søn','Man','Tir','Ons','Tor','Fre','Lør'],
				dayNamesMin: ['Sø','Ma','Ti','On','To','Fr','Lø'],
				weekHeader: 'Uge',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['da']);
	
			var i18nDatepickerDa = datepicker.regional['da'];
	
	
			/* German initialisation for the jQuery UI date picker plugin. */
			/* Written by Milian Wolff (mail@milianw.de). */
	
	
			datepicker.regional['de'] = {
				closeText: 'Schließen',
				prevText: '&#x3C;Zurück',
				nextText: 'Vor&#x3E;',
				currentText: 'Heute',
				monthNames: ['Januar','Februar','März','April','Mai','Juni',
					'Juli','August','September','Oktober','November','Dezember'],
				monthNamesShort: ['Jan','Feb','Mär','Apr','Mai','Jun',
					'Jul','Aug','Sep','Okt','Nov','Dez'],
				dayNames: ['Sonntag','Montag','Dienstag','Mittwoch','Donnerstag','Freitag','Samstag'],
				dayNamesShort: ['So','Mo','Di','Mi','Do','Fr','Sa'],
				dayNamesMin: ['So','Mo','Di','Mi','Do','Fr','Sa'],
				weekHeader: 'KW',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['de']);
	
			var i18nDatepickerDe = datepicker.regional['de'];
	
	
			/* Greek (el) initialisation for the jQuery UI date picker plugin. */
			/* Written by Alex Cicovic (http://www.alexcicovic.com) */
	
	
			datepicker.regional['el'] = {
				closeText: 'Κλείσιμο',
				prevText: 'Προηγούμενος',
				nextText: 'Επόμενος',
				currentText: 'Τρέχων Μήνας',
				monthNames: ['Ιανουάριος','Φεβρουάριος','Μάρτιος','Απρίλιος','Μάιος','Ιούνιος',
					'Ιούλιος','Αύγουστος','Σεπτέμβριος','Οκτώβριος','Νοέμβριος','Δεκέμβριος'],
				monthNamesShort: ['Ιαν','Φεβ','Μαρ','Απρ','Μαι','Ιουν',
					'Ιουλ','Αυγ','Σεπ','Οκτ','Νοε','Δεκ'],
				dayNames: ['Κυριακή','Δευτέρα','Τρίτη','Τετάρτη','Πέμπτη','Παρασκευή','Σάββατο'],
				dayNamesShort: ['Κυρ','Δευ','Τρι','Τετ','Πεμ','Παρ','Σαβ'],
				dayNamesMin: ['Κυ','Δε','Τρ','Τε','Πε','Πα','Σα'],
				weekHeader: 'Εβδ',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['el']);
	
			var i18nDatepickerEl = datepicker.regional['el'];
	
	
			/* English/Australia initialisation for the jQuery UI date picker plugin. */
			/* Based on the en-GB initialisation. */
	
	
			datepicker.regional['en-AU'] = {
				closeText: 'Done',
				prevText: 'Prev',
				nextText: 'Next',
				currentText: 'Today',
				monthNames: ['January','February','March','April','May','June',
					'July','August','September','October','November','December'],
				monthNamesShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',
					'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
				dayNames: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],
				dayNamesShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
				dayNamesMin: ['Su','Mo','Tu','We','Th','Fr','Sa'],
				weekHeader: 'Wk',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['en-AU']);
	
			var i18nDatepickerEnAu = datepicker.regional['en-AU'];
	
	
			/* English/UK initialisation for the jQuery UI date picker plugin. */
			/* Written by Stuart. */
	
	
			datepicker.regional['en-GB'] = {
				closeText: 'Done',
				prevText: 'Prev',
				nextText: 'Next',
				currentText: 'Today',
				monthNames: ['January','February','March','April','May','June',
					'July','August','September','October','November','December'],
				monthNamesShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',
					'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
				dayNames: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],
				dayNamesShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
				dayNamesMin: ['Su','Mo','Tu','We','Th','Fr','Sa'],
				weekHeader: 'Wk',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['en-GB']);
	
			var i18nDatepickerEnGb = datepicker.regional['en-GB'];
	
	
			/* English/New Zealand initialisation for the jQuery UI date picker plugin. */
			/* Based on the en-GB initialisation. */
	
	
			datepicker.regional['en-NZ'] = {
				closeText: 'Done',
				prevText: 'Prev',
				nextText: 'Next',
				currentText: 'Today',
				monthNames: ['January','February','March','April','May','June',
					'July','August','September','October','November','December'],
				monthNamesShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',
					'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
				dayNames: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],
				dayNamesShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
				dayNamesMin: ['Su','Mo','Tu','We','Th','Fr','Sa'],
				weekHeader: 'Wk',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['en-NZ']);
	
			var i18nDatepickerEnNz = datepicker.regional['en-NZ'];
	
	
			/* Esperanto initialisation for the jQuery UI date picker plugin. */
			/* Written by Olivier M. (olivierweb@ifrance.com). */
	
	
			datepicker.regional['eo'] = {
				closeText: 'Fermi',
				prevText: '&#x3C;Anta',
				nextText: 'Sekv&#x3E;',
				currentText: 'Nuna',
				monthNames: ['Januaro','Februaro','Marto','Aprilo','Majo','Junio',
					'Julio','Aŭgusto','Septembro','Oktobro','Novembro','Decembro'],
				monthNamesShort: ['Jan','Feb','Mar','Apr','Maj','Jun',
					'Jul','Aŭg','Sep','Okt','Nov','Dec'],
				dayNames: ['Dimanĉo','Lundo','Mardo','Merkredo','Ĵaŭdo','Vendredo','Sabato'],
				dayNamesShort: ['Dim','Lun','Mar','Mer','Ĵaŭ','Ven','Sab'],
				dayNamesMin: ['Di','Lu','Ma','Me','Ĵa','Ve','Sa'],
				weekHeader: 'Sb',
				dateFormat: 'y-mm-dd',
				firstDay: 0,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['eo']);
	
			var i18nDatepickerEo = datepicker.regional['eo'];
	
	
			/* Inicialización en español para la extensión 'UI date picker' para jQuery. */
			/* Traducido por Vester (xvester@gmail.com). */
	
	
			datepicker.regional['es'] = {
				closeText: 'Cerrar',
				prevText: '&#x3C;Ant',
				nextText: 'Sig&#x3E;',
				currentText: 'Hoy',
				monthNames: ['enero','febrero','marzo','abril','mayo','junio',
					'julio','agosto','septiembre','octubre','noviembre','diciembre'],
				monthNamesShort: ['ene','feb','mar','abr','may','jun',
					'jul','ago','sep','oct','nov','dic'],
				dayNames: ['domingo','lunes','martes','miércoles','jueves','viernes','sábado'],
				dayNamesShort: ['dom','lun','mar','mié','jue','vie','sáb'],
				dayNamesMin: ['D','L','M','X','J','V','S'],
				weekHeader: 'Sm',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['es']);
	
			var i18nDatepickerEs = datepicker.regional['es'];
	
	
			/* Estonian initialisation for the jQuery UI date picker plugin. */
			/* Written by Mart Sõmermaa (mrts.pydev at gmail com). */
	
	
			datepicker.regional['et'] = {
				closeText: 'Sulge',
				prevText: 'Eelnev',
				nextText: 'Järgnev',
				currentText: 'Täna',
				monthNames: ['Jaanuar','Veebruar','Märts','Aprill','Mai','Juuni',
					'Juuli','August','September','Oktoober','November','Detsember'],
				monthNamesShort: ['Jaan', 'Veebr', 'Märts', 'Apr', 'Mai', 'Juuni',
					'Juuli', 'Aug', 'Sept', 'Okt', 'Nov', 'Dets'],
				dayNames: ['Pühapäev', 'Esmaspäev', 'Teisipäev', 'Kolmapäev', 'Neljapäev', 'Reede', 'Laupäev'],
				dayNamesShort: ['Pühap', 'Esmasp', 'Teisip', 'Kolmap', 'Neljap', 'Reede', 'Laup'],
				dayNamesMin: ['P','E','T','K','N','R','L'],
				weekHeader: 'näd',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['et']);
	
			var i18nDatepickerEt = datepicker.regional['et'];
	
	
			/* Karrikas-ek itzulia (karrikas@karrikas.com) */
	
	
			datepicker.regional['eu'] = {
				closeText: 'Egina',
				prevText: '&#x3C;Aur',
				nextText: 'Hur&#x3E;',
				currentText: 'Gaur',
				monthNames: ['urtarrila','otsaila','martxoa','apirila','maiatza','ekaina',
					'uztaila','abuztua','iraila','urria','azaroa','abendua'],
				monthNamesShort: ['urt.','ots.','mar.','api.','mai.','eka.',
					'uzt.','abu.','ira.','urr.','aza.','abe.'],
				dayNames: ['igandea','astelehena','asteartea','asteazkena','osteguna','ostirala','larunbata'],
				dayNamesShort: ['ig.','al.','ar.','az.','og.','ol.','lr.'],
				dayNamesMin: ['ig','al','ar','az','og','ol','lr'],
				weekHeader: 'As',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['eu']);
	
			var i18nDatepickerEu = datepicker.regional['eu'];
	
	
			/* Persian (Farsi) Translation for the jQuery UI date picker plugin. */
			/* Javad Mowlanezhad -- jmowla@gmail.com */
			/* Jalali calendar should supported soon! (Its implemented but I have to test it) */
	
	
			datepicker.regional['fa'] = {
				closeText: 'بستن',
				prevText: '&#x3C;قبلی',
				nextText: 'بعدی&#x3E;',
				currentText: 'امروز',
				monthNames: [
					'فروردين',
					'ارديبهشت',
					'خرداد',
					'تير',
					'مرداد',
					'شهريور',
					'مهر',
					'آبان',
					'آذر',
					'دی',
					'بهمن',
					'اسفند'
				],
				monthNamesShort: ['1','2','3','4','5','6','7','8','9','10','11','12'],
				dayNames: [
					'يکشنبه',
					'دوشنبه',
					'سه‌شنبه',
					'چهارشنبه',
					'پنجشنبه',
					'جمعه',
					'شنبه'
				],
				dayNamesShort: [
					'ی',
					'د',
					'س',
					'چ',
					'پ',
					'ج',
					'ش'
				],
				dayNamesMin: [
					'ی',
					'د',
					'س',
					'چ',
					'پ',
					'ج',
					'ش'
				],
				weekHeader: 'هف',
				dateFormat: 'y-mm-dd',
				firstDay: 6,
				isRTL: true,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['fa']);
	
			var i18nDatepickerFa = datepicker.regional['fa'];
	
	
			/* Finnish initialisation for the jQuery UI date picker plugin. */
			/* Written by Harri Kilpiö (harrikilpio@gmail.com). */
	
	
			datepicker.regional['fi'] = {
				closeText: 'Sulje',
				prevText: '&#xAB;Edellinen',
				nextText: 'Seuraava&#xBB;',
				currentText: 'Tänään',
				monthNames: ['Tammikuu','Helmikuu','Maaliskuu','Huhtikuu','Toukokuu','Kesäkuu',
					'Heinäkuu','Elokuu','Syyskuu','Lokakuu','Marraskuu','Joulukuu'],
				monthNamesShort: ['Tammi','Helmi','Maalis','Huhti','Touko','Kesä',
					'Heinä','Elo','Syys','Loka','Marras','Joulu'],
				dayNamesShort: ['Su','Ma','Ti','Ke','To','Pe','La'],
				dayNames: ['Sunnuntai','Maanantai','Tiistai','Keskiviikko','Torstai','Perjantai','Lauantai'],
				dayNamesMin: ['Su','Ma','Ti','Ke','To','Pe','La'],
				weekHeader: 'Vk',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['fi']);
	
			var i18nDatepickerFi = datepicker.regional['fi'];
	
	
			/* Faroese initialisation for the jQuery UI date picker plugin */
			/* Written by Sverri Mohr Olsen, sverrimo@gmail.com */
	
	
			datepicker.regional['fo'] = {
				closeText: 'Lat aftur',
				prevText: '&#x3C;Fyrra',
				nextText: 'Næsta&#x3E;',
				currentText: 'Í dag',
				monthNames: ['Januar','Februar','Mars','Apríl','Mei','Juni',
					'Juli','August','September','Oktober','November','Desember'],
				monthNamesShort: ['Jan','Feb','Mar','Apr','Mei','Jun',
					'Jul','Aug','Sep','Okt','Nov','Des'],
				dayNames: ['Sunnudagur','Mánadagur','Týsdagur','Mikudagur','Hósdagur','Fríggjadagur','Leyardagur'],
				dayNamesShort: ['Sun','Mán','Týs','Mik','Hós','Frí','Ley'],
				dayNamesMin: ['Su','Má','Tý','Mi','Hó','Fr','Le'],
				weekHeader: 'Vk',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['fo']);
	
			var i18nDatepickerFo = datepicker.regional['fo'];
	
	
			/* Canadian-French initialisation for the jQuery UI date picker plugin. */
	
	
			datepicker.regional['fr-CA'] = {
				closeText: 'Fermer',
				prevText: 'Précédent',
				nextText: 'Suivant',
				currentText: 'Aujourd\'hui',
				monthNames: ['janvier', 'février', 'mars', 'avril', 'mai', 'juin',
					'juillet', 'août', 'septembre', 'octobre', 'novembre', 'décembre'],
				monthNamesShort: ['janv.', 'févr.', 'mars', 'avril', 'mai', 'juin',
					'juil.', 'août', 'sept.', 'oct.', 'nov.', 'déc.'],
				dayNames: ['dimanche', 'lundi', 'mardi', 'mercredi', 'jeudi', 'vendredi', 'samedi'],
				dayNamesShort: ['dim.', 'lun.', 'mar.', 'mer.', 'jeu.', 'ven.', 'sam.'],
				dayNamesMin: ['D', 'L', 'M', 'M', 'J', 'V', 'S'],
				weekHeader: 'Sem.',
				dateFormat: 'y-mm-dd',
				firstDay: 0,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''
			};
			datepicker.setDefaults(datepicker.regional['fr-CA']);
	
			var i18nDatepickerFrCa = datepicker.regional['fr-CA'];
	
	
			/* Swiss-French initialisation for the jQuery UI date picker plugin. */
			/* Written Martin Voelkle (martin.voelkle@e-tc.ch). */
	
	
			datepicker.regional['fr-CH'] = {
				closeText: 'Fermer',
				prevText: '&#x3C;Préc',
				nextText: 'Suiv&#x3E;',
				currentText: 'Courant',
				monthNames: ['janvier', 'février', 'mars', 'avril', 'mai', 'juin',
					'juillet', 'août', 'septembre', 'octobre', 'novembre', 'décembre'],
				monthNamesShort: ['janv.', 'févr.', 'mars', 'avril', 'mai', 'juin',
					'juil.', 'août', 'sept.', 'oct.', 'nov.', 'déc.'],
				dayNames: ['dimanche', 'lundi', 'mardi', 'mercredi', 'jeudi', 'vendredi', 'samedi'],
				dayNamesShort: ['dim.', 'lun.', 'mar.', 'mer.', 'jeu.', 'ven.', 'sam.'],
				dayNamesMin: ['D', 'L', 'M', 'M', 'J', 'V', 'S'],
				weekHeader: 'Sm',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['fr-CH']);
	
			var i18nDatepickerFrCh = datepicker.regional['fr-CH'];
	
	
			/* French initialisation for the jQuery UI date picker plugin. */
			/* Written by Keith Wood (kbwood{at}iinet.com.au),
			 Stéphane Nahmani (sholby@sholby.net),
			 Stéphane Raimbault <stephane.raimbault@gmail.com> */
	
	
			datepicker.regional['fr'] = {
				closeText: 'Fermer',
				prevText: 'Précédent',
				nextText: 'Suivant',
				currentText: 'Aujourd\'hui',
				monthNames: ['janvier', 'février', 'mars', 'avril', 'mai', 'juin',
					'juillet', 'août', 'septembre', 'octobre', 'novembre', 'décembre'],
				monthNamesShort: ['janv.', 'févr.', 'mars', 'avril', 'mai', 'juin',
					'juil.', 'août', 'sept.', 'oct.', 'nov.', 'déc.'],
				dayNames: ['dimanche', 'lundi', 'mardi', 'mercredi', 'jeudi', 'vendredi', 'samedi'],
				dayNamesShort: ['dim.', 'lun.', 'mar.', 'mer.', 'jeu.', 'ven.', 'sam.'],
				dayNamesMin: ['D','L','M','M','J','V','S'],
				weekHeader: 'Sem.',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['fr']);
	
			var i18nDatepickerFr = datepicker.regional['fr'];
	
	
			/* Galician localization for 'UI date picker' jQuery extension. */
			/* Translated by Jorge Barreiro <yortx.barry@gmail.com>. */
	
	
			datepicker.regional['gl'] = {
				closeText: 'Pechar',
				prevText: '&#x3C;Ant',
				nextText: 'Seg&#x3E;',
				currentText: 'Hoxe',
				monthNames: ['Xaneiro','Febreiro','Marzo','Abril','Maio','Xuño',
					'Xullo','Agosto','Setembro','Outubro','Novembro','Decembro'],
				monthNamesShort: ['Xan','Feb','Mar','Abr','Mai','Xuñ',
					'Xul','Ago','Set','Out','Nov','Dec'],
				dayNames: ['Domingo','Luns','Martes','Mércores','Xoves','Venres','Sábado'],
				dayNamesShort: ['Dom','Lun','Mar','Mér','Xov','Ven','Sáb'],
				dayNamesMin: ['Do','Lu','Ma','Mé','Xo','Ve','Sá'],
				weekHeader: 'Sm',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['gl']);
	
			var i18nDatepickerGl = datepicker.regional['gl'];
	
	
			/* Hebrew initialisation for the UI Datepicker extension. */
			/* Written by Amir Hardon (ahardon at gmail dot com). */
	
	
			datepicker.regional['he'] = {
				closeText: 'סגור',
				prevText: '&#x3C;הקודם',
				nextText: 'הבא&#x3E;',
				currentText: 'היום',
				monthNames: ['ינואר','פברואר','מרץ','אפריל','מאי','יוני',
					'יולי','אוגוסט','ספטמבר','אוקטובר','נובמבר','דצמבר'],
				monthNamesShort: ['ינו','פבר','מרץ','אפר','מאי','יוני',
					'יולי','אוג','ספט','אוק','נוב','דצמ'],
				dayNames: ['ראשון','שני','שלישי','רביעי','חמישי','שישי','שבת'],
				dayNamesShort: ['א\'','ב\'','ג\'','ד\'','ה\'','ו\'','שבת'],
				dayNamesMin: ['א\'','ב\'','ג\'','ד\'','ה\'','ו\'','שבת'],
				weekHeader: 'Wk',
				dateFormat: 'y-mm-dd',
				firstDay: 0,
				isRTL: true,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['he']);
	
			var i18nDatepickerHe = datepicker.regional['he'];
	
	
			/* Hindi initialisation for the jQuery UI date picker plugin. */
			/* Written by Michael Dawart. */
	
	
			datepicker.regional['hi'] = {
				closeText: 'बंद',
				prevText: 'पिछला',
				nextText: 'अगला',
				currentText: 'आज',
				monthNames: ['जनवरी ','फरवरी','मार्च','अप्रेल','मई','जून',
					'जूलाई','अगस्त ','सितम्बर','अक्टूबर','नवम्बर','दिसम्बर'],
				monthNamesShort: ['जन', 'फर', 'मार्च', 'अप्रेल', 'मई', 'जून',
					'जूलाई', 'अग', 'सित', 'अक्ट', 'नव', 'दि'],
				dayNames: ['रविवार', 'सोमवार', 'मंगलवार', 'बुधवार', 'गुरुवार', 'शुक्रवार', 'शनिवार'],
				dayNamesShort: ['रवि', 'सोम', 'मंगल', 'बुध', 'गुरु', 'शुक्र', 'शनि'],
				dayNamesMin: ['रवि', 'सोम', 'मंगल', 'बुध', 'गुरु', 'शुक्र', 'शनि'],
				weekHeader: 'हफ्ता',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['hi']);
	
			var i18nDatepickerHi = datepicker.regional['hi'];
	
	
			/* Croatian i18n for the jQuery UI date picker plugin. */
			/* Written by Vjekoslav Nesek. */
	
	
			datepicker.regional['hr'] = {
				closeText: 'Zatvori',
				prevText: '&#x3C;',
				nextText: '&#x3E;',
				currentText: 'Danas',
				monthNames: ['Siječanj','Veljača','Ožujak','Travanj','Svibanj','Lipanj',
					'Srpanj','Kolovoz','Rujan','Listopad','Studeni','Prosinac'],
				monthNamesShort: ['Sij','Velj','Ožu','Tra','Svi','Lip',
					'Srp','Kol','Ruj','Lis','Stu','Pro'],
				dayNames: ['Nedjelja','Ponedjeljak','Utorak','Srijeda','Četvrtak','Petak','Subota'],
				dayNamesShort: ['Ned','Pon','Uto','Sri','Čet','Pet','Sub'],
				dayNamesMin: ['Ne','Po','Ut','Sr','Če','Pe','Su'],
				weekHeader: 'Tje',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['hr']);
	
			var i18nDatepickerHr = datepicker.regional['hr'];
	
	
			/* Hungarian initialisation for the jQuery UI date picker plugin. */
	
	
			datepicker.regional['hu'] = {
				closeText: 'bezár',
				prevText: 'vissza',
				nextText: 'előre',
				currentText: 'ma',
				monthNames: ['Január', 'Február', 'Március', 'Április', 'Május', 'Június',
					'Július', 'Augusztus', 'Szeptember', 'Október', 'November', 'December'],
				monthNamesShort: ['Jan', 'Feb', 'Már', 'Ápr', 'Máj', 'Jún',
					'Júl', 'Aug', 'Szep', 'Okt', 'Nov', 'Dec'],
				dayNames: ['Vasárnap', 'Hétfő', 'Kedd', 'Szerda', 'Csütörtök', 'Péntek', 'Szombat'],
				dayNamesShort: ['Vas', 'Hét', 'Ked', 'Sze', 'Csü', 'Pén', 'Szo'],
				dayNamesMin: ['V', 'H', 'K', 'Sze', 'Cs', 'P', 'Szo'],
				weekHeader: 'Hét',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: true,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['hu']);
	
			var i18nDatepickerHu = datepicker.regional['hu'];
	
	
			/* Armenian(UTF-8) initialisation for the jQuery UI date picker plugin. */
			/* Written by Levon Zakaryan (levon.zakaryan@gmail.com)*/
	
	
			datepicker.regional['hy'] = {
				closeText: 'Փակել',
				prevText: '&#x3C;Նախ.',
				nextText: 'Հաջ.&#x3E;',
				currentText: 'Այսօր',
				monthNames: ['Հունվար','Փետրվար','Մարտ','Ապրիլ','Մայիս','Հունիս',
					'Հուլիս','Օգոստոս','Սեպտեմբեր','Հոկտեմբեր','Նոյեմբեր','Դեկտեմբեր'],
				monthNamesShort: ['Հունվ','Փետր','Մարտ','Ապր','Մայիս','Հունիս',
					'Հուլ','Օգս','Սեպ','Հոկ','Նոյ','Դեկ'],
				dayNames: ['կիրակի','եկուշաբթի','երեքշաբթի','չորեքշաբթի','հինգշաբթի','ուրբաթ','շաբաթ'],
				dayNamesShort: ['կիր','երկ','երք','չրք','հնգ','ուրբ','շբթ'],
				dayNamesMin: ['կիր','երկ','երք','չրք','հնգ','ուրբ','շբթ'],
				weekHeader: 'ՇԲՏ',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['hy']);
	
			var i18nDatepickerHy = datepicker.regional['hy'];
	
	
			/* Indonesian initialisation for the jQuery UI date picker plugin. */
			/* Written by Deden Fathurahman (dedenf@gmail.com). */
	
	
			datepicker.regional['id'] = {
				closeText: 'Tutup',
				prevText: '&#x3C;mundur',
				nextText: 'maju&#x3E;',
				currentText: 'hari ini',
				monthNames: ['Januari','Februari','Maret','April','Mei','Juni',
					'Juli','Agustus','September','Oktober','Nopember','Desember'],
				monthNamesShort: ['Jan','Feb','Mar','Apr','Mei','Jun',
					'Jul','Agus','Sep','Okt','Nop','Des'],
				dayNames: ['Minggu','Senin','Selasa','Rabu','Kamis','Jumat','Sabtu'],
				dayNamesShort: ['Min','Sen','Sel','Rab','kam','Jum','Sab'],
				dayNamesMin: ['Mg','Sn','Sl','Rb','Km','jm','Sb'],
				weekHeader: 'Mg',
				dateFormat: 'y-mm-dd',
				firstDay: 0,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['id']);
	
			var i18nDatepickerId = datepicker.regional['id'];
	
	
			/* Icelandic initialisation for the jQuery UI date picker plugin. */
			/* Written by Haukur H. Thorsson (haukur@eskill.is). */
	
	
			datepicker.regional['is'] = {
				closeText: 'Loka',
				prevText: '&#x3C; Fyrri',
				nextText: 'Næsti &#x3E;',
				currentText: 'Í dag',
				monthNames: ['Janúar','Febrúar','Mars','Apríl','Maí','Júní',
					'Júlí','Ágúst','September','Október','Nóvember','Desember'],
				monthNamesShort: ['Jan','Feb','Mar','Apr','Maí','Jún',
					'Júl','Ágú','Sep','Okt','Nóv','Des'],
				dayNames: ['Sunnudagur','Mánudagur','Þriðjudagur','Miðvikudagur','Fimmtudagur','Föstudagur','Laugardagur'],
				dayNamesShort: ['Sun','Mán','Þri','Mið','Fim','Fös','Lau'],
				dayNamesMin: ['Su','Má','Þr','Mi','Fi','Fö','La'],
				weekHeader: 'Vika',
				dateFormat: 'y-mm-dd',
				firstDay: 0,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['is']);
	
			var i18nDatepickerIs = datepicker.regional['is'];
	
	
			/* Italian initialisation for the jQuery UI date picker plugin. */
			/* Written by Antonello Pasella (antonello.pasella@gmail.com). */
	
	
			datepicker.regional['it-CH'] = {
				closeText: 'Chiudi',
				prevText: '&#x3C;Prec',
				nextText: 'Succ&#x3E;',
				currentText: 'Oggi',
				monthNames: ['Gennaio','Febbraio','Marzo','Aprile','Maggio','Giugno',
					'Luglio','Agosto','Settembre','Ottobre','Novembre','Dicembre'],
				monthNamesShort: ['Gen','Feb','Mar','Apr','Mag','Giu',
					'Lug','Ago','Set','Ott','Nov','Dic'],
				dayNames: ['Domenica','Lunedì','Martedì','Mercoledì','Giovedì','Venerdì','Sabato'],
				dayNamesShort: ['Dom','Lun','Mar','Mer','Gio','Ven','Sab'],
				dayNamesMin: ['Do','Lu','Ma','Me','Gi','Ve','Sa'],
				weekHeader: 'Sm',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['it-CH']);
	
			var i18nDatepickerItCh = datepicker.regional['it-CH'];
	
	
			/* Italian initialisation for the jQuery UI date picker plugin. */
			/* Written by Antonello Pasella (antonello.pasella@gmail.com). */
	
	
			datepicker.regional['it'] = {
				closeText: 'Chiudi',
				prevText: '&#x3C;Prec',
				nextText: 'Succ&#x3E;',
				currentText: 'Oggi',
				monthNames: ['Gennaio','Febbraio','Marzo','Aprile','Maggio','Giugno',
					'Luglio','Agosto','Settembre','Ottobre','Novembre','Dicembre'],
				monthNamesShort: ['Gen','Feb','Mar','Apr','Mag','Giu',
					'Lug','Ago','Set','Ott','Nov','Dic'],
				dayNames: ['Domenica','Lunedì','Martedì','Mercoledì','Giovedì','Venerdì','Sabato'],
				dayNamesShort: ['Dom','Lun','Mar','Mer','Gio','Ven','Sab'],
				dayNamesMin: ['Do','Lu','Ma','Me','Gi','Ve','Sa'],
				weekHeader: 'Sm',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['it']);
	
			var i18nDatepickerIt = datepicker.regional['it'];
	
	
			/* Japanese initialisation for the jQuery UI date picker plugin. */
			/* Written by Kentaro SATO (kentaro@ranvis.com). */
	
	
			datepicker.regional['ja'] = {
				closeText: '閉じる',
				prevText: '&#x3C;前',
				nextText: '次&#x3E;',
				currentText: '今日',
				monthNames: ['1月','2月','3月','4月','5月','6月',
					'7月','8月','9月','10月','11月','12月'],
				monthNamesShort: ['1月','2月','3月','4月','5月','6月',
					'7月','8月','9月','10月','11月','12月'],
				dayNames: ['日曜日','月曜日','火曜日','水曜日','木曜日','金曜日','土曜日'],
				dayNamesShort: ['日','月','火','水','木','金','土'],
				dayNamesMin: ['日','月','火','水','木','金','土'],
				weekHeader: '週',
				dateFormat: 'y-mm-dd',
				firstDay: 0,
				isRTL: false,
				showMonthAfterYear: true,
				yearSuffix: '年'};
			datepicker.setDefaults(datepicker.regional['ja']);
	
			var i18nDatepickerJa = datepicker.regional['ja'];
	
	
			/* Georgian (UTF-8) initialisation for the jQuery UI date picker plugin. */
			/* Written by Lado Lomidze (lado.lomidze@gmail.com). */
	
	
			datepicker.regional['ka'] = {
				closeText: 'დახურვა',
				prevText: '&#x3c; წინა',
				nextText: 'შემდეგი &#x3e;',
				currentText: 'დღეს',
				monthNames: ['იანვარი','თებერვალი','მარტი','აპრილი','მაისი','ივნისი', 'ივლისი','აგვისტო','სექტემბერი','ოქტომბერი','ნოემბერი','დეკემბერი'],
				monthNamesShort: ['იან','თებ','მარ','აპრ','მაი','ივნ', 'ივლ','აგვ','სექ','ოქტ','ნოე','დეკ'],
				dayNames: ['კვირა','ორშაბათი','სამშაბათი','ოთხშაბათი','ხუთშაბათი','პარასკევი','შაბათი'],
				dayNamesShort: ['კვ','ორშ','სამ','ოთხ','ხუთ','პარ','შაბ'],
				dayNamesMin: ['კვ','ორშ','სამ','ოთხ','ხუთ','პარ','შაბ'],
				weekHeader: 'კვირა',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['ka']);
	
			var i18nDatepickerKa = datepicker.regional['ka'];
	
	
			/* Kazakh (UTF-8) initialisation for the jQuery UI date picker plugin. */
			/* Written by Dmitriy Karasyov (dmitriy.karasyov@gmail.com). */
	
	
			datepicker.regional['kk'] = {
				closeText: 'Жабу',
				prevText: '&#x3C;Алдыңғы',
				nextText: 'Келесі&#x3E;',
				currentText: 'Бүгін',
				monthNames: ['Қаңтар','Ақпан','Наурыз','Сәуір','Мамыр','Маусым',
					'Шілде','Тамыз','Қыркүйек','Қазан','Қараша','Желтоқсан'],
				monthNamesShort: ['Қаң','Ақп','Нау','Сәу','Мам','Мау',
					'Шіл','Там','Қыр','Қаз','Қар','Жел'],
				dayNames: ['Жексенбі','Дүйсенбі','Сейсенбі','Сәрсенбі','Бейсенбі','Жұма','Сенбі'],
				dayNamesShort: ['жкс','дсн','ссн','срс','бсн','жма','снб'],
				dayNamesMin: ['Жк','Дс','Сс','Ср','Бс','Жм','Сн'],
				weekHeader: 'Не',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['kk']);
	
			var i18nDatepickerKk = datepicker.regional['kk'];
	
	
			/* Khmer initialisation for the jQuery calendar extension. */
			/* Written by Chandara Om (chandara.teacher@gmail.com). */
	
	
			datepicker.regional['km'] = {
				closeText: 'ធ្វើ​រួច',
				prevText: 'មុន',
				nextText: 'បន្ទាប់',
				currentText: 'ថ្ងៃ​នេះ',
				monthNames: ['មករា','កុម្ភៈ','មីនា','មេសា','ឧសភា','មិថុនា',
					'កក្កដា','សីហា','កញ្ញា','តុលា','វិច្ឆិកា','ធ្នូ'],
				monthNamesShort: ['មករា','កុម្ភៈ','មីនា','មេសា','ឧសភា','មិថុនា',
					'កក្កដា','សីហា','កញ្ញា','តុលា','វិច្ឆិកា','ធ្នូ'],
				dayNames: ['អាទិត្យ', 'ចន្ទ', 'អង្គារ', 'ពុធ', 'ព្រហស្បតិ៍', 'សុក្រ', 'សៅរ៍'],
				dayNamesShort: ['អា', 'ច', 'អ', 'ពុ', 'ព្រហ', 'សុ', 'សៅ'],
				dayNamesMin: ['អា', 'ច', 'អ', 'ពុ', 'ព្រហ', 'សុ', 'សៅ'],
				weekHeader: 'សប្ដាហ៍',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['km']);
	
			var i18nDatepickerKm = datepicker.regional['km'];
	
	
			/* Korean initialisation for the jQuery calendar extension. */
			/* Written by DaeKwon Kang (ncrash.dk@gmail.com), Edited by Genie. */
	
	
			datepicker.regional['ko'] = {
				closeText: '닫기',
				prevText: '이전달',
				nextText: '다음달',
				currentText: '오늘',
				monthNames: ['1월','2월','3월','4월','5월','6월',
					'7월','8월','9월','10월','11월','12월'],
				monthNamesShort: ['1월','2월','3월','4월','5월','6월',
					'7월','8월','9월','10월','11월','12월'],
				dayNames: ['일요일','월요일','화요일','수요일','목요일','금요일','토요일'],
				dayNamesShort: ['일','월','화','수','목','금','토'],
				dayNamesMin: ['일','월','화','수','목','금','토'],
				weekHeader: 'Wk',
				dateFormat: 'y-mm-dd',
				firstDay: 0,
				isRTL: false,
				showMonthAfterYear: true,
				yearSuffix: '년'};
			datepicker.setDefaults(datepicker.regional['ko']);
	
			var i18nDatepickerKo = datepicker.regional['ko'];
	
	
			/* Kyrgyz (UTF-8) initialisation for the jQuery UI date picker plugin. */
			/* Written by Sergey Kartashov (ebishkek@yandex.ru). */
	
	
			datepicker.regional['ky'] = {
				closeText: 'Жабуу',
				prevText: '&#x3c;Мур',
				nextText: 'Кий&#x3e;',
				currentText: 'Бүгүн',
				monthNames: ['Январь','Февраль','Март','Апрель','Май','Июнь',
					'Июль','Август','Сентябрь','Октябрь','Ноябрь','Декабрь'],
				monthNamesShort: ['Янв','Фев','Мар','Апр','Май','Июн',
					'Июл','Авг','Сен','Окт','Ноя','Дек'],
				dayNames: ['жекшемби', 'дүйшөмбү', 'шейшемби', 'шаршемби', 'бейшемби', 'жума', 'ишемби'],
				dayNamesShort: ['жек', 'дүй', 'шей', 'шар', 'бей', 'жум', 'ише'],
				dayNamesMin: ['Жк','Дш','Шш','Шр','Бш','Жм','Иш'],
				weekHeader: 'Жум',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''
			};
			datepicker.setDefaults(datepicker.regional['ky']);
	
			var i18nDatepickerKy = datepicker.regional['ky'];
	
	
			/* Luxembourgish initialisation for the jQuery UI date picker plugin. */
			/* Written by Michel Weimerskirch <michel@weimerskirch.net> */
	
	
			datepicker.regional['lb'] = {
				closeText: 'Fäerdeg',
				prevText: 'Zréck',
				nextText: 'Weider',
				currentText: 'Haut',
				monthNames: ['Januar','Februar','Mäerz','Abrëll','Mee','Juni',
					'Juli','August','September','Oktober','November','Dezember'],
				monthNamesShort: ['Jan', 'Feb', 'Mäe', 'Abr', 'Mee', 'Jun',
					'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dez'],
				dayNames: ['Sonndeg', 'Méindeg', 'Dënschdeg', 'Mëttwoch', 'Donneschdeg', 'Freideg', 'Samschdeg'],
				dayNamesShort: ['Son', 'Méi', 'Dën', 'Mët', 'Don', 'Fre', 'Sam'],
				dayNamesMin: ['So','Mé','Dë','Më','Do','Fr','Sa'],
				weekHeader: 'W',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['lb']);
	
			var i18nDatepickerLb = datepicker.regional['lb'];
	
	
			/* Lithuanian (UTF-8) initialisation for the jQuery UI date picker plugin. */
			/* @author Arturas Paleicikas <arturas@avalon.lt> */
	
	
			datepicker.regional['lt'] = {
				closeText: 'Uždaryti',
				prevText: '&#x3C;Atgal',
				nextText: 'Pirmyn&#x3E;',
				currentText: 'Šiandien',
				monthNames: ['Sausis','Vasaris','Kovas','Balandis','Gegužė','Birželis',
					'Liepa','Rugpjūtis','Rugsėjis','Spalis','Lapkritis','Gruodis'],
				monthNamesShort: ['Sau','Vas','Kov','Bal','Geg','Bir',
					'Lie','Rugp','Rugs','Spa','Lap','Gru'],
				dayNames: ['sekmadienis','pirmadienis','antradienis','trečiadienis','ketvirtadienis','penktadienis','šeštadienis'],
				dayNamesShort: ['sek','pir','ant','tre','ket','pen','šeš'],
				dayNamesMin: ['Se','Pr','An','Tr','Ke','Pe','Še'],
				weekHeader: 'SAV',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: true,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['lt']);
	
			var i18nDatepickerLt = datepicker.regional['lt'];
	
	
			/* Latvian (UTF-8) initialisation for the jQuery UI date picker plugin. */
			/* @author Arturas Paleicikas <arturas.paleicikas@metasite.net> */
	
	
			datepicker.regional['lv'] = {
				closeText: 'Aizvērt',
				prevText: 'Iepr.',
				nextText: 'Nāk.',
				currentText: 'Šodien',
				monthNames: ['Janvāris','Februāris','Marts','Aprīlis','Maijs','Jūnijs',
					'Jūlijs','Augusts','Septembris','Oktobris','Novembris','Decembris'],
				monthNamesShort: ['Jan','Feb','Mar','Apr','Mai','Jūn',
					'Jūl','Aug','Sep','Okt','Nov','Dec'],
				dayNames: ['svētdiena','pirmdiena','otrdiena','trešdiena','ceturtdiena','piektdiena','sestdiena'],
				dayNamesShort: ['svt','prm','otr','tre','ctr','pkt','sst'],
				dayNamesMin: ['Sv','Pr','Ot','Tr','Ct','Pk','Ss'],
				weekHeader: 'Ned.',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['lv']);
	
			var i18nDatepickerLv = datepicker.regional['lv'];
	
	
			/* Macedonian i18n for the jQuery UI date picker plugin. */
			/* Written by Stojce Slavkovski. */
	
	
			datepicker.regional['mk'] = {
				closeText: 'Затвори',
				prevText: '&#x3C;',
				nextText: '&#x3E;',
				currentText: 'Денес',
				monthNames: ['Јануари','Февруари','Март','Април','Мај','Јуни',
					'Јули','Август','Септември','Октомври','Ноември','Декември'],
				monthNamesShort: ['Јан','Фев','Мар','Апр','Мај','Јун',
					'Јул','Авг','Сеп','Окт','Ное','Дек'],
				dayNames: ['Недела','Понеделник','Вторник','Среда','Четврток','Петок','Сабота'],
				dayNamesShort: ['Нед','Пон','Вто','Сре','Чет','Пет','Саб'],
				dayNamesMin: ['Не','По','Вт','Ср','Че','Пе','Са'],
				weekHeader: 'Сед',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['mk']);
	
			var i18nDatepickerMk = datepicker.regional['mk'];
	
	
			/* Malayalam (UTF-8) initialisation for the jQuery UI date picker plugin. */
			/* Written by Saji Nediyanchath (saji89@gmail.com). */
	
	
			datepicker.regional['ml'] = {
				closeText: 'ശരി',
				prevText: 'മുന്നത്തെ',
				nextText: 'അടുത്തത് ',
				currentText: 'ഇന്ന്',
				monthNames: ['ജനുവരി','ഫെബ്രുവരി','മാര്‍ച്ച്','ഏപ്രില്‍','മേയ്','ജൂണ്‍',
					'ജൂലൈ','ആഗസ്റ്റ്','സെപ്റ്റംബര്‍','ഒക്ടോബര്‍','നവംബര്‍','ഡിസംബര്‍'],
				monthNamesShort: ['ജനു', 'ഫെബ്', 'മാര്‍', 'ഏപ്രി', 'മേയ്', 'ജൂണ്‍',
					'ജൂലാ', 'ആഗ', 'സെപ്', 'ഒക്ടോ', 'നവം', 'ഡിസ'],
				dayNames: ['ഞായര്‍', 'തിങ്കള്‍', 'ചൊവ്വ', 'ബുധന്‍', 'വ്യാഴം', 'വെള്ളി', 'ശനി'],
				dayNamesShort: ['ഞായ', 'തിങ്ക', 'ചൊവ്വ', 'ബുധ', 'വ്യാഴം', 'വെള്ളി', 'ശനി'],
				dayNamesMin: ['ഞാ','തി','ചൊ','ബു','വ്യാ','വെ','ശ'],
				weekHeader: 'ആ',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['ml']);
	
			var i18nDatepickerMl = datepicker.regional['ml'];
	
	
			/* Malaysian initialisation for the jQuery UI date picker plugin. */
			/* Written by Mohd Nawawi Mohamad Jamili (nawawi@ronggeng.net). */
	
	
			datepicker.regional['ms'] = {
				closeText: 'Tutup',
				prevText: '&#x3C;Sebelum',
				nextText: 'Selepas&#x3E;',
				currentText: 'hari ini',
				monthNames: ['Januari','Februari','Mac','April','Mei','Jun',
					'Julai','Ogos','September','Oktober','November','Disember'],
				monthNamesShort: ['Jan','Feb','Mac','Apr','Mei','Jun',
					'Jul','Ogo','Sep','Okt','Nov','Dis'],
				dayNames: ['Ahad','Isnin','Selasa','Rabu','Khamis','Jumaat','Sabtu'],
				dayNamesShort: ['Aha','Isn','Sel','Rab','kha','Jum','Sab'],
				dayNamesMin: ['Ah','Is','Se','Ra','Kh','Ju','Sa'],
				weekHeader: 'Mg',
				dateFormat: 'y-mm-dd',
				firstDay: 0,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['ms']);
	
			var i18nDatepickerMs = datepicker.regional['ms'];
	
	
			/* Norwegian Bokmål initialisation for the jQuery UI date picker plugin. */
			/* Written by Bjørn Johansen (post@bjornjohansen.no). */
	
	
			datepicker.regional['nb'] = {
				closeText: 'Lukk',
				prevText: '&#xAB;Forrige',
				nextText: 'Neste&#xBB;',
				currentText: 'I dag',
				monthNames: ['januar','februar','mars','april','mai','juni','juli','august','september','oktober','november','desember'],
				monthNamesShort: ['jan','feb','mar','apr','mai','jun','jul','aug','sep','okt','nov','des'],
				dayNamesShort: ['søn','man','tir','ons','tor','fre','lør'],
				dayNames: ['søndag','mandag','tirsdag','onsdag','torsdag','fredag','lørdag'],
				dayNamesMin: ['sø','ma','ti','on','to','fr','lø'],
				weekHeader: 'Uke',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''
			};
			datepicker.setDefaults(datepicker.regional['nb']);
	
			var i18nDatepickerNb = datepicker.regional['nb'];
	
	
			/* Dutch (Belgium) initialisation for the jQuery UI date picker plugin. */
			/* David De Sloovere @DavidDeSloovere */
	
	
			datepicker.regional['nl-BE'] = {
				closeText: 'Sluiten',
				prevText: '←',
				nextText: '→',
				currentText: 'Vandaag',
				monthNames: ['januari', 'februari', 'maart', 'april', 'mei', 'juni',
					'juli', 'augustus', 'september', 'oktober', 'november', 'december'],
				monthNamesShort: ['jan', 'feb', 'mrt', 'apr', 'mei', 'jun',
					'jul', 'aug', 'sep', 'okt', 'nov', 'dec'],
				dayNames: ['zondag', 'maandag', 'dinsdag', 'woensdag', 'donderdag', 'vrijdag', 'zaterdag'],
				dayNamesShort: ['zon', 'maa', 'din', 'woe', 'don', 'vri', 'zat'],
				dayNamesMin: ['zo', 'ma', 'di', 'wo', 'do', 'vr', 'za'],
				weekHeader: 'Wk',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['nl-BE']);
	
			var i18nDatepickerNlBe = datepicker.regional['nl-BE'];
	
	
			/* Dutch (UTF-8) initialisation for the jQuery UI date picker plugin. */
			/* Written by Mathias Bynens <http://mathiasbynens.be/> */
	
	
			datepicker.regional.nl = {
				closeText: 'Sluiten',
				prevText: '←',
				nextText: '→',
				currentText: 'Vandaag',
				monthNames: ['januari', 'februari', 'maart', 'april', 'mei', 'juni',
					'juli', 'augustus', 'september', 'oktober', 'november', 'december'],
				monthNamesShort: ['jan', 'feb', 'mrt', 'apr', 'mei', 'jun',
					'jul', 'aug', 'sep', 'okt', 'nov', 'dec'],
				dayNames: ['zondag', 'maandag', 'dinsdag', 'woensdag', 'donderdag', 'vrijdag', 'zaterdag'],
				dayNamesShort: ['zon', 'maa', 'din', 'woe', 'don', 'vri', 'zat'],
				dayNamesMin: ['zo', 'ma', 'di', 'wo', 'do', 'vr', 'za'],
				weekHeader: 'Wk',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional.nl);
	
			var i18nDatepickerNl = datepicker.regional.nl;
	
	
			/* Norwegian Nynorsk initialisation for the jQuery UI date picker plugin. */
			/* Written by Bjørn Johansen (post@bjornjohansen.no). */
	
	
			datepicker.regional['nn'] = {
				closeText: 'Lukk',
				prevText: '&#xAB;Førre',
				nextText: 'Neste&#xBB;',
				currentText: 'I dag',
				monthNames: ['januar','februar','mars','april','mai','juni','juli','august','september','oktober','november','desember'],
				monthNamesShort: ['jan','feb','mar','apr','mai','jun','jul','aug','sep','okt','nov','des'],
				dayNamesShort: ['sun','mån','tys','ons','tor','fre','lau'],
				dayNames: ['sundag','måndag','tysdag','onsdag','torsdag','fredag','laurdag'],
				dayNamesMin: ['su','må','ty','on','to','fr','la'],
				weekHeader: 'Veke',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''
			};
			datepicker.setDefaults(datepicker.regional['nn']);
	
			var i18nDatepickerNn = datepicker.regional['nn'];
	
	
			/* Norwegian initialisation for the jQuery UI date picker plugin. */
			/* Written by Naimdjon Takhirov (naimdjon@gmail.com). */
	
	
	
			datepicker.regional['no'] = {
				closeText: 'Lukk',
				prevText: '&#xAB;Forrige',
				nextText: 'Neste&#xBB;',
				currentText: 'I dag',
				monthNames: ['januar','februar','mars','april','mai','juni','juli','august','september','oktober','november','desember'],
				monthNamesShort: ['jan','feb','mar','apr','mai','jun','jul','aug','sep','okt','nov','des'],
				dayNamesShort: ['søn','man','tir','ons','tor','fre','lør'],
				dayNames: ['søndag','mandag','tirsdag','onsdag','torsdag','fredag','lørdag'],
				dayNamesMin: ['sø','ma','ti','on','to','fr','lø'],
				weekHeader: 'Uke',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''
			};
			datepicker.setDefaults(datepicker.regional['no']);
	
			var i18nDatepickerNo = datepicker.regional['no'];
	
	
			/* Polish initialisation for the jQuery UI date picker plugin. */
			/* Written by Jacek Wysocki (jacek.wysocki@gmail.com). */
	
	
			datepicker.regional['pl'] = {
				closeText: 'Zamknij',
				prevText: '&#x3C;Poprzedni',
				nextText: 'Następny&#x3E;',
				currentText: 'Dziś',
				monthNames: ['Styczeń','Luty','Marzec','Kwiecień','Maj','Czerwiec',
					'Lipiec','Sierpień','Wrzesień','Październik','Listopad','Grudzień'],
				monthNamesShort: ['Sty','Lu','Mar','Kw','Maj','Cze',
					'Lip','Sie','Wrz','Pa','Lis','Gru'],
				dayNames: ['Niedziela','Poniedziałek','Wtorek','Środa','Czwartek','Piątek','Sobota'],
				dayNamesShort: ['Nie','Pn','Wt','Śr','Czw','Pt','So'],
				dayNamesMin: ['N','Pn','Wt','Śr','Cz','Pt','So'],
				weekHeader: 'Tydz',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['pl']);
	
			var i18nDatepickerPl = datepicker.regional['pl'];
	
	
			/* Brazilian initialisation for the jQuery UI date picker plugin. */
			/* Written by Leonildo Costa Silva (leocsilva@gmail.com). */
	
	
			datepicker.regional['pt-BR'] = {
				closeText: 'Fechar',
				prevText: '&#x3C;Anterior',
				nextText: 'Próximo&#x3E;',
				currentText: 'Hoje',
				monthNames: ['Janeiro','Fevereiro','Março','Abril','Maio','Junho',
					'Julho','Agosto','Setembro','Outubro','Novembro','Dezembro'],
				monthNamesShort: ['Jan','Fev','Mar','Abr','Mai','Jun',
					'Jul','Ago','Set','Out','Nov','Dez'],
				dayNames: ['Domingo','Segunda-feira','Terça-feira','Quarta-feira','Quinta-feira','Sexta-feira','Sábado'],
				dayNamesShort: ['Dom','Seg','Ter','Qua','Qui','Sex','Sáb'],
				dayNamesMin: ['Dom','Seg','Ter','Qua','Qui','Sex','Sáb'],
				weekHeader: 'Sm',
				dateFormat: 'y-mm-dd',
				firstDay: 0,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['pt-BR']);
	
			var i18nDatepickerPtBr = datepicker.regional['pt-BR'];
	
	
			/* Portuguese initialisation for the jQuery UI date picker plugin. */
	
	
			datepicker.regional['pt'] = {
				closeText: 'Fechar',
				prevText: 'Anterior',
				nextText: 'Seguinte',
				currentText: 'Hoje',
				monthNames: ['Janeiro','Fevereiro','Março','Abril','Maio','Junho',
					'Julho','Agosto','Setembro','Outubro','Novembro','Dezembro'],
				monthNamesShort: ['Jan','Fev','Mar','Abr','Mai','Jun',
					'Jul','Ago','Set','Out','Nov','Dez'],
				dayNames: ['Domingo','Segunda-feira','Terça-feira','Quarta-feira','Quinta-feira','Sexta-feira','Sábado'],
				dayNamesShort: ['Dom','Seg','Ter','Qua','Qui','Sex','Sáb'],
				dayNamesMin: ['Dom','Seg','Ter','Qua','Qui','Sex','Sáb'],
				weekHeader: 'Sem',
				dateFormat: 'y-mm-dd',
				firstDay: 0,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['pt']);
	
			var i18nDatepickerPt = datepicker.regional['pt'];
	
	
			/* Romansh initialisation for the jQuery UI date picker plugin. */
			/* Written by Yvonne Gienal (yvonne.gienal@educa.ch). */
	
	
			datepicker.regional['rm'] = {
				closeText: 'Serrar',
				prevText: '&#x3C;Suandant',
				nextText: 'Precedent&#x3E;',
				currentText: 'Actual',
				monthNames: ['Schaner','Favrer','Mars','Avrigl','Matg','Zercladur', 'Fanadur','Avust','Settember','October','November','December'],
				monthNamesShort: ['Scha','Fev','Mar','Avr','Matg','Zer', 'Fan','Avu','Sett','Oct','Nov','Dec'],
				dayNames: ['Dumengia','Glindesdi','Mardi','Mesemna','Gievgia','Venderdi','Sonda'],
				dayNamesShort: ['Dum','Gli','Mar','Mes','Gie','Ven','Som'],
				dayNamesMin: ['Du','Gl','Ma','Me','Gi','Ve','So'],
				weekHeader: 'emna',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['rm']);
	
			var i18nDatepickerRm = datepicker.regional['rm'];
	
	
			/* Romanian initialisation for the jQuery UI date picker plugin.
			 *
			 * Written by Edmond L. (ll_edmond@walla.com)
			 * and Ionut G. Stan (ionut.g.stan@gmail.com)
			 */
	
	
			datepicker.regional['ro'] = {
				closeText: 'Închide',
				prevText: '&#xAB; Luna precedentă',
				nextText: 'Luna următoare &#xBB;',
				currentText: 'Azi',
				monthNames: ['Ianuarie','Februarie','Martie','Aprilie','Mai','Iunie',
					'Iulie','August','Septembrie','Octombrie','Noiembrie','Decembrie'],
				monthNamesShort: ['Ian', 'Feb', 'Mar', 'Apr', 'Mai', 'Iun',
					'Iul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
				dayNames: ['Duminică', 'Luni', 'Marţi', 'Miercuri', 'Joi', 'Vineri', 'Sâmbătă'],
				dayNamesShort: ['Dum', 'Lun', 'Mar', 'Mie', 'Joi', 'Vin', 'Sâm'],
				dayNamesMin: ['Du','Lu','Ma','Mi','Jo','Vi','Sâ'],
				weekHeader: 'Săpt',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['ro']);
	
			var i18nDatepickerRo = datepicker.regional['ro'];
	
	
			/* Russian (UTF-8) initialisation for the jQuery UI date picker plugin. */
			/* Written by Andrew Stromnov (stromnov@gmail.com). */
	
	
			datepicker.regional['ru'] = {
				closeText: 'Закрыть',
				prevText: '&#x3C;Пред',
				nextText: 'След&#x3E;',
				currentText: 'Сегодня',
				monthNames: ['Январь','Февраль','Март','Апрель','Май','Июнь',
					'Июль','Август','Сентябрь','Октябрь','Ноябрь','Декабрь'],
				monthNamesShort: ['Янв','Фев','Мар','Апр','Май','Июн',
					'Июл','Авг','Сен','Окт','Ноя','Дек'],
				dayNames: ['воскресенье','понедельник','вторник','среда','четверг','пятница','суббота'],
				dayNamesShort: ['вск','пнд','втр','срд','чтв','птн','сбт'],
				dayNamesMin: ['Вс','Пн','Вт','Ср','Чт','Пт','Сб'],
				weekHeader: 'Нед',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['ru']);
	
			var i18nDatepickerRu = datepicker.regional['ru'];
	
	
			/* Slovak initialisation for the jQuery UI date picker plugin. */
			/* Written by Vojtech Rinik (vojto@hmm.sk). */
	
	
			datepicker.regional['sk'] = {
				closeText: 'Zavrieť',
				prevText: '&#x3C;Predchádzajúci',
				nextText: 'Nasledujúci&#x3E;',
				currentText: 'Dnes',
				monthNames: ['január','február','marec','apríl','máj','jún',
					'júl','august','september','október','november','december'],
				monthNamesShort: ['Jan','Feb','Mar','Apr','Máj','Jún',
					'Júl','Aug','Sep','Okt','Nov','Dec'],
				dayNames: ['nedeľa','pondelok','utorok','streda','štvrtok','piatok','sobota'],
				dayNamesShort: ['Ned','Pon','Uto','Str','Štv','Pia','Sob'],
				dayNamesMin: ['Ne','Po','Ut','St','Št','Pia','So'],
				weekHeader: 'Ty',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['sk']);
	
			var i18nDatepickerSk = datepicker.regional['sk'];
	
	
			/* Slovenian initialisation for the jQuery UI date picker plugin. */
			/* Written by Jaka Jancar (jaka@kubje.org). */
			/* c = č, s = š z = ž C = Č S = Š Z = Ž */
	
	
			datepicker.regional['sl'] = {
				closeText: 'Zapri',
				prevText: '&#x3C;Prejšnji',
				nextText: 'Naslednji&#x3E;',
				currentText: 'Trenutni',
				monthNames: ['Januar','Februar','Marec','April','Maj','Junij',
					'Julij','Avgust','September','Oktober','November','December'],
				monthNamesShort: ['Jan','Feb','Mar','Apr','Maj','Jun',
					'Jul','Avg','Sep','Okt','Nov','Dec'],
				dayNames: ['Nedelja','Ponedeljek','Torek','Sreda','Četrtek','Petek','Sobota'],
				dayNamesShort: ['Ned','Pon','Tor','Sre','Čet','Pet','Sob'],
				dayNamesMin: ['Ne','Po','To','Sr','Če','Pe','So'],
				weekHeader: 'Teden',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['sl']);
	
			var i18nDatepickerSl = datepicker.regional['sl'];
	
	
			/* Albanian initialisation for the jQuery UI date picker plugin. */
			/* Written by Flakron Bytyqi (flakron@gmail.com). */
	
	
			datepicker.regional['sq'] = {
				closeText: 'mbylle',
				prevText: '&#x3C;mbrapa',
				nextText: 'Përpara&#x3E;',
				currentText: 'sot',
				monthNames: ['Janar','Shkurt','Mars','Prill','Maj','Qershor',
					'Korrik','Gusht','Shtator','Tetor','Nëntor','Dhjetor'],
				monthNamesShort: ['Jan','Shk','Mar','Pri','Maj','Qer',
					'Kor','Gus','Sht','Tet','Nën','Dhj'],
				dayNames: ['E Diel','E Hënë','E Martë','E Mërkurë','E Enjte','E Premte','E Shtune'],
				dayNamesShort: ['Di','Hë','Ma','Më','En','Pr','Sh'],
				dayNamesMin: ['Di','Hë','Ma','Më','En','Pr','Sh'],
				weekHeader: 'Ja',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['sq']);
	
			var i18nDatepickerSq = datepicker.regional['sq'];
	
	
			/* Serbian i18n for the jQuery UI date picker plugin. */
			/* Written by Dejan Dimić. */
	
	
			datepicker.regional['sr-SR'] = {
				closeText: 'Zatvori',
				prevText: '&#x3C;',
				nextText: '&#x3E;',
				currentText: 'Danas',
				monthNames: ['Januar','Februar','Mart','April','Maj','Jun',
					'Jul','Avgust','Septembar','Oktobar','Novembar','Decembar'],
				monthNamesShort: ['Jan','Feb','Mar','Apr','Maj','Jun',
					'Jul','Avg','Sep','Okt','Nov','Dec'],
				dayNames: ['Nedelja','Ponedeljak','Utorak','Sreda','Četvrtak','Petak','Subota'],
				dayNamesShort: ['Ned','Pon','Uto','Sre','Čet','Pet','Sub'],
				dayNamesMin: ['Ne','Po','Ut','Sr','Če','Pe','Su'],
				weekHeader: 'Sed',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['sr-SR']);
	
			var i18nDatepickerSrSr = datepicker.regional['sr-SR'];
	
	
			/* Serbian i18n for the jQuery UI date picker plugin. */
			/* Written by Dejan Dimić. */
	
	
			datepicker.regional['sr'] = {
				closeText: 'Затвори',
				prevText: '&#x3C;',
				nextText: '&#x3E;',
				currentText: 'Данас',
				monthNames: ['Јануар','Фебруар','Март','Април','Мај','Јун',
					'Јул','Август','Септембар','Октобар','Новембар','Децембар'],
				monthNamesShort: ['Јан','Феб','Мар','Апр','Мај','Јун',
					'Јул','Авг','Сеп','Окт','Нов','Дец'],
				dayNames: ['Недеља','Понедељак','Уторак','Среда','Четвртак','Петак','Субота'],
				dayNamesShort: ['Нед','Пон','Уто','Сре','Чет','Пет','Суб'],
				dayNamesMin: ['Не','По','Ут','Ср','Че','Пе','Су'],
				weekHeader: 'Сед',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['sr']);
	
			var i18nDatepickerSr = datepicker.regional['sr'];
	
	
			/* Swedish initialisation for the jQuery UI date picker plugin. */
			/* Written by Anders Ekdahl ( anders@nomadiz.se). */
	
	
			datepicker.regional['sv'] = {
				closeText: 'Stäng',
				prevText: '&#xAB;Förra',
				nextText: 'Nästa&#xBB;',
				currentText: 'Idag',
				monthNames: ['Januari','Februari','Mars','April','Maj','Juni',
					'Juli','Augusti','September','Oktober','November','December'],
				monthNamesShort: ['Jan','Feb','Mar','Apr','Maj','Jun',
					'Jul','Aug','Sep','Okt','Nov','Dec'],
				dayNamesShort: ['Sön','Mån','Tis','Ons','Tor','Fre','Lör'],
				dayNames: ['Söndag','Måndag','Tisdag','Onsdag','Torsdag','Fredag','Lördag'],
				dayNamesMin: ['Sö','Må','Ti','On','To','Fr','Lö'],
				weekHeader: 'Ve',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['sv']);
	
			var i18nDatepickerSv = datepicker.regional['sv'];
	
	
			/* Tamil (UTF-8) initialisation for the jQuery UI date picker plugin. */
			/* Written by S A Sureshkumar (saskumar@live.com). */
	
	
			datepicker.regional['ta'] = {
				closeText: 'மூடு',
				prevText: 'முன்னையது',
				nextText: 'அடுத்தது',
				currentText: 'இன்று',
				monthNames: ['தை','மாசி','பங்குனி','சித்திரை','வைகாசி','ஆனி',
					'ஆடி','ஆவணி','புரட்டாசி','ஐப்பசி','கார்த்திகை','மார்கழி'],
				monthNamesShort: ['தை','மாசி','பங்','சித்','வைகா','ஆனி',
					'ஆடி','ஆவ','புர','ஐப்','கார்','மார்'],
				dayNames: ['ஞாயிற்றுக்கிழமை','திங்கட்கிழமை','செவ்வாய்க்கிழமை','புதன்கிழமை','வியாழக்கிழமை','வெள்ளிக்கிழமை','சனிக்கிழமை'],
				dayNamesShort: ['ஞாயிறு','திங்கள்','செவ்வாய்','புதன்','வியாழன்','வெள்ளி','சனி'],
				dayNamesMin: ['ஞா','தி','செ','பு','வி','வெ','ச'],
				weekHeader: 'Не',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['ta']);
	
			var i18nDatepickerTa = datepicker.regional['ta'];
	
	
			/* Thai initialisation for the jQuery UI date picker plugin. */
			/* Written by pipo (pipo@sixhead.com). */
	
	
			datepicker.regional['th'] = {
				closeText: 'ปิด',
				prevText: '&#xAB;&#xA0;ย้อน',
				nextText: 'ถัดไป&#xA0;&#xBB;',
				currentText: 'วันนี้',
				monthNames: ['มกราคม','กุมภาพันธ์','มีนาคม','เมษายน','พฤษภาคม','มิถุนายน',
					'กรกฎาคม','สิงหาคม','กันยายน','ตุลาคม','พฤศจิกายน','ธันวาคม'],
				monthNamesShort: ['ม.ค.','ก.พ.','มี.ค.','เม.ย.','พ.ค.','มิ.ย.',
					'ก.ค.','ส.ค.','ก.ย.','ต.ค.','พ.ย.','ธ.ค.'],
				dayNames: ['อาทิตย์','จันทร์','อังคาร','พุธ','พฤหัสบดี','ศุกร์','เสาร์'],
				dayNamesShort: ['อา.','จ.','อ.','พ.','พฤ.','ศ.','ส.'],
				dayNamesMin: ['อา.','จ.','อ.','พ.','พฤ.','ศ.','ส.'],
				weekHeader: 'Wk',
				dateFormat: 'y-mm-dd',
				firstDay: 0,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['th']);
	
			var i18nDatepickerTh = datepicker.regional['th'];
	
	
			/* Tajiki (UTF-8) initialisation for the jQuery UI date picker plugin. */
			/* Written by Abdurahmon Saidov (saidovab@gmail.com). */
	
	
			datepicker.regional['tj'] = {
				closeText: 'Идома',
				prevText: '&#x3c;Қафо',
				nextText: 'Пеш&#x3e;',
				currentText: 'Имрӯз',
				monthNames: ['Январ','Феврал','Март','Апрел','Май','Июн',
					'Июл','Август','Сентябр','Октябр','Ноябр','Декабр'],
				monthNamesShort: ['Янв','Фев','Мар','Апр','Май','Июн',
					'Июл','Авг','Сен','Окт','Ноя','Дек'],
				dayNames: ['якшанбе','душанбе','сешанбе','чоршанбе','панҷшанбе','ҷумъа','шанбе'],
				dayNamesShort: ['якш','душ','сеш','чор','пан','ҷум','шан'],
				dayNamesMin: ['Як','Дш','Сш','Чш','Пш','Ҷм','Шн'],
				weekHeader: 'Хф',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['tj']);
	
			var i18nDatepickerTj = datepicker.regional['tj'];
	
	
			/* Turkish initialisation for the jQuery UI date picker plugin. */
			/* Written by Izzet Emre Erkan (kara@karalamalar.net). */
	
	
			datepicker.regional['tr'] = {
				closeText: 'kapat',
				prevText: '&#x3C;geri',
				nextText: 'ileri&#x3e',
				currentText: 'bugün',
				monthNames: ['Ocak','Şubat','Mart','Nisan','Mayıs','Haziran',
					'Temmuz','Ağustos','Eylül','Ekim','Kasım','Aralık'],
				monthNamesShort: ['Oca','Şub','Mar','Nis','May','Haz',
					'Tem','Ağu','Eyl','Eki','Kas','Ara'],
				dayNames: ['Pazar','Pazartesi','Salı','Çarşamba','Perşembe','Cuma','Cumartesi'],
				dayNamesShort: ['Pz','Pt','Sa','Ça','Pe','Cu','Ct'],
				dayNamesMin: ['Pz','Pt','Sa','Ça','Pe','Cu','Ct'],
				weekHeader: 'Hf',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['tr']);
	
			var i18nDatepickerTr = datepicker.regional['tr'];
	
	
			/* Ukrainian (UTF-8) initialisation for the jQuery UI date picker plugin. */
			/* Written by Maxim Drogobitskiy (maxdao@gmail.com). */
			/* Corrected by Igor Milla (igor.fsp.milla@gmail.com). */
	
	
			datepicker.regional['uk'] = {
				closeText: 'Закрити',
				prevText: '&#x3C;',
				nextText: '&#x3E;',
				currentText: 'Сьогодні',
				monthNames: ['Січень','Лютий','Березень','Квітень','Травень','Червень',
					'Липень','Серпень','Вересень','Жовтень','Листопад','Грудень'],
				monthNamesShort: ['Січ','Лют','Бер','Кві','Тра','Чер',
					'Лип','Сер','Вер','Жов','Лис','Гру'],
				dayNames: ['неділя','понеділок','вівторок','середа','четвер','п’ятниця','субота'],
				dayNamesShort: ['нед','пнд','вів','срд','чтв','птн','сбт'],
				dayNamesMin: ['Нд','Пн','Вт','Ср','Чт','Пт','Сб'],
				weekHeader: 'Тиж',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['uk']);
	
			var i18nDatepickerUk = datepicker.regional['uk'];
	
	
			/* Vietnamese initialisation for the jQuery UI date picker plugin. */
			/* Translated by Le Thanh Huy (lthanhhuy@cit.ctu.edu.vn). */
	
	
			datepicker.regional['vi'] = {
				closeText: 'Đóng',
				prevText: '&#x3C;Trước',
				nextText: 'Tiếp&#x3E;',
				currentText: 'Hôm nay',
				monthNames: ['Tháng Một', 'Tháng Hai', 'Tháng Ba', 'Tháng Tư', 'Tháng Năm', 'Tháng Sáu',
					'Tháng Bảy', 'Tháng Tám', 'Tháng Chín', 'Tháng Mười', 'Tháng Mười Một', 'Tháng Mười Hai'],
				monthNamesShort: ['Tháng 1', 'Tháng 2', 'Tháng 3', 'Tháng 4', 'Tháng 5', 'Tháng 6',
					'Tháng 7', 'Tháng 8', 'Tháng 9', 'Tháng 10', 'Tháng 11', 'Tháng 12'],
				dayNames: ['Chủ Nhật', 'Thứ Hai', 'Thứ Ba', 'Thứ Tư', 'Thứ Năm', 'Thứ Sáu', 'Thứ Bảy'],
				dayNamesShort: ['CN', 'T2', 'T3', 'T4', 'T5', 'T6', 'T7'],
				dayNamesMin: ['CN', 'T2', 'T3', 'T4', 'T5', 'T6', 'T7'],
				weekHeader: 'Tu',
				dateFormat: 'y-mm-dd',
				firstDay: 0,
				isRTL: false,
				showMonthAfterYear: false,
				yearSuffix: ''};
			datepicker.setDefaults(datepicker.regional['vi']);
	
			var i18nDatepickerVi = datepicker.regional['vi'];
	
	
			/* Chinese initialisation for the jQuery UI date picker plugin. */
			/* Written by Cloudream (cloudream@gmail.com). */
	
	
			datepicker.regional['zh-CN'] = {
				closeText: '关闭',
				prevText: '&#x3C;上月',
				nextText: '下月&#x3E;',
				currentText: '今天',
				monthNames: ['一月','二月','三月','四月','五月','六月',
					'七月','八月','九月','十月','十一月','十二月'],
				monthNamesShort: ['一月','二月','三月','四月','五月','六月',
					'七月','八月','九月','十月','十一月','十二月'],
				dayNames: ['星期日','星期一','星期二','星期三','星期四','星期五','星期六'],
				dayNamesShort: ['周日','周一','周二','周三','周四','周五','周六'],
				dayNamesMin: ['日','一','二','三','四','五','六'],
				weekHeader: '周',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: true,
				yearSuffix: '年'};
			datepicker.setDefaults(datepicker.regional['zh-CN']);
	
			var i18nDatepickerZhCn = datepicker.regional['zh-CN'];
	
	
			/* Chinese initialisation for the jQuery UI date picker plugin. */
			/* Written by SCCY (samuelcychan@gmail.com). */
	
	
			datepicker.regional['zh-HK'] = {
				closeText: '關閉',
				prevText: '&#x3C;上月',
				nextText: '下月&#x3E;',
				currentText: '今天',
				monthNames: ['一月','二月','三月','四月','五月','六月',
					'七月','八月','九月','十月','十一月','十二月'],
				monthNamesShort: ['一月','二月','三月','四月','五月','六月',
					'七月','八月','九月','十月','十一月','十二月'],
				dayNames: ['星期日','星期一','星期二','星期三','星期四','星期五','星期六'],
				dayNamesShort: ['周日','周一','周二','周三','周四','周五','周六'],
				dayNamesMin: ['日','一','二','三','四','五','六'],
				weekHeader: '周',
				dateFormat: 'y-mm-dd',
				firstDay: 0,
				isRTL: false,
				showMonthAfterYear: true,
				yearSuffix: '年'};
			datepicker.setDefaults(datepicker.regional['zh-HK']);
	
			var i18nDatepickerZhHk = datepicker.regional['zh-HK'];
	
	
			/* Chinese initialisation for the jQuery UI date picker plugin. */
			/* Written by Ressol (ressol@gmail.com). */
	
	
			datepicker.regional['zh-TW'] = {
				closeText: '關閉',
				prevText: '&#x3C;上月',
				nextText: '下月&#x3E;',
				currentText: '今天',
				monthNames: ['一月','二月','三月','四月','五月','六月',
					'七月','八月','九月','十月','十一月','十二月'],
				monthNamesShort: ['一月','二月','三月','四月','五月','六月',
					'七月','八月','九月','十月','十一月','十二月'],
				dayNames: ['星期日','星期一','星期二','星期三','星期四','星期五','星期六'],
				dayNamesShort: ['周日','周一','周二','周三','周四','周五','周六'],
				dayNamesMin: ['日','一','二','三','四','五','六'],
				weekHeader: '周',
				dateFormat: 'y-mm-dd',
				firstDay: 1,
				isRTL: false,
				showMonthAfterYear: true,
				yearSuffix: '年'};
			datepicker.setDefaults(datepicker.regional['zh-TW']);
	
			var i18nDatepickerZhTw = datepicker.regional['zh-TW'];
	
	
	
		}));
	
	/***/ },
	/* 4 */
	/***/ function(module, exports) {
	
		module.exports = jQuery;
	
	/***/ },
	/* 5 */
	/***/ function(module, exports) {
	
		(function($) {
			"use strict";
	
			$.widget("mrm.share", {
	
				options: {
					network: null,
					text: null
				},
	
				_create: function() {
					this._bindEvents();
				},
	
				_bindEvents: function() {
					var that = this;
	
					this.element.on('click', function(event) {
						event.preventDefault();
						that._share();
					});
				},
	
				_share: function() {
	
					var sLink = location.href;
					var sShareUrl; //https://gist.github.com/cioddi/6147319
	
					if (this.options.network === 'facebook') {
						sShareUrl = 'https://www.facebook.com/sharer/sharer.php?s=100' +
							'&p[url]=' + encodeURIComponent(sLink) +
							'&p[title]=' + encodeURIComponent(sLink)
						;
					} else if (this.options.network === 'twitter') {
						sShareUrl = 'https://twitter.com/intent/tweet?source=webclient' +
							'&url=' + encodeURIComponent(sLink)
						;
						if (this.options.text) {
							this.options.text = this.options.text
								.replace(/(\r\n|\n|\r)/gm, ' ') // remove line breaks from text
								.replace(/ +(?= )/g,''); // remove double spaces from text
	
							// Twitter automatically adds a space in front of all URLs. So we add the space ourselves here,
							// otherwise the following calculations will be off one character
							var iPointsOfEllipsis = '... ',
							// to verify the following values, check
							// https://support.twitter.com/groups/52-notifications/topics/211-tweeting/articles/78124-posting-links-in-a-tweet
								iTweetLength = 140,
								iURLLength = 22,
								iMaxTextLength = iTweetLength - iURLLength - iPointsOfEllipsis.length
								;
							if (this.options.text.length > iMaxTextLength) {
								this.options.text = this.options.text.substr(0, iMaxTextLength) + iPointsOfEllipsis;
							}
							sShareUrl += '&text=' + this.options.text;
						}
					} else if (this.options.network === 'google-plus') {
						sShareUrl = 'https://plus.google.com/share?' +
							'url=' + encodeURIComponent(sLink)
						;
					} else if (this.options.network === 'linkedin') {
						sShareUrl = 'https://www.linkedin.com/shareArticle?' +
							'url=' + encodeURIComponent(sLink) +
							'&source=LinkedIn' +
							'&title=' + encodeURIComponent(sLink) +
							'&mini=true' +
							'&original_referer=' + encodeURIComponent(sLink)
						;
						if (this.options.text) {
							sShareUrl += '&summary=' + this.options.text;
						}
					} else if (this.options.network === 'xing') {
						sShareUrl = 'https://www.xing.com/social_plugins/share?' +
							'url=' + encodeURIComponent(sLink)
						;
					} else if (this.options.network === 'pinterest') {
						sShareUrl = 'http://pinterest.com/pin/create/bookmarklet/?' +
							'url=' + encodeURIComponent(sLink) +
							//todo: '&media={_MEDIA_}' +
							'&is_video=false'
						;
						if (this.options.text) {
							sShareUrl += '&description=' + this.options.text;
						}
					}
	
					if (sShareUrl) {
						window.open(
							sShareUrl,
							'_blank',
							'toolbar=0,status=0,width=626,height=436'
						);
						return true;
					}
					return false;
	
				}
	
			});
	
		}(jQuery));
	
	
	
	
	
	
	
	
	
	
	
		/**
		 * Stub that is called when something should be shared
		 *
		 * @param {String} sNetwork youtube, google, ...
		 * @param {String} [sText] text to share
		 * @returns {boolean} true if a share was successfully handled, false if nothing happened
		 */
		var zurichShare = function (sNetwork, sText) {
	
		    var sLink = location.href;
		    var sShareUrl; //https://gist.github.com/cioddi/6147319
	
		    if (sNetwork === 'facebook') {
		        sShareUrl = 'https://www.facebook.com/sharer/sharer.php?s=100' +
		            '&p[url]=' + encodeURIComponent(sLink) +
		            '&p[title]=' + encodeURIComponent(sLink)
		        ;
		    } else if (sNetwork === 'twitter') {
		        sShareUrl = 'https://twitter.com/intent/tweet?source=webclient' +
		            '&url=' + encodeURIComponent(sLink)
		        ;
		        if (sText) {
		            sText = sText
		                .replace(/(\r\n|\n|\r)/gm, ' ') // remove line breaks from text
		                .replace(/ +(?= )/g,''); // remove double spaces from text
	
		            // Twitter automatically adds a space in front of all URLs. So we add the space ourselves here,
		            // otherwise the following calculations will be off one character
		            var iPointsOfEllipsis = '... ',
		                // to verify the following values, check
		                // https://support.twitter.com/groups/52-notifications/topics/211-tweeting/articles/78124-posting-links-in-a-tweet
		                iTweetLength = 140,
		                iURLLength = 22,
		                iMaxTextLength = iTweetLength - iURLLength - iPointsOfEllipsis.length
		            ;
		            if (sText.length > iMaxTextLength) {
		                sText = sText.substr(0, iMaxTextLength) + iPointsOfEllipsis;
		            }
		            sShareUrl += '&text=' + sText;
		        }
		    } else if (sNetwork === 'google-plus') {
		        sShareUrl = 'https://plus.google.com/share?' +
		            'url=' + encodeURIComponent(sLink)
		        ;
		    } else if (sNetwork === 'linkedin') {
		        sShareUrl = 'https://www.linkedin.com/shareArticle?' +
		            'url=' + encodeURIComponent(sLink) +
		            '&source=LinkedIn' +
		            '&title=' + encodeURIComponent(sLink) +
		            '&mini=true' +
		            '&original_referer=' + encodeURIComponent(sLink)
		        ;
		        if (sText) {
		            sShareUrl += '&summary=' + sText;
		        }
		    } else if (sNetwork === 'xing') {
				sShareUrl = 'https://www.xing.com/social_plugins/share?' +
					'url=' + encodeURIComponent(sLink)
				;
			} else if (sNetwork === 'pinterest') {
				sShareUrl = 'http://pinterest.com/pin/create/bookmarklet/?' +
					'url=' + encodeURIComponent(sLink) +
					//todo: '&media={_MEDIA_}' +
					'&is_video=false'
				;
				if (sText) {
					sShareUrl += '&description=' + sText;
				}
			}
	
		    if (sShareUrl) {
		        window.open(
		            sShareUrl,
		            '_blank',
		            'toolbar=0,status=0,width=626,height=436'
		        );
		        return true;
		    }
		    return false;
		};
	
	/***/ },
	/* 6 */
	/***/ function(module, exports) {
	
		/*!
		 * jQuery postMessage - v0.5 - 9/11/2009
		 * http://benalman.com/projects/jquery-postmessage-plugin/
		 *
		 * Copyright (c) 2009 "Cowboy" Ben Alman
		 * Dual licensed under the MIT and GPL licenses.
		 * http://benalman.com/about/license/
		 */
	
		// Script: jQuery postMessage: Cross-domain scripting goodness
		//
		// *Version: 0.5, Last updated: 9/11/2009*
		//
		// Project Home - http://benalman.com/projects/jquery-postmessage-plugin/
		// GitHub       - http://github.com/cowboy/jquery-postmessage/
		// Source       - http://github.com/cowboy/jquery-postmessage/raw/master/jquery.ba-postmessage.js
		// (Minified)   - http://github.com/cowboy/jquery-postmessage/raw/master/jquery.ba-postmessage.min.js (0.9kb)
		//
		// About: License
		//
		// Copyright (c) 2009 "Cowboy" Ben Alman,
		// Dual licensed under the MIT and GPL licenses.
		// http://benalman.com/about/license/
		//
		// About: Examples
		//
		// This working example, complete with fully commented code, illustrates one
		// way in which this plugin can be used.
		//
		// Iframe resizing - http://benalman.com/code/projects/jquery-postmessage/examples/iframe/
		//
		// About: Support and Testing
		//
		// Information about what version or versions of jQuery this plugin has been
		// tested with and what browsers it has been tested in.
		//
		// jQuery Versions - 1.3.2
		// Browsers Tested - Internet Explorer 6-8, Firefox 3, Safari 3-4, Chrome, Opera 9.
		//
		// About: Release History
		//
		// 0.5 - (9/11/2009) Improved cache-busting
		// 0.4 - (8/25/2009) Initial release
		jQuery.browser = {};
		jQuery.browser.mozilla = /mozilla/.test(navigator.userAgent.toLowerCase()) && !/webkit/.test(navigator.userAgent.toLowerCase());
		jQuery.browser.webkit = /webkit/.test(navigator.userAgent.toLowerCase());
		jQuery.browser.opera = /opera/.test(navigator.userAgent.toLowerCase());
		jQuery.browser.msie = /msie/.test(navigator.userAgent.toLowerCase());
		(function($){
		    '$:nomunge'; // Used by YUI compressor.
	
		    // A few vars used in non-awesome browsers.
		    var interval_id,
		        last_hash,
		        cache_bust = 1,
	
		    // A var used in awesome browsers.
		        rm_callback,
	
		    // A few convenient shortcuts.
		        window = this,
		        FALSE = !1,
	
		    // Reused internal strings.
		        postMessage = 'postMessage',
		        addEventListener = 'addEventListener',
	
		        p_receiveMessage,
	
		    // I couldn't get window.postMessage to actually work in Opera 9.64!
		        has_postMessage = window[postMessage] && !$.browser.opera;
	
		    // Method: jQuery.postMessage
		    //
		    // This method will call window.postMessage if available, setting the
		    // targetOrigin parameter to the base of the target_url parameter for maximum
		    // security in browsers that support it. If window.postMessage is not available,
		    // the target window's location.hash will be used to pass the message. If an
		    // object is passed as the message param, it will be serialized into a string
		    // using the jQuery.param method.
		    //
		    // Usage:
		    //
		    // > jQuery.postMessage( message, target_url [, target ] );
		    //
		    // Arguments:
		    //
		    //  message - (String) A message to be passed to the other frame.
		    //  message - (Object) An object to be serialized into a params string, using
		    //    the jQuery.param method.
		    //  target_url - (String) The URL of the other frame this window is
		    //    attempting to communicate with. This must be the exact URL (including
		    //    any query string) of the other window for this script to work in
		    //    browsers that don't support window.postMessage.
		    //  target - (Object) A reference to the other frame this window is
		    //    attempting to communicate with. If omitted, defaults to `parent`.
		    //
		    // Returns:
		    //
		    //  Nothing.
	
		    $[postMessage] = function( message, target_url, target ) {
		        if ( !target_url ) { return; }
	
		        // Serialize the message if not a string. Note that this is the only real
		        // jQuery dependency for this script. If removed, this script could be
		        // written as very basic JavaScript.
		        message = typeof message === 'string' ? message : $.param( message );
	
		        // Default to parent if unspecified.
		        target = target || parent;
	
		        if ( has_postMessage ) {
		            // The browser supports window.postMessage, so call it with a targetOrigin
		            // set appropriately, based on the target_url parameter.
		            target[postMessage]( message, target_url.replace( /([^:]+:\/\/[^\/]+).*/, '$1' ) );
	
		        } else if ( target_url ) {
		            // The browser does not support window.postMessage, so set the location
		            // of the target to target_url#message. A bit ugly, but it works! A cache
		            // bust parameter is added to ensure that repeat messages trigger the
		            // callback.
		            target.location = target_url.replace( /#.*$/, '' ) + '#' + (+new Date) + (cache_bust++) + '&' + message;
		        }
		    };
	
		    // Method: jQuery.receiveMessage
		    //
		    // Register a single callback for either a window.postMessage call, if
		    // supported, or if unsupported, for any change in the current window
		    // location.hash. If window.postMessage is supported and source_origin is
		    // specified, the source window will be checked against this for maximum
		    // security. If window.postMessage is unsupported, a polling loop will be
		    // started to watch for changes to the location.hash.
		    //
		    // Note that for simplicity's sake, only a single callback can be registered
		    // at one time. Passing no params will unbind this event (or stop the polling
		    // loop), and calling this method a second time with another callback will
		    // unbind the event (or stop the polling loop) first, before binding the new
		    // callback.
		    //
		    // Also note that if window.postMessage is available, the optional
		    // source_origin param will be used to test the event.origin property. From
		    // the MDC window.postMessage docs: This string is the concatenation of the
		    // protocol and "://", the host name if one exists, and ":" followed by a port
		    // number if a port is present and differs from the default port for the given
		    // protocol. Examples of typical origins are https://example.org (implying
		    // port 443), http://example.net (implying port 80), and http://example.com:8080.
		    //
		    // Usage:
		    //
		    // > jQuery.receiveMessage( callback [, source_origin ] [, delay ] );
		    //
		    // Arguments:
		    //
		    //  callback - (Function) This callback will execute whenever a <jQuery.postMessage>
		    //    message is received, provided the source_origin matches. If callback is
		    //    omitted, any existing receiveMessage event bind or polling loop will be
		    //    canceled.
		    //  source_origin - (String) If window.postMessage is available and this value
		    //    is not equal to the event.origin property, the callback will not be
		    //    called.
		    //  source_origin - (Function) If window.postMessage is available and this
		    //    function returns false when passed the event.origin property, the
		    //    callback will not be called.
		    //  delay - (Number) An optional zero-or-greater delay in milliseconds at
		    //    which the polling loop will execute (for browser that don't support
		    //    window.postMessage). If omitted, defaults to 100.
		    //
		    // Returns:
		    //
		    //  Nothing!
	
		    $.receiveMessage = p_receiveMessage = function( callback, source_origin, delay ) {
		        if ( has_postMessage ) {
		            // Since the browser supports window.postMessage, the callback will be
		            // bound to the actual event associated with window.postMessage.
	
		            if ( callback ) {
		                // Unbind an existing callback if it exists.
		                rm_callback && p_receiveMessage();
	
		                // Bind the callback. A reference to the callback is stored for ease of
		                // unbinding.
		                rm_callback = function(e) {
		                    if ( ( typeof source_origin === 'string' && e.origin !== source_origin )
		                        || ( $.isFunction( source_origin ) && source_origin( e.origin ) === FALSE ) ) {
		                        return FALSE;
		                    }
		                    callback( e );
		                };
		            }
	
		            if ( window[addEventListener] ) {
		                window[ callback ? addEventListener : 'removeEventListener' ]( 'message', rm_callback, FALSE );
		            } else {
		                window[ callback ? 'attachEvent' : 'detachEvent' ]( 'onmessage', rm_callback );
		            }
	
		        } else {
		            // Since the browser sucks, a polling loop will be started, and the
		            // callback will be called whenever the location.hash changes.
	
		            interval_id && clearInterval( interval_id );
		            interval_id = null;
	
		            if ( callback ) {
		                delay = typeof source_origin === 'number'
		                    ? source_origin
		                    : typeof delay === 'number'
		                    ? delay
		                    : 100;
	
		                interval_id = setInterval(function(){
		                    var hash = document.location.hash,
		                        re = /^#?\d+&/;
		                    if ( hash !== last_hash && re.test( hash ) ) {
		                        last_hash = hash;
		                        callback({ data: hash.replace( re, '' ) });
		                    }
		                }, delay );
		            }
		        }
		    };
	
		})(jQuery);
	
	/***/ },
	/* 7 */
	/***/ function(module, exports) {
	
		(function(){
	
			'use strict';
	
		var
		/** @const */ FormatOptions = [
			'decimals',
			'thousand',
			'mark',
			'prefix',
			'postfix',
			'encoder',
			'decoder',
			'negativeBefore',
			'negative',
			'edit',
			'undo'
		];
	
		// General
	
			// Reverse a string
			function strReverse ( a ) {
				return a.split('').reverse().join('');
			}
	
			// Check if a string starts with a specified prefix.
			function strStartsWith ( input, match ) {
				return input.substring(0, match.length) === match;
			}
	
			// Check is a string ends in a specified postfix.
			function strEndsWith ( input, match ) {
				return input.slice(-1 * match.length) === match;
			}
	
			// Throw an error if formatting options are incompatible.
			function throwEqualError( F, a, b ) {
				if ( (F[a] || F[b]) && (F[a] === F[b]) ) {
					throw new Error(a);
				}
			}
	
			// Check if a number is finite and not NaN
			function isValidNumber ( input ) {
				return typeof input === 'number' && isFinite( input );
			}
	
			// Provide rounding-accurate toFixed method.
			function toFixed ( value, decimals ) {
				var scale = Math.pow(10, decimals);
				return ( Math.round(value * scale) / scale).toFixed( decimals );
			}
	
	
		// Formatting
	
			// Accept a number as input, output formatted string.
			function formatTo ( decimals, thousand, mark, prefix, postfix, encoder, decoder, negativeBefore, negative, edit, undo, input ) {
	
				var originalInput = input, inputIsNegative, inputPieces, inputBase, inputDecimals = '', output = '';
	
				// Apply user encoder to the input.
				// Expected outcome: number.
				if ( encoder ) {
					input = encoder(input);
				}
	
				// Stop if no valid number was provided, the number is infinite or NaN.
				if ( !isValidNumber(input) ) {
					return false;
				}
	
				// Rounding away decimals might cause a value of -0
				// when using very small ranges. Remove those cases.
				if ( decimals !== false && parseFloat(input.toFixed(decimals)) === 0 ) {
					input = 0;
				}
	
				// Formatting is done on absolute numbers,
				// decorated by an optional negative symbol.
				if ( input < 0 ) {
					inputIsNegative = true;
					input = Math.abs(input);
				}
	
				// Reduce the number of decimals to the specified option.
				if ( decimals !== false ) {
					input = toFixed( input, decimals );
				}
	
				// Transform the number into a string, so it can be split.
				input = input.toString();
	
				// Break the number on the decimal separator.
				if ( input.indexOf('.') !== -1 ) {
					inputPieces = input.split('.');
	
					inputBase = inputPieces[0];
	
					if ( mark ) {
						inputDecimals = mark + inputPieces[1];
					}
	
				} else {
	
				// If it isn't split, the entire number will do.
					inputBase = input;
				}
	
				// Group numbers in sets of three.
				if ( thousand ) {
					inputBase = strReverse(inputBase).match(/.{1,3}/g);
					inputBase = strReverse(inputBase.join( strReverse( thousand ) ));
				}
	
				// If the number is negative, prefix with negation symbol.
				if ( inputIsNegative && negativeBefore ) {
					output += negativeBefore;
				}
	
				// Prefix the number
				if ( prefix ) {
					output += prefix;
				}
	
				// Normal negative option comes after the prefix. Defaults to '-'.
				if ( inputIsNegative && negative ) {
					output += negative;
				}
	
				// Append the actual number.
				output += inputBase;
				output += inputDecimals;
	
				// Apply the postfix.
				if ( postfix ) {
					output += postfix;
				}
	
				// Run the output through a user-specified post-formatter.
				if ( edit ) {
					output = edit ( output, originalInput );
				}
	
				// All done.
				return output;
			}
	
			// Accept a sting as input, output decoded number.
			function formatFrom ( decimals, thousand, mark, prefix, postfix, encoder, decoder, negativeBefore, negative, edit, undo, input ) {
	
				var originalInput = input, inputIsNegative, output = '';
	
				// User defined pre-decoder. Result must be a non empty string.
				if ( undo ) {
					input = undo(input);
				}
	
				// Test the input. Can't be empty.
				if ( !input || typeof input !== 'string' ) {
					return false;
				}
	
				// If the string starts with the negativeBefore value: remove it.
				// Remember is was there, the number is negative.
				if ( negativeBefore && strStartsWith(input, negativeBefore) ) {
					input = input.replace(negativeBefore, '');
					inputIsNegative = true;
				}
	
				// Repeat the same procedure for the prefix.
				if ( prefix && strStartsWith(input, prefix) ) {
					input = input.replace(prefix, '');
				}
	
				// And again for negative.
				if ( negative && strStartsWith(input, negative) ) {
					input = input.replace(negative, '');
					inputIsNegative = true;
				}
	
				// Remove the postfix.
				// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/slice
				if ( postfix && strEndsWith(input, postfix) ) {
					input = input.slice(0, -1 * postfix.length);
				}
	
				// Remove the thousand grouping.
				if ( thousand ) {
					input = input.split(thousand).join('');
				}
	
				// Set the decimal separator back to period.
				if ( mark ) {
					input = input.replace(mark, '.');
				}
	
				// Prepend the negative symbol.
				if ( inputIsNegative ) {
					output += '-';
				}
	
				// Add the number
				output += input;
	
				// Trim all non-numeric characters (allow '.' and '-');
				output = output.replace(/[^0-9\.\-.]/g, '');
	
				// The value contains no parse-able number.
				if ( output === '' ) {
					return false;
				}
	
				// Covert to number.
				output = Number(output);
	
				// Run the user-specified post-decoder.
				if ( decoder ) {
					output = decoder(output);
				}
	
				// Check is the output is valid, otherwise: return false.
				if ( !isValidNumber(output) ) {
					return false;
				}
	
				return output;
			}
	
	
		// Framework
	
			// Validate formatting options
			function validate ( inputOptions ) {
	
				var i, optionName, optionValue,
					filteredOptions = {};
	
				for ( i = 0; i < FormatOptions.length; i+=1 ) {
	
					optionName = FormatOptions[i];
					optionValue = inputOptions[optionName];
	
					if ( optionValue === undefined ) {
	
						// Only default if negativeBefore isn't set.
						if ( optionName === 'negative' && !filteredOptions.negativeBefore ) {
							filteredOptions[optionName] = '-';
						// Don't set a default for mark when 'thousand' is set.
						} else if ( optionName === 'mark' && filteredOptions.thousand !== '.' ) {
							filteredOptions[optionName] = '.';
						} else {
							filteredOptions[optionName] = false;
						}
	
					// Floating points in JS are stable up to 7 decimals.
					} else if ( optionName === 'decimals' ) {
						if ( optionValue >= 0 && optionValue < 8 ) {
							filteredOptions[optionName] = optionValue;
						} else {
							throw new Error(optionName);
						}
	
					// These options, when provided, must be functions.
					} else if ( optionName === 'encoder' || optionName === 'decoder' || optionName === 'edit' || optionName === 'undo' ) {
						if ( typeof optionValue === 'function' ) {
							filteredOptions[optionName] = optionValue;
						} else {
							throw new Error(optionName);
						}
	
					// Other options are strings.
					} else {
	
						if ( typeof optionValue === 'string' ) {
							filteredOptions[optionName] = optionValue;
						} else {
							throw new Error(optionName);
						}
					}
				}
	
				// Some values can't be extracted from a
				// string if certain combinations are present.
				throwEqualError(filteredOptions, 'mark', 'thousand');
				throwEqualError(filteredOptions, 'prefix', 'negative');
				throwEqualError(filteredOptions, 'prefix', 'negativeBefore');
	
				return filteredOptions;
			}
	
			// Pass all options as function arguments
			function passAll ( options, method, input ) {
				var i, args = [];
	
				// Add all options in order of FormatOptions
				for ( i = 0; i < FormatOptions.length; i+=1 ) {
					args.push(options[FormatOptions[i]]);
				}
	
				// Append the input, then call the method, presenting all
				// options as arguments.
				args.push(input);
				return method.apply('', args);
			}
	
			/** @constructor */
			function wNumb ( options ) {
	
				if ( !(this instanceof wNumb) ) {
					return new wNumb ( options );
				}
	
				if ( typeof options !== "object" ) {
					return;
				}
	
				options = validate(options);
	
				// Call 'formatTo' with proper arguments.
				this.to = function ( input ) {
					return passAll(options, formatTo, input);
				};
	
				// Call 'formatFrom' with proper arguments.
				this.from = function ( input ) {
					return passAll(options, formatFrom, input);
				};
			}
	
			/** @export */
			window.wNumb = wNumb;
	
		}());
	
	
	/***/ },
	/* 8 */
	/***/ function(module, exports) {
	
		/*
		 @module jquery.draggableCarousel.js
		 jQuery plugin, designed to provide basic functionality of carousel, which can be dragged by mouse or touch interface.
		 Carousel supports navigation back and forward and also direct navigation. Supposed to work in collaboration with jquery.pageIndicator.js
		 */
		(function( $ ){
	
			var methods = {
				init : function( oOptions ) {
					return this.each(function(){
						var $this = $(this);
	
						var oData = $this.data('draggableCarousel');
	
						if ( !oData ) {
							var oSettings = {
								mouseTarget                 : null,
								keyboardTarget              : null,
								pageIndicator               : $(),
								slave                       : $(),
								autoAnimationDelay          : 7000,
								responsiveContainer         : $()
							};
							if ( oOptions ) {
								$.extend( oSettings, oOptions );
							}
	
							oData = {
								oSettings                       : oSettings,
								$carouselInstance               : $this,
								$masterScrollable               : $this,
								$slaveScrollable                : oSettings.slave,
								$scrollables                    : $this.add(oSettings.slave),
								$animationBeacon                : $('<div class="animation_beacon" style="width:0;height:0;display:none;"></div>').appendTo($this),
								iScrollStep                     : 0,
								iHalfScrollStep                 : 0,
								iMinPosition                    : 0,
								iMaxPosition                    : 0,
								iStackHeight                    : 0,
								iTotalSections                  : 0,
								iTotalHalfSections              : 0,
								bEnableSlideShow                : 1,
								bMouseIsOver                    : 0,
								bDragInProgress                 : 0,
								bCancelClick                    : 0,
								iCurrentSection                 : 0,
								iSliderAutoAnimationTimeout     : 0,
								sAnimatedProperty               : 'left',
								sMouseAxis                      : 'X',
								iPreviousScreenWidth            : 0,
								$window                         : $(window),
	
								initMetrices                    : null
							};
							$this.data('draggableCarousel', oData);
	
							if (!oData.oSettings.mouseTarget) {
								oData.oSettings.mouseTarget = $this;
							}
	
							if (!oData.oSettings.keyboardTarget) {
								oData.oSettings.keyboardTarget = $this;
							}
	
							oData.iTotalHalfSections = oData.$scrollables.find(".cell.half").length;
							oData.iTotalSections = oData.$masterScrollable.find(".cell").length - Math.floor(oData.iTotalHalfSections/2);
	
							oData.initMetrices = function () {
								oData.iScrollStep = oData.$carouselInstance.parent().width();
								oData.iHalfScrollStep = oData.iScrollStep / 2;
								oData.iMinPosition = oData.iScrollStep - oData.$masterScrollable.outerWidth();
								oData.iStackHeight = oData.iTotalSections * oData.iScrollStep;
	
								oData.$scrollables.css({
									width : oData.iScrollStep * (oData.iTotalSections + 1)
								});
								if (oData.$masterScrollable.find('.cell-clone').length === 0 && oData.$masterScrollable.find('.cell').length > 1) {
									oData.$scrollables.each(function () {
										var $this = $(this);
										/* adding odd and even classes to the elements */
										$this.find('.cell:odd').addClass('odd');
										$this.find('.cell:even').addClass('even');
										/* cloning last-cell and putting it before others */
										var $lastCell = $this.find(".cell:last");
										if ($lastCell.hasClass('half')) {
											$lastCell.prev('.cell.half').clone().removeClass('cell').addClass('cell-clone before-last').css({
												left: -oData.iScrollStep
											}).appendTo($this);
	
											$lastCell.clone().removeClass('cell').addClass('cell-clone last').css({
												left: -oData.iHalfScrollStep
											}).appendTo($this);
										} else {
											$lastCell.clone().removeClass('cell').addClass('cell-clone last').css({
												left: -oData.iScrollStep
											}).appendTo($this);
										}
										/* cloning first-cell and putting it after others */
										var $firstCell = $this.find(".cell:first");
										$firstCell.clone().removeClass('cell').addClass('cell-clone first').appendTo($this);
										if ($firstCell.hasClass('half')) {
											$firstCell.next('.cell.half').clone().removeClass('cell').addClass('cell-clone after-first').appendTo($this);
										}
									});
								}
	
								oData.$scrollables.find(".cell, .cell-clone").css('width', oData.iScrollStep);
								oData.$scrollables.find(".cell.half, .cell-clone.half").css('width', oData.iScrollStep/2);
							};
	
							oData.windowResizeHandler = function (oEvent) {
								if ((typeof oEvent !== 'undefined') && (oData.$window.width() === oData.iPreviousScreenWidth)) {
									return;
								}
								oData.iPreviousScreenWidth = oData.$window.width();
								oData.$scrollables.stop(true).css('left', 0);
								oData.iCurrentSection = 0;
	
								oData.initMetrices();
	
								oData.$scrollables.find(".cell-clone.last:not(.half), .cell-clone.before-last").css('left', -oData.iScrollStep);
								oData.$scrollables.find(".cell-clone.last.half").css('left', -oData.iHalfScrollStep);
	
								if (oData.oSettings.responsiveContainer.length > 0) {
									oData.oSettings.responsiveContainer.css('height', oData.$scrollables.find(".cell").height());
								}
	
								oData.$carouselInstance.trigger({
									type: 'draggableCarousel.sectionChange',
									section: oData.iCurrentSection
								});
							};
	
							oData.mouseClickHandler = function (oEvent) {
								if (oData.bCancelClick) {
									oData.bCancelClick = 0;
									oEvent.preventDefault();
								}
							};
	
							oData.mouseDownHandler = function (oEvent) {
								oData.pauseSlideShow();
								oData.bDragInProgress = 1;
	
								oData.$scrollables.stop(true);
								oData.$animationBeacon.stop(true);
								oData.initMetrices();
								oData.oSettings.mouseTarget.addClass("grab");
	
								var iHalfScrollStep = oData.iHalfScrollStep;
								var iStackHeight = oData.iStackHeight;
	
								var iMouseDownPosition = 0; /* see below */
								var iMouseDownDraggablePosition = parseInt(oData.$masterScrollable.css(oData.sAnimatedProperty).replace('px',''), 10);
								var bCancelNative = oEvent.type === 'mousedown';
								var bCancelClick = false;
	
								function mouseMoveHandler(oEvent) {
									var iDelta = $.extractCoordinateFromMouseEvent(oEvent, oData.sMouseAxis) - iMouseDownPosition;
									var iCurrentPosition = iMouseDownDraggablePosition + iDelta;
									if (iDelta > 10 || iDelta < -10) {
										bCancelNative = true;
										bCancelClick = true;
									}
	
									if (iCurrentPosition > iHalfScrollStep) {
										iCurrentPosition = iCurrentPosition - iStackHeight;
										iMouseDownDraggablePosition = iMouseDownDraggablePosition - iStackHeight;
									} else if (iCurrentPosition < (iHalfScrollStep - iStackHeight)) {
										iCurrentPosition = iCurrentPosition + iStackHeight;
										iMouseDownDraggablePosition = iMouseDownDraggablePosition + iStackHeight;
									}
	
									oData.$scrollables.css( oData.sAnimatedProperty, iCurrentPosition );
	
									if (bCancelNative) {
										oEvent.preventDefault();
										oEvent.stopImmediatePropagation();
									}
								}
	
								function mouseUpHandler(oEvent) {
									$(document)
										.off('mousemove touchmove', mouseMoveHandler)
										.off('mouseup mouseout touchend touchleave touchcancel', mouseUpHandler);
	
									oData.oSettings.mouseTarget.removeClass("grab");
	
									oData.relaxPosition();
	
									oData.bDragInProgress = 0;
									oData.checkSlideShow();
	
									oEvent.preventDefault();
	
									oData.bCancelClick = bCancelClick;
								}
	
								iMouseDownPosition = $.extractCoordinateFromMouseEvent(oEvent, oData.sMouseAxis);
	
								$(document)
									.on('mousemove touchmove', mouseMoveHandler)
									.on('mouseup touchend touchleave touchcancel', mouseUpHandler);
	
								if (bCancelNative) {
									oEvent.preventDefault();
									oEvent.stopImmediatePropagation();
								}
							};
	
							oData.normalizePosition = function (iPosition, iNormalizationStep) {
								while (iPosition < oData.iMinPosition) {
									iPosition += iNormalizationStep;
								}
	
								while (iPosition > oData.iMaxPosition) {
									iPosition -= iNormalizationStep;
								}
	
								return iPosition;
							};
	
							oData.findClosestToTheLeft = function (iCurrentPosition, iTargetPosition, iStackHeight) {
								var iClosestTargetToTheLeft = iTargetPosition;
								var iLeftCurrentPositionMirror = iCurrentPosition - iStackHeight;
								while (iClosestTargetToTheLeft < iLeftCurrentPositionMirror) {
									iClosestTargetToTheLeft = iClosestTargetToTheLeft + iStackHeight;
								}
								while (iClosestTargetToTheLeft > iCurrentPosition) {
									iClosestTargetToTheLeft = iClosestTargetToTheLeft - iStackHeight;
								}
	
								return iClosestTargetToTheLeft;
							};
	
							oData.findClosestToTheRight = function (iCurrentPosition, iTargetPosition, iStackHeight) {
								var iClosestTargetToTheLeft = iTargetPosition;
								var iRightCurrentPositionMirror = iCurrentPosition + iStackHeight;
								while (iClosestTargetToTheLeft > iRightCurrentPositionMirror) {
									iClosestTargetToTheLeft = iClosestTargetToTheLeft - iStackHeight;
								}
								while (iClosestTargetToTheLeft < iCurrentPosition) {
									iClosestTargetToTheLeft = iClosestTargetToTheLeft + iStackHeight;
								}
	
								return iClosestTargetToTheLeft;
							};
	
							oData.onAnimationFinished = function() {
								this._animatingSlide = false;
							}
	
							oData.relaxPosition = function (iTargetPosition, iForceDirection) {
								var oData = this;
								var iCurrentPosition = parseInt(oData.$masterScrollable.css(oData.sAnimatedProperty).replace('px',''), 10);
								var sAnimationDuration = 1600;
								var sAnimationEasing = 'easeInOutQuart';
								var iScrollStep = oData.iScrollStep;
								var iStackHeight = oData.iStackHeight;
								var bAutoMode = typeof iTargetPosition === 'undefined';
								var iDelta;
								var iStartPosition;
	
								iCurrentPosition = oData.normalizePosition(iCurrentPosition, iStackHeight);
								oData.$scrollables.stop(true).css( oData.sAnimatedProperty, iCurrentPosition );
	
								if (bAutoMode) {
									sAnimationDuration = 300;
									sAnimationEasing = 'linear';
									iDelta = iCurrentPosition;
									while (iDelta < 0) {
										iDelta = iDelta + iScrollStep;
									}
									iTargetPosition = iCurrentPosition - iDelta;
									if (iDelta > (iScrollStep - iDelta)) {
										iTargetPosition = iCurrentPosition - iDelta + iScrollStep;
									}
	
									iTargetPosition = oData.normalizePosition(iTargetPosition, iScrollStep);
								}
	
								oData.iCurrentSection = (-iTargetPosition/iScrollStep) % oData.iTotalSections;
								oData.oSettings.pageIndicator.pageIndicator('setCurrentPage', oData.iCurrentSection);
								oData.$carouselInstance.trigger({
									type: 'draggableCarousel.sectionChange',
									section: oData.iCurrentSection
								});
	
								var iClosestTargetToTheLeft = oData.findClosestToTheLeft(iCurrentPosition, iTargetPosition, iStackHeight);
								var iClosestTargetToTheRight = oData.findClosestToTheRight(iCurrentPosition, iTargetPosition, iStackHeight);
	
								if (typeof iForceDirection === 'undefined' || iForceDirection === 0) {
									var iDistanceToTheLeft = Math.abs(iTargetPosition - iClosestTargetToTheLeft);
									var iDistanceToTheRight = Math.abs(iTargetPosition - iClosestTargetToTheRight);
	
									if (iDistanceToTheLeft < iDistanceToTheRight) {
										iTargetPosition = iClosestTargetToTheLeft;
									} else {
										iTargetPosition = iClosestTargetToTheRight;
									}
								} else if (iForceDirection < 0) {
									iTargetPosition = iClosestTargetToTheLeft;
								} else if (iForceDirection > 0) {
									iTargetPosition = iClosestTargetToTheRight;
								}
								var bHasToGoOverDecreaseEdge = iTargetPosition <= oData.iMinPosition;
								var bHasToGoOverIncreaseEdge = iTargetPosition >= oData.iMaxPosition;
								var bSimpleAnimationPossible = bAutoMode || (!bHasToGoOverIncreaseEdge && !bHasToGoOverDecreaseEdge);
	
								if (bSimpleAnimationPossible) {
									var obj = {};
									obj[oData.sAnimatedProperty] = iTargetPosition;
									oData.$scrollables.stop(true);
									oData._animatingSlide = true;
									oData.$scrollables.animate(
										obj,{
											duration: sAnimationDuration,
											easing: sAnimationEasing
										});
								} else if (bHasToGoOverDecreaseEdge) {
									// note that current position is always negative, this fact explains signs in the if statement
									iStartPosition = iCurrentPosition;
									iDelta = iTargetPosition - iStartPosition;
									oData.$animationBeacon.stop(true);
									oData._animatingSlide = true;
									oData.$animationBeacon.css({
										opacity : 0
									}).animate({
										opacity: 1
									},{
										duration: sAnimationDuration,
										easing: sAnimationEasing,
										complete: $.proxy(oData.onAnimationFinished, oData),
										step : function ( fNow ) {
											var fCurrentPosition = iDelta * fNow + iStartPosition;
											if (fCurrentPosition <= (-iStackHeight)) {
												fCurrentPosition = fCurrentPosition + iStackHeight;
											}
											oData.$scrollables.css( oData.sAnimatedProperty, fCurrentPosition );
										}
									});
								} else {
									iStartPosition = iCurrentPosition;
									iDelta = iTargetPosition - iStartPosition;
									oData.$animationBeacon.stop(true).css({
										opacity : 0
									});
									oData._animatingSlide = true;
									oData.$animationBeacon.animate({
										opacity: 1
									},{
										duration: sAnimationDuration,
										easing: sAnimationEasing,
										complete: $.proxy(oData.onAnimationFinished, oData),
										step : function ( fNow ) {
											var fCurrentPosition = iDelta * fNow + iStartPosition;
											if (fCurrentPosition >= (iScrollStep)) {
												fCurrentPosition = fCurrentPosition - iStackHeight;
											}
											oData.$scrollables.css( oData.sAnimatedProperty, fCurrentPosition );
										}
									});
								}
							};
	
							oData.goToPage = function (iPage) {
								if (typeof iPage === "undefined") {
									iPage = oData.iCurrentSection||0;
								}
								oData.relaxPosition( -iPage * oData.iScrollStep );
							};
	
							oData.goToPrevPage = function () {
								var iNextPage = oData.iCurrentSection - 1;
								if (iNextPage < 0) {
									iNextPage = oData.iTotalSections - 1;
								}
	
								oData.relaxPosition( -iNextPage * oData.iScrollStep, 1 );
							};
	
							oData.goToNextPage = function () {
								var iNextPage = oData.iCurrentSection + 1;
								if (iNextPage >= oData.iTotalSections) {
									iNextPage = 0;
								}
	
								oData.relaxPosition( -iNextPage * oData.iScrollStep, -1 );
							};
	
							oData.keyDownHandler = function (oEvent) {
								switch (oEvent.keyCode) {
									/* left-arrow */
									case 37:
										oData.goToPrevPage();
										break;
									/* right-arrow */
									case 39:
										oData.goToNextPage();
										break;
								}
							};
	
							oData.focusHandler = function () {
								oData.pauseSlideShow();
							};
	
							oData.blurHandler = function (oEvent) {
								if (!$.contains(oData.oSettings.keyboardTarget, oEvent.relatedTarget)) {
									oData.resumeSlideShow();
								}
							};
	
							oData.autoAnimate = function () {
								if (oData._animatingSlide) return;
								this.iSliderAutoAnimationTimeout = 0;
								oData.goToNextPage();
								oData.resumeSlideShow();
							};
	
							oData.pauseSlideShow = function () {
								clearTimeout(this.iSliderAutoAnimationTimeout);
								this.iSliderAutoAnimationTimeout = 0;
							};
	
							oData.resumeSlideShow = function () {
								if (oData.oSettings.autoAnimationDelay === 0 || this.iSliderAutoAnimationTimeout > 0) {
									/* in case auto slideshow is disabled or already initialized - just exit */
									return;
								}
								var self = this;
								this.iSliderAutoAnimationTimeout = setTimeout(
									function () {
										self.autoAnimate();
									},
									this.oSettings.autoAnimationDelay
								);
							};
	
							oData.checkSlideShow = function () {
								if (oData.bMouseIsOver || oData.bDragInProgress ) {
									oData.pauseSlideShow();
								} else {
									oData.resumeSlideShow();
								}
							};
	
							oData.updateSlideSize = function () {
								oData.windowResizeHandler();
							};
	
							/* launching the slider */
							$(window).on('resize',oData.windowResizeHandler);
							oData.windowResizeHandler();
	
							if (oData.iTotalSections < 2) {
								oData.oSettings.mouseTarget.removeClass("draggable");
								oData.oSettings.pageIndicator.hide();
								return;
							}
	
							oData.oSettings.pageIndicator.pageIndicator({
								totalPages      : oData.iTotalSections,
								initialPage     : oData.iCurrentSection
							});
	
							oData.oSettings.pageIndicator.on('pageIndicator.pageChange', function (oEvent) {
								oData.goToPage(oEvent.page);
							});
	
							oData.oSettings.mouseTarget
								.on('mousedown touchstart', oData.mouseDownHandler)
								.on('click', oData.mouseClickHandler)
								.on('mouseover', function () {
									oData.bMouseIsOver = 1;
									oData.checkSlideShow();
								})
								.on('mouseout', function () {
									oData.bMouseIsOver = 0;
									oData.checkSlideShow();
								})
								.on('tap', function (oEvent) {
									// There is a bug on Chrome for Android:
									// click events do not work if link elements are inside a container
									// that has touch events. The workaround is to listen to a 'tap' event
									// and delegate the click to the links.
									// TouchSwipe has the same problem, this is where I got the idea for the fix from:
									// https://github.com/mattbryson/TouchSwipe-Jquery-Plugin/issues/112
									var $target = $(oEvent.target),
										$link = null
										;
									if ($target.prop('tagName').toLowerCase() === 'a') {
										$link = $target;
									} else {
										$link = $target.parents('a');
									}
									if ($link.length > 0) {
										$link.get(0).click();
									}
								})
							;
							oData.oSettings.keyboardTarget
								.on('keydown', oData.keyDownHandler)
								.add(oData.oSettings.keyboardTarget.find(':focusable'))
								.on('focus', oData.focusHandler)
								.on('blur', oData.blurHandler);
	
							oData.resumeSlideShow();
						}
					});
				},
	
				reset: function () {
	
					var oData = this.eq(0).data("draggableCarousel");
					if (!oData) {
						return this;
					}
	
					oData.$scrollables.find('.cell-clone, .animation_beacon').remove();
					oData.$scrollables.find('.cell')
						.css('width', '')
						.css('height', '')
					;
					oData.$masterScrollable
						.css('width', '')
						.css('height', '')
						.css('left', '')
					;
					oData.$carouselInstance.parent()
						.css('width', '')
						.css('height', '')
					;
	
					oData.oSettings.mouseTarget
						.off('mousedown touchstart', oData.mouseDownHandler)
						.off('click', oData.mouseClickHandler)
						.off('mouseover')
						.off('mouseout');
					oData.oSettings.keyboardTarget
						.off('keydown', oData.keyDownHandler)
						.off('focus', oData.focusHandler)
						.off('blur', oData.blurHandler);
					$(window).off('resize',oData.windowResizeHandler);
					$(document)
						.off('mousemove touchmove')
						.off('mouseup touchend touchleave touchcancel');
	
					oData.oSettings.pageIndicator.pageIndicator('reset');
					this.eq(0).data("draggableCarousel", null);
					return this;
				},
	
				getSectionCount : function () {
					var oData = this.eq(0).data("draggableCarousel");
					if (oData) {
						return oData.iTotalSections;
					}
					return 0;
				},
	
				goToPage : function ( iPage ) {
					return this.each(function(){
						var oData = $(this).data("draggableCarousel");
						if (oData) {
							oData.goToPage(iPage);
						}
					});
				},
	
				goToPrevPage : function () {
					return this.each(function(){
						var oData = $(this).data("draggableCarousel");
						if (oData) {
							oData.goToPrevPage();
						}
					});
				},
	
				goToNextPage : function () {
					return this.each(function(){
						var oData = $(this).data("draggableCarousel");
						if (oData) {
							oData.goToNextPage();
						}
					});
				},
	
				pauseSlideShow : function () {
					return this.each(function(){
						var oData = $(this).data("draggableCarousel");
						if (oData) {
							oData.pauseSlideShow();
						}
					});
				},
	
				resumeSlideShow : function () {
					return this.each(function(){
						var oData = $(this).data("draggableCarousel");
						if (oData) {
							oData.resumeSlideShow();
						}
					});
				},
	
				updateSlideSize : function () {
					return this.each(function(){
						var oData = $(this).data("draggableCarousel");
						if (oData) {
							oData.updateSlideSize();
						}
					});
				}
			};
	
			$.fn.draggableCarousel = function( method ) {
				if ( methods[method] ) {
					return methods[method].apply( this, Array.prototype.slice.call( arguments, 1 ));
				} else if ( typeof method === 'object' || ! method ) {
					return methods.init.apply( this, arguments );
				} else {
					$.error( 'Method ' +  method + ' does not exist on jQuery.draggableCarousel' );
					return false;
				}
			};
		})( jQuery );
	
	/***/ },
	/* 9 */
	/***/ function(module, exports) {
	
		/*!
		 * jQuery Easing v1.3 - http://gsgd.co.uk/sandbox/jquery/easing/
		 * Open source under the BSD License.
		 * Copyright © 2008 George McGinley Smith
		 */
		/*
		 * jQuery Easing v1.3 - http://gsgd.co.uk/sandbox/jquery/easing/
		 *
		 * Uses the built in easing capabilities added In jQuery 1.1
		 * to offer multiple easing options
		 *
		 * TERMS OF USE - jQuery Easing
		 * 
		 * Open source under the BSD License. 
		 * 
		 * Copyright © 2008 George McGinley Smith
		 * All rights reserved.
		 * 
		 * Redistribution and use in source and binary forms, with or without modification, 
		 * are permitted provided that the following conditions are met:
		 * 
		 * Redistributions of source code must retain the above copyright notice, this list of 
		 * conditions and the following disclaimer.
		 * Redistributions in binary form must reproduce the above copyright notice, this list 
		 * of conditions and the following disclaimer in the documentation and/or other materials 
		 * provided with the distribution.
		 * 
		 * Neither the name of the author nor the names of contributors may be used to endorse 
		 * or promote products derived from this software without specific prior written permission.
		 * 
		 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY 
		 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
		 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
		 *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
		 *  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
		 *  GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED 
		 * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
		 *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED 
		 * OF THE POSSIBILITY OF SUCH DAMAGE. 
		 *
		*/
	
		// t: current time, b: begInnIng value, c: change In value, d: duration
		jQuery.easing['jswing'] = jQuery.easing['swing'];
	
		jQuery.extend( jQuery.easing,
		{
			def: 'easeOutQuad',
			swing: function (x, t, b, c, d) {
				//alert(jQuery.easing.default);
				return jQuery.easing[jQuery.easing.def](x, t, b, c, d);
			},
			easeInQuad: function (x, t, b, c, d) {
				return c*(t/=d)*t + b;
			},
			easeOutQuad: function (x, t, b, c, d) {
				return -c *(t/=d)*(t-2) + b;
			},
			easeInOutQuad: function (x, t, b, c, d) {
				if ((t/=d/2) < 1) return c/2*t*t + b;
				return -c/2 * ((--t)*(t-2) - 1) + b;
			},
			easeInCubic: function (x, t, b, c, d) {
				return c*(t/=d)*t*t + b;
			},
			easeOutCubic: function (x, t, b, c, d) {
				return c*((t=t/d-1)*t*t + 1) + b;
			},
			easeInOutCubic: function (x, t, b, c, d) {
				if ((t/=d/2) < 1) return c/2*t*t*t + b;
				return c/2*((t-=2)*t*t + 2) + b;
			},
			easeInQuart: function (x, t, b, c, d) {
				return c*(t/=d)*t*t*t + b;
			},
			easeOutQuart: function (x, t, b, c, d) {
				return -c * ((t=t/d-1)*t*t*t - 1) + b;
			},
			easeInOutQuart: function (x, t, b, c, d) {
				if ((t/=d/2) < 1) return c/2*t*t*t*t + b;
				return -c/2 * ((t-=2)*t*t*t - 2) + b;
			},
			easeInQuint: function (x, t, b, c, d) {
				return c*(t/=d)*t*t*t*t + b;
			},
			easeOutQuint: function (x, t, b, c, d) {
				return c*((t=t/d-1)*t*t*t*t + 1) + b;
			},
			easeInOutQuint: function (x, t, b, c, d) {
				if ((t/=d/2) < 1) return c/2*t*t*t*t*t + b;
				return c/2*((t-=2)*t*t*t*t + 2) + b;
			},
			easeInSine: function (x, t, b, c, d) {
				return -c * Math.cos(t/d * (Math.PI/2)) + c + b;
			},
			easeOutSine: function (x, t, b, c, d) {
				return c * Math.sin(t/d * (Math.PI/2)) + b;
			},
			easeInOutSine: function (x, t, b, c, d) {
				return -c/2 * (Math.cos(Math.PI*t/d) - 1) + b;
			},
			easeInExpo: function (x, t, b, c, d) {
				return (t==0) ? b : c * Math.pow(2, 10 * (t/d - 1)) + b;
			},
			easeOutExpo: function (x, t, b, c, d) {
				return (t==d) ? b+c : c * (-Math.pow(2, -10 * t/d) + 1) + b;
			},
			easeInOutExpo: function (x, t, b, c, d) {
				if (t==0) return b;
				if (t==d) return b+c;
				if ((t/=d/2) < 1) return c/2 * Math.pow(2, 10 * (t - 1)) + b;
				return c/2 * (-Math.pow(2, -10 * --t) + 2) + b;
			},
			easeInCirc: function (x, t, b, c, d) {
				return -c * (Math.sqrt(1 - (t/=d)*t) - 1) + b;
			},
			easeOutCirc: function (x, t, b, c, d) {
				return c * Math.sqrt(1 - (t=t/d-1)*t) + b;
			},
			easeInOutCirc: function (x, t, b, c, d) {
				if ((t/=d/2) < 1) return -c/2 * (Math.sqrt(1 - t*t) - 1) + b;
				return c/2 * (Math.sqrt(1 - (t-=2)*t) + 1) + b;
			},
			easeInElastic: function (x, t, b, c, d) {
				var s=1.70158;var p=0;var a=c;
				if (t==0) return b;  if ((t/=d)==1) return b+c;  if (!p) p=d*.3;
				if (a < Math.abs(c)) { a=c; var s=p/4; }
				else var s = p/(2*Math.PI) * Math.asin (c/a);
				return -(a*Math.pow(2,10*(t-=1)) * Math.sin( (t*d-s)*(2*Math.PI)/p )) + b;
			},
			easeOutElastic: function (x, t, b, c, d) {
				var s=1.70158;var p=0;var a=c;
				if (t==0) return b;  if ((t/=d)==1) return b+c;  if (!p) p=d*.3;
				if (a < Math.abs(c)) { a=c; var s=p/4; }
				else var s = p/(2*Math.PI) * Math.asin (c/a);
				return a*Math.pow(2,-10*t) * Math.sin( (t*d-s)*(2*Math.PI)/p ) + c + b;
			},
			easeInOutElastic: function (x, t, b, c, d) {
				var s=1.70158;var p=0;var a=c;
				if (t==0) return b;  if ((t/=d/2)==2) return b+c;  if (!p) p=d*(.3*1.5);
				if (a < Math.abs(c)) { a=c; var s=p/4; }
				else var s = p/(2*Math.PI) * Math.asin (c/a);
				if (t < 1) return -.5*(a*Math.pow(2,10*(t-=1)) * Math.sin( (t*d-s)*(2*Math.PI)/p )) + b;
				return a*Math.pow(2,-10*(t-=1)) * Math.sin( (t*d-s)*(2*Math.PI)/p )*.5 + c + b;
			},
			easeInBack: function (x, t, b, c, d, s) {
				if (s == undefined) s = 1.70158;
				return c*(t/=d)*t*((s+1)*t - s) + b;
			},
			easeOutBack: function (x, t, b, c, d, s) {
				if (s == undefined) s = 1.70158;
				return c*((t=t/d-1)*t*((s+1)*t + s) + 1) + b;
			},
			easeInOutBack: function (x, t, b, c, d, s) {
				if (s == undefined) s = 1.70158; 
				if ((t/=d/2) < 1) return c/2*(t*t*(((s*=(1.525))+1)*t - s)) + b;
				return c/2*((t-=2)*t*(((s*=(1.525))+1)*t + s) + 2) + b;
			},
			easeInBounce: function (x, t, b, c, d) {
				return c - jQuery.easing.easeOutBounce (x, d-t, 0, c, d) + b;
			},
			easeOutBounce: function (x, t, b, c, d) {
				if ((t/=d) < (1/2.75)) {
					return c*(7.5625*t*t) + b;
				} else if (t < (2/2.75)) {
					return c*(7.5625*(t-=(1.5/2.75))*t + .75) + b;
				} else if (t < (2.5/2.75)) {
					return c*(7.5625*(t-=(2.25/2.75))*t + .9375) + b;
				} else {
					return c*(7.5625*(t-=(2.625/2.75))*t + .984375) + b;
				}
			},
			easeInOutBounce: function (x, t, b, c, d) {
				if (t < d/2) return jQuery.easing.easeInBounce (x, t*2, 0, c, d) * .5 + b;
				return jQuery.easing.easeOutBounce (x, t*2-d, 0, c, d) * .5 + c*.5 + b;
			}
		});
	
		/*
		 *
		 * TERMS OF USE - EASING EQUATIONS
		 * 
		 * Open source under the BSD License. 
		 * 
		 * Copyright © 2001 Robert Penner
		 * All rights reserved.
		 * 
		 * Redistribution and use in source and binary forms, with or without modification, 
		 * are permitted provided that the following conditions are met:
		 * 
		 * Redistributions of source code must retain the above copyright notice, this list of 
		 * conditions and the following disclaimer.
		 * Redistributions in binary form must reproduce the above copyright notice, this list 
		 * of conditions and the following disclaimer in the documentation and/or other materials 
		 * provided with the distribution.
		 * 
		 * Neither the name of the author nor the names of contributors may be used to endorse 
		 * or promote products derived from this software without specific prior written permission.
		 * 
		 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY 
		 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
		 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
		 *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
		 *  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
		 *  GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED 
		 * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
		 *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED 
		 * OF THE POSSIBILITY OF SUCH DAMAGE. 
		 *
		 */
	
	/***/ },
	/* 10 */
	/***/ function(module, exports) {
	
		/*
		 * @module jquery.extractCoordinateFromMouseEvent.js
		 * This extension adds global helper function to jQuery which extracts the coordinate from mouse event in efficient way.
		 * The code below does probably look like black magic, but is very straight-forward:
		 * we creating here kind of polymorph function, which implementation depends on the device it
		 * is running on. After first call function replaces its implementation with optimized one for the device it's running on.
		 * By this complexity we want to reduce as much as possible the lag between mouse events and animation update,
		 * that mostly targeted on speeding up the mousemove events processing.
		 */
		(function( $ ){
		    /* Android case */
		    function androidExtractCoordinateFromMouseEvent (oEvent, sAxis) {
		        var oOriginalEvent = oEvent.originalEvent;
		        if (oOriginalEvent.changedTouches && oOriginalEvent.changedTouches.length > 0) {
		            return oOriginalEvent.changedTouches[0]['screen' + sAxis];
		        } else {
		            return 0;
		        }
		    }
	
		    /* desktop case */
		    function desktopExtractCoordinateFromMouseEvent (oEvent, sAxis) {
		        return oEvent.originalEvent['page' + sAxis];
		    }
	
		    /* iOS case */
		    function iOSExtractCoordinateFromMouseEvent (oEvent, sAxis) {
		        return oEvent.originalEvent['screen' + sAxis];
		    }
	
		    /* some other unknown case */
		    function extractCoordinateFromMouseEvent () {
		        return 0;
		    }
	
		    $.extractCoordinateFromMouseEvent = function(oEvent, sAxis) {
		        var oOriginalEvent = oEvent.originalEvent;
		        if (typeof oOriginalEvent.changedTouches !== 'undefined') {
		            /* Android case */
		            $.extractCoordinateFromMouseEvent = androidExtractCoordinateFromMouseEvent;
		        } else if (typeof oOriginalEvent['page' + sAxis] !== 'undefined') {
		            /* desktop case */
		            $.extractCoordinateFromMouseEvent = desktopExtractCoordinateFromMouseEvent;
		        } else if (typeof oOriginalEvent['screen' + sAxis] !== 'undefined') {
		            /* iOS case */
		            $.extractCoordinateFromMouseEvent = iOSExtractCoordinateFromMouseEvent;
		        } else {
		            /* some other unknown case */
		            $.extractCoordinateFromMouseEvent = extractCoordinateFromMouseEvent;
		        }
		        return $.extractCoordinateFromMouseEvent(oEvent, sAxis);
		    };
		})(jQuery);
	
	/***/ },
	/* 11 */
	/***/ function(module, exports) {
	
		/*
		 @module jquery.pageIndicator.js
		 jQuery plugin, designed to control slider's page-indicators on Zurich's website. Supposed to work in collaboration
		 with jquery.draggableCarousel.js
		*/
		(function( $ ){
		    var S_PLUGIN_NAME = 'pageIndicator';
		    var methods = {
		        init : function( oOptions ) {
		            return this.each(function(){
		                var $this = $(this);
		                var oData = $this.data(S_PLUGIN_NAME);
	
		                if ( !oData ) {
		                    var oSettings = {
		                        totalPages      : -1,
		                        initialPage     : 0
		                    };
		                    if ( oOptions ) {
		                        $.extend( oSettings, oOptions );
		                    }
	
		                    oData = {
		                        oSettings       : oSettings,
		                        $attachedTo     : $this,
		                        $pages          : null,
		                        iCurrentPage    : 0,
		                        iTotalPages     : 0
		                    };
		                    $this.data(S_PLUGIN_NAME, oData);
	
		                    oData.$pages = $this.find("a").removeClass('active');
		                    oData.iTotalPages = oData.$pages.length;
		                    if (oData.oSettings.totalPages > oData.iTotalPages) {
		                        for (var i = oData.iTotalPages; i < oData.oSettings.totalPages; i++) {
		                            var $newSection = oData.$pages.first().parent().clone();
		                            oData.$pages.parent().parent().append(" ").append($newSection);
		                            oData.$pages = oData.$pages.add($newSection.find('a'));
		                        }
		                    } else {
		                        if (oData.oSettings.totalPages > 0) {
		                            while (oData.$pages.length > oData.oSettings.totalPages) {
		                                oData.$pages.last().remove();
		                                oData.$pages.splice(oData.$pages.length - 1, 1);
		                            }
		                        }
		                    }
		                    /* fill all items with correct indexes */
		                    oData.$pages.each(function (index) {
		                        $(this).attr({
		                            'title': index + 1,
		                            'data-target-item': index + 1
		                        });
		                    });
	
		                    /* this is to add whitespaces between inline-blocks generated without them by CMS */
		                    oData.$pages.after(" ");
	
		                    oData.iTotalPages = oData.$pages.length;
	
		                    oData.setCurrentPage = function (iNewPage) {
		                        oData.iCurrentPage = iNewPage;
		                        oData.$pages.removeClass('active').eq(iNewPage).addClass('active');
		                    };
	
		                    oData.pageClickHandler = function (oEvent) {
		                        oEvent.preventDefault();
	
		                        var iNewPage = parseInt($(this).attr('data-target-item'), 10) - 1;
		                        oData.setCurrentPage(iNewPage);
	
		                        oData.$attachedTo.trigger({
		                            type: S_PLUGIN_NAME + '.pageChange',
		                            page: oData.iCurrentPage
		                        });
		                    };
		                    oData.$pages.on('click', oData.pageClickHandler);
	
		                    oData.setCurrentPage(oData.iCurrentPage);
		                }
		            });
		        },
	
		        setCurrentPage : function( iNewPage ) {
		            return this.each(function(){
		                var oData = $(this).data(S_PLUGIN_NAME);
	
		                oData.setCurrentPage(iNewPage);
		            });
		        },
	
		        getCurrentPage : function() {
		            var oData = this.eq(0).data(S_PLUGIN_NAME);
		            return oData.iCurrentPage;
		        },
	
		        reset : function () {
		            $(this)
		                .data(S_PLUGIN_NAME, null)
		                .children()
		                    .each(function () {
		                        var $this = $(this);
		                        $this
		                            .removeAttr('data-target-item')
		                            .removeAttr('title')
		                        ;
		                        if ($.trim($this.html()).length === 0) {
		                            $this.remove();
		                        }
		                    }
		            )
		            ;
	
		            return this;
		        }
		    };
	
		    $.fn.pageIndicator = function( sMethod ) {
		        if ( methods[sMethod] ) {
		            return methods[sMethod].apply( this, Array.prototype.slice.call( arguments, 1 ));
		        } else if ( typeof sMethod === 'object' || ! sMethod ) {
		            return methods.init.apply( this, arguments );
		        } else {
		            $.error( 'Method ' +  sMethod + ' does not exist on jQuery.' + S_PLUGIN_NAME );
		        }
		        return false;
		    };
		})( jQuery );
	
	
	/***/ },
	/* 12 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var AbstractModule = __webpack_require__(13);
		var LazyResponsiveImage = __webpack_require__(17);
		var CoverImage = __webpack_require__(19);
		var inherit = __webpack_require__(14);
		var $ = __webpack_require__(4);
	
	
	
		/**
		 *
		 * @constructor
		 */
		function BaseModule() {
		    AbstractModule.apply(this, arguments); // call super class
		}
	
		window.mrm.modules.BaseModule = module.exports = inherit(BaseModule, AbstractModule, {
	
		    busEvents: {},
	
		    initElements: function () {
	
		        this.initResponsiveImages();
		        this.initProgress();
				this.initModalDialogs();
				
		    },
	
		    initResponsiveImages: function () {
	
		        var $imgResponsive = this.find('.js-img-responsive');
		        this.responsiveImages = [];
	
		        if ($imgResponsive.length) {
	
		            $imgResponsive.each(function (i, img) {
		                this.responsiveImages.push(new LazyResponsiveImage(img, mrm.config.breakpoints))
		            }.bind(this));
	
		            this.addBusEvent('breakpointChange', 'updateResponsiveImages');
	
		            if ($imgResponsive.filter('.js-img-lazy').length) {
		                this.addBusEvent('windowResize', 'updateLazyloadImages');
		                this.addBusEvent('windowScroll', 'updateLazyloadImages');
		            }
		        }
		    },
	
		    updateResponsiveImages: function (breakpointData) {
	
		        this.responsiveImages.forEach(function (responsiveImage) {
		            responsiveImage.update(breakpointData && breakpointData.size);
		        })
		    },
	
		    updateLazyloadImages: function () {
	
		        this.responsiveImages.forEach(function (responsiveImage) {
		            responsiveImage.checkViewport();
		        });
		    },
	
			initProgress: function() {
				var $progress = this.find('.js-progress');
	
				if($progress.length) {
					$progress.each(function() {
						var width = $(this).data('value');
						var $indicator = $('<div class="loader__indicator"></div>').width(width + '%');
	
						$(this).wrap('<div class="loader-container"></div>').parent().append($indicator);
					});
				}
			},
	
			initModalDialogs: function () {
				var $modalTrigger = this.find('.js-modal-trigger');
	
				$modalTrigger.on('click', function(event){
					event.preventDefault();
	
					var data = {
						target: $(event.currentTarget).attr('href').split('#')[1]
					};
	
					this._events.emit('showModal', data);
				}.bind(this));
			}
	
		});
	
	
	/***/ },
	/* 13 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var $ = __webpack_require__(4);
		var inherit = __webpack_require__(14);
		var TerrificModule = __webpack_require__(15).Module;
	
	
		function AbstractModule(ctx, sandbox) {
	
		    TerrificModule.apply(this, arguments); // call constructor of super class
	
		    this.$ctx = $(this._ctx);
		}
	
		module.exports = inherit(AbstractModule, TerrificModule, {
	
		    start: function (resolve) {
	
		        if (this.initElements) {
		            this.initElements();
		        }
		        if (this.init) {
		            this.init(resolve);
		        }
		        if (!this.init || !this.init.length) {
		            resolve();
		        }
	
				/**
		         * Within the init functions additional event listeners can be added to the event objects.
		         * The binding only happens once that is why "__bindEvents" is called at the end.
		         *
		         * TODO enable adding/removing of event bindings after "start"
		         */
		        this.__bindEvents();
		    },
	
		    find: function (selector) {
	
		        var $collection = this.$ctx.find(selector)
		            .filter(function (i, item) { // sort out matches in nested modules
		                return $(item).parents('[data-t-name]').first().is(this.$ctx);
		            }.bind(this));
	
		        return $collection;
		    },
	
		    notifyChildren: function (funcName, data, onlyFirst) {
	
		        var $nested = onlyFirst ? this.find('[data-t-name]') : this.$ctx.find('[data-t-name]');
	
		        $nested.each(function (i, mod) {
	
		            this.__callFunc(mod, funcName, data)
	
		        }.bind(this))
		    },
	
		    notifyParents: function (funcName, data, onlyFirst) {
	
		        var $parentMods = this.$ctx.parents('[data-t-name]');
	
		        if (onlyFirst) {
		            $parentMods = $parentMods.first();
		        }
	
		        $parentMods.each(function (i, mod) {
		            this.__callFunc(mod, funcName, data)
		        }.bind(this))
		    },
	
		    addDomEvent: function (key, methodName) {
		        this.__verifyOwnEventObject('domEvents');
		        this.__addToEventObject('domEvents', key, methodName);
		    },
	
		    addBusEvent: function (key, methodName) {
		        this.__verifyOwnEventObject('busEvents');
		        this.__addToEventObject('busEvents', key, methodName);
		    },
	
		    __verifyOwnEventObject: function (eventObjName) {
	
		        if(!this.hasOwnProperty(eventObjName)){
		            this[eventObjName] = {};
		        }
		    },
	
		    __addToEventObject: function (eventObjectName, key, methodName) {
	
		        var eventObject = this[eventObjectName];
		        if (eventObject[key]) {
		            if (typeof eventObject[key] === 'string') {
		                if( eventObject[key] !== methodName ){
		                    eventObject[key] = [eventObject[key], methodName];
		                }
		            }
		            else if ($.isArray(eventObject[key])) {
		                if( eventObject[key].indexOf(methodName) < 0){
		                    eventObject[key].push(methodName);
		                }
		            }
		        }
		        else {
		            eventObject[key] = methodName;
		        }
		    },
	
		    __callFunc: function (mod, funcName, data) {
	
		        var instance = this._sandbox.getModuleById($(mod).data('t-id'));
		        if (instance && instance.busEvents && instance.busEvents[funcName]) {
		            instance[instance.busEvents[funcName]](data)
		        }
		    },
	
		    __bindEvents: function () {
	
		        this.__mergePrototypeChain('domEvents');
		        this.__delegateDomEvents();
	
		        this.__mergePrototypeChain('busEvents');
		        this.__delegateBusEvents();
		    },
	
		    __mergePrototypeChain: function (propName) {
	
		        var mergeProto = function (current) {
	
		            var proto = Object.getPrototypeOf(current);
		            if (proto) {
		                var prop = current.hasOwnProperty(propName) ? current[propName] : {};
		                return this.__combineObjects(mergeProto(proto), prop);
		            }
		            else {
		                return current.hasOwnProperty(propName) ? current[propName] : {};
		            }
		        }.bind(this);
	
		        this[propName] = mergeProto(this);
		    },
	
		    __combineObjects: function (parentObject, currentObject) {
	
		        var combined = $.extend({}, currentObject)
	
		        $.each(parentObject || {}, function (key, value) {
		            if (combined[key]) {
	
		                if ($.isArray(combined[key])) {
		                    if ($.isArray(value)) {
		                        $.each(value, function (pKey, pValue) {
		                            if (combined[key].indexOf(pValue) < 0) combined[key].push(pValue)
		                        })
		                    }
		                    else {
		                        if (combined[key].indexOf(value) < 0) combined[key].push(value)
		                    }
		                }
		                else {
		                    if ($.isArray(value)) {
		                        if (value.indexOf(combined[key]) < 0) {
		                            combined[key] = [combined[key]];
		                            $.each(value, function (pKey, pValue) {
		                                combined[key].push(pValue)
		                            })
		                        }
		                        else {
		                            if (value.length > 1) {
		                                combined[key] = [combined[key]];
		                                $.each(value, function (pKey, pValue) {
		                                    if (combined[key].indexOf(pValue) < 0) combined[key].push(pValue)
		                                })
		                            }
		                        }
		                    }
		                    else {
		                        if (combined[key] !== value) {
		                            combined[key] = [combined[key]];
		                            combined[key].push(value)
		                        }
		                    }
		                }
		            }
		            else {
		                combined[key] = value;
		            }
		        });
	
		        return combined;
		        //return $.extend({}, parentObject, currentObject);
		    },
	
		    __delegateDomEvents: function () {
	
		        if (!this.domEvents) {
		            return;
		        }
	
		        var domEvents = this.domEvents;
	
		        for (var key in domEvents) {
	
		            var methodNameList = domEvents[key];
	
		            if (!$.isArray(methodNameList)) {
		                methodNameList = [methodNameList];
		            }
	
		            $.each(methodNameList, function (i, methodName) {
		                this.__bindDomEvent(methodName, key);
		            }.bind(this))
		        }
		    },
	
		    __bindDomEvent: function (methodName, bindingDescriptor) {
	
		        if(typeof methodName === 'string'){
	
		            var method = this[methodName];
		            if (method) {
		                var match = bindingDescriptor.match(/^(\S+)\s*(.*)$/); // e.g. "click .some .selector"
	
		                var eventName = match[1] + '.delegateEvents'; // e.g. "click"
		                var selector = match[2]; // e.g. ".some .selector"
	
		                if (selector === '') {
		                    this.$ctx.on(eventName, method.bind(this));
		                } else {
		                    this.$ctx.on(eventName, selector, method.bind(this));
		                }
		            }
		            else {
		                console.log('__delegateDomEvents - ' + this + ' unknown method:', methodName);
		            }
		        }
		    },
	
		    __delegateBusEvents: function () {
	
		        if (!this.busEvents) {
		            return;
		        }
	
		        var busEvents = this.busEvents;
	
		        for (var key in busEvents) {
	
		            var methodNameList = busEvents[key];
	
		            if (!$.isArray(methodNameList)) {
		                methodNameList = [methodNameList];
		            }
	
		            $.each(methodNameList, function (i, methodName) {
		                this.__bindBusEvent(methodName, key);
		            }.bind(this))
		        }
		    },
	
		    __bindBusEvent: function (methodName, eventName) {
	
		        if(typeof methodName === 'string'){
	
		            var method = this[methodName];
		            if (method) {
		                this._events.on(eventName, method.bind(this))
		            }
		            else {
		                console.log('__delegateBusEvents - ' + this + ' unknown method:', methodName);
		            }
		        }
		    }
		});
	
	/***/ },
	/* 14 */
	/***/ function(module, exports) {
	
		'use strict';
	
		module.exports = function inherit(constructorFunction, parentFunction, spec) {
	
		    var proto = constructorFunction.prototype = Object.create(parentFunction.prototype); // inheritance
		    proto.constructor = constructorFunction;
		//    proto._super = parentFunction.prototype;
		    constructorFunction._super = parentFunction.prototype;
		    proto.toString = function () {
		        return '[object '+constructorFunction.name+']';
		    };
	
		    // mixin spec properties to module prototype
		    for (var name in spec) {
		        if (!spec.hasOwnProperty(name)) {
		            continue;
		        }
	
		        proto[name] = spec[name];
		    }
	
		    return constructorFunction;
		};
	
	/***/ },
	/* 15 */
	/***/ function(module, exports, __webpack_require__) {
	
		module.exports = __webpack_require__(16);
	
	/***/ },
	/* 16 */
	/***/ function(module, exports, __webpack_require__) {
	
		var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(root, factory) {
		  if (true) {
		    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		  } else if (typeof exports === 'object') {
		    module.exports = factory();
		  } else {
		    root.T = factory();
		  }
		}(this, function() {
		/*!
		 * TerrificJS modularizes your frontend code by solely relying on naming conventions.
		 * http://terrifically.org
		 *
		 * @copyright   Copyright (c) 2015 Remo Brunschwiler
		 * @license     Licensed under MIT license
		 * @version     3.0.0-beta.9
		 */
	
		/**
		 * @module T
		 */
	
		/**
		 * Responsible for application-wide issues such as the creation of modules.
		 *
		 * @author Remo Brunschwiler
		 * @namespace T
		 * @class Application
		 *
		 * @constructor
		 * @param {Node} ctx
		 *      The context node
		 * @param {Object} config
		 *      The configuration
		 */
		/* global Sandbox, Utils, Module */
		function Application(ctx, config) {
			// validate params
			if (!ctx && !config) {
				// both empty
				ctx = document;
				config = {};
			}
			else if (Utils.isNode(config)) {
				// reverse order of arguments
				var tmpConfig = config;
				config = ctx;
				ctx = tmpConfig;
			}
			else if (!Utils.isNode(ctx) && !config) {
				// only config is given
				config = ctx;
				ctx = document;
			}
			else if (Utils.isNode(ctx) && !config) {
				// only ctx is given
				config = {};
			}
	
			var defaults = {
				namespace: Module
			};
	
			config = Utils.extend(defaults, config);
	
			/**
			 * The context node.
			 *
			 * @property _ctx
			 * @type Node
			 */
			this._ctx = Utils.getElement(ctx);
	
			/**
			 * The configuration.
			 *
			 * @property config
			 * @type Object
			 */
			this._config = config;
	
			/**
			 * The sandbox to get the resources from.
			 * The singleton is shared between all modules.
			 *
			 * @property _sandbox
			 * @type Sandbox
			 */
			this._sandbox = new Sandbox(this);
	
			/**
			 * Contains references to all modules on the page.
			 *
			 * @property _modules
			 * @type Object
			 */
			this._modules = {};
	
			/**
			 * The next unique module id to use.
			 *
			 * @property id
			 * @type Number
			 */
			this._id = 1;
		}
	
		/**
		 * Register modules within the context
		 * Automatically registers all modules within the context,
		 * as long as the modules use the naming conventions.
		 *
		 * @method registerModules
		 * @param {Node} ctx
		 *      The context node
		 * @return {Object}
		 *      A collection containing the registered modules
		 */
		Application.prototype.registerModules = function (ctx) {
			var modules = {};
	
			ctx = Utils.getElement(ctx) || this._ctx;
	
			this._sandbox.dispatch('t.register.start');
	
			// get module nodes
			var nodes = Utils.getModuleNodes(ctx);
			nodes.forEach(function (ctx) {
	
				/*
				 * A module can have different data attributes.
				 * See below for possible values.
				 */
	
				/*
				 * @config data-t-name="{mod-name}"
				 *
				 * Example: data-t-name="foo"
				 * Indicates that the module Foo should be bound.
				 */
	
				/*
				 * @config data-t-namespace="{namespace}"
				 *
				 * Example: data-t-namespace="App.Components"
				 * The namespace of the module. Optional.
				 */
	
				/*
				 * @config data-t-decorator="{decorator-name}"
				 *
				 * Example: data-t-decorator="bar"
				 * Indicates that the module Foo should be decorated with the Bar decorator.
				 * Multiple decorators should be comma-separated. Optional.
				 */
				var module = this.registerModule(ctx, ctx.getAttribute('data-t-name'), ctx.getAttribute('data-t-decorator'), ctx.getAttribute('data-t-namespace'));
	
				if (module) {
					modules[module._ctx.getAttribute('data-t-id')] = module;
				}
			}.bind(this));
	
			this._sandbox.dispatch('t.register.end');
	
			return modules;
		};
	
		/**
		 * Unregisters the modules given by the module instances.
		 *
		 * @method unregisterModules
		 * @param {Object} modules
		 *      A collection containing the modules to unregister
		 */
		Application.prototype.unregisterModules = function (modules) {
			modules = modules || this._modules;
	
			this._sandbox.dispatch('t.unregister.start');
	
			// unregister the given modules
			for (var id in modules) {
				if (this._modules.hasOwnProperty(id)) {
					if(Utils.isNode(this._modules[id]._ctx)) {
						this._modules[id]._ctx.removeAttribute('data-t-id');
					}
					delete this._modules[id];
				}
			}
	
			this._sandbox.dispatch('t.unregister.end');
		};
	
		/**
		 * Starts (intializes) the registered modules.
		 *
		 * @method start
		 * @param {Object} modules
		 *      A collection of modules to start
		 * @return {Promise}
		 *      The synchronize Promise
		 */
		Application.prototype.start = function (modules) {
			modules = modules || this._modules;
	
			var promises = [];
	
			this._sandbox.dispatch('t.start');
	
			// start the modules
			for (var id in modules) {
				if (modules.hasOwnProperty(id)) {
					var promise = (function (id) {
						return new Promise(function (resolve, reject) {
		                    modules[id].start(resolve, reject);
						});
					}(id));
	
					promises.push(promise);
				}
			}
	
			// synchronize modules
			var all = Promise.all(promises);
			all.then(function () {
				this._sandbox.dispatch('t.sync');
			}.bind(this)).catch(function (err) {
				throw Error('Starting or synchronizing the modules failed: ' + err);
			});
	
			return all;
		};
	
		/**
		 * Stops the registered modules.
		 *
		 * @method stop
		 * @param {Object} modules
		 *      A collection of modules to stop
		 */
		Application.prototype.stop = function (modules) {
			modules = modules || this._modules;
	
			this._sandbox.dispatch('t.stop');
	
			// stop the modules
			for (var id in modules) {
				if (modules.hasOwnProperty(id)) {
					modules[id].stop();
				}
			}
		};
	
		/**
		 * Registers a module.
		 *
		 * @method registerModule
		 * @param {Node} ctx
		 *      The context node
		 * @param {String} mod
		 *      The module name. It must match the class name of the module
		 * @param {Array} decorators
		 *      A list of decorator names. Each entry must match a class name of a decorator
		 * @param {String} namespace
		 *      The module namespace
		 * @return {Module}
		 *      The reference to the registered module
		 */
		Application.prototype.registerModule = function (ctx, mod, decorators, namespace) {
			var modules = this._modules;
	
			// validate params
			if(ctx.hasAttribute('data-t-id')) {
				return null; // prevent from registering twice
			}
	
			mod = Utils.capitalize(Utils.camelize(mod));
	
			if (Utils.isString(decorators)) {
				if (window[decorators]) {
					// decorators param is the namespace
					namespace = window[decorators];
					decorators = null;
				}
				else {
					// convert string to array
					decorators = decorators.split(',');
				}
			}
			else if (!Array.isArray(decorators) && Utils.isObject(decorators)) {
				// decorators is the namespace object
				namespace = decorators;
				decorators = null;
			}
	
			decorators = decorators || [];
			decorators = decorators.map(function (decorator) {
				return Utils.capitalize(Utils.camelize(decorator.trim()));
			});
	
			namespace = namespace || this._config.namespace;
	
			if (namespace[mod]) {
				// assign the module a unique id
				var id = this._id++;
				ctx.setAttribute('data-t-id', id);
	
				// instantiate module
				modules[id] = new namespace[mod](ctx, this._sandbox);
	
				// decorate it
				for (var i = 0, len = decorators.length; i < len; i++) {
					var decorator = decorators[i];
	
					if (namespace[mod][decorator]) {
						namespace[mod][decorator](modules[id]);
					}
				}
	
				return modules[id];
			}
	
			this._sandbox.dispatch('t.missing', ctx, mod, decorators, namespace);
	
			return null;
		};
	
		/**
		 * Gets the appropriate module for the given ID.
		 *
		 * @method getModuleById
		 * @param {int} id
		 *      The module ID
		 * @return {Module}
		 *      The appropriate module
		 */
		Application.prototype.getModuleById = function (id) {
			if (this._modules[id]) {
				return this._modules[id];
			}
			else {
				throw Error('The module with the id ' + id +
				' does not exist');
			}
		};
	
		/**
		 * The sandbox is used as a central point to get resources from, add modules etc.
		 * It is shared between all modules.
		 *
		 * @author Remo Brunschwiler
		 * @namespace T
		 * @class Sandbox
		 *
		 * @constructor
		 * @param {Application} application
		 *      The application reference
		 */
		/* global Utils */
		function Sandbox(application) {
			/**
			 * The application.
			 *
			 * @property _application
			 * @type Application
			 */
			this._application = application;
	
			/**
			 * Contains references to all module event emitters.
			 *
			 * @property _eventEmitters
			 * @type Array
			 */
			this._eventEmitters = [];
		}
	
		/**
		 * Adds (register and start) all modules in the given context scope.
		 *
		 * @method addModules
		 * @param {Node} ctx
		 *      The context node
		 * @return {Object}
		 *      A collection containing the registered modules
		 */
		Sandbox.prototype.addModules = function (ctx) {
			var modules = {},
				application = this._application;
	
			if (Utils.isNode(ctx)) {
				// register modules
				modules = application.registerModules(ctx);
	
				// start modules
				application.start(modules);
			}
	
			return modules;
		};
	
		/**
		 * Removes a module by module instances.
		 * This stops and unregisters a module through a module instance.
		 *
		 * @method removeModules
		 * @param {any} modules
		 *      A collection of module to remove | Node context to look for registered modules in.
		 * @return {Sandbox}
		 */
		Sandbox.prototype.removeModules = function (modules) {
			var application = this._application;
	
			if (Utils.isNode(modules)) {
				// get modules
				var tmpModules = {};
	
				var nodes = Utils.getModuleNodes(modules);
				nodes.forEach(function (ctx) {
					// check for instance
					if (ctx.hasAttribute('data-t-id')) {
						var id = ctx.getAttribute('data-t-id');
						var module = this.getModuleById(id);
	
						if (module) {
							tmpModules[id] = module;
						}
					}
				}.bind(this));
	
				modules = tmpModules;
			}
	
			if(Utils.isObject(modules)) {
				// stop modules – let the module clean itself
				application.stop(modules);
	
				// unregister modules – clean up the application
				application.unregisterModules(modules);
			}
	
			return this;
		};
	
		/**
		 * Gets the appropriate module for the given ID.
		 *
		 * @method getModuleById
		 * @param {int} id
		 *      The module ID
		 * @return {Module}
		 *      The appropriate module
		 */
		Sandbox.prototype.getModuleById = function (id) {
			return this._application.getModuleById(id);
		};
	
		/**
		 * Gets the application config.
		 *
		 * @method getConfig
		 * @return {Object}
		 *      The configuration object
		 */
		Sandbox.prototype.getConfig = function () {
			return this._application._config;
		};
	
		/**
		 * Gets an application config param.
		 *
		 * @method getConfigParam
		 * @param {String} name
		 *      The param name
		 * @return {any}
		 *      The appropriate configuration param
		 */
		Sandbox.prototype.getConfigParam = function (name) {
			var config = this._application._config;
	
			if (config[name] !== undefined) {
				return config[name];
			}
			else {
				throw Error('The config param ' + name + ' does not exist');
			}
		};
	
		/**
		 * Adds an event emitter instance.
		 *
		 * @method addEventEmitter
		 * @param {EventEmitter} eventEmitter
		 *      The event emitter
		 * @return {Sandbox}
		 */
		Sandbox.prototype.addEventEmitter = function (eventEmitter) {
			this._eventEmitters.push(eventEmitter);
			return this;
		};
	
		/**
		 * Removes an event emitter instance.
		 *
		 * @method addEventEmitter
		 * @param {EventEmitter} eventEmitter
		 *      The event emitter
		 * @return {Sandbox}
		 */
		Sandbox.prototype.removeEventEmitter = function (eventEmitter) {
			var eventEmitters = this._eventEmitters;
			for (var i = 0, len = eventEmitters.length; i < len; i++) {
				if (eventEmitters[i] === eventEmitter) {
					eventEmitters.splice(i, 1);
					break;
				}
			}
			return this;
		};
	
		/**
		 * Dispatches the event with the given arguments to the attached event emitters.
		 *
		 * @method dispatch
		 * @param {Mixed} ...
		 * @return {Sandbox}
		 */
		Sandbox.prototype.dispatch = function () {
			var eventEmitters = this._eventEmitters;
	
			for(var i = 0, len = eventEmitters.length; i < len; i++) {
				var eventEmitter = eventEmitters[i];
				if(eventEmitter !== undefined) {
					eventEmitter.handle.apply(eventEmitter, arguments);
				}
			}
	
			return this;
		};
		/**
		 * Base class for the different modules.
		 *
		 * @author Remo Brunschwiler
		 * @namespace T
		 * @class Module
		 *
		 * @constructor
		 * @param {Node} ctx
		 *      The context node
		 * @param {Sandbox} sandbox
		 *      The sandbox to get the resources from
		 */
		/* global EventEmitter */
		function Module(ctx, sandbox) {
			/**
			 * Contains the context node.
			 *
			 * @property ctx
			 * @type Node
			 */
			this._ctx = ctx;
	
			/**
			 * The sandbox to get the resources from.
			 *
			 * @property _sandbox
			 * @type Sandbox
			 */
			this._sandbox = sandbox;
	
			/**
			 * The emitter.
			 *
			 * @property _events
			 * @type EventEmitter
			 */
			this._events = new EventEmitter(sandbox);
		}
	
		/**
		 * Template method to start the module.
		 *
		 * @method start
		 * @param {Function} resolve
		 *      The resolve promise function
		 * @param {Function} reject
		 * 		The reject promise function
		 */
		/*jshint unused: true */
		Module.prototype.start = function (resolve) {
			resolve();
		};
	
		/**
		 * Template method to stop the module.
		 *
		 * @method stop
		 */
		Module.prototype.stop = function () {
			this._events.off().disconnect();
		};
	
		/**
		 * Responsible for inter-module communication.
		 * Classic EventEmitter Api. Heavily inspired by https://github.com/component/emitter
		 *
		 * @author Remo Brunschwiler
		 * @namespace T
		 * @class EventEmitter
		 *
		 * @constructor
		 *
		 * @param {Sandbox} sandbox
		 *      The sandbox instance
		 */
		function EventEmitter(sandbox) {
			/**
			 * The listeners.
			 *
			 * @property _listeners
			 * @type Object
			 */
			this._listeners = {};
	
			/**
			 * The sandbox instance.
			 *
			 * @property _sandbox
			 * @type Sandbox
			 */
			this._sandbox = sandbox;
	
			/**
			 * Indicates whether the instance is connected to the sandbox.
			 *
			 * @property _connected
			 * @type Boolean
			 */
			this._connected = false;
		}
	
		/**
		 * Adds a listener for the given event.
		 *
		 * @method on
		 * @param {String} event
		 * @param {Function} listener
		 * @return {EventEmitter}
		 */
		EventEmitter.prototype.on = EventEmitter.prototype.addListener = function (event, listener) {
			this.connect();
	
			(this._listeners['$' + event] = this._listeners['$' + event] || []).push(listener);
			return this;
		};
	
		/**
		 * Adds a listener that will be invoked a single
		 * time and automatically removed afterwards.
		 *
		 * @method once
		 * @param {String} event
		 * @param {Function} listener
		 * @return {EventEmitter}
		 */
		EventEmitter.prototype.once = function (event, listener) {
			this.connect();
	
			function on() {
				this.off(event, on);
				listener.apply(this, arguments);
			}
	
			on.listener = listener;
			this.on(event, on);
			return this;
		};
	
		/**
		 * Remove the given listener for the given event or all
		 * registered listeners.
		 *
		 * @method off
		 * @param {String} event
		 * @param {Function} listener
		 * @return {EventEmitter}
		 */
		EventEmitter.prototype.off = EventEmitter.prototype.removeListener = EventEmitter.prototype.removeAllListeners = function (event, listener) {
			// all
			if (arguments.length === 0) {
				this._listeners = {};
				return this;
			}
	
			// specific event
			var listeners = this._listeners['$' + event];
			if (!listeners) {
				return this;
			}
	
			// remove all listeners
			if (arguments.length === 1) {
				delete this._listeners['$' + event];
				return this;
			}
	
			// remove specific listener
			var cb;
			for (var i = 0, len = listeners.length; i < len; i++) {
				cb = listeners[i];
				if (cb === listener || cb.listener === listener) {
					listeners.splice(i, 1);
					break;
				}
			}
	
			return this;
		};
	
		/**
		 * Dispatches event to the sandbox.
		 *
		 * @method emit
		 * @param {Mixed} ...
		 * @return {EventEmitter}
		 */
		EventEmitter.prototype.emit = function () {
			this.connect();
	
			// dispatches event to the sandbox
			this._sandbox.dispatch.apply(this._sandbox, arguments);
	
			return this;
		};
	
		/**
		 * Handles dispatched event from sandbox.
		 *
		 * @method handle
		 * @param {String} event
		 * @param {Mixed} ...
		 * @return {EventEmitter}
		 */
		EventEmitter.prototype.handle = function (event) {
			var args = [].slice.call(arguments, 1),
				listeners = this._listeners['$' + event];
	
			if (listeners) {
				listeners = listeners.slice(0);
				for (var i = 0, len = listeners.length; i < len; ++i) {
					listeners[i].apply(this, args);
				}
			}
	
			return this;
		};
	
	
		/**
		 * Return array of listeners for the given event.
		 *
		 * @method listeners
		 * @param {String} event
		 * @return {Array}
		 */
		EventEmitter.prototype.listeners = function (event) {
			return this._listeners['$' + event] || [];
		};
	
		/**
		 * Check if this event emitter has listeners.
		 *
		 * @method hasListeners
		 * @param {String} event
		 * @return {Boolean}
		 */
		EventEmitter.prototype.hasListeners = function (event) {
			return !!this.listeners(event).length;
		};
	
		/**
		 * Connect instance to the sandbox.
		 *
		 * @method connect
		 * @return {EventEmitter}
		 */
		EventEmitter.prototype.connect = function () {
			if (!this._connected) {
				this._sandbox.addEventEmitter(this);
				this._connected = true;
			}
	
			return this;
		};
	
		/**
		 * Disconnect instance from the sandbox.
		 *
		 * @method disconnect
		 * @return {EventEmitter}
		 */
		EventEmitter.prototype.disconnect = function () {
			if (this._connected) {
				this._sandbox.removeEventEmitter(this);
				this._connected = false;
			}
	
			return this;
		};
	
	
		/**
		 * Utility functions.
		 *
		 * @author Remo Brunschwiler
		 * @namespace T
		 * @class Utils
		 * @static
		 */
		/* global Module */
		/* jshint unused: false */
		var Utils = {
			/**
			 * Capitalizes the first letter of the given string.
			 *
			 * @method capitalize
			 * @param {String} str
			 *      The original string
			 * @return {String}
			 *      The capitalized string
			 */
			capitalize: function (str) {
				return str.substr(0, 1).toUpperCase().concat(str.substr(1));
			},
	
			/**
			 * Camelizes the given string.
			 *
			 * @method camelize
			 * @param {String} str
			 *      The original string
			 * @return {String}
			 *      The camelized string
			 */
			camelize: function (str) {
				return str.replace(/(\-[A-Za-z])/g, function ($1) {
					return $1.toUpperCase().replace('-', '');
				});
			},
	
			/**
			 * Check whether the given object is a string.
			 *
			 * @method isString
			 * @param {Object} obj
			 *      The object to check
			 * @return {Boolean}
			 */
			isString: function (obj) {
				return Object.prototype.toString.call(obj) === '[object String]';
			},
	
			/**
			 * Check whether the given param is an object.
			 *
			 * @method isObject
			 * @param {Object} obj
			 *      The object to check
			 * @return {Boolean}
			 */
			isObject: function (obj) {
				var type = typeof obj;
				return !!obj && (type === 'object' || type === 'function') && !Array.isArray(obj);
			},
	
			/**
			 * Check whether the given param is a function.
			 *
			 * @method isFunction
			 * @param {Object} obj
			 *      The object to check
			 * @return {Boolean}
			 */
			isFunction: function (obj) {
				var type = typeof obj;
				return !!obj && type === 'function';
			},
	
			/**
			 * Check whether the given param is a valid node.
			 *
			 * @method isNode
			 * @param {Node} node
			 *      The node to check
			 * @return {Boolean}
			 */
			isNode: function (node) {
				if (!node || !node.nodeType) {
					return false;
				}
	
				return node.nodeType === 1 || node.nodeType === 9;
			},
	
			/**
			 * Check whether the element matches the given selector.
			 *
			 * @method matches
			 * @param {Element} el
			 *      The element to check
			 * @param {String} selector
			 *        The selector to check against
			 * @return {Boolean}
			 */
			matches: function (el, selector) {
				var p = Element.prototype;
				var f = p.matches || p.webkitMatchesSelector || p.mozMatchesSelector || p.msMatchesSelector || function (s) {
						return [].slice.call(document.querySelectorAll(s)).indexOf(this) !== -1;
					};
				return f.call(el, selector);
			},
	
			/**
			 * Extends an object with the given objects.
			 *
			 * @method extend
			 * @param {Object} obj
			 *      The object to extend
			 * @param {Object} ...
			 * @return {Object} the extended object
			 */
			extend: function (obj) {
				if (!Utils.isObject(obj)) {
					return obj;
				}
				var source, prop;
				for (var i = 1, length = arguments.length; i < length; i++) {
					source = arguments[i];
	
					for (prop in source) {
						if (source.hasOwnProperty(prop)) {
							obj[prop] = source[prop];
						}
					}
				}
				return obj;
			},
	
			/**
			 * Get the element from a given node.
			 *
			 * @method getElement
			 * @param {Node} node
			 *      The node to check
			 * @return {Element}
			 */
			getElement: function (node) {
				if (!this.isNode(node)) {
					return null;
				}
	
				if (node.nodeType === 9 && node.documentElement) {
					return node.documentElement;
				}
				else {
					return node;
				}
			},
	
			/**
			 * Get the module nodes.
			 *
			 * @method getModuleNodes
			 * @param {Node} ctx
			 *      The ctx to check
			 * @return {Array}
			 */
			getModuleNodes: function (ctx) {
				var nodes = [].slice.call(ctx.querySelectorAll('[data-t-name]'));
	
				// check context itself
				if (this.matches(ctx, '[data-t-name]')) {
					nodes.unshift(ctx);
				}
	
				return nodes;
			},
	
			/**
			 * Creates a module class given a class specification.
			 *
			 * @method createModule
			 * @param {object} spec Class specification.
			 * @return {function} Module constructor function
			 */
			createModule: function (spec) {
				// validate params
				if (!spec || !Utils.isObject(spec)) {
					throw Error('Your module spec is not an object. Usage: T.createModule({ … })');
				}
	
				var Constructor = function (ctx, sandbox) {
					Module.call(this, ctx, sandbox);
				};
	
				var proto = Constructor.prototype = Object.create(Module.prototype);
				proto.constructor = Constructor;
	
				// apply statics
				if (spec.hasOwnProperty('statics')) {
					Utils.extend(Constructor, spec.statics);
				}
	
				var reservedKeys = [
					'statics'
				];
	
				// mixin spec properties to module prototype
				for (var name in spec) {
					if (!spec.hasOwnProperty(name)) {
						continue;
					}
	
					// check for reserved keys
					if (reservedKeys.indexOf(name) !== -1) {
						continue;
					}
	
					var property = spec[name];
					proto[name] = property;
				}
	
				return Constructor;
			},
	
			/**
			 * Creates a decorator given a decorator specification.
			 *
			 * @method createDecorator
			 * @param {object} spec Decorator specification.
			 * @return {function} Decorator function
			 */
			createDecorator: function (spec) {
				// validate params
				if (!spec || !Utils.isObject(spec)) {
					throw Error('Your decorator spec is not an object. Usage: T.createDecorator({ … })');
				}
	
				return function (orig) {
					var parent = {},
						name;
	
					// save references to original super properties
					for (name in orig) {
						if (Utils.isFunction(orig[name])) {
							parent[name] = orig[name].bind(orig);
						}
					}
	
					// override original properties and provide _parent property
					for (name in spec) {
						if (spec.hasOwnProperty(name)) {
							if(Utils.isFunction(spec[name])) {
								orig[name] = (function (name, fn) {
									return function () {
										this._parent = parent;
										return fn.apply(this, arguments);
									};
								}(name, spec[name]));
							}
							else {
								// simple property
								orig[name] = spec[name];
							}
						}
					}
				};
			}
		};
	
	
		/* global Application, Sandbox, Module, EventEmitter, Utils */
		/* jshint unused: false */
		var T = {
			Application: Application,
			Sandbox: Sandbox,
			Module: Module,
			EventEmitter: EventEmitter,
			createModule: Utils.createModule,
			createDecorator: Utils.createDecorator,
			version: '3.0.0-beta.9'
		};
		return T;
		}));
	
	
	/***/ },
	/* 17 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var inherit = __webpack_require__(14);
		var SimpleResponsiveImage = __webpack_require__(18);
	
		/**
		 *
		 * @param {HTMLImageElement} img
		 * @param  {(Array|Object)}breakPointList
		 * @constructor
		 */
		function LazyResponsiveImage(img, breakPointList, options) {
	
		    SimpleResponsiveImage.apply(this, arguments); // call super class
	
		}
	
		module.exports = inherit(LazyResponsiveImage, SimpleResponsiveImage, {
	
		    viewPortOffset: 500,
			jsClass: 'js-img-lazy',
		    lazyClass: 'img-responsive--is-lazy',
		    loadedClass: 'img-responsive--is-lazyloaded',
	
		    checkSource: function () {
	
		        if (!this.img.classList.contains(this.jsClass)) {
		            SimpleResponsiveImage.prototype.checkSource.apply(this, arguments);
		        }
		    },
	
		    checkViewport: function () {
	
		        if(this.img.classList.contains(this.lazyClass) && this.isInViewport()) {
	
		            this.img.classList.remove(this.jsClass);
	
		            this.img.addEventListener('load', function(){
		                this.img.classList.add(this.loadedClass);
		                this.img.classList.remove(this.lazyClass);
		            }.bind(this));
	
		            this.checkSource();
		        }
		    },
	
		    isInViewport: function () {
	
		        var offset = this.viewPortOffset;
		        var viewportHeight = (window.innerHeight || document.documentElement.clientHeight);
		        var rect = this.img.getBoundingClientRect();
	
		        return (
		            rect.top >= -rect.height - offset
		            && rect.left >= -offset
		            && rect.top <= viewportHeight + offset
		        )
		    }
		});
	
	
	/***/ },
	/* 18 */
	/***/ function(module, exports) {
	
		'use strict';
	
	
		/**
		 *
		 * @param {HTMLImageElement} img
		 * @param  {(Array|Object)}breakPointList
		 * @param {Object} options
		 * @constructor
		 */
		function SimpleResponsiveImage(img, breakPointList, options) {
	
		    this.img = img;
		    this.options = options;
	
		    if (Array.isArray(breakPointList)) {
		        this.breakPointList = breakPointList;
	
		    } else {
		        this.breakPointList = Object.keys(breakPointList).map(function (value) {
		            return breakPointList[value];
		        });
		    }
		}
	
		SimpleResponsiveImage.prototype = {
	
		    update: function (breakpoint) {
	
		        if (breakpoint) {
		            this.breakpoint = breakpoint;
		        }
	
		        this.checkSource();
		    },
	
		    checkSource: function () {
	
		        if (this.breakpoint) {
	
		            var newSrc = this.getAvailableSource();
		            if (newSrc && newSrc !== this.img.getAttribute('src')) {
		                this.img.setAttribute('src', newSrc);
		            }
		        }
		    },
	
		    getAvailableSource: function () {
	
		        var newSrc = this.img.getAttribute('data-size-' + this.breakpoint);
		        if (newSrc) {
		//            console.log('found source for', breakpoint)
		            return newSrc;
		        }
	
		        var bpIndex = this.breakPointList.indexOf(this.breakpoint);
	
		        if (bpIndex < 0) {
		            return false;
		        }
	
		        // find next bigger image
		        for (var i = bpIndex + 1, l = this.breakPointList.length; i < l; i++) {
		            newSrc = this.img.getAttribute('data-size-' + this.breakPointList[i]);
		            if (newSrc) {
		//                console.log('found larger source for', breakpoint)
		                return newSrc;
		            }
		        }
	
		        // find smaller image
		        for (var j = bpIndex - 1; j >= 0; j--) {
		            newSrc = this.img.getAttribute('data-size-' + this.breakPointList[j]);
		            if (newSrc) {
		//                console.log('found smaller source for', breakpoint)
		                return newSrc;
		            }
		        }
	
		        return false;
		    }
		};
	
	
		module.exports = SimpleResponsiveImage;
	
	/***/ },
	/* 19 */
	/***/ function(module, exports) {
	
		'use strict';
	
		function CoverImage(cover) {
	
		    this.cover = cover;
	
		    this.cover.getElementsByTagName('img')[0].addEventListener('load', this.update.bind(this));
		}
		module.exports = CoverImage;
	
	
		CoverImage.prototype = {
	
		    update: function () {
	
		        this.cover.classList.remove('cover--swap-aspect');
	
		        if (this.cover.clientWidth > this.cover.getElementsByTagName('img')[0].clientWidth) {
		            this.cover.classList.add('cover--swap-aspect');
		        }
		    },
		//
		//    onLoad: function (callback) {
		//        this.cover.getElementsByTagName('img')[0].addEventListener('load', callback);
		//    }
	
		};
	
	/***/ },
	/* 20 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var AbstractPageModule = __webpack_require__(21);
		var inherit = __webpack_require__(14);
	
		var breakpointHelper = __webpack_require__(22);
	
		/**
		 *
		 * @constructor
		 */
		function ContentPage() {
	
		    AbstractPageModule.apply(this, arguments); // call super class
	
		    this.initBreakPointHelper();
		}
	
		window.mrm.modules.ContentPage = inherit(ContentPage, AbstractPageModule, {
	
		    busEvents: {},
	
		    init: function () {
		        AbstractPageModule.prototype.init.apply(this, arguments);
	
				this.initZwpMethods();
		    },
	
		    initBreakPointHelper: function () {
	
		        breakpointHelper.setBreakpointList(mrm.config.breakpoints);
		        breakpointHelper.setOnChangeCallback(this.onBreakPointChange.bind(this));
		    },
	
		    onAllModulesReady: function () {
	
		        AbstractPageModule.prototype.onAllModulesReady.apply(this, arguments);
	
		//        this.onWindowScroll();
		        
		        breakpointHelper.trigger();
		    },
	
		//    onWindowScroll: function () {
		//
		//        var scrollTop = this.$window.scrollTop();
		//        var scrollDirection = (scrollTop > this.scrollPositionTop) ? 'down' : 'up';
		//
		//        this.scrollPositionTop = scrollTop;
		//
		//        this._events.emit('windowScroll', {
		//            top: scrollTop,
		//            bottom: scrollTop + this.$window.height(),
		//            direction: scrollDirection
		//        })
		//    },
	
		    onBreakPointChange: function (size) {
	
		        this._events.emit('breakpointChange', {
		            size: size,
					//lg breakpoint
		            isLgOrLarger: breakpointHelper.isBreakpointOrLarger(mrm.config.breakpoints.LG),
		            isLg: breakpointHelper.isBreakpoint(mrm.config.breakpoints.LG),
		            isLgOrSmaller: breakpointHelper.isBreakpointOrSmaller(mrm.config.breakpoints.LG),
					//md breakpoint
		            isMdOrLarger: breakpointHelper.isBreakpointOrLarger(mrm.config.breakpoints.MD),
		            isMd: breakpointHelper.isBreakpoint(mrm.config.breakpoints.MD),
		            isMdOrSmaller: breakpointHelper.isBreakpointOrSmaller(mrm.config.breakpoints.MD),
					//sm breakpoint
		            isSmOrLarger: breakpointHelper.isBreakpointOrLarger(mrm.config.breakpoints.SM),
		            isSm: breakpointHelper.isBreakpoint(mrm.config.breakpoints.SM),
		            isSmOrSmaller: breakpointHelper.isBreakpointOrSmaller(mrm.config.breakpoints.SM),
					//sm breakpoint
					isXsOrLarger: breakpointHelper.isBreakpointOrLarger(mrm.config.breakpoints.XS),
					isXs: breakpointHelper.isBreakpoint(mrm.config.breakpoints.XS)
		        });
		    },
	
			// zwp methods for global use
			initZwpMethods: function () {
	
				window.zwp.showSnackbar = function(data){
					this._events.emit('showSnackbar', data);
				}.bind(this);
	
			}
	
		});
	
	
	
	
	
	/***/ },
	/* 21 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var AbstractModule = __webpack_require__(13);
		var inherit = __webpack_require__(14);
		var $ = __webpack_require__(4);
	
		/**
		 *
		 * @constructor
		 */
		function AbstractPageModule() {
	
		    AbstractModule.apply(this, arguments); // call constructor of super class
		}
	
		module.exports = inherit(AbstractPageModule, AbstractModule, {
	
		    busEvents: {
		        't.sync': 'onAllModulesReady'
		    },
	
		    init: function () {
	
		        this.$window = $(window)
		            .on('load.pageModule', this.onWindowLoad.bind(this))
		            .on('resize.pageModule', this.onWindowResize.bind(this))
		            .on('scroll.pageModule', this.onWindowScroll.bind(this))
		            .on('orientationchange.pageModule', this.onOrientationChange.bind(this))
		            .on('hashchange.pageModule', this.onHashChange.bind(this));
		    },
	
		    onAllModulesReady: function () {
		        this._events.emit('allModulesReady')
		        this.$window.trigger('resize');
		        this.$window.trigger('hashchange');
		    },
	
		    onWindowLoad: function () {
		        this._events.emit('windowLoad')
		    },
	
		    onWindowResize: function (event) {
		        this._events.emit('windowResize', event);
		    },
		    
		    onWindowScroll: function (event) {
		        this._events.emit('windowScroll', event);
		    },
	
		    onOrientationChange: function (event) {
		        this._events.emit('orientationChange', event)
		    },
	
		    onHashChange: function (event) {
		        this._events.emit('hashChange', event)
		    }
		    
		});
	
	/***/ },
	/* 22 */
	/***/ function(module, exports) {
	
		'use strict';
	
		module.exports = {
		    /**
		     * @callback BreakpointHelper~breakPointChangeCallback
		     * @param {string} currentBreakPointId
		     */
	
		    /**
		     *
		     * @param {BreakpointHelper~breakPointChangeCallback} callback
		     */
		    setOnChangeCallback: function (callback) {
		        this.onChangeCallback = callback;
		    },
	
		    setBreakpointList: function (breakPointList) {
	
		        if (Array.isArray(breakPointList)) {
		            this.breakPointList = breakPointList;
	
		        } else {
		            this.breakPointList = Object.keys(breakPointList).map(function (value) {
		                return breakPointList[value];
		            });
		        }
	
		        this.currentBreakPoint = this.getBreakpointSize();
	
		        this.addResizeListener();
		    },
	
		    addResizeListener: function () {
	
		        if( !this.isListenerAdded ){
	
		            window.addEventListener('resize', this.onResize.bind(this));
	
		            this.isListenerAdded = true;
		        }
		    },
	
		    onResize: function () {
	
		        var current = this.getBreakpointSize();
	
		        if (this.breakPointList.indexOf(current) !== -1 && this.currentBreakPoint !== current) {
	
		            this.currentBreakPoint = current;
		            this.onChangeCallback(current);
		        }
		    },
	
		    trigger: function () {
		        this.onChangeCallback(this.currentBreakPoint);
		    },
	
		    getBreakpointSize: function () {
	
		        var size = window.getComputedStyle(document.querySelector('body'), ':after')
		            .getPropertyValue('content')
		            .replace(/["']/g, '');
	
		        return size;
		    },
	
		    isBreakpoint: function(breakpointId) {
	
		        var isBreakpoint = false;
		        var sizeIndex = this.breakPointList.indexOf(breakpointId);
	
		        if ( sizeIndex < 0 ) {
		            throw 'mrm.util.isBreakpoint: Invalid breakpoint identifier "' + breakpointId + '"';
		        }
	
		        return this.currentBreakPoint === breakpointId;
		    },
	
		    isBreakpointOrLarger: function(breakpointId) {
	
		        var sizeIndex = this.breakPointList.indexOf(breakpointId);
		        var currentComparisonIndex;
	
		        if ( sizeIndex < 0 ) {
		            throw 'isBreakpointOrLarger: Invalid breakpoint identifier "' + breakpointId + '"';
		        }
	
		        while ( sizeIndex++ < this.breakPointList.length ) {
	
		            currentComparisonIndex = sizeIndex - 1;
	
		            if ( this.currentBreakPoint === this.breakPointList[currentComparisonIndex] ) {
		                return this.breakPointList[currentComparisonIndex];
		            }
		        }
	
		        return false;
		    },
	
		    isBreakpointOrSmaller: function(breakpointId) {
	
		        var sizeIndex = this.breakPointList.indexOf(breakpointId),
		            currentComparisonIndex;
	
		        if ( sizeIndex < 0 ) {
		            throw 'isBreakpointOrSmaller: Invalid breakpoint identifier "' + breakpointId + '"';
		        }
	
		        while ( sizeIndex-- > -1 ) {
	
		            currentComparisonIndex = sizeIndex + 1;
	
		            if ( this.currentBreakPoint === this.breakPointList[currentComparisonIndex] ) {
		                return this.breakPointList[currentComparisonIndex];
		            }
		        }
	
		        return false;
		    }
		};
	
	/***/ },
	/* 23 */
	/***/ function(module, exports, __webpack_require__) {
	
		var $ = __webpack_require__(4);
	
		module.exports = {
			/**
			 * Touch device detection (based on Modernizr)
			 *
			 * @returns {boolean}
			 */
			isTouchDevice: function () {
				return (('ontouchstart' in window) || window.DocumentTouch && document instanceof DocumentTouch) ? true : false;
			},
	
			/**
			 * Get css animation/transition duration of dom element
			 *
			 * @returns {number}
			 */
			getAnimationDuration: function (element, type, with_delay) {
				var $el = $(element);
				var type = type ? 'transition' : 'animation';
				var prefixes = 'moz webkit ms o khtml'.split(' ');
				var result = 0;
	
				for (var i = 0; i < prefixes.length; i++) {
					var duration = $el.css('-' + prefixes[i] + '-' + type + '-duration');
	
					if (duration) {
						duration = ( duration.indexOf('ms') > -1 ) ? parseFloat(duration) : parseFloat(duration) * 1000;
	
						if (with_delay) {
							var delay = $el.css('-' + prefixes[i] + '-' + type + '-delay');
							duration += ( delay.indexOf('ms') > -1 ) ? parseFloat(delay) : parseFloat(delay) * 1000;
						}
	
						result = duration;
	
						break;
					}
				}
	
				return result;
			},
	
			/**
			 * check if element is in viewport or not
			 *
			 * @returns {boolean}
			 */
			isInViewport: function(el, offset) {
				var elemTop = el.getBoundingClientRect().top;
				var elemBottom = el.getBoundingClientRect().bottom;
	
				var isVisible = (elemTop + offset < window.innerHeight && elemBottom >= 0);
				return isVisible;
			}
		};
	
	/***/ },
	/* 24 */
	/***/ function(module, exports, __webpack_require__) {
	
		var $ = __webpack_require__(4);
		var docCookies  = __webpack_require__(25);
	
		module.exports = {
	
			setCookie: function( agentId, locationId, agencyId, onlineId ) {
	
				agencyId = agencyId || "";
	
				docCookies.setItem('SelectedAgent', 'agent-id='+agentId+'&location-id='+locationId+'&agency-id='+agencyId+'&id='+onlineId, 60*60*24*182, '/');
			},
	
			getCookie: function() {
	
				var value = docCookies.getItem('SelectedAgent');
				if( value ){
	
					var obj = {};
					$.each(value.split('&'), function(i, entry){
						var parts = entry.split('=');
						obj[parts[0]] = parts[1];
					});
	
					return obj;
				}
				else{
					return false;
				}
			},
	
			isCookieSet: function(){
				return docCookies.hasItem('SelectedAgent');
			},
	
			clearCookie: function() {
				docCookies.removeItem('SelectedAgent', '/');
			},
	
			clearSession: function(callback){
				$.get('/zwpapi/agent/removeselectedagent').always(callback);
			},
	
			updateSession: function(agentId, locationId, OnlineId, callback){
				$.get('/zwpapi/agent/saveinsession/'+agentId+'/'+locationId+'/'+onlineId).always(callback)
			}
	
	
	
		};
	
	/***/ },
	/* 25 */
	/***/ function(module, exports) {
	
		/*\
		 |*|
		 |*|  :: cookies.js ::
		 |*|
		 |*|  A complete cookies reader/writer framework with full unicode support.
		 |*|
		 |*|  Revision #1 - September 4, 2014
		 |*|
		 |*|  https://developer.mozilla.org/en-US/docs/Web/API/document.cookie
		 |*|  https://developer.mozilla.org/User:fusionchess
		 |*|
		 |*|  This framework is released under the GNU Public License, version 3 or later.
		 |*|  http://www.gnu.org/licenses/gpl-3.0-standalone.html
		 |*|
		 |*|  Syntaxes:
		 |*|
		 |*|  * docCookies.setItem(name, value[, end[, path[, domain[, secure]]]])
		 |*|  * docCookies.getItem(name)
		 |*|  * docCookies.removeItem(name[, path[, domain]])
		 |*|  * docCookies.hasItem(name)
		 |*|  * docCookies.keys()
		 |*|
		 \*/
	
		module.exports = {
	
			getItem: function (sKey) {
				if (!sKey) {
					return null;
				}
				return decodeURIComponent(document.cookie.replace(new RegExp("(?:(?:^|.*;)\\s*" + encodeURIComponent(sKey).replace(/[\-\.\+\*]/g, "\\$&") + "\\s*\\=\\s*([^;]*).*$)|^.*$"), "$1")) || null;
			},
			setItem: function (sKey, sValue, vEnd, sPath, sDomain, bSecure) {
				if (!sKey || /^(?:expires|max\-age|path|domain|secure)$/i.test(sKey)) {
					return false;
				}
				var sExpires = "";
				if (vEnd) {
					switch (vEnd.constructor) {
						case Number:
							sExpires = vEnd === Infinity ? "; expires=Fri, 31 Dec 9999 23:59:59 GMT" : "; max-age=" + vEnd;
							break;
						case String:
							sExpires = "; expires=" + vEnd;
							break;
						case Date:
							sExpires = "; expires=" + vEnd.toUTCString();
							break;
					}
				}
		//        document.cookie = encodeURIComponent(sKey) + "=" + encodeURIComponent(sValue) + sExpires + (sDomain ? "; domain=" + sDomain : "") + (sPath ? "; path=" + sPath : "") + (bSecure ? "; secure" : "");
				document.cookie = encodeURIComponent(sKey) + "=" + sValue + sExpires + (sDomain ? "; domain=" + sDomain : "") + (sPath ? "; path=" + sPath : "") + (bSecure ? "; secure" : "");
				return true;
			},
			removeItem: function (sKey, sPath, sDomain) {
				if (!this.hasItem(sKey)) {
					return false;
				}
				document.cookie = encodeURIComponent(sKey) + "=; expires=Thu, 01 Jan 1970 00:00:00 GMT" + (sDomain ? "; domain=" + sDomain : "") + (sPath ? "; path=" + sPath : "");
				return true;
			},
			hasItem: function (sKey) {
				if (!sKey) {
					return false;
				}
				return (new RegExp("(?:^|;\\s*)" + encodeURIComponent(sKey).replace(/[\-\.\+\*]/g, "\\$&") + "\\s*\\=")).test(document.cookie);
			},
			keys: function () {
				var aKeys = document.cookie.replace(/((?:^|\s*;)[^\=]+)(?=;|$)|^\s*|\s*(?:\=[^;]*)?(?:\1|$)/g, "").split(/\s*(?:\=[^;]*)?;\s*/);
				for (var nLen = aKeys.length, nIdx = 0; nIdx < nLen; nIdx++) {
					aKeys[nIdx] = decodeURIComponent(aKeys[nIdx]);
				}
				return aKeys;
			}
	
	
		};
	
	/***/ },
	/* 26 */
	/***/ function(module, exports) {
	
		(function($) {
			"use strict";
	
			$.widget("mrm.selectHelper", {
	
				_create: function() {
					this.input = this.element.find('select');
					this._checkValues();
					this._bindEvents();
	
				},
	
				/* Check if input has value or not */
				_checkValues: function() {
					var siblings = this.input.parent().siblings('.textfield--select');
					this.input.not(':selected') ? this._addClass() : this._removeClass();
					// #15919 just for sitecore - in case that select has no options
		            (this.input.children("option").length == 0) && this._removeClass();
					siblings.each(function () {
						var $select = $(this).children();
						($select.val() != null) ? $select.addClass('is-not-empty').removeClass('is-empty') : $select.addClass('is-empty').removeClass('is-not-empty');
					})
				},
	
				_bindEvents: function() {
					var that = this;
					this.input.on('change', function() {
						that._checkValues(that);
					});
				},
	
				/* add/remove class functions */
				_addClass: function() {
					this.input.addClass('is-not-empty').removeClass('is-empty');
				},
	
				_removeClass: function() {
					this.input.removeClass('is-not-empty').addClass('is-empty');
				}
			});
	
		}(jQuery));
	
	/***/ },
	/* 27 */
	/***/ function(module, exports) {
	
		(function($) {
			"use strict";
	
			$.widget("mrm.textfield", {
				_create: function() {
					this.input = this.element.find('input, textarea');
					this._checkValues();
					this._bindEvents();
				},
	
				/* Check if input has value or not */
				_checkValues: function() {
					this.input.val() ? this._addClass() : this._removeClass();
				},
	
				_bindEvents: function() {
					var that = this;
	
					this.input.on('change', function() {
						that._checkValues();
					});
				},
	
				/* add/remove class functions */
				_addClass: function() {
					this.input.addClass('is-not-empty').removeClass('is-empty');
				},
	
				_removeClass: function() {
					this.input.removeClass('is-not-empty').addClass('is-empty');
				}
			});
	
		}(jQuery));
	
	/***/ },
	/* 28 */
	/***/ function(module, exports) {
	
		(function($) {
			"use strict";
	
			$.widget("mrm.wffmTextfield", {
				_create: function() {
					this.input = this.element.find('.form-control:not([type="password"])');
					this.label = this.element.find('.control-label');
	
					this.unflaotedElems = this.element.find('.radio, .checkbox, .g-recaptcha, input[type="file"], select');   // Elements like Radio Buttons, Checkboxes, File Inputs & select
					this.inputPassword = this.element.find('input[type="password"]');
	
					this._init();
					this._checkValues();
					this._bindEvents();
					this._confirmBox();
				},
	
				_init: function () {
					this.unflaotedElems.closest('.form-group').find(this.label).addClass('is-active');
				},
	
				/* Check if input has value or not */
				_checkValues: function() {
					this.input.val() ? this._addClass() : this._removeClass();
					this.inputPassword.each(function () {
						var $label = $(this).prev();
						if ($(this).val()) {
							$label.addClass('is-active').removeClass('is-not-active');
						} else {
							$label.addClass('is-not-active').removeClass('is-active');
						}
					});
	
				},
	
				_bindEvents: function() {
					var that = this;
	
					this.input.on('input', function() {
						that._checkValues();
					});
	
					this.input.on('click', function() {
						that._labelActive();
					});
	
					this.input.on('blur change', function() {
						that.input.val() ? that._labelActive() : that._labelNotActive();
					});
	
					this.inputPassword.on('click input', function() {
						var $label = $(this).prev();
						$label.addClass('is-active').removeClass('is-not-active');
					});
	
					this.inputPassword.on('blur', function () {
						var $label = $(this).prev();
						if ($(this).val()) {
							$label.addClass('is-active').removeClass('is-not-active');
						} else {
							$label.addClass('is-not-active').removeClass('is-active');
						}
					})
	
				},
	
				_confirmBox: function() {
					if(this.inputPassword.length > 1) {
						this.inputPassword.closest('.form-group').addClass('form-group--confirm');
					}
				},
	
				/* add/remove class functions */
				_addClass: function() {
					this.input.addClass('is-not-empty').removeClass('is-empty');
					this.label.addClass('is-active').removeClass('is-not-active');
				},
	
				_removeClass: function() {
					this.input.removeClass('is-not-empty').addClass('is-empty');
					this.label.removeClass('is-active').addClass('is-not-active');
				},
	
				_labelActive: function() {
					this.label.addClass('is-active').removeClass('is-not-active');
				},
	
				_labelNotActive: function() {
					this.label.removeClass('is-active').addClass('is-not-active');
				}
			});
	
		}(jQuery));
	
	
	/***/ },
	/* 29 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
	
		var $ = __webpack_require__(4);
	
	
		function Accordion() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.Accordion = module.exports = inherit(Accordion, BaseModule, {
	
			busEvents: {},
	
			domEvents: {},
	
			triggerElem: '.mod-accordion__head',
			activeClass: 'is-open',
			hasDeeplink: false,
	
			init: function () {
				this.head = this.$ctx.find('.mod-accordion__head');
				this.content = this.$ctx.find('.mod-accordion__body');
				this.article = this.$ctx.find('article');
				this.isMultiple = this.$ctx.data('multiple');
	
				this.deeplink();
				this.loadAcc();
			},
	
			generateAnchors: function(hash) {
				this.eHref = this.find('a[href="'+hash+'"]');
				this.eName = this.find('[name="'+hash+'"]');
			},
	
			tabAsParent: function() {
				var $parentMods = this.$ctx.parents('[data-t-name="Tabs"]');
	
				if($parentMods.length > 0) {
					var ref = this.$ctx.closest('.mod-tabs__content').attr('id');
					$('[href=#'+ ref +']').trigger('click');
				}
			},
	
			deeplink: function() {
				this.hash = document.location.hash.substring(1);
				this.generateAnchors(this.hash);
	
				(this.eHref.length || this.eName.length > 0) ? this.hasDeeplink = true : false;
			},
	
			loadAcc: function() {
				if(this.hasDeeplink) {
					var aTag = this.find('[name='+ this.hash +']') || this.find('[id='+ this.hash +']');
					var aPos = $(aTag).offset().top;
					this.article.removeClass(this.activeClass);
					this.tabAsParent();
					$('html,body').animate({scrollTop: aPos},'slow');
					this.find('[name='+ this.hash +']').closest(this.article).addClass(this.activeClass);
				}
	
				this.article.not('.is-open').find(this.content).hide();
				this.head.on('click', $.proxy(this.toggleItem, this)); // using domEvents for binding causes conflict with nested accordion!
			},
	
			open: function(target) {
				target.parent().toggleClass(this.activeClass);
				target.next(this.content).slideToggle();
	
			},
	
			close: function() {
				this.article.removeClass(this.activeClass);
				this.content.slideUp();
			},
	
			toggleItem: function(event) {
				var target = $(event.currentTarget);
				var parent = target.parent();
	
				if(this.isMultiple) {
					this.open(target);
				} else {
					if(parent.hasClass(this.activeClass)) {
						this.close();
					} else {
						this.close();
						this.open(target);
					}
				}
			}
		});
	
	
	/***/ },
	/* 30 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
	
		var $ = __webpack_require__(4);
	
	
		function ArticleCard() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.ArticleCard = module.exports = inherit(ArticleCard, BaseModule, {
	
			busEvents: {},
	
			domEvents: {},
	
			init: function () {
	
			}
	
		});
	
	/***/ },
	/* 31 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
	
		var $ = __webpack_require__(4);
		var Chartist = __webpack_require__(32);
	
	
		function Chart() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.Chart = module.exports = inherit(Chart, BaseModule, {
	
			busEvents: {},
	
			domEvents: {},
	
			init: function () {
				var screen = this.find('.ct-chart');
				var chartID = screen.attr('id');
	
				$.getJSON("../../../samples/json/ChartData.json", function (data) {
					var chartData = data[chartID];
					var chartType = chartData.type;
					switch (chartType) {
						case "Donut":
							new Chartist.Pie(
								'#' + chartID,
								chartData.data,
								{
									labelInterpolationFnc: function(value) {
										return value[0]
									},
									donut: true,
									donutWidth: 80
								},
								[
									['screen and (min-width: 640px)', {
										chartPadding: 0,
										labelOffset: 0,
										labelInterpolationFnc: function(value) {
											return value;
										}
									}],
									['screen and (min-width: 1024px)', {
										labelOffset: 50,
										chartPadding: 40,
										labelDirection: "explode",
										donutWidth: 60
									}]
								]
							);
							break;
						case "Bar":
							new Chartist.Bar(
								'#' + chartID,
								chartData.data,
								{
									// Default mobile configuration
									stackBars: true,
									axisX: {
										labelInterpolationFnc: function (value) {
											return value.split(/\s+/).map(function (word) {
												return word[0];
											}).join('');
										}
									},
									axisY: {
										onlyInteger: true,
										offset: 15
									}
								}, [
									// Options override for media > 400px
									['screen and (min-width: 400px)', {
										reverseData: true,
										horizontalBars: true,
										axisX: {
											labelInterpolationFnc: Chartist.noop
										},
										axisY: {
											onlyInteger: true,
											offset: 30
										}
									}],
									// Options override for media > 800px
									['screen and (min-width: 800px)', {
										stackBars: false,
										seriesBarDistance: 10
									}],
									// Options override for media > 1000px
									['screen and (min-width: 1000px)', {
										reverseData: false,
										horizontalBars: false,
										seriesBarDistance: 15
									}]
								]);
							break;
						case "Line":
							new Chartist.Line(
								'#' + chartID,
								chartData.data,
								{
									low: 0,
									showArea: true,
									axisY: {
										onlyInteger: true
									},
									fullWidth: true,
									chartPadding: {
										right: 40
									}
								}
							);
							break;
						case "Pie":
							new Chartist.Pie(
								'#' + chartID,
								chartData.data,
								{
									labelInterpolationFnc: function(value) {
										return value[0]
									}
								},
								[
									['screen and (min-width: 640px)', {
										chartPadding: 0,
										labelOffset: 0,
	
										labelInterpolationFnc: function(value) {
											return value;
										}
									}],
									['screen and (min-width: 1024px)', {
										labelDirection: 'explode',
										labelOffset: 100,
										chartPadding: 40
									}]
								]
							);
							break;
					}
				});
	
	
			}
	
	
		});
	
	/***/ },
	/* 32 */
	/***/ function(module, exports, __webpack_require__) {
	
		module.exports = __webpack_require__(33);
	
	/***/ },
	/* 33 */
	/***/ function(module, exports, __webpack_require__) {
	
		var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* Chartist.js 0.9.8
		 * Copyright © 2016 Gion Kunz
		 * Free to use under either the WTFPL license or the MIT license.
		 * https://raw.githubusercontent.com/gionkunz/chartist-js/master/LICENSE-WTFPL
		 * https://raw.githubusercontent.com/gionkunz/chartist-js/master/LICENSE-MIT
		 */
	
		!function(a,b){ true?!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function(){return a.Chartist=b()}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)):"object"==typeof exports?module.exports=b():a.Chartist=b()}(this,function(){var a={version:"0.9.8"};return function(a,b,c){"use strict";c.namespaces={svg:"http://www.w3.org/2000/svg",xmlns:"http://www.w3.org/2000/xmlns/",xhtml:"http://www.w3.org/1999/xhtml",xlink:"http://www.w3.org/1999/xlink",ct:"http://gionkunz.github.com/chartist-js/ct"},c.noop=function(a){return a},c.alphaNumerate=function(a){return String.fromCharCode(97+a%26)},c.extend=function(a){a=a||{};var b=Array.prototype.slice.call(arguments,1);return b.forEach(function(b){for(var d in b)"object"!=typeof b[d]||null===b[d]||b[d]instanceof Array?a[d]=b[d]:a[d]=c.extend({},a[d],b[d])}),a},c.replaceAll=function(a,b,c){return a.replace(new RegExp(b,"g"),c)},c.ensureUnit=function(a,b){return"number"==typeof a&&(a+=b),a},c.quantity=function(a){if("string"==typeof a){var b=/^(\d+)\s*(.*)$/g.exec(a);return{value:+b[1],unit:b[2]||void 0}}return{value:a}},c.querySelector=function(a){return a instanceof Node?a:b.querySelector(a)},c.times=function(a){return Array.apply(null,new Array(a))},c.sum=function(a,b){return a+(b?b:0)},c.mapMultiply=function(a){return function(b){return b*a}},c.mapAdd=function(a){return function(b){return b+a}},c.serialMap=function(a,b){var d=[],e=Math.max.apply(null,a.map(function(a){return a.length}));return c.times(e).forEach(function(c,e){var f=a.map(function(a){return a[e]});d[e]=b.apply(null,f)}),d},c.roundWithPrecision=function(a,b){var d=Math.pow(10,b||c.precision);return Math.round(a*d)/d},c.precision=8,c.escapingMap={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#039;"},c.serialize=function(a){return null===a||void 0===a?a:("number"==typeof a?a=""+a:"object"==typeof a&&(a=JSON.stringify({data:a})),Object.keys(c.escapingMap).reduce(function(a,b){return c.replaceAll(a,b,c.escapingMap[b])},a))},c.deserialize=function(a){if("string"!=typeof a)return a;a=Object.keys(c.escapingMap).reduce(function(a,b){return c.replaceAll(a,c.escapingMap[b],b)},a);try{a=JSON.parse(a),a=void 0!==a.data?a.data:a}catch(b){}return a},c.createSvg=function(a,b,d,e){var f;return b=b||"100%",d=d||"100%",Array.prototype.slice.call(a.querySelectorAll("svg")).filter(function(a){return a.getAttributeNS(c.namespaces.xmlns,"ct")}).forEach(function(b){a.removeChild(b)}),f=new c.Svg("svg").attr({width:b,height:d}).addClass(e).attr({style:"width: "+b+"; height: "+d+";"}),a.appendChild(f._node),f},c.normalizeData=function(a){if(a=a||{series:[],labels:[]},a.series=a.series||[],a.labels=a.labels||[],a.series.length>0&&0===a.labels.length){var b,d=c.getDataArray(a);b=d.every(function(a){return a instanceof Array})?Math.max.apply(null,d.map(function(a){return a.length})):d.length,a.labels=c.times(b).map(function(){return""})}return a},c.reverseData=function(a){a.labels.reverse(),a.series.reverse();for(var b=0;b<a.series.length;b++)"object"==typeof a.series[b]&&void 0!==a.series[b].data?a.series[b].data.reverse():a.series[b]instanceof Array&&a.series[b].reverse()},c.getDataArray=function(a,b,d){function e(a){if(!c.isFalseyButZero(a)){if((a.data||a)instanceof Array)return(a.data||a).map(e);if(a.hasOwnProperty("value"))return e(a.value);if(d){var b={};return"string"==typeof d?b[d]=c.getNumberOrUndefined(a):b.y=c.getNumberOrUndefined(a),b.x=a.hasOwnProperty("x")?c.getNumberOrUndefined(a.x):b.x,b.y=a.hasOwnProperty("y")?c.getNumberOrUndefined(a.y):b.y,b}return c.getNumberOrUndefined(a)}}return(b&&!a.reversed||!b&&a.reversed)&&(c.reverseData(a),a.reversed=!a.reversed),a.series.map(e)},c.normalizePadding=function(a,b){return b=b||0,"number"==typeof a?{top:a,right:a,bottom:a,left:a}:{top:"number"==typeof a.top?a.top:b,right:"number"==typeof a.right?a.right:b,bottom:"number"==typeof a.bottom?a.bottom:b,left:"number"==typeof a.left?a.left:b}},c.getMetaData=function(a,b){var d=a.data?a.data[b]:a[b];return d?c.serialize(d.meta):void 0},c.orderOfMagnitude=function(a){return Math.floor(Math.log(Math.abs(a))/Math.LN10)},c.projectLength=function(a,b,c){return b/c.range*a},c.getAvailableHeight=function(a,b){return Math.max((c.quantity(b.height).value||a.height())-(b.chartPadding.top+b.chartPadding.bottom)-b.axisX.offset,0)},c.getHighLow=function(a,b,d){function e(a){if(void 0!==a)if(a instanceof Array)for(var b=0;b<a.length;b++)e(a[b]);else{var c=d?+a[d]:+a;g&&c>f.high&&(f.high=c),h&&c<f.low&&(f.low=c)}}b=c.extend({},b,d?b["axis"+d.toUpperCase()]:{});var f={high:void 0===b.high?-Number.MAX_VALUE:+b.high,low:void 0===b.low?Number.MAX_VALUE:+b.low},g=void 0===b.high,h=void 0===b.low;return(g||h)&&e(a),(b.referenceValue||0===b.referenceValue)&&(f.high=Math.max(b.referenceValue,f.high),f.low=Math.min(b.referenceValue,f.low)),f.high<=f.low&&(0===f.low?f.high=1:f.low<0?f.high=0:f.high>0?f.low=0:(f.high=1,f.low=0)),f},c.isNum=function(a){return!isNaN(a)&&isFinite(a)},c.isFalseyButZero=function(a){return!a&&0!==a},c.getNumberOrUndefined=function(a){return isNaN(+a)?void 0:+a},c.getMultiValue=function(a,b){return c.isNum(a)?+a:a?a[b||"y"]||0:0},c.rho=function(a){function b(a,c){return a%c===0?c:b(c,a%c)}function c(a){return a*a+1}if(1===a)return a;var d,e=2,f=2;if(a%2===0)return 2;do e=c(e)%a,f=c(c(f))%a,d=b(Math.abs(e-f),a);while(1===d);return d},c.getBounds=function(a,b,d,e){var f,g,h,i=0,j={high:b.high,low:b.low};j.valueRange=j.high-j.low,j.oom=c.orderOfMagnitude(j.valueRange),j.step=Math.pow(10,j.oom),j.min=Math.floor(j.low/j.step)*j.step,j.max=Math.ceil(j.high/j.step)*j.step,j.range=j.max-j.min,j.numberOfSteps=Math.round(j.range/j.step);var k=c.projectLength(a,j.step,j),l=k<d,m=e?c.rho(j.range):0;if(e&&c.projectLength(a,1,j)>=d)j.step=1;else if(e&&m<j.step&&c.projectLength(a,m,j)>=d)j.step=m;else for(;;){if(l&&c.projectLength(a,j.step,j)<=d)j.step*=2;else{if(l||!(c.projectLength(a,j.step/2,j)>=d))break;if(j.step/=2,e&&j.step%1!==0){j.step*=2;break}}if(i++>1e3)throw new Error("Exceeded maximum number of iterations while optimizing scale step!")}var n=2.221e-16;for(j.step=Math.max(j.step,n),g=j.min,h=j.max;g+j.step<=j.low;)g+=j.step;for(;h-j.step>=j.high;)h-=j.step;j.min=g,j.max=h,j.range=j.max-j.min;var o=[];for(f=j.min;f<=j.max;f+=j.step){var p=c.roundWithPrecision(f);p!==o[o.length-1]&&o.push(f)}return j.values=o,j},c.polarToCartesian=function(a,b,c,d){var e=(d-90)*Math.PI/180;return{x:a+c*Math.cos(e),y:b+c*Math.sin(e)}},c.createChartRect=function(a,b,d){var e=!(!b.axisX&&!b.axisY),f=e?b.axisY.offset:0,g=e?b.axisX.offset:0,h=a.width()||c.quantity(b.width).value||0,i=a.height()||c.quantity(b.height).value||0,j=c.normalizePadding(b.chartPadding,d);h=Math.max(h,f+j.left+j.right),i=Math.max(i,g+j.top+j.bottom);var k={padding:j,width:function(){return this.x2-this.x1},height:function(){return this.y1-this.y2}};return e?("start"===b.axisX.position?(k.y2=j.top+g,k.y1=Math.max(i-j.bottom,k.y2+1)):(k.y2=j.top,k.y1=Math.max(i-j.bottom-g,k.y2+1)),"start"===b.axisY.position?(k.x1=j.left+f,k.x2=Math.max(h-j.right,k.x1+1)):(k.x1=j.left,k.x2=Math.max(h-j.right-f,k.x1+1))):(k.x1=j.left,k.x2=Math.max(h-j.right,k.x1+1),k.y2=j.top,k.y1=Math.max(i-j.bottom,k.y2+1)),k},c.createGrid=function(a,b,d,e,f,g,h,i){var j={};j[d.units.pos+"1"]=a,j[d.units.pos+"2"]=a,j[d.counterUnits.pos+"1"]=e,j[d.counterUnits.pos+"2"]=e+f;var k=g.elem("line",j,h.join(" "));i.emit("draw",c.extend({type:"grid",axis:d,index:b,group:g,element:k},j))},c.createLabel=function(a,b,d,e,f,g,h,i,j,k,l){var m,n={};if(n[f.units.pos]=a+h[f.units.pos],n[f.counterUnits.pos]=h[f.counterUnits.pos],n[f.units.len]=b,n[f.counterUnits.len]=Math.max(0,g-10),k){var o='<span class="'+j.join(" ")+'" style="'+f.units.len+": "+Math.round(n[f.units.len])+"px; "+f.counterUnits.len+": "+Math.round(n[f.counterUnits.len])+'px">'+e[d]+"</span>";m=i.foreignObject(o,c.extend({style:"overflow: visible;"},n))}else m=i.elem("text",n,j.join(" ")).text(e[d]);l.emit("draw",c.extend({type:"label",axis:f,index:d,group:i,element:m,text:e[d]},n))},c.getSeriesOption=function(a,b,c){if(a.name&&b.series&&b.series[a.name]){var d=b.series[a.name];return d.hasOwnProperty(c)?d[c]:b[c]}return b[c]},c.optionsProvider=function(b,d,e){function f(b){var f=h;if(h=c.extend({},j),d)for(i=0;i<d.length;i++){var g=a.matchMedia(d[i][0]);g.matches&&(h=c.extend(h,d[i][1]))}e&&b&&e.emit("optionsChanged",{previousOptions:f,currentOptions:h})}function g(){k.forEach(function(a){a.removeListener(f)})}var h,i,j=c.extend({},b),k=[];if(!a.matchMedia)throw"window.matchMedia not found! Make sure you're using a polyfill.";if(d)for(i=0;i<d.length;i++){var l=a.matchMedia(d[i][0]);l.addListener(f),k.push(l)}return f(),{removeMediaQueryListeners:g,getCurrentOptions:function(){return c.extend({},h)}}},c.splitIntoSegments=function(a,b,d){var e={increasingX:!1,fillHoles:!1};d=c.extend({},e,d);for(var f=[],g=!0,h=0;h<a.length;h+=2)void 0===b[h/2].value?d.fillHoles||(g=!0):(d.increasingX&&h>=2&&a[h]<=a[h-2]&&(g=!0),g&&(f.push({pathCoordinates:[],valueData:[]}),g=!1),f[f.length-1].pathCoordinates.push(a[h],a[h+1]),f[f.length-1].valueData.push(b[h/2]));return f}}(window,document,a),function(a,b,c){"use strict";c.Interpolation={},c.Interpolation.none=function(a){var b={fillHoles:!1};return a=c.extend({},b,a),function(b,d){for(var e=new c.Svg.Path,f=!0,g=0;g<b.length;g+=2){var h=b[g],i=b[g+1],j=d[g/2];void 0!==j.value?(f?e.move(h,i,!1,j):e.line(h,i,!1,j),f=!1):a.fillHoles||(f=!0)}return e}},c.Interpolation.simple=function(a){var b={divisor:2,fillHoles:!1};a=c.extend({},b,a);var d=1/Math.max(1,a.divisor);return function(b,e){for(var f,g,h,i=new c.Svg.Path,j=0;j<b.length;j+=2){var k=b[j],l=b[j+1],m=(k-f)*d,n=e[j/2];void 0!==n.value?(void 0===h?i.move(k,l,!1,n):i.curve(f+m,g,k-m,l,k,l,!1,n),f=k,g=l,h=n):a.fillHoles||(f=k=h=void 0)}return i}},c.Interpolation.cardinal=function(a){var b={tension:1,fillHoles:!1};a=c.extend({},b,a);var d=Math.min(1,Math.max(0,a.tension)),e=1-d;return function f(b,g){var h=c.splitIntoSegments(b,g,{fillHoles:a.fillHoles});if(h.length){if(h.length>1){var i=[];return h.forEach(function(a){i.push(f(a.pathCoordinates,a.valueData))}),c.Svg.Path.join(i)}if(b=h[0].pathCoordinates,g=h[0].valueData,b.length<=4)return c.Interpolation.none()(b,g);for(var j,k=(new c.Svg.Path).move(b[0],b[1],!1,g[0]),l=0,m=b.length;m-2*!j>l;l+=2){var n=[{x:+b[l-2],y:+b[l-1]},{x:+b[l],y:+b[l+1]},{x:+b[l+2],y:+b[l+3]},{x:+b[l+4],y:+b[l+5]}];j?l?m-4===l?n[3]={x:+b[0],y:+b[1]}:m-2===l&&(n[2]={x:+b[0],y:+b[1]},n[3]={x:+b[2],y:+b[3]}):n[0]={x:+b[m-2],y:+b[m-1]}:m-4===l?n[3]=n[2]:l||(n[0]={x:+b[l],y:+b[l+1]}),k.curve(d*(-n[0].x+6*n[1].x+n[2].x)/6+e*n[2].x,d*(-n[0].y+6*n[1].y+n[2].y)/6+e*n[2].y,d*(n[1].x+6*n[2].x-n[3].x)/6+e*n[2].x,d*(n[1].y+6*n[2].y-n[3].y)/6+e*n[2].y,n[2].x,n[2].y,!1,g[(l+2)/2])}return k}return c.Interpolation.none()([])}},c.Interpolation.monotoneCubic=function(a){var b={fillHoles:!1};return a=c.extend({},b,a),function d(b,e){var f=c.splitIntoSegments(b,e,{fillHoles:a.fillHoles,increasingX:!0});if(f.length){if(f.length>1){var g=[];return f.forEach(function(a){g.push(d(a.pathCoordinates,a.valueData))}),c.Svg.Path.join(g)}if(b=f[0].pathCoordinates,e=f[0].valueData,b.length<=4)return c.Interpolation.none()(b,e);var h,i,j=[],k=[],l=b.length/2,m=[],n=[],o=[],p=[];for(h=0;h<l;h++)j[h]=b[2*h],k[h]=b[2*h+1];for(h=0;h<l-1;h++)o[h]=k[h+1]-k[h],p[h]=j[h+1]-j[h],n[h]=o[h]/p[h];for(m[0]=n[0],m[l-1]=n[l-2],h=1;h<l-1;h++)0===n[h]||0===n[h-1]||n[h-1]>0!=n[h]>0?m[h]=0:(m[h]=3*(p[h-1]+p[h])/((2*p[h]+p[h-1])/n[h-1]+(p[h]+2*p[h-1])/n[h]),isFinite(m[h])||(m[h]=0));for(i=(new c.Svg.Path).move(j[0],k[0],!1,e[0]),h=0;h<l-1;h++)i.curve(j[h]+p[h]/3,k[h]+m[h]*p[h]/3,j[h+1]-p[h]/3,k[h+1]-m[h+1]*p[h]/3,j[h+1],k[h+1],!1,e[h+1]);return i}return c.Interpolation.none()([])}},c.Interpolation.step=function(a){var b={postpone:!0,fillHoles:!1};return a=c.extend({},b,a),function(b,d){for(var e,f,g,h=new c.Svg.Path,i=0;i<b.length;i+=2){var j=b[i],k=b[i+1],l=d[i/2];void 0!==l.value?(void 0===g?h.move(j,k,!1,l):(a.postpone?h.line(j,f,!1,g):h.line(e,k,!1,l),h.line(j,k,!1,l)),e=j,f=k,g=l):a.fillHoles||(e=f=g=void 0)}return h}}}(window,document,a),function(a,b,c){"use strict";c.EventEmitter=function(){function a(a,b){d[a]=d[a]||[],d[a].push(b)}function b(a,b){d[a]&&(b?(d[a].splice(d[a].indexOf(b),1),0===d[a].length&&delete d[a]):delete d[a])}function c(a,b){d[a]&&d[a].forEach(function(a){a(b)}),d["*"]&&d["*"].forEach(function(c){c(a,b)})}var d=[];return{addEventHandler:a,removeEventHandler:b,emit:c}}}(window,document,a),function(a,b,c){"use strict";function d(a){var b=[];if(a.length)for(var c=0;c<a.length;c++)b.push(a[c]);return b}function e(a,b){var d=b||this.prototype||c.Class,e=Object.create(d);c.Class.cloneDefinitions(e,a);var f=function(){var a,b=e.constructor||function(){};return a=this===c?Object.create(e):this,b.apply(a,Array.prototype.slice.call(arguments,0)),a};return f.prototype=e,f["super"]=d,f.extend=this.extend,f}function f(){var a=d(arguments),b=a[0];return a.splice(1,a.length-1).forEach(function(a){Object.getOwnPropertyNames(a).forEach(function(c){delete b[c],Object.defineProperty(b,c,Object.getOwnPropertyDescriptor(a,c))})}),b}c.Class={extend:e,cloneDefinitions:f}}(window,document,a),function(a,b,c){"use strict";function d(a,b,d){return a&&(this.data=a,this.eventEmitter.emit("data",{type:"update",data:this.data})),b&&(this.options=c.extend({},d?this.options:this.defaultOptions,b),this.initializeTimeoutId||(this.optionsProvider.removeMediaQueryListeners(),this.optionsProvider=c.optionsProvider(this.options,this.responsiveOptions,this.eventEmitter))),this.initializeTimeoutId||this.createChart(this.optionsProvider.getCurrentOptions()),this}function e(){return this.initializeTimeoutId?a.clearTimeout(this.initializeTimeoutId):(a.removeEventListener("resize",this.resizeListener),this.optionsProvider.removeMediaQueryListeners()),this}function f(a,b){return this.eventEmitter.addEventHandler(a,b),this}function g(a,b){return this.eventEmitter.removeEventHandler(a,b),this}function h(){a.addEventListener("resize",this.resizeListener),this.optionsProvider=c.optionsProvider(this.options,this.responsiveOptions,this.eventEmitter),this.eventEmitter.addEventHandler("optionsChanged",function(){this.update()}.bind(this)),this.options.plugins&&this.options.plugins.forEach(function(a){a instanceof Array?a[0](this,a[1]):a(this)}.bind(this)),this.eventEmitter.emit("data",{type:"initial",data:this.data}),this.createChart(this.optionsProvider.getCurrentOptions()),this.initializeTimeoutId=void 0}function i(a,b,d,e,f){this.container=c.querySelector(a),this.data=b,this.defaultOptions=d,this.options=e,this.responsiveOptions=f,this.eventEmitter=c.EventEmitter(),this.supportsForeignObject=c.Svg.isSupported("Extensibility"),this.supportsAnimations=c.Svg.isSupported("AnimationEventsAttribute"),this.resizeListener=function(){this.update()}.bind(this),this.container&&(this.container.__chartist__&&this.container.__chartist__.detach(),this.container.__chartist__=this),this.initializeTimeoutId=setTimeout(h.bind(this),0)}c.Base=c.Class.extend({constructor:i,optionsProvider:void 0,container:void 0,svg:void 0,eventEmitter:void 0,createChart:function(){throw new Error("Base chart type can't be instantiated!")},update:d,detach:e,on:f,off:g,version:c.version,supportsForeignObject:!1})}(window,document,a),function(a,b,c){"use strict";function d(a,d,e,f,g){a instanceof Element?this._node=a:(this._node=b.createElementNS(c.namespaces.svg,a),"svg"===a&&this.attr({"xmlns:ct":c.namespaces.ct})),d&&this.attr(d),e&&this.addClass(e),f&&(g&&f._node.firstChild?f._node.insertBefore(this._node,f._node.firstChild):f._node.appendChild(this._node))}function e(a,b){return"string"==typeof a?b?this._node.getAttributeNS(b,a):this._node.getAttribute(a):(Object.keys(a).forEach(function(b){if(void 0!==a[b])if(b.indexOf(":")!==-1){var d=b.split(":");this._node.setAttributeNS(c.namespaces[d[0]],b,a[b])}else this._node.setAttribute(b,a[b])}.bind(this)),this)}function f(a,b,d,e){return new c.Svg(a,b,d,this,e)}function g(){return this._node.parentNode instanceof SVGElement?new c.Svg(this._node.parentNode):null}function h(){for(var a=this._node;"svg"!==a.nodeName;)a=a.parentNode;return new c.Svg(a)}function i(a){var b=this._node.querySelector(a);return b?new c.Svg(b):null}function j(a){var b=this._node.querySelectorAll(a);return b.length?new c.Svg.List(b):null}function k(a,d,e,f){if("string"==typeof a){var g=b.createElement("div");g.innerHTML=a,a=g.firstChild}a.setAttribute("xmlns",c.namespaces.xmlns);var h=this.elem("foreignObject",d,e,f);return h._node.appendChild(a),h}function l(a){return this._node.appendChild(b.createTextNode(a)),this}function m(){for(;this._node.firstChild;)this._node.removeChild(this._node.firstChild);return this}function n(){return this._node.parentNode.removeChild(this._node),this.parent()}function o(a){return this._node.parentNode.replaceChild(a._node,this._node),a}function p(a,b){return b&&this._node.firstChild?this._node.insertBefore(a._node,this._node.firstChild):this._node.appendChild(a._node),this}function q(){return this._node.getAttribute("class")?this._node.getAttribute("class").trim().split(/\s+/):[]}function r(a){return this._node.setAttribute("class",this.classes(this._node).concat(a.trim().split(/\s+/)).filter(function(a,b,c){return c.indexOf(a)===b}).join(" ")),this}function s(a){var b=a.trim().split(/\s+/);return this._node.setAttribute("class",this.classes(this._node).filter(function(a){return b.indexOf(a)===-1}).join(" ")),this}function t(){return this._node.setAttribute("class",""),this}function u(){return this._node.getBoundingClientRect().height}function v(){return this._node.getBoundingClientRect().width}function w(a,b,d){return void 0===b&&(b=!0),Object.keys(a).forEach(function(e){function f(a,b){var f,g,h,i={};a.easing&&(h=a.easing instanceof Array?a.easing:c.Svg.Easing[a.easing],delete a.easing),a.begin=c.ensureUnit(a.begin,"ms"),a.dur=c.ensureUnit(a.dur,"ms"),h&&(a.calcMode="spline",a.keySplines=h.join(" "),a.keyTimes="0;1"),b&&(a.fill="freeze",i[e]=a.from,this.attr(i),g=c.quantity(a.begin||0).value,a.begin="indefinite"),f=this.elem("animate",c.extend({attributeName:e},a)),b&&setTimeout(function(){try{f._node.beginElement()}catch(b){i[e]=a.to,this.attr(i),f.remove()}}.bind(this),g),d&&f._node.addEventListener("beginEvent",function(){d.emit("animationBegin",{element:this,animate:f._node,params:a})}.bind(this)),f._node.addEventListener("endEvent",function(){d&&d.emit("animationEnd",{element:this,animate:f._node,params:a}),b&&(i[e]=a.to,this.attr(i),f.remove())}.bind(this))}a[e]instanceof Array?a[e].forEach(function(a){f.bind(this)(a,!1)}.bind(this)):f.bind(this)(a[e],b)}.bind(this)),this}function x(a){var b=this;this.svgElements=[];for(var d=0;d<a.length;d++)this.svgElements.push(new c.Svg(a[d]));Object.keys(c.Svg.prototype).filter(function(a){return["constructor","parent","querySelector","querySelectorAll","replace","append","classes","height","width"].indexOf(a)===-1}).forEach(function(a){b[a]=function(){var d=Array.prototype.slice.call(arguments,0);return b.svgElements.forEach(function(b){c.Svg.prototype[a].apply(b,d)}),b}})}c.Svg=c.Class.extend({constructor:d,attr:e,elem:f,parent:g,root:h,querySelector:i,querySelectorAll:j,foreignObject:k,text:l,empty:m,remove:n,replace:o,append:p,classes:q,addClass:r,removeClass:s,removeAllClasses:t,height:u,width:v,animate:w}),c.Svg.isSupported=function(a){return b.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#"+a,"1.1")};var y={easeInSine:[.47,0,.745,.715],easeOutSine:[.39,.575,.565,1],easeInOutSine:[.445,.05,.55,.95],easeInQuad:[.55,.085,.68,.53],easeOutQuad:[.25,.46,.45,.94],easeInOutQuad:[.455,.03,.515,.955],easeInCubic:[.55,.055,.675,.19],easeOutCubic:[.215,.61,.355,1],easeInOutCubic:[.645,.045,.355,1],easeInQuart:[.895,.03,.685,.22],easeOutQuart:[.165,.84,.44,1],easeInOutQuart:[.77,0,.175,1],easeInQuint:[.755,.05,.855,.06],easeOutQuint:[.23,1,.32,1],easeInOutQuint:[.86,0,.07,1],easeInExpo:[.95,.05,.795,.035],easeOutExpo:[.19,1,.22,1],easeInOutExpo:[1,0,0,1],easeInCirc:[.6,.04,.98,.335],easeOutCirc:[.075,.82,.165,1],easeInOutCirc:[.785,.135,.15,.86],easeInBack:[.6,-.28,.735,.045],easeOutBack:[.175,.885,.32,1.275],easeInOutBack:[.68,-.55,.265,1.55]};c.Svg.Easing=y,c.Svg.List=c.Class.extend({constructor:x})}(window,document,a),function(a,b,c){"use strict";function d(a,b,d,e,f,g){var h=c.extend({command:f?a.toLowerCase():a.toUpperCase()},b,g?{data:g}:{});d.splice(e,0,h)}function e(a,b){a.forEach(function(c,d){u[c.command.toLowerCase()].forEach(function(e,f){b(c,e,d,f,a)})})}function f(a,b){this.pathElements=[],this.pos=0,this.close=a,this.options=c.extend({},v,b)}function g(a){return void 0!==a?(this.pos=Math.max(0,Math.min(this.pathElements.length,a)),this):this.pos}function h(a){return this.pathElements.splice(this.pos,a),this}function i(a,b,c,e){return d("M",{x:+a,y:+b},this.pathElements,this.pos++,c,e),this}function j(a,b,c,e){return d("L",{x:+a,y:+b},this.pathElements,this.pos++,c,e),this}function k(a,b,c,e,f,g,h,i){return d("C",{x1:+a,y1:+b,x2:+c,y2:+e,x:+f,y:+g},this.pathElements,this.pos++,h,i),this}function l(a,b,c,e,f,g,h,i,j){return d("A",{rx:+a,ry:+b,xAr:+c,lAf:+e,sf:+f,x:+g,y:+h},this.pathElements,this.pos++,i,j),this}function m(a){var b=a.replace(/([A-Za-z])([0-9])/g,"$1 $2").replace(/([0-9])([A-Za-z])/g,"$1 $2").split(/[\s,]+/).reduce(function(a,b){return b.match(/[A-Za-z]/)&&a.push([]),a[a.length-1].push(b),a},[]);"Z"===b[b.length-1][0].toUpperCase()&&b.pop();var d=b.map(function(a){var b=a.shift(),d=u[b.toLowerCase()];return c.extend({command:b},d.reduce(function(b,c,d){return b[c]=+a[d],b},{}))}),e=[this.pos,0];return Array.prototype.push.apply(e,d),Array.prototype.splice.apply(this.pathElements,e),this.pos+=d.length,this}function n(){var a=Math.pow(10,this.options.accuracy);return this.pathElements.reduce(function(b,c){var d=u[c.command.toLowerCase()].map(function(b){return this.options.accuracy?Math.round(c[b]*a)/a:c[b]}.bind(this));return b+c.command+d.join(",")}.bind(this),"")+(this.close?"Z":"")}function o(a,b){return e(this.pathElements,function(c,d){c[d]*="x"===d[0]?a:b}),this}function p(a,b){return e(this.pathElements,function(c,d){c[d]+="x"===d[0]?a:b}),this}function q(a){return e(this.pathElements,function(b,c,d,e,f){var g=a(b,c,d,e,f);(g||0===g)&&(b[c]=g)}),this}function r(a){var b=new c.Svg.Path(a||this.close);return b.pos=this.pos,b.pathElements=this.pathElements.slice().map(function(a){return c.extend({},a)}),b.options=c.extend({},this.options),b}function s(a){var b=[new c.Svg.Path];return this.pathElements.forEach(function(d){d.command===a.toUpperCase()&&0!==b[b.length-1].pathElements.length&&b.push(new c.Svg.Path),b[b.length-1].pathElements.push(d)}),b}function t(a,b,d){for(var e=new c.Svg.Path(b,d),f=0;f<a.length;f++)for(var g=a[f],h=0;h<g.pathElements.length;h++)e.pathElements.push(g.pathElements[h]);return e}var u={m:["x","y"],l:["x","y"],c:["x1","y1","x2","y2","x","y"],a:["rx","ry","xAr","lAf","sf","x","y"]},v={accuracy:3};c.Svg.Path=c.Class.extend({constructor:f,position:g,remove:h,move:i,line:j,curve:k,arc:l,scale:o,translate:p,transform:q,parse:m,stringify:n,clone:r,splitByCommand:s}),c.Svg.Path.elementDescriptions=u,c.Svg.Path.join=t}(window,document,a),function(a,b,c){"use strict";function d(a,b,c,d){this.units=a,this.counterUnits=a===f.x?f.y:f.x,this.chartRect=b,this.axisLength=b[a.rectEnd]-b[a.rectStart],this.gridOffset=b[a.rectOffset],this.ticks=c,this.options=d}function e(a,b,d,e,f){var g=e["axis"+this.units.pos.toUpperCase()],h=this.ticks.map(this.projectValue.bind(this)),i=this.ticks.map(g.labelInterpolationFnc);h.forEach(function(j,k){var l,m={x:0,y:0};l=h[k+1]?h[k+1]-j:Math.max(this.axisLength-j,30),c.isFalseyButZero(i[k])&&""!==i[k]||("x"===this.units.pos?(j=this.chartRect.x1+j,m.x=e.axisX.labelOffset.x,"start"===e.axisX.position?m.y=this.chartRect.padding.top+e.axisX.labelOffset.y+(d?5:20):m.y=this.chartRect.y1+e.axisX.labelOffset.y+(d?5:20)):(j=this.chartRect.y1-j,m.y=e.axisY.labelOffset.y-(d?l:0),"start"===e.axisY.position?m.x=d?this.chartRect.padding.left+e.axisY.labelOffset.x:this.chartRect.x1-10:m.x=this.chartRect.x2+e.axisY.labelOffset.x+10),g.showGrid&&c.createGrid(j,k,this,this.gridOffset,this.chartRect[this.counterUnits.len](),a,[e.classNames.grid,e.classNames[this.units.dir]],f),g.showLabel&&c.createLabel(j,l,k,i,this,g.offset,m,b,[e.classNames.label,e.classNames[this.units.dir],e.classNames[g.position]],d,f))}.bind(this))}var f={x:{pos:"x",len:"width",dir:"horizontal",rectStart:"x1",rectEnd:"x2",rectOffset:"y2"},y:{pos:"y",len:"height",dir:"vertical",rectStart:"y2",rectEnd:"y1",rectOffset:"x1"}};c.Axis=c.Class.extend({constructor:d,createGridAndLabels:e,projectValue:function(a,b,c){throw new Error("Base axis can't be instantiated!")}}),c.Axis.units=f}(window,document,a),function(a,b,c){"use strict";function d(a,b,d,e){var f=e.highLow||c.getHighLow(b.normalized,e,a.pos);this.bounds=c.getBounds(d[a.rectEnd]-d[a.rectStart],f,e.scaleMinSpace||20,e.onlyInteger),this.range={min:this.bounds.min,max:this.bounds.max},c.AutoScaleAxis["super"].constructor.call(this,a,d,this.bounds.values,e)}function e(a){return this.axisLength*(+c.getMultiValue(a,this.units.pos)-this.bounds.min)/this.bounds.range}c.AutoScaleAxis=c.Axis.extend({constructor:d,projectValue:e})}(window,document,a),function(a,b,c){"use strict";function d(a,b,d,e){var f=e.highLow||c.getHighLow(b.normalized,e,a.pos);this.divisor=e.divisor||1,this.ticks=e.ticks||c.times(this.divisor).map(function(a,b){return f.low+(f.high-f.low)/this.divisor*b}.bind(this)),this.ticks.sort(function(a,b){return a-b}),this.range={min:f.low,max:f.high},c.FixedScaleAxis["super"].constructor.call(this,a,d,this.ticks,e),this.stepLength=this.axisLength/this.divisor}function e(a){return this.axisLength*(+c.getMultiValue(a,this.units.pos)-this.range.min)/(this.range.max-this.range.min)}c.FixedScaleAxis=c.Axis.extend({constructor:d,projectValue:e})}(window,document,a),function(a,b,c){"use strict";function d(a,b,d,e){c.StepAxis["super"].constructor.call(this,a,d,e.ticks,e),this.stepLength=this.axisLength/(e.ticks.length-(e.stretch?1:0))}function e(a,b){return this.stepLength*b}c.StepAxis=c.Axis.extend({constructor:d,projectValue:e})}(window,document,a),function(a,b,c){"use strict";function d(a){this.data=c.normalizeData(this.data);var b={raw:this.data,normalized:c.getDataArray(this.data,a.reverseData,!0)};this.svg=c.createSvg(this.container,a.width,a.height,a.classNames.chart);var d,e,g=this.svg.elem("g").addClass(a.classNames.gridGroup),h=this.svg.elem("g"),i=this.svg.elem("g").addClass(a.classNames.labelGroup),j=c.createChartRect(this.svg,a,f.padding);d=void 0===a.axisX.type?new c.StepAxis(c.Axis.units.x,b,j,c.extend({},a.axisX,{ticks:b.raw.labels,stretch:a.fullWidth})):a.axisX.type.call(c,c.Axis.units.x,b,j,a.axisX),e=void 0===a.axisY.type?new c.AutoScaleAxis(c.Axis.units.y,b,j,c.extend({},a.axisY,{high:c.isNum(a.high)?a.high:a.axisY.high,low:c.isNum(a.low)?a.low:a.axisY.low})):a.axisY.type.call(c,c.Axis.units.y,b,j,a.axisY),d.createGridAndLabels(g,i,this.supportsForeignObject,a,this.eventEmitter),e.createGridAndLabels(g,i,this.supportsForeignObject,a,this.eventEmitter),b.raw.series.forEach(function(f,g){var i=h.elem("g");i.attr({"ct:series-name":f.name,"ct:meta":c.serialize(f.meta)}),i.addClass([a.classNames.series,f.className||a.classNames.series+"-"+c.alphaNumerate(g)].join(" "));var k=[],l=[];b.normalized[g].forEach(function(a,h){var i={x:j.x1+d.projectValue(a,h,b.normalized[g]),y:j.y1-e.projectValue(a,h,b.normalized[g])};k.push(i.x,i.y),l.push({value:a,valueIndex:h,meta:c.getMetaData(f,h)})}.bind(this));var m={lineSmooth:c.getSeriesOption(f,a,"lineSmooth"),showPoint:c.getSeriesOption(f,a,"showPoint"),showLine:c.getSeriesOption(f,a,"showLine"),showArea:c.getSeriesOption(f,a,"showArea"),areaBase:c.getSeriesOption(f,a,"areaBase")},n="function"==typeof m.lineSmooth?m.lineSmooth:m.lineSmooth?c.Interpolation.monotoneCubic():c.Interpolation.none(),o=n(k,l);if(m.showPoint&&o.pathElements.forEach(function(b){var h=i.elem("line",{x1:b.x,y1:b.y,x2:b.x+.01,y2:b.y},a.classNames.point).attr({"ct:value":[b.data.value.x,b.data.value.y].filter(c.isNum).join(","),"ct:meta":b.data.meta});this.eventEmitter.emit("draw",{type:"point",value:b.data.value,index:b.data.valueIndex,meta:b.data.meta,series:f,seriesIndex:g,axisX:d,axisY:e,group:i,element:h,x:b.x,y:b.y})}.bind(this)),m.showLine){var p=i.elem("path",{d:o.stringify()},a.classNames.line,!0);this.eventEmitter.emit("draw",{type:"line",values:b.normalized[g],path:o.clone(),chartRect:j,index:g,series:f,seriesIndex:g,axisX:d,axisY:e,group:i,element:p})}if(m.showArea&&e.range){var q=Math.max(Math.min(m.areaBase,e.range.max),e.range.min),r=j.y1-e.projectValue(q);o.splitByCommand("M").filter(function(a){return a.pathElements.length>1}).map(function(a){var b=a.pathElements[0],c=a.pathElements[a.pathElements.length-1];return a.clone(!0).position(0).remove(1).move(b.x,r).line(b.x,b.y).position(a.pathElements.length+1).line(c.x,r)}).forEach(function(c){var h=i.elem("path",{d:c.stringify()},a.classNames.area,!0);this.eventEmitter.emit("draw",{type:"area",values:b.normalized[g],path:c.clone(),series:f,seriesIndex:g,axisX:d,axisY:e,chartRect:j,index:g,group:i,element:h})}.bind(this))}}.bind(this)),this.eventEmitter.emit("created",{bounds:e.bounds,chartRect:j,axisX:d,axisY:e,svg:this.svg,options:a})}function e(a,b,d,e){c.Line["super"].constructor.call(this,a,b,f,c.extend({},f,d),e)}var f={axisX:{offset:30,position:"end",labelOffset:{x:0,y:0},showLabel:!0,showGrid:!0,labelInterpolationFnc:c.noop,type:void 0},axisY:{offset:40,position:"start",labelOffset:{x:0,y:0},showLabel:!0,showGrid:!0,labelInterpolationFnc:c.noop,type:void 0,scaleMinSpace:20,onlyInteger:!1},width:void 0,height:void 0,showLine:!0,showPoint:!0,showArea:!1,areaBase:0,lineSmooth:!0,low:void 0,high:void 0,chartPadding:{top:15,right:15,bottom:5,left:10},fullWidth:!1,reverseData:!1,classNames:{chart:"ct-chart-line",label:"ct-label",labelGroup:"ct-labels",series:"ct-series",line:"ct-line",point:"ct-point",area:"ct-area",grid:"ct-grid",gridGroup:"ct-grids",vertical:"ct-vertical",horizontal:"ct-horizontal",start:"ct-start",end:"ct-end"}};c.Line=c.Base.extend({constructor:e,createChart:d})}(window,document,a),function(a,b,c){"use strict";function d(a){this.data=c.normalizeData(this.data);var b,d={raw:this.data,normalized:a.distributeSeries?c.getDataArray(this.data,a.reverseData,a.horizontalBars?"x":"y").map(function(a){return[a]}):c.getDataArray(this.data,a.reverseData,a.horizontalBars?"x":"y")};this.svg=c.createSvg(this.container,a.width,a.height,a.classNames.chart+(a.horizontalBars?" "+a.classNames.horizontalBars:""));var e=this.svg.elem("g").addClass(a.classNames.gridGroup),g=this.svg.elem("g"),h=this.svg.elem("g").addClass(a.classNames.labelGroup);if(a.stackBars&&0!==d.normalized.length){var i=c.serialMap(d.normalized,function(){return Array.prototype.slice.call(arguments).map(function(a){return a}).reduce(function(a,b){return{x:a.x+(b&&b.x)||0,y:a.y+(b&&b.y)||0}},{x:0,y:0})});b=c.getHighLow([i],c.extend({},a,{referenceValue:0}),a.horizontalBars?"x":"y")}else b=c.getHighLow(d.normalized,c.extend({},a,{referenceValue:0}),a.horizontalBars?"x":"y");b.high=+a.high||(0===a.high?0:b.high),b.low=+a.low||(0===a.low?0:b.low);var j,k,l,m,n,o=c.createChartRect(this.svg,a,f.padding);k=a.distributeSeries&&a.stackBars?d.raw.labels.slice(0,1):d.raw.labels,a.horizontalBars?(j=m=void 0===a.axisX.type?new c.AutoScaleAxis(c.Axis.units.x,d,o,c.extend({},a.axisX,{highLow:b,referenceValue:0})):a.axisX.type.call(c,c.Axis.units.x,d,o,c.extend({},a.axisX,{highLow:b,referenceValue:0})),l=n=void 0===a.axisY.type?new c.StepAxis(c.Axis.units.y,d,o,{ticks:k}):a.axisY.type.call(c,c.Axis.units.y,d,o,a.axisY)):(l=m=void 0===a.axisX.type?new c.StepAxis(c.Axis.units.x,d,o,{ticks:k}):a.axisX.type.call(c,c.Axis.units.x,d,o,a.axisX),j=n=void 0===a.axisY.type?new c.AutoScaleAxis(c.Axis.units.y,d,o,c.extend({},a.axisY,{highLow:b,referenceValue:0})):a.axisY.type.call(c,c.Axis.units.y,d,o,c.extend({},a.axisY,{highLow:b,referenceValue:0})));var p=a.horizontalBars?o.x1+j.projectValue(0):o.y1-j.projectValue(0),q=[];
		l.createGridAndLabels(e,h,this.supportsForeignObject,a,this.eventEmitter),j.createGridAndLabels(e,h,this.supportsForeignObject,a,this.eventEmitter),d.raw.series.forEach(function(b,e){var f,h,i=e-(d.raw.series.length-1)/2;f=a.distributeSeries&&!a.stackBars?l.axisLength/d.normalized.length/2:a.distributeSeries&&a.stackBars?l.axisLength/2:l.axisLength/d.normalized[e].length/2,h=g.elem("g"),h.attr({"ct:series-name":b.name,"ct:meta":c.serialize(b.meta)}),h.addClass([a.classNames.series,b.className||a.classNames.series+"-"+c.alphaNumerate(e)].join(" ")),d.normalized[e].forEach(function(g,k){var r,s,t,u;if(u=a.distributeSeries&&!a.stackBars?e:a.distributeSeries&&a.stackBars?0:k,r=a.horizontalBars?{x:o.x1+j.projectValue(g&&g.x?g.x:0,k,d.normalized[e]),y:o.y1-l.projectValue(g&&g.y?g.y:0,u,d.normalized[e])}:{x:o.x1+l.projectValue(g&&g.x?g.x:0,u,d.normalized[e]),y:o.y1-j.projectValue(g&&g.y?g.y:0,k,d.normalized[e])},l instanceof c.StepAxis&&(l.options.stretch||(r[l.units.pos]+=f*(a.horizontalBars?-1:1)),r[l.units.pos]+=a.stackBars||a.distributeSeries?0:i*a.seriesBarDistance*(a.horizontalBars?-1:1)),t=q[k]||p,q[k]=t-(p-r[l.counterUnits.pos]),void 0!==g){var v={};v[l.units.pos+"1"]=r[l.units.pos],v[l.units.pos+"2"]=r[l.units.pos],!a.stackBars||"accumulate"!==a.stackMode&&a.stackMode?(v[l.counterUnits.pos+"1"]=p,v[l.counterUnits.pos+"2"]=r[l.counterUnits.pos]):(v[l.counterUnits.pos+"1"]=t,v[l.counterUnits.pos+"2"]=q[k]),v.x1=Math.min(Math.max(v.x1,o.x1),o.x2),v.x2=Math.min(Math.max(v.x2,o.x1),o.x2),v.y1=Math.min(Math.max(v.y1,o.y2),o.y1),v.y2=Math.min(Math.max(v.y2,o.y2),o.y1),s=h.elem("line",v,a.classNames.bar).attr({"ct:value":[g.x,g.y].filter(c.isNum).join(","),"ct:meta":c.getMetaData(b,k)}),this.eventEmitter.emit("draw",c.extend({type:"bar",value:g,index:k,meta:c.getMetaData(b,k),series:b,seriesIndex:e,axisX:m,axisY:n,chartRect:o,group:h,element:s},v))}}.bind(this))}.bind(this)),this.eventEmitter.emit("created",{bounds:j.bounds,chartRect:o,axisX:m,axisY:n,svg:this.svg,options:a})}function e(a,b,d,e){c.Bar["super"].constructor.call(this,a,b,f,c.extend({},f,d),e)}var f={axisX:{offset:30,position:"end",labelOffset:{x:0,y:0},showLabel:!0,showGrid:!0,labelInterpolationFnc:c.noop,scaleMinSpace:30,onlyInteger:!1},axisY:{offset:40,position:"start",labelOffset:{x:0,y:0},showLabel:!0,showGrid:!0,labelInterpolationFnc:c.noop,scaleMinSpace:20,onlyInteger:!1},width:void 0,height:void 0,high:void 0,low:void 0,chartPadding:{top:15,right:15,bottom:5,left:10},seriesBarDistance:15,stackBars:!1,stackMode:"accumulate",horizontalBars:!1,distributeSeries:!1,reverseData:!1,classNames:{chart:"ct-chart-bar",horizontalBars:"ct-horizontal-bars",label:"ct-label",labelGroup:"ct-labels",series:"ct-series",bar:"ct-bar",grid:"ct-grid",gridGroup:"ct-grids",vertical:"ct-vertical",horizontal:"ct-horizontal",start:"ct-start",end:"ct-end"}};c.Bar=c.Base.extend({constructor:e,createChart:d})}(window,document,a),function(a,b,c){"use strict";function d(a,b,c){var d=b.x>a.x;return d&&"explode"===c||!d&&"implode"===c?"start":d&&"implode"===c||!d&&"explode"===c?"end":"middle"}function e(a){this.data=c.normalizeData(this.data);var b,e,f,h,i,j=[],k=a.startAngle,l=c.getDataArray(this.data,a.reverseData);this.svg=c.createSvg(this.container,a.width,a.height,a.donut?a.classNames.chartDonut:a.classNames.chartPie),e=c.createChartRect(this.svg,a,g.padding),f=Math.min(e.width()/2,e.height()/2),i=a.total||l.reduce(function(a,b){return a+b},0);var m=c.quantity(a.donutWidth);"%"===m.unit&&(m.value*=f/100),f-=a.donut?m.value/2:0,h="outside"===a.labelPosition||a.donut?f:"center"===a.labelPosition?0:f/2,h+=a.labelOffset;var n={x:e.x1+e.width()/2,y:e.y2+e.height()/2},o=1===this.data.series.filter(function(a){return a.hasOwnProperty("value")?0!==a.value:0!==a}).length;a.showLabel&&(b=this.svg.elem("g",null,null,!0));for(var p=0;p<this.data.series.length;p++)if(0!==l[p]||!a.ignoreEmptyValues){var q=this.data.series[p];j[p]=this.svg.elem("g",null,null,!0),j[p].attr({"ct:series-name":q.name}),j[p].addClass([a.classNames.series,q.className||a.classNames.series+"-"+c.alphaNumerate(p)].join(" "));var r=k+l[p]/i*360,s=Math.max(0,k-(0===p||o?0:.2));r-s>=359.99&&(r=s+359.99);var t=c.polarToCartesian(n.x,n.y,f,s),u=c.polarToCartesian(n.x,n.y,f,r),v=new c.Svg.Path((!a.donut)).move(u.x,u.y).arc(f,f,0,r-k>180,0,t.x,t.y);a.donut||v.line(n.x,n.y);var w=j[p].elem("path",{d:v.stringify()},a.donut?a.classNames.sliceDonut:a.classNames.slicePie);if(w.attr({"ct:value":l[p],"ct:meta":c.serialize(q.meta)}),a.donut&&w.attr({style:"stroke-width: "+m.value+"px"}),this.eventEmitter.emit("draw",{type:"slice",value:l[p],totalDataSum:i,index:p,meta:q.meta,series:q,group:j[p],element:w,path:v.clone(),center:n,radius:f,startAngle:k,endAngle:r}),a.showLabel){var x=c.polarToCartesian(n.x,n.y,h,k+(r-k)/2),y=a.labelInterpolationFnc(this.data.labels&&!c.isFalseyButZero(this.data.labels[p])?this.data.labels[p]:l[p],p);if(y||0===y){var z=b.elem("text",{dx:x.x,dy:x.y,"text-anchor":d(n,x,a.labelDirection)},a.classNames.label).text(""+y);this.eventEmitter.emit("draw",{type:"label",index:p,group:b,element:z,text:""+y,x:x.x,y:x.y})}}k=r}this.eventEmitter.emit("created",{chartRect:e,svg:this.svg,options:a})}function f(a,b,d,e){c.Pie["super"].constructor.call(this,a,b,g,c.extend({},g,d),e)}var g={width:void 0,height:void 0,chartPadding:5,classNames:{chartPie:"ct-chart-pie",chartDonut:"ct-chart-donut",series:"ct-series",slicePie:"ct-slice-pie",sliceDonut:"ct-slice-donut",label:"ct-label"},startAngle:0,total:void 0,donut:!1,donutWidth:60,showLabel:!0,labelOffset:0,labelPosition:"inside",labelInterpolationFnc:c.noop,labelDirection:"neutral",reverseData:!1,ignoreEmptyValues:!1};c.Pie=c.Base.extend({constructor:f,createChart:e,determineAnchorPosition:d})}(window,document,a),a});
		//# sourceMappingURL=chartist.min.js.map
	
	/***/ },
	/* 34 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
	
		var $ = __webpack_require__(4);
	
	
		function Copy() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.Copy = module.exports = inherit(Copy, BaseModule, {
	
			busEvents: {},
	
			domEvents: {},
	
			init: function () {
	
			}
	
		});
	
	/***/ },
	/* 35 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
		//var breakpointHelper = require('js-commons/helper/breakpointHelper');
	
		var $ = __webpack_require__(4);
	
	
		function FocusArea() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.FocusArea = module.exports = inherit(FocusArea, BaseModule, {
	
			busEvents: {
				'breakpointChange': 'onBreakpointChange'
			},
	
			domEvents: {
				'click .mod-focus-area__toggle a': 'toggleItems'
			},
	
			init: function () {
				this.$focusLink = this.find('.mod-focus-area__focuslink');
			},
	
			toggleItems: function(event) {
				event.preventDefault();
				this.$ctx.toggleClass('is-open');
			},
	
			onBreakpointChange: function(breakpointData) {
				if(breakpointData.isXs) {
					if(this.$focusLink.length > 3) {
						this.$ctx.addClass('is-flexible');
					}
				} else {
					this.$ctx.removeClass('is-flexible');
				}
			}
	
		});
	
	/***/ },
	/* 36 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
	
		var $ = __webpack_require__(4);
	
		var commons = __webpack_require__(23);
		var noUiSlider = __webpack_require__(37);
		__webpack_require__(39);
	
	
		function Form() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.Form = module.exports = inherit(Form, BaseModule, {
	
			busEvents: {},
	
			domEvents: {},
	
			init: function () {
				this.$select = this.find('.js-select');
				this.$file = this.find('.js-file');
				this.$floating = this.find('.js-float-label');
				this.$datepicker = this.find('.js-datepicker');
				this.$range = this.find('.js-range-slider');
	
				this.initSelect();
				this.initFile();
				this.initFloatingLabels();
				this.initDatepicker();
				this.initRange();
			},
	
			initSelect: function() {
				if(this.$select.length && !commons.isTouchDevice()) {
					this.$select.each(function() {
						$(this).css('width', '100%').select2({
							minimumResultsForSearch: Infinity
						});
					});
				}
			},
	
			initFile: function() {
				if(this.$file.length) {
					this.$file.each(function() {
	
						var $input = $(this),
							$label = $('<span class="textfield__control textfield--file__label"></span>').attr('data-label', $input.data('label')),
							labelVal = $label.html(),
							$buttonLabel = $label.data('label'),
							$button = $('<span class="btn btn--flat"></span>').text($buttonLabel);
	
						if(!$input.siblings('span').is('.icon')) {
							$label.append($button);
						}
	
						$input.parent().append($label);
	
						$input.on('change', function(event) {
							var fileName = '';
	
							if(this.files && this.files.length > 1) {
								fileName = ( this.getAttribute( 'data-multiple-caption' ) || '' ).replace( '{count}', this.files.length );
							} else if(event.target.value) {
								fileName = event.target.value.split( '\\' ).pop();
							}
	
							if(fileName) {
								$label.attr('data-value', fileName);
							} else {
								$label.attr('data-value', labelVal);
							}
						});
	
					});
				}
			},
	
			initFloatingLabels: function() {
				if(this.$floating.length) {
					this.$floating.each(function() {
						$(this).textfield();
						$(this).selectHelper();
					});
				}
			},
	
			initDatepicker: function() {
				if(this.$datepicker.length) {
					this.addBusEvent('breakpointChange', 'updateDatepicker');
				}
			},
	
			updateDatepicker: function(breakpointData) {
				var $datepicker = this.find('.js-datepicker');
				var pageLang = document.documentElement.lang;
				var userLang = pageLang || navigator.language;
	
				var dpOptions = $.extend({},
					$.datepicker.regional[userLang], {
						dateFormat: 'y-mm-dd',
						beforeShow: function () {$(this).addClass('has-focus');},
						onClose: function () {$(this).removeClass('has-focus');}
					}
				);
	
				if(breakpointData.isXs && commons.isTouchDevice()) {
					$datepicker.each(function() {
						$(this).attr('type', 'date').datepicker('destroy');
					});
				} else {
					$datepicker.each(function() {
						$(this).attr('type', 'text').datepicker(dpOptions);
					});
				}
			},
	
			initRange: function() {
				if(this.$range.length) {
					this.$range.each(function(i, obj) {
						var $range = $(obj);
						$range.wrap('<div class="range-container"></div>');
	
						var slider = $range.closest('.range-container')[0];
						var step =  parseInt($range.attr('step')) || 1;
						var min =  parseInt($range.attr('min')) || 0;
						var max =  parseInt($range.attr('max')) || 0;
						var value = $range.attr('value').trim().split(',');
						var multiple = $range.attr('multiple') ? true : false;
						var connect = multiple ? true : 'lower';
						var behaviour = multiple ? 'tap-drag' : 'tap';
						var postfix = $range.data('postfix') || '';
						var start = this.getRangeDefaultValue(value, multiple);
	
						noUiSlider.create(slider, {
							start: start, // Handle start position
							step: step,
							//margin: 20, // Handles must be more than '20' apart
							connect: connect, // Display a colored bar between the handles
							behaviour: behaviour, // Move handle on tap, bar is draggable
							range: { // Slider can select '0' to '100'
								'min': min,
								'max': max
							},
							tooltips: true,
							format: wNumb({
								decimals: 3,
								thousand: '.',
								postfix: (' ' + postfix)
							})
	
						});
					}.bind(this));
				}
			},
	
			getRangeDefaultValue: function(value, multiple) {
				var start = [];
	
				switch(value.length) {
					case 1:
						if (multiple) {
							start.push(0);
						}
						start.push(isNaN(parseInt(value)) ? 0 : parseInt(value));
						break;
					case 2:
						if (!multiple) {
							start.push(isNaN(parseInt(value[0])) ? 0 : parseInt(value[0]));
						} else {
							value.forEach(function (item) {
								start.push(isNaN(parseInt(item)) ? 0 : parseInt(item));
							});
						}
						break;
					default:
						start = multiple ? [0, 0] : [0];
				}
	
				return start;
			}
	
		});
	
	/***/ },
	/* 37 */
	/***/ function(module, exports, __webpack_require__) {
	
		module.exports = __webpack_require__(38);
	
	/***/ },
	/* 38 */
	/***/ function(module, exports, __webpack_require__) {
	
		var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*! nouislider - 8.5.1 - 2016-04-24 16:00:29 */
	
		(function (factory) {
	
		    if ( true ) {
	
		        // AMD. Register as an anonymous module.
		        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	
		    } else if ( typeof exports === 'object' ) {
	
		        // Node/CommonJS
		        module.exports = factory();
	
		    } else {
	
		        // Browser globals
		        window.noUiSlider = factory();
		    }
	
		}(function( ){
	
			'use strict';
	
	
			// Removes duplicates from an array.
			function unique(array) {
				return array.filter(function(a){
					return !this[a] ? this[a] = true : false;
				}, {});
			}
	
			// Round a value to the closest 'to'.
			function closest ( value, to ) {
				return Math.round(value / to) * to;
			}
	
			// Current position of an element relative to the document.
			function offset ( elem ) {
	
			var rect = elem.getBoundingClientRect(),
				doc = elem.ownerDocument,
				docElem = doc.documentElement,
				pageOffset = getPageOffset();
	
				// getBoundingClientRect contains left scroll in Chrome on Android.
				// I haven't found a feature detection that proves this. Worst case
				// scenario on mis-match: the 'tap' feature on horizontal sliders breaks.
				if ( /webkit.*Chrome.*Mobile/i.test(navigator.userAgent) ) {
					pageOffset.x = 0;
				}
	
				return {
					top: rect.top + pageOffset.y - docElem.clientTop,
					left: rect.left + pageOffset.x - docElem.clientLeft
				};
			}
	
			// Checks whether a value is numerical.
			function isNumeric ( a ) {
				return typeof a === 'number' && !isNaN( a ) && isFinite( a );
			}
	
			// Sets a class and removes it after [duration] ms.
			function addClassFor ( element, className, duration ) {
				addClass(element, className);
				setTimeout(function(){
					removeClass(element, className);
				}, duration);
			}
	
			// Limits a value to 0 - 100
			function limit ( a ) {
				return Math.max(Math.min(a, 100), 0);
			}
	
			// Wraps a variable as an array, if it isn't one yet.
			function asArray ( a ) {
				return Array.isArray(a) ? a : [a];
			}
	
			// Counts decimals
			function countDecimals ( numStr ) {
				var pieces = numStr.split(".");
				return pieces.length > 1 ? pieces[1].length : 0;
			}
	
			// http://youmightnotneedjquery.com/#add_class
			function addClass ( el, className ) {
				if ( el.classList ) {
					el.classList.add(className);
				} else {
					el.className += ' ' + className;
				}
			}
	
			// http://youmightnotneedjquery.com/#remove_class
			function removeClass ( el, className ) {
				if ( el.classList ) {
					el.classList.remove(className);
				} else {
					el.className = el.className.replace(new RegExp('(^|\\b)' + className.split(' ').join('|') + '(\\b|$)', 'gi'), ' ');
				}
			}
	
			// https://plainjs.com/javascript/attributes/adding-removing-and-testing-for-classes-9/
			function hasClass ( el, className ) {
				return el.classList ? el.classList.contains(className) : new RegExp('\\b' + className + '\\b').test(el.className);
			}
	
			// https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollY#Notes
			function getPageOffset ( ) {
	
				var supportPageOffset = window.pageXOffset !== undefined,
					isCSS1Compat = ((document.compatMode || "") === "CSS1Compat"),
					x = supportPageOffset ? window.pageXOffset : isCSS1Compat ? document.documentElement.scrollLeft : document.body.scrollLeft,
					y = supportPageOffset ? window.pageYOffset : isCSS1Compat ? document.documentElement.scrollTop : document.body.scrollTop;
	
				return {
					x: x,
					y: y
				};
			}
	
			// we provide a function to compute constants instead
			// of accessing window.* as soon as the module needs it
			// so that we do not compute anything if not needed
			function getActions ( ) {
	
				// Determine the events to bind. IE11 implements pointerEvents without
				// a prefix, which breaks compatibility with the IE10 implementation.
				return window.navigator.pointerEnabled ? {
					start: 'pointerdown',
					move: 'pointermove',
					end: 'pointerup'
				} : window.navigator.msPointerEnabled ? {
					start: 'MSPointerDown',
					move: 'MSPointerMove',
					end: 'MSPointerUp'
				} : {
					start: 'mousedown touchstart',
					move: 'mousemove touchmove',
					end: 'mouseup touchend'
				};
			}
	
	
		// Value calculation
	
			// Determine the size of a sub-range in relation to a full range.
			function subRangeRatio ( pa, pb ) {
				return (100 / (pb - pa));
			}
	
			// (percentage) How many percent is this value of this range?
			function fromPercentage ( range, value ) {
				return (value * 100) / ( range[1] - range[0] );
			}
	
			// (percentage) Where is this value on this range?
			function toPercentage ( range, value ) {
				return fromPercentage( range, range[0] < 0 ?
					value + Math.abs(range[0]) :
						value - range[0] );
			}
	
			// (value) How much is this percentage on this range?
			function isPercentage ( range, value ) {
				return ((value * ( range[1] - range[0] )) / 100) + range[0];
			}
	
	
		// Range conversion
	
			function getJ ( value, arr ) {
	
				var j = 1;
	
				while ( value >= arr[j] ){
					j += 1;
				}
	
				return j;
			}
	
			// (percentage) Input a value, find where, on a scale of 0-100, it applies.
			function toStepping ( xVal, xPct, value ) {
	
				if ( value >= xVal.slice(-1)[0] ){
					return 100;
				}
	
				var j = getJ( value, xVal ), va, vb, pa, pb;
	
				va = xVal[j-1];
				vb = xVal[j];
				pa = xPct[j-1];
				pb = xPct[j];
	
				return pa + (toPercentage([va, vb], value) / subRangeRatio (pa, pb));
			}
	
			// (value) Input a percentage, find where it is on the specified range.
			function fromStepping ( xVal, xPct, value ) {
	
				// There is no range group that fits 100
				if ( value >= 100 ){
					return xVal.slice(-1)[0];
				}
	
				var j = getJ( value, xPct ), va, vb, pa, pb;
	
				va = xVal[j-1];
				vb = xVal[j];
				pa = xPct[j-1];
				pb = xPct[j];
	
				return isPercentage([va, vb], (value - pa) * subRangeRatio (pa, pb));
			}
	
			// (percentage) Get the step that applies at a certain value.
			function getStep ( xPct, xSteps, snap, value ) {
	
				if ( value === 100 ) {
					return value;
				}
	
				var j = getJ( value, xPct ), a, b;
	
				// If 'snap' is set, steps are used as fixed points on the slider.
				if ( snap ) {
	
					a = xPct[j-1];
					b = xPct[j];
	
					// Find the closest position, a or b.
					if ((value - a) > ((b-a)/2)){
						return b;
					}
	
					return a;
				}
	
				if ( !xSteps[j-1] ){
					return value;
				}
	
				return xPct[j-1] + closest(
					value - xPct[j-1],
					xSteps[j-1]
				);
			}
	
	
		// Entry parsing
	
			function handleEntryPoint ( index, value, that ) {
	
				var percentage;
	
				// Wrap numerical input in an array.
				if ( typeof value === "number" ) {
					value = [value];
				}
	
				// Reject any invalid input, by testing whether value is an array.
				if ( Object.prototype.toString.call( value ) !== '[object Array]' ){
					throw new Error("noUiSlider: 'range' contains invalid value.");
				}
	
				// Covert min/max syntax to 0 and 100.
				if ( index === 'min' ) {
					percentage = 0;
				} else if ( index === 'max' ) {
					percentage = 100;
				} else {
					percentage = parseFloat( index );
				}
	
				// Check for correct input.
				if ( !isNumeric( percentage ) || !isNumeric( value[0] ) ) {
					throw new Error("noUiSlider: 'range' value isn't numeric.");
				}
	
				// Store values.
				that.xPct.push( percentage );
				that.xVal.push( value[0] );
	
				// NaN will evaluate to false too, but to keep
				// logging clear, set step explicitly. Make sure
				// not to override the 'step' setting with false.
				if ( !percentage ) {
					if ( !isNaN( value[1] ) ) {
						that.xSteps[0] = value[1];
					}
				} else {
					that.xSteps.push( isNaN(value[1]) ? false : value[1] );
				}
			}
	
			function handleStepPoint ( i, n, that ) {
	
				// Ignore 'false' stepping.
				if ( !n ) {
					return true;
				}
	
				// Factor to range ratio
				that.xSteps[i] = fromPercentage([
					 that.xVal[i]
					,that.xVal[i+1]
				], n) / subRangeRatio (
					that.xPct[i],
					that.xPct[i+1] );
			}
	
	
		// Interface
	
			// The interface to Spectrum handles all direction-based
			// conversions, so the above values are unaware.
	
			function Spectrum ( entry, snap, direction, singleStep ) {
	
				this.xPct = [];
				this.xVal = [];
				this.xSteps = [ singleStep || false ];
				this.xNumSteps = [ false ];
	
				this.snap = snap;
				this.direction = direction;
	
				var index, ordered = [ /* [0, 'min'], [1, '50%'], [2, 'max'] */ ];
	
				// Map the object keys to an array.
				for ( index in entry ) {
					if ( entry.hasOwnProperty(index) ) {
						ordered.push([entry[index], index]);
					}
				}
	
				// Sort all entries by value (numeric sort).
				if ( ordered.length && typeof ordered[0][0] === "object" ) {
					ordered.sort(function(a, b) { return a[0][0] - b[0][0]; });
				} else {
					ordered.sort(function(a, b) { return a[0] - b[0]; });
				}
	
	
				// Convert all entries to subranges.
				for ( index = 0; index < ordered.length; index++ ) {
					handleEntryPoint(ordered[index][1], ordered[index][0], this);
				}
	
				// Store the actual step values.
				// xSteps is sorted in the same order as xPct and xVal.
				this.xNumSteps = this.xSteps.slice(0);
	
				// Convert all numeric steps to the percentage of the subrange they represent.
				for ( index = 0; index < this.xNumSteps.length; index++ ) {
					handleStepPoint(index, this.xNumSteps[index], this);
				}
			}
	
			Spectrum.prototype.getMargin = function ( value ) {
				return this.xPct.length === 2 ? fromPercentage(this.xVal, value) : false;
			};
	
			Spectrum.prototype.toStepping = function ( value ) {
	
				value = toStepping( this.xVal, this.xPct, value );
	
				// Invert the value if this is a right-to-left slider.
				if ( this.direction ) {
					value = 100 - value;
				}
	
				return value;
			};
	
			Spectrum.prototype.fromStepping = function ( value ) {
	
				// Invert the value if this is a right-to-left slider.
				if ( this.direction ) {
					value = 100 - value;
				}
	
				return fromStepping( this.xVal, this.xPct, value );
			};
	
			Spectrum.prototype.getStep = function ( value ) {
	
				// Find the proper step for rtl sliders by search in inverse direction.
				// Fixes issue #262.
				if ( this.direction ) {
					value = 100 - value;
				}
	
				value = getStep(this.xPct, this.xSteps, this.snap, value );
	
				if ( this.direction ) {
					value = 100 - value;
				}
	
				return value;
			};
	
			Spectrum.prototype.getApplicableStep = function ( value ) {
	
				// If the value is 100%, return the negative step twice.
				var j = getJ(value, this.xPct), offset = value === 100 ? 2 : 1;
				return [this.xNumSteps[j-2], this.xVal[j-offset], this.xNumSteps[j-offset]];
			};
	
			// Outside testing
			Spectrum.prototype.convert = function ( value ) {
				return this.getStep(this.toStepping(value));
			};
	
		/*	Every input option is tested and parsed. This'll prevent
			endless validation in internal methods. These tests are
			structured with an item for every option available. An
			option can be marked as required by setting the 'r' flag.
			The testing function is provided with three arguments:
				- The provided value for the option;
				- A reference to the options object;
				- The name for the option;
	
			The testing function returns false when an error is detected,
			or true when everything is OK. It can also modify the option
			object, to make sure all values can be correctly looped elsewhere. */
	
			var defaultFormatter = { 'to': function( value ){
				return value !== undefined && value.toFixed(2);
			}, 'from': Number };
	
			function testStep ( parsed, entry ) {
	
				if ( !isNumeric( entry ) ) {
					throw new Error("noUiSlider: 'step' is not numeric.");
				}
	
				// The step option can still be used to set stepping
				// for linear sliders. Overwritten if set in 'range'.
				parsed.singleStep = entry;
			}
	
			function testRange ( parsed, entry ) {
	
				// Filter incorrect input.
				if ( typeof entry !== 'object' || Array.isArray(entry) ) {
					throw new Error("noUiSlider: 'range' is not an object.");
				}
	
				// Catch missing start or end.
				if ( entry.min === undefined || entry.max === undefined ) {
					throw new Error("noUiSlider: Missing 'min' or 'max' in 'range'.");
				}
	
				// Catch equal start or end.
				if ( entry.min === entry.max ) {
					throw new Error("noUiSlider: 'range' 'min' and 'max' cannot be equal.");
				}
	
				parsed.spectrum = new Spectrum(entry, parsed.snap, parsed.dir, parsed.singleStep);
			}
	
			function testStart ( parsed, entry ) {
	
				entry = asArray(entry);
	
				// Validate input. Values aren't tested, as the public .val method
				// will always provide a valid location.
				if ( !Array.isArray( entry ) || !entry.length || entry.length > 2 ) {
					throw new Error("noUiSlider: 'start' option is incorrect.");
				}
	
				// Store the number of handles.
				parsed.handles = entry.length;
	
				// When the slider is initialized, the .val method will
				// be called with the start options.
				parsed.start = entry;
			}
	
			function testSnap ( parsed, entry ) {
	
				// Enforce 100% stepping within subranges.
				parsed.snap = entry;
	
				if ( typeof entry !== 'boolean' ){
					throw new Error("noUiSlider: 'snap' option must be a boolean.");
				}
			}
	
			function testAnimate ( parsed, entry ) {
	
				// Enforce 100% stepping within subranges.
				parsed.animate = entry;
	
				if ( typeof entry !== 'boolean' ){
					throw new Error("noUiSlider: 'animate' option must be a boolean.");
				}
			}
	
			function testAnimationDuration ( parsed, entry ) {
	
				parsed.animationDuration = entry;
	
				if ( typeof entry !== 'number' ){
					throw new Error("noUiSlider: 'animationDuration' option must be a number.");
				}
			}
	
			function testConnect ( parsed, entry ) {
	
				if ( entry === 'lower' && parsed.handles === 1 ) {
					parsed.connect = 1;
				} else if ( entry === 'upper' && parsed.handles === 1 ) {
					parsed.connect = 2;
				} else if ( entry === true && parsed.handles === 2 ) {
					parsed.connect = 3;
				} else if ( entry === false ) {
					parsed.connect = 0;
				} else {
					throw new Error("noUiSlider: 'connect' option doesn't match handle count.");
				}
			}
	
			function testOrientation ( parsed, entry ) {
	
				// Set orientation to an a numerical value for easy
				// array selection.
				switch ( entry ){
				  case 'horizontal':
					parsed.ort = 0;
					break;
				  case 'vertical':
					parsed.ort = 1;
					break;
				  default:
					throw new Error("noUiSlider: 'orientation' option is invalid.");
				}
			}
	
			function testMargin ( parsed, entry ) {
	
				if ( !isNumeric(entry) ){
					throw new Error("noUiSlider: 'margin' option must be numeric.");
				}
	
				// Issue #582
				if ( entry === 0 ) {
					return;
				}
	
				parsed.margin = parsed.spectrum.getMargin(entry);
	
				if ( !parsed.margin ) {
					throw new Error("noUiSlider: 'margin' option is only supported on linear sliders.");
				}
			}
	
			function testLimit ( parsed, entry ) {
	
				if ( !isNumeric(entry) ){
					throw new Error("noUiSlider: 'limit' option must be numeric.");
				}
	
				parsed.limit = parsed.spectrum.getMargin(entry);
	
				if ( !parsed.limit ) {
					throw new Error("noUiSlider: 'limit' option is only supported on linear sliders.");
				}
			}
	
			function testDirection ( parsed, entry ) {
	
				// Set direction as a numerical value for easy parsing.
				// Invert connection for RTL sliders, so that the proper
				// handles get the connect/background classes.
				switch ( entry ) {
				  case 'ltr':
					parsed.dir = 0;
					break;
				  case 'rtl':
					parsed.dir = 1;
					parsed.connect = [0,2,1,3][parsed.connect];
					break;
				  default:
					throw new Error("noUiSlider: 'direction' option was not recognized.");
				}
			}
	
			function testBehaviour ( parsed, entry ) {
	
				// Make sure the input is a string.
				if ( typeof entry !== 'string' ) {
					throw new Error("noUiSlider: 'behaviour' must be a string containing options.");
				}
	
				// Check if the string contains any keywords.
				// None are required.
				var tap = entry.indexOf('tap') >= 0,
					drag = entry.indexOf('drag') >= 0,
					fixed = entry.indexOf('fixed') >= 0,
					snap = entry.indexOf('snap') >= 0,
					hover = entry.indexOf('hover') >= 0;
	
				// Fix #472
				if ( drag && !parsed.connect ) {
					throw new Error("noUiSlider: 'drag' behaviour must be used with 'connect': true.");
				}
	
				parsed.events = {
					tap: tap || snap,
					drag: drag,
					fixed: fixed,
					snap: snap,
					hover: hover
				};
			}
	
			function testTooltips ( parsed, entry ) {
	
				var i;
	
				if ( entry === false ) {
					return;
				} else if ( entry === true ) {
	
					parsed.tooltips = [];
	
					for ( i = 0; i < parsed.handles; i++ ) {
						parsed.tooltips.push(true);
					}
	
				} else {
	
					parsed.tooltips = asArray(entry);
	
					if ( parsed.tooltips.length !== parsed.handles ) {
						throw new Error("noUiSlider: must pass a formatter for all handles.");
					}
	
					parsed.tooltips.forEach(function(formatter){
						if ( typeof formatter !== 'boolean' && (typeof formatter !== 'object' || typeof formatter.to !== 'function') ) {
							throw new Error("noUiSlider: 'tooltips' must be passed a formatter or 'false'.");
						}
					});
				}
			}
	
			function testFormat ( parsed, entry ) {
	
				parsed.format = entry;
	
				// Any object with a to and from method is supported.
				if ( typeof entry.to === 'function' && typeof entry.from === 'function' ) {
					return true;
				}
	
				throw new Error("noUiSlider: 'format' requires 'to' and 'from' methods.");
			}
	
			function testCssPrefix ( parsed, entry ) {
	
				if ( entry !== undefined && typeof entry !== 'string' && entry !== false ) {
					throw new Error("noUiSlider: 'cssPrefix' must be a string or `false`.");
				}
	
				parsed.cssPrefix = entry;
			}
	
			function testCssClasses ( parsed, entry ) {
	
				if ( entry !== undefined && typeof entry !== 'object' ) {
					throw new Error("noUiSlider: 'cssClasses' must be an object.");
				}
	
				if ( typeof parsed.cssPrefix === 'string' ) {
					parsed.cssClasses = {};
	
					for ( var key in entry ) {
						if ( !entry.hasOwnProperty(key) ) { continue; }
	
						parsed.cssClasses[key] = parsed.cssPrefix + entry[key];
					}
				} else {
					parsed.cssClasses = entry;
				}
			}
	
			// Test all developer settings and parse to assumption-safe values.
			function testOptions ( options ) {
	
				// To prove a fix for #537, freeze options here.
				// If the object is modified, an error will be thrown.
				// Object.freeze(options);
	
				var parsed = {
					margin: 0,
					limit: 0,
					animate: true,
					animationDuration: 300,
					format: defaultFormatter
				}, tests;
	
				// Tests are executed in the order they are presented here.
				tests = {
					'step': { r: false, t: testStep },
					'start': { r: true, t: testStart },
					'connect': { r: true, t: testConnect },
					'direction': { r: true, t: testDirection },
					'snap': { r: false, t: testSnap },
					'animate': { r: false, t: testAnimate },
					'animationDuration': { r: false, t: testAnimationDuration },
					'range': { r: true, t: testRange },
					'orientation': { r: false, t: testOrientation },
					'margin': { r: false, t: testMargin },
					'limit': { r: false, t: testLimit },
					'behaviour': { r: true, t: testBehaviour },
					'format': { r: false, t: testFormat },
					'tooltips': { r: false, t: testTooltips },
					'cssPrefix': { r: false, t: testCssPrefix },
					'cssClasses': { r: false, t: testCssClasses }
				};
	
				var defaults = {
					'connect': false,
					'direction': 'ltr',
					'behaviour': 'tap',
					'orientation': 'horizontal',
					'cssPrefix' : 'noUi-',
					'cssClasses': {
						target: 'target',
						base: 'base',
						origin: 'origin',
						handle: 'handle',
						handleLower: 'handle-lower',
						handleUpper: 'handle-upper',
						horizontal: 'horizontal',
						vertical: 'vertical',
						background: 'background',
						connect: 'connect',
						ltr: 'ltr',
						rtl: 'rtl',
						draggable: 'draggable',
						drag: 'state-drag',
						tap: 'state-tap',
						active: 'active',
						stacking: 'stacking',
						tooltip: 'tooltip',
						pips: 'pips',
						pipsHorizontal: 'pips-horizontal',
						pipsVertical: 'pips-vertical',
						marker: 'marker',
						markerHorizontal: 'marker-horizontal',
						markerVertical: 'marker-vertical',
						markerNormal: 'marker-normal',
						markerLarge: 'marker-large',
						markerSub: 'marker-sub',
						value: 'value',
						valueHorizontal: 'value-horizontal',
						valueVertical: 'value-vertical',
						valueNormal: 'value-normal',
						valueLarge: 'value-large',
						valueSub: 'value-sub'
					}
				};
	
				// Run all options through a testing mechanism to ensure correct
				// input. It should be noted that options might get modified to
				// be handled properly. E.g. wrapping integers in arrays.
				Object.keys(tests).forEach(function( name ){
	
					// If the option isn't set, but it is required, throw an error.
					if ( options[name] === undefined && defaults[name] === undefined ) {
	
						if ( tests[name].r ) {
							throw new Error("noUiSlider: '" + name + "' is required.");
						}
	
						return true;
					}
	
					tests[name].t( parsed, options[name] === undefined ? defaults[name] : options[name] );
				});
	
				// Forward pips options
				parsed.pips = options.pips;
	
				// Pre-define the styles.
				parsed.style = parsed.ort ? 'top' : 'left';
	
				return parsed;
			}
	
	
		function closure ( target, options, originalOptions ){
			var
				actions = getActions( ),
				// All variables local to 'closure' are prefixed with 'scope_'
				scope_Target = target,
				scope_Locations = [-1, -1],
				scope_Base,
				scope_Handles,
				scope_Spectrum = options.spectrum,
				scope_Values = [],
				scope_Events = {},
				scope_Self;
	
	
			// Delimit proposed values for handle positions.
			function getPositions ( a, b, delimit ) {
	
				// Add movement to current position.
				var c = a + b[0], d = a + b[1];
	
				// Only alter the other position on drag,
				// not on standard sliding.
				if ( delimit ) {
					if ( c < 0 ) {
						d += Math.abs(c);
					}
					if ( d > 100 ) {
						c -= ( d - 100 );
					}
	
					// Limit values to 0 and 100.
					return [limit(c), limit(d)];
				}
	
				return [c,d];
			}
	
			// Provide a clean event with standardized offset values.
			function fixEvent ( e, pageOffset ) {
	
				// Prevent scrolling and panning on touch events, while
				// attempting to slide. The tap event also depends on this.
				e.preventDefault();
	
				// Filter the event to register the type, which can be
				// touch, mouse or pointer. Offset changes need to be
				// made on an event specific basis.
				var touch = e.type.indexOf('touch') === 0,
					mouse = e.type.indexOf('mouse') === 0,
					pointer = e.type.indexOf('pointer') === 0,
					x,y, event = e;
	
				// IE10 implemented pointer events with a prefix;
				if ( e.type.indexOf('MSPointer') === 0 ) {
					pointer = true;
				}
	
				if ( touch ) {
					// noUiSlider supports one movement at a time,
					// so we can select the first 'changedTouch'.
					x = e.changedTouches[0].pageX;
					y = e.changedTouches[0].pageY;
				}
	
				pageOffset = pageOffset || getPageOffset();
	
				if ( mouse || pointer ) {
					x = e.clientX + pageOffset.x;
					y = e.clientY + pageOffset.y;
				}
	
				event.pageOffset = pageOffset;
				event.points = [x, y];
				event.cursor = mouse || pointer; // Fix #435
	
				return event;
			}
	
			// Append a handle to the base.
			function addHandle ( direction, index ) {
	
				var origin = document.createElement('div'),
					handle = document.createElement('div'),
					classModifier = [options.cssClasses.handleLower, options.cssClasses.handleUpper];
	
				if ( direction ) {
					classModifier.reverse();
				}
	
				addClass(handle, options.cssClasses.handle);
				addClass(handle, classModifier[index]);
	
				addClass(origin, options.cssClasses.origin);
				origin.appendChild(handle);
	
				return origin;
			}
	
			// Add the proper connection classes.
			function addConnection ( connect, target, handles ) {
	
				// Apply the required connection classes to the elements
				// that need them. Some classes are made up for several
				// segments listed in the class list, to allow easy
				// renaming and provide a minor compression benefit.
				switch ( connect ) {
					case 1:	addClass(target, options.cssClasses.connect);
							addClass(handles[0], options.cssClasses.background);
							break;
					case 3: addClass(handles[1], options.cssClasses.background);
							/* falls through */
					case 2: addClass(handles[0], options.cssClasses.connect);
							/* falls through */
					case 0: addClass(target, options.cssClasses.background);
							break;
				}
			}
	
			// Add handles to the slider base.
			function addHandles ( nrHandles, direction, base ) {
	
				var index, handles = [];
	
				// Append handles.
				for ( index = 0; index < nrHandles; index += 1 ) {
	
					// Keep a list of all added handles.
					handles.push( base.appendChild(addHandle( direction, index )) );
				}
	
				return handles;
			}
	
			// Initialize a single slider.
			function addSlider ( direction, orientation, target ) {
	
				// Apply classes and data to the target.
				addClass(target, options.cssClasses.target);
	
				if ( direction === 0 ) {
					addClass(target, options.cssClasses.ltr);
				} else {
					addClass(target, options.cssClasses.rtl);
				}
	
				if ( orientation === 0 ) {
					addClass(target, options.cssClasses.horizontal);
				} else {
					addClass(target, options.cssClasses.vertical);
				}
	
				var div = document.createElement('div');
				addClass(div, options.cssClasses.base);
				target.appendChild(div);
				return div;
			}
	
	
			function addTooltip ( handle, index ) {
	
				if ( !options.tooltips[index] ) {
					return false;
				}
	
				var element = document.createElement('div');
				element.className = options.cssClasses.tooltip;
				return handle.firstChild.appendChild(element);
			}
	
			// The tooltips option is a shorthand for using the 'update' event.
			function tooltips ( ) {
	
				if ( options.dir ) {
					options.tooltips.reverse();
				}
	
				// Tooltips are added with options.tooltips in original order.
				var tips = scope_Handles.map(addTooltip);
	
				if ( options.dir ) {
					tips.reverse();
					options.tooltips.reverse();
				}
	
				bindEvent('update', function(f, o, r) {
					if ( tips[o] ) {
						tips[o].innerHTML = options.tooltips[o] === true ? f[o] : options.tooltips[o].to(r[o]);
					}
				});
			}
	
	
			function getGroup ( mode, values, stepped ) {
	
				// Use the range.
				if ( mode === 'range' || mode === 'steps' ) {
					return scope_Spectrum.xVal;
				}
	
				if ( mode === 'count' ) {
	
					// Divide 0 - 100 in 'count' parts.
					var spread = ( 100 / (values-1) ), v, i = 0;
					values = [];
	
					// List these parts and have them handled as 'positions'.
					while ((v=i++*spread) <= 100 ) {
						values.push(v);
					}
	
					mode = 'positions';
				}
	
				if ( mode === 'positions' ) {
	
					// Map all percentages to on-range values.
					return values.map(function( value ){
						return scope_Spectrum.fromStepping( stepped ? scope_Spectrum.getStep( value ) : value );
					});
				}
	
				if ( mode === 'values' ) {
	
					// If the value must be stepped, it needs to be converted to a percentage first.
					if ( stepped ) {
	
						return values.map(function( value ){
	
							// Convert to percentage, apply step, return to value.
							return scope_Spectrum.fromStepping( scope_Spectrum.getStep( scope_Spectrum.toStepping( value ) ) );
						});
	
					}
	
					// Otherwise, we can simply use the values.
					return values;
				}
			}
	
			function generateSpread ( density, mode, group ) {
	
				function safeIncrement(value, increment) {
					// Avoid floating point variance by dropping the smallest decimal places.
					return (value + increment).toFixed(7) / 1;
				}
	
				var originalSpectrumDirection = scope_Spectrum.direction,
					indexes = {},
					firstInRange = scope_Spectrum.xVal[0],
					lastInRange = scope_Spectrum.xVal[scope_Spectrum.xVal.length-1],
					ignoreFirst = false,
					ignoreLast = false,
					prevPct = 0;
	
				// This function loops the spectrum in an ltr linear fashion,
				// while the toStepping method is direction aware. Trick it into
				// believing it is ltr.
				scope_Spectrum.direction = 0;
	
				// Create a copy of the group, sort it and filter away all duplicates.
				group = unique(group.slice().sort(function(a, b){ return a - b; }));
	
				// Make sure the range starts with the first element.
				if ( group[0] !== firstInRange ) {
					group.unshift(firstInRange);
					ignoreFirst = true;
				}
	
				// Likewise for the last one.
				if ( group[group.length - 1] !== lastInRange ) {
					group.push(lastInRange);
					ignoreLast = true;
				}
	
				group.forEach(function ( current, index ) {
	
					// Get the current step and the lower + upper positions.
					var step, i, q,
						low = current,
						high = group[index+1],
						newPct, pctDifference, pctPos, type,
						steps, realSteps, stepsize;
	
					// When using 'steps' mode, use the provided steps.
					// Otherwise, we'll step on to the next subrange.
					if ( mode === 'steps' ) {
						step = scope_Spectrum.xNumSteps[ index ];
					}
	
					// Default to a 'full' step.
					if ( !step ) {
						step = high-low;
					}
	
					// Low can be 0, so test for false. If high is undefined,
					// we are at the last subrange. Index 0 is already handled.
					if ( low === false || high === undefined ) {
						return;
					}
	
					// Find all steps in the subrange.
					for ( i = low; i <= high; i = safeIncrement(i, step) ) {
	
						// Get the percentage value for the current step,
						// calculate the size for the subrange.
						newPct = scope_Spectrum.toStepping( i );
						pctDifference = newPct - prevPct;
	
						steps = pctDifference / density;
						realSteps = Math.round(steps);
	
						// This ratio represents the ammount of percentage-space a point indicates.
						// For a density 1 the points/percentage = 1. For density 2, that percentage needs to be re-devided.
						// Round the percentage offset to an even number, then divide by two
						// to spread the offset on both sides of the range.
						stepsize = pctDifference/realSteps;
	
						// Divide all points evenly, adding the correct number to this subrange.
						// Run up to <= so that 100% gets a point, event if ignoreLast is set.
						for ( q = 1; q <= realSteps; q += 1 ) {
	
							// The ratio between the rounded value and the actual size might be ~1% off.
							// Correct the percentage offset by the number of points
							// per subrange. density = 1 will result in 100 points on the
							// full range, 2 for 50, 4 for 25, etc.
							pctPos = prevPct + ( q * stepsize );
							indexes[pctPos.toFixed(5)] = ['x', 0];
						}
	
						// Determine the point type.
						type = (group.indexOf(i) > -1) ? 1 : ( mode === 'steps' ? 2 : 0 );
	
						// Enforce the 'ignoreFirst' option by overwriting the type for 0.
						if ( !index && ignoreFirst ) {
							type = 0;
						}
	
						if ( !(i === high && ignoreLast)) {
							// Mark the 'type' of this point. 0 = plain, 1 = real value, 2 = step value.
							indexes[newPct.toFixed(5)] = [i, type];
						}
	
						// Update the percentage count.
						prevPct = newPct;
					}
				});
	
				// Reset the spectrum.
				scope_Spectrum.direction = originalSpectrumDirection;
	
				return indexes;
			}
	
			function addMarking ( spread, filterFunc, formatter ) {
	
				var element = document.createElement('div'),
					out = '',
					valueSizeClasses = [
						options.cssClasses.valueNormal,
						options.cssClasses.valueLarge,
						options.cssClasses.valueSub
					],
					markerSizeClasses = [
						options.cssClasses.markerNormal,
						options.cssClasses.markerLarge,
						options.cssClasses.markerSub
					],
					valueOrientationClasses = [
						options.cssClasses.valueHorizontal,
						options.cssClasses.valueVertical
					],
					markerOrientationClasses = [
						options.cssClasses.markerHorizontal,
						options.cssClasses.markerVertical
					];
	
				addClass(element, options.cssClasses.pips);
				addClass(element, options.ort === 0 ? options.cssClasses.pipsHorizontal : options.cssClasses.pipsVertical);
	
				function getClasses( type, source ){
					var a = source === options.cssClasses.value,
						orientationClasses = a ? valueOrientationClasses : markerOrientationClasses,
						sizeClasses = a ? valueSizeClasses : markerSizeClasses;
	
					return source + ' ' + orientationClasses[options.ort] + ' ' + sizeClasses[type];
				}
	
				function getTags( offset, source, values ) {
					return 'class="' + getClasses(values[1], source) + '" style="' + options.style + ': ' + offset + '%"';
				}
	
				function addSpread ( offset, values ){
	
					if ( scope_Spectrum.direction ) {
						offset = 100 - offset;
					}
	
					// Apply the filter function, if it is set.
					values[1] = (values[1] && filterFunc) ? filterFunc(values[0], values[1]) : values[1];
	
					// Add a marker for every point
					out += '<div ' + getTags(offset, options.cssClasses.marker, values) + '></div>';
	
					// Values are only appended for points marked '1' or '2'.
					if ( values[1] ) {
						out += '<div ' + getTags(offset, options.cssClasses.value, values) + '>' + formatter.to(values[0]) + '</div>';
					}
				}
	
				// Append all points.
				Object.keys(spread).forEach(function(a){
					addSpread(a, spread[a]);
				});
	
				element.innerHTML = out;
	
				return element;
			}
	
			function pips ( grid ) {
	
			var mode = grid.mode,
				density = grid.density || 1,
				filter = grid.filter || false,
				values = grid.values || false,
				stepped = grid.stepped || false,
				group = getGroup( mode, values, stepped ),
				spread = generateSpread( density, mode, group ),
				format = grid.format || {
					to: Math.round
				};
	
				return scope_Target.appendChild(addMarking(
					spread,
					filter,
					format
				));
			}
	
	
			// Shorthand for base dimensions.
			function baseSize ( ) {
				var rect = scope_Base.getBoundingClientRect(), alt = 'offset' + ['Width', 'Height'][options.ort];
				return options.ort === 0 ? (rect.width||scope_Base[alt]) : (rect.height||scope_Base[alt]);
			}
	
			// External event handling
			function fireEvent ( event, handleNumber, tap ) {
	
				var i;
	
				// During initialization, do not fire events.
				for ( i = 0; i < options.handles; i++ ) {
					if ( scope_Locations[i] === -1 ) {
						return;
					}
				}
	
				if ( handleNumber !== undefined && options.handles !== 1 ) {
					handleNumber = Math.abs(handleNumber - options.dir);
				}
	
				Object.keys(scope_Events).forEach(function( targetEvent ) {
	
					var eventType = targetEvent.split('.')[0];
	
					if ( event === eventType ) {
						scope_Events[targetEvent].forEach(function( callback ) {
	
							callback.call(
								// Use the slider public API as the scope ('this')
								scope_Self,
								// Return values as array, so arg_1[arg_2] is always valid.
								asArray(valueGet()),
								// Handle index, 0 or 1
								handleNumber,
								// Unformatted slider values
								asArray(inSliderOrder(Array.prototype.slice.call(scope_Values))),
								// Event is fired by tap, true or false
								tap || false,
								// Left offset of the handle, in relation to the slider
								scope_Locations
							);
						});
					}
				});
			}
	
			// Returns the input array, respecting the slider direction configuration.
			function inSliderOrder ( values ) {
	
				// If only one handle is used, return a single value.
				if ( values.length === 1 ){
					return values[0];
				}
	
				if ( options.dir ) {
					return values.reverse();
				}
	
				return values;
			}
	
	
			// Handler for attaching events trough a proxy.
			function attach ( events, element, callback, data ) {
	
				// This function can be used to 'filter' events to the slider.
				// element is a node, not a nodeList
	
				var method = function ( e ){
	
					if ( scope_Target.hasAttribute('disabled') ) {
						return false;
					}
	
					// Stop if an active 'tap' transition is taking place.
					if ( hasClass(scope_Target, options.cssClasses.tap) ) {
						return false;
					}
	
					e = fixEvent(e, data.pageOffset);
	
					// Ignore right or middle clicks on start #454
					if ( events === actions.start && e.buttons !== undefined && e.buttons > 1 ) {
						return false;
					}
	
					// Ignore right or middle clicks on start #454
					if ( data.hover && e.buttons ) {
						return false;
					}
	
					e.calcPoint = e.points[ options.ort ];
	
					// Call the event handler with the event [ and additional data ].
					callback ( e, data );
	
				}, methods = [];
	
				// Bind a closure on the target for every event type.
				events.split(' ').forEach(function( eventName ){
					element.addEventListener(eventName, method, false);
					methods.push([eventName, method]);
				});
	
				return methods;
			}
	
			// Handle movement on document for handle and range drag.
			function move ( event, data ) {
	
				// Fix #498
				// Check value of .buttons in 'start' to work around a bug in IE10 mobile (data.buttonsProperty).
				// https://connect.microsoft.com/IE/feedback/details/927005/mobile-ie10-windows-phone-buttons-property-of-pointermove-event-always-zero
				// IE9 has .buttons and .which zero on mousemove.
				// Firefox breaks the spec MDN defines.
				if ( navigator.appVersion.indexOf("MSIE 9") === -1 && event.buttons === 0 && data.buttonsProperty !== 0 ) {
					return end(event, data);
				}
	
				var handles = data.handles || scope_Handles, positions, state = false,
					proposal = ((event.calcPoint - data.start) * 100) / data.baseSize,
					handleNumber = handles[0] === scope_Handles[0] ? 0 : 1, i;
	
				// Calculate relative positions for the handles.
				positions = getPositions( proposal, data.positions, handles.length > 1);
	
				state = setHandle ( handles[0], positions[handleNumber], handles.length === 1 );
	
				if ( handles.length > 1 ) {
	
					state = setHandle ( handles[1], positions[handleNumber?0:1], false ) || state;
	
					if ( state ) {
						// fire for both handles
						for ( i = 0; i < data.handles.length; i++ ) {
							fireEvent('slide', i);
						}
					}
				} else if ( state ) {
					// Fire for a single handle
					fireEvent('slide', handleNumber);
				}
			}
	
			// Unbind move events on document, call callbacks.
			function end ( event, data ) {
	
				// The handle is no longer active, so remove the class.
				var active = scope_Base.querySelector( '.' + options.cssClasses.active ),
					handleNumber = data.handles[0] === scope_Handles[0] ? 0 : 1;
	
				if ( active !== null ) {
					removeClass(active, options.cssClasses.active);
				}
	
				// Remove cursor styles and text-selection events bound to the body.
				if ( event.cursor ) {
					document.body.style.cursor = '';
					document.body.removeEventListener('selectstart', document.body.noUiListener);
				}
	
				var d = document.documentElement;
	
				// Unbind the move and end events, which are added on 'start'.
				d.noUiListeners.forEach(function( c ) {
					d.removeEventListener(c[0], c[1]);
				});
	
				// Remove dragging class.
				removeClass(scope_Target, options.cssClasses.drag);
	
				// Fire the change and set events.
				fireEvent('set', handleNumber);
				fireEvent('change', handleNumber);
	
				// If this is a standard handle movement, fire the end event.
				if ( data.handleNumber !== undefined ) {
					fireEvent('end', data.handleNumber);
				}
			}
	
			// Fire 'end' when a mouse or pen leaves the document.
			function documentLeave ( event, data ) {
				if ( event.type === "mouseout" && event.target.nodeName === "HTML" && event.relatedTarget === null ){
					end ( event, data );
				}
			}
	
			// Bind move events on document.
			function start ( event, data ) {
	
				var d = document.documentElement;
	
				// Mark the handle as 'active' so it can be styled.
				if ( data.handles.length === 1 ) {
					// Support 'disabled' handles
					if ( data.handles[0].hasAttribute('disabled') ) {
						return false;
					}
	
					addClass(data.handles[0].children[0], options.cssClasses.active);
				}
	
				// Fix #551, where a handle gets selected instead of dragged.
				event.preventDefault();
	
				// A drag should never propagate up to the 'tap' event.
				event.stopPropagation();
	
				// Attach the move and end events.
				var moveEvent = attach(actions.move, d, move, {
					start: event.calcPoint,
					baseSize: baseSize(),
					pageOffset: event.pageOffset,
					handles: data.handles,
					handleNumber: data.handleNumber,
					buttonsProperty: event.buttons,
					positions: [
						scope_Locations[0],
						scope_Locations[scope_Handles.length - 1]
					]
				}), endEvent = attach(actions.end, d, end, {
					handles: data.handles,
					handleNumber: data.handleNumber
				});
	
				var outEvent = attach("mouseout", d, documentLeave, {
					handles: data.handles,
					handleNumber: data.handleNumber
				});
	
				d.noUiListeners = moveEvent.concat(endEvent, outEvent);
	
				// Text selection isn't an issue on touch devices,
				// so adding cursor styles can be skipped.
				if ( event.cursor ) {
	
					// Prevent the 'I' cursor and extend the range-drag cursor.
					document.body.style.cursor = getComputedStyle(event.target).cursor;
	
					// Mark the target with a dragging state.
					if ( scope_Handles.length > 1 ) {
						addClass(scope_Target, options.cssClasses.drag);
					}
	
					var f = function(){
						return false;
					};
	
					document.body.noUiListener = f;
	
					// Prevent text selection when dragging the handles.
					document.body.addEventListener('selectstart', f, false);
				}
	
				if ( data.handleNumber !== undefined ) {
					fireEvent('start', data.handleNumber);
				}
			}
	
			// Move closest handle to tapped location.
			function tap ( event ) {
	
				var location = event.calcPoint, total = 0, handleNumber, to;
	
				// The tap event shouldn't propagate up and cause 'edge' to run.
				event.stopPropagation();
	
				// Add up the handle offsets.
				scope_Handles.forEach(function(a){
					total += offset(a)[ options.style ];
				});
	
				// Find the handle closest to the tapped position.
				handleNumber = ( location < total/2 || scope_Handles.length === 1 ) ? 0 : 1;
	
				// Check if handler is not disablet if yes set number to the next handler
				if (scope_Handles[handleNumber].hasAttribute('disabled')) {
					handleNumber = handleNumber ? 0 : 1;
				}
	
				location -= offset(scope_Base)[ options.style ];
	
				// Calculate the new position.
				to = ( location * 100 ) / baseSize();
	
				if ( !options.events.snap ) {
					// Flag the slider as it is now in a transitional state.
					// Transition takes a configurable amount of ms (default 300). Re-enable the slider after that.
					addClassFor( scope_Target, options.cssClasses.tap, options.animationDuration );
				}
	
				// Support 'disabled' handles
				if ( scope_Handles[handleNumber].hasAttribute('disabled') ) {
					return false;
				}
	
				// Find the closest handle and calculate the tapped point.
				// The set handle to the new position.
				setHandle( scope_Handles[handleNumber], to );
	
				fireEvent('slide', handleNumber, true);
				fireEvent('set', handleNumber, true);
				fireEvent('change', handleNumber, true);
	
				if ( options.events.snap ) {
					start(event, { handles: [scope_Handles[handleNumber]] });
				}
			}
	
			// Fires a 'hover' event for a hovered mouse/pen position.
			function hover ( event ) {
	
				var location = event.calcPoint - offset(scope_Base)[ options.style ],
					to = scope_Spectrum.getStep(( location * 100 ) / baseSize()),
					value = scope_Spectrum.fromStepping( to );
	
				Object.keys(scope_Events).forEach(function( targetEvent ) {
					if ( 'hover' === targetEvent.split('.')[0] ) {
						scope_Events[targetEvent].forEach(function( callback ) {
							callback.call( scope_Self, value );
						});
					}
				});
			}
	
			// Attach events to several slider parts.
			function events ( behaviour ) {
	
				// Attach the standard drag event to the handles.
				if ( !behaviour.fixed ) {
	
					scope_Handles.forEach(function( handle, index ){
	
						// These events are only bound to the visual handle
						// element, not the 'real' origin element.
						attach ( actions.start, handle.children[0], start, {
							handles: [ handle ],
							handleNumber: index
						});
					});
				}
	
				// Attach the tap event to the slider base.
				if ( behaviour.tap ) {
	
					attach ( actions.start, scope_Base, tap, {
						handles: scope_Handles
					});
				}
	
				// Fire hover events
				if ( behaviour.hover ) {
					attach ( actions.move, scope_Base, hover, { hover: true } );
				}
	
				// Make the range draggable.
				if ( behaviour.drag ){
	
					var drag = [scope_Base.querySelector( '.' + options.cssClasses.connect )];
					addClass(drag[0], options.cssClasses.draggable);
	
					// When the range is fixed, the entire range can
					// be dragged by the handles. The handle in the first
					// origin will propagate the start event upward,
					// but it needs to be bound manually on the other.
					if ( behaviour.fixed ) {
						drag.push(scope_Handles[(drag[0] === scope_Handles[0] ? 1 : 0)].children[0]);
					}
	
					drag.forEach(function( element ) {
						attach ( actions.start, element, start, {
							handles: scope_Handles
						});
					});
				}
			}
	
	
			// Test suggested values and apply margin, step.
			function setHandle ( handle, to, noLimitOption ) {
	
				var trigger = handle !== scope_Handles[0] ? 1 : 0,
					lowerMargin = scope_Locations[0] + options.margin,
					upperMargin = scope_Locations[1] - options.margin,
					lowerLimit = scope_Locations[0] + options.limit,
					upperLimit = scope_Locations[1] - options.limit;
	
				// For sliders with multiple handles,
				// limit movement to the other handle.
				// Apply the margin option by adding it to the handle positions.
				if ( scope_Handles.length > 1 ) {
					to = trigger ? Math.max( to, lowerMargin ) : Math.min( to, upperMargin );
				}
	
				// The limit option has the opposite effect, limiting handles to a
				// maximum distance from another. Limit must be > 0, as otherwise
				// handles would be unmoveable. 'noLimitOption' is set to 'false'
				// for the .val() method, except for pass 4/4.
				if ( noLimitOption !== false && options.limit && scope_Handles.length > 1 ) {
					to = trigger ? Math.min ( to, lowerLimit ) : Math.max( to, upperLimit );
				}
	
				// Handle the step option.
				to = scope_Spectrum.getStep( to );
	
				// Limit percentage to the 0 - 100 range
				to = limit(to);
	
				// Return false if handle can't move
				if ( to === scope_Locations[trigger] ) {
					return false;
				}
	
				// Set the handle to the new position.
				// Use requestAnimationFrame for efficient painting.
				// No significant effect in Chrome, Edge sees dramatic
				// performace improvements.
				if ( window.requestAnimationFrame ) {
					window.requestAnimationFrame(function(){
						handle.style[options.style] = to + '%';
					});
				} else {
					handle.style[options.style] = to + '%';
				}
	
				// Force proper handle stacking
				if ( !handle.previousSibling ) {
					removeClass(handle, options.cssClasses.stacking);
					if ( to > 50 ) {
						addClass(handle, options.cssClasses.stacking);
					}
				}
	
				// Update locations.
				scope_Locations[trigger] = to;
	
				// Convert the value to the slider stepping/range.
				scope_Values[trigger] = scope_Spectrum.fromStepping( to );
	
				fireEvent('update', trigger);
	
				return true;
			}
	
			// Loop values from value method and apply them.
			function setValues ( count, values ) {
	
				var i, trigger, to;
	
				// With the limit option, we'll need another limiting pass.
				if ( options.limit ) {
					count += 1;
				}
	
				// If there are multiple handles to be set run the setting
				// mechanism twice for the first handle, to make sure it
				// can be bounced of the second one properly.
				for ( i = 0; i < count; i += 1 ) {
	
					trigger = i%2;
	
					// Get the current argument from the array.
					to = values[trigger];
	
					// Setting with null indicates an 'ignore'.
					// Inputting 'false' is invalid.
					if ( to !== null && to !== false ) {
	
						// If a formatted number was passed, attemt to decode it.
						if ( typeof to === 'number' ) {
							to = String(to);
						}
	
						to = options.format.from( to );
	
						// Request an update for all links if the value was invalid.
						// Do so too if setting the handle fails.
						if ( to === false || isNaN(to) || setHandle( scope_Handles[trigger], scope_Spectrum.toStepping( to ), i === (3 - options.dir) ) === false ) {
							fireEvent('update', trigger);
						}
					}
				}
			}
	
			// Set the slider value.
			function valueSet ( input, fireSetEvent ) {
	
				var count, values = asArray( input ), i;
	
				// Event fires by default
				fireSetEvent = (fireSetEvent === undefined ? true : !!fireSetEvent);
	
				// The RTL settings is implemented by reversing the front-end,
				// internal mechanisms are the same.
				if ( options.dir && options.handles > 1 ) {
					values.reverse();
				}
	
				// Animation is optional.
				// Make sure the initial values where set before using animated placement.
				if ( options.animate && scope_Locations[0] !== -1 ) {
					addClassFor( scope_Target, options.cssClasses.tap, options.animationDuration );
				}
	
				// Determine how often to set the handles.
				count = scope_Handles.length > 1 ? 3 : 1;
	
				if ( values.length === 1 ) {
					count = 1;
				}
	
				setValues ( count, values );
	
				// Fire the 'set' event for both handles.
				for ( i = 0; i < scope_Handles.length; i++ ) {
	
					// Fire the event only for handles that received a new value, as per #579
					if ( values[i] !== null && fireSetEvent ) {
						fireEvent('set', i);
					}
				}
			}
	
			// Get the slider value.
			function valueGet ( ) {
	
				var i, retour = [];
	
				// Get the value from all handles.
				for ( i = 0; i < options.handles; i += 1 ){
					retour[i] = options.format.to( scope_Values[i] );
				}
	
				return inSliderOrder( retour );
			}
	
			// Removes classes from the root and empties it.
			function destroy ( ) {
	
				for ( var key in options.cssClasses ) {
					if ( !options.cssClasses.hasOwnProperty(key) ) { continue; }
					removeClass(scope_Target, options.cssClasses[key]);
				}
	
				while (scope_Target.firstChild) {
					scope_Target.removeChild(scope_Target.firstChild);
				}
	
				delete scope_Target.noUiSlider;
			}
	
			// Get the current step size for the slider.
			function getCurrentStep ( ) {
	
				// Check all locations, map them to their stepping point.
				// Get the step point, then find it in the input list.
				var retour = scope_Locations.map(function( location, index ){
	
					var step = scope_Spectrum.getApplicableStep( location ),
	
						// As per #391, the comparison for the decrement step can have some rounding issues.
						// Round the value to the precision used in the step.
						stepDecimals = countDecimals(String(step[2])),
	
						// Get the current numeric value
						value = scope_Values[index],
	
						// To move the slider 'one step up', the current step value needs to be added.
						// Use null if we are at the maximum slider value.
						increment = location === 100 ? null : step[2],
	
						// Going 'one step down' might put the slider in a different sub-range, so we
						// need to switch between the current or the previous step.
						prev = Number((value - step[2]).toFixed(stepDecimals)),
	
						// If the value fits the step, return the current step value. Otherwise, use the
						// previous step. Return null if the slider is at its minimum value.
						decrement = location === 0 ? null : (prev >= step[1]) ? step[2] : (step[0] || false);
	
					return [decrement, increment];
				});
	
				// Return values in the proper order.
				return inSliderOrder( retour );
			}
	
			// Attach an event to this slider, possibly including a namespace
			function bindEvent ( namespacedEvent, callback ) {
				scope_Events[namespacedEvent] = scope_Events[namespacedEvent] || [];
				scope_Events[namespacedEvent].push(callback);
	
				// If the event bound is 'update,' fire it immediately for all handles.
				if ( namespacedEvent.split('.')[0] === 'update' ) {
					scope_Handles.forEach(function(a, index){
						fireEvent('update', index);
					});
				}
			}
	
			// Undo attachment of event
			function removeEvent ( namespacedEvent ) {
	
				var event = namespacedEvent && namespacedEvent.split('.')[0],
					namespace = event && namespacedEvent.substring(event.length);
	
				Object.keys(scope_Events).forEach(function( bind ){
	
					var tEvent = bind.split('.')[0],
						tNamespace = bind.substring(tEvent.length);
	
					if ( (!event || event === tEvent) && (!namespace || namespace === tNamespace) ) {
						delete scope_Events[bind];
					}
				});
			}
	
			// Updateable: margin, limit, step, range, animate, snap
			function updateOptions ( optionsToUpdate, fireSetEvent ) {
	
				// Spectrum is created using the range, snap, direction and step options.
				// 'snap' and 'step' can be updated, 'direction' cannot, due to event binding.
				// If 'snap' and 'step' are not passed, they should remain unchanged.
				var v = valueGet(), newOptions = testOptions({
					start: [0, 0],
					margin: optionsToUpdate.margin,
					limit: optionsToUpdate.limit,
					step: optionsToUpdate.step === undefined ? options.singleStep : optionsToUpdate.step,
					range: optionsToUpdate.range,
					animate: optionsToUpdate.animate,
					snap: optionsToUpdate.snap === undefined ? options.snap : optionsToUpdate.snap
				});
	
				['margin', 'limit', 'range', 'animate'].forEach(function(name){
	
					// Only change options that we're actually passed to update.
					if ( optionsToUpdate[name] !== undefined ) {
						options[name] = optionsToUpdate[name];
					}
				});
	
				// Save current spectrum direction as testOptions in testRange call
				// doesn't rely on current direction
				newOptions.spectrum.direction = scope_Spectrum.direction;
				scope_Spectrum = newOptions.spectrum;
	
				// Invalidate the current positioning so valueSet forces an update.
				scope_Locations = [-1, -1];
				valueSet(optionsToUpdate.start || v, fireSetEvent);
			}
	
	
			// Throw an error if the slider was already initialized.
			if ( scope_Target.noUiSlider ) {
				throw new Error('Slider was already initialized.');
			}
	
			// Create the base element, initialise HTML and set classes.
			// Add handles and links.
			scope_Base = addSlider( options.dir, options.ort, scope_Target );
			scope_Handles = addHandles( options.handles, options.dir, scope_Base );
	
			// Set the connect classes.
			addConnection ( options.connect, scope_Target, scope_Handles );
	
			if ( options.pips ) {
				pips(options.pips);
			}
	
			if ( options.tooltips ) {
				tooltips();
			}
	
			scope_Self = {
				destroy: destroy,
				steps: getCurrentStep,
				on: bindEvent,
				off: removeEvent,
				get: valueGet,
				set: valueSet,
				updateOptions: updateOptions,
				options: originalOptions, // Issue #600
				target: scope_Target, // Issue #597
				pips: pips // Issue #594
			};
	
			// Attach user events.
			events( options.events );
	
			return scope_Self;
	
		}
	
	
			// Run the standard initializer
			function initialize ( target, originalOptions ) {
	
				if ( !target.nodeName ) {
					throw new Error('noUiSlider.create requires a single element.');
				}
	
				// Test the options and create the slider environment;
				var options = testOptions( originalOptions, target ),
					slider = closure( target, options, originalOptions );
	
				// Use the public value method to set the start values.
				slider.set(options.start);
	
				target.noUiSlider = slider;
				return slider;
			}
	
			// Use an object instead of a function for future expansibility;
			return {
				create: initialize
			};
	
		}));
	
	/***/ },
	/* 39 */
	/***/ function(module, exports, __webpack_require__) {
	
		module.exports = __webpack_require__(40);
	
	/***/ },
	/* 40 */
	/***/ function(module, exports, __webpack_require__) {
	
		var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var require;var require;/*!
		 * Select2 4.0.4
		 * https://select2.github.io
		 *
		 * Released under the MIT license
		 * https://github.com/select2/select2/blob/master/LICENSE.md
		 */
		(function (factory) {
		  if (true) {
		    // AMD. Register as an anonymous module.
		    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		  } else if (typeof module === 'object' && module.exports) {
		    // Node/CommonJS
		    module.exports = function (root, jQuery) {
		      if (jQuery === undefined) {
		        // require('jQuery') returns a factory that requires window to
		        // build a jQuery instance, we normalize how we use modules
		        // that require this pattern but the window provided is a noop
		        // if it's defined (how jquery works)
		        if (typeof window !== 'undefined') {
		          jQuery = require('jquery');
		        }
		        else {
		          jQuery = require('jquery')(root);
		        }
		      }
		      factory(jQuery);
		      return jQuery;
		    };
		  } else {
		    // Browser globals
		    factory(jQuery);
		  }
		} (function (jQuery) {
		  // This is needed so we can catch the AMD loader configuration and use it
		  // The inner file should be wrapped (by `banner.start.js`) in a function that
		  // returns the AMD loader references.
		  var S2 =(function () {
		  // Restore the Select2 AMD loader so it can be used
		  // Needed mostly in the language files, where the loader is not inserted
		  if (jQuery && jQuery.fn && jQuery.fn.select2 && jQuery.fn.select2.amd) {
		    var S2 = jQuery.fn.select2.amd;
		  }
		var S2;(function () { if (!S2 || !S2.requirejs) {
		if (!S2) { S2 = {}; } else { require = S2; }
		/**
		 * @license almond 0.3.3 Copyright jQuery Foundation and other contributors.
		 * Released under MIT license, http://github.com/requirejs/almond/LICENSE
		 */
		//Going sloppy to avoid 'use strict' string cost, but strict practices should
		//be followed.
		/*global setTimeout: false */
	
		var requirejs, require, define;
		(function (undef) {
		    var main, req, makeMap, handlers,
		        defined = {},
		        waiting = {},
		        config = {},
		        defining = {},
		        hasOwn = Object.prototype.hasOwnProperty,
		        aps = [].slice,
		        jsSuffixRegExp = /\.js$/;
	
		    function hasProp(obj, prop) {
		        return hasOwn.call(obj, prop);
		    }
	
		    /**
		     * Given a relative module name, like ./something, normalize it to
		     * a real name that can be mapped to a path.
		     * @param {String} name the relative name
		     * @param {String} baseName a real name that the name arg is relative
		     * to.
		     * @returns {String} normalized name
		     */
		    function normalize(name, baseName) {
		        var nameParts, nameSegment, mapValue, foundMap, lastIndex,
		            foundI, foundStarMap, starI, i, j, part, normalizedBaseParts,
		            baseParts = baseName && baseName.split("/"),
		            map = config.map,
		            starMap = (map && map['*']) || {};
	
		        //Adjust any relative paths.
		        if (name) {
		            name = name.split('/');
		            lastIndex = name.length - 1;
	
		            // If wanting node ID compatibility, strip .js from end
		            // of IDs. Have to do this here, and not in nameToUrl
		            // because node allows either .js or non .js to map
		            // to same file.
		            if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {
		                name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');
		            }
	
		            // Starts with a '.' so need the baseName
		            if (name[0].charAt(0) === '.' && baseParts) {
		                //Convert baseName to array, and lop off the last part,
		                //so that . matches that 'directory' and not name of the baseName's
		                //module. For instance, baseName of 'one/two/three', maps to
		                //'one/two/three.js', but we want the directory, 'one/two' for
		                //this normalization.
		                normalizedBaseParts = baseParts.slice(0, baseParts.length - 1);
		                name = normalizedBaseParts.concat(name);
		            }
	
		            //start trimDots
		            for (i = 0; i < name.length; i++) {
		                part = name[i];
		                if (part === '.') {
		                    name.splice(i, 1);
		                    i -= 1;
		                } else if (part === '..') {
		                    // If at the start, or previous value is still ..,
		                    // keep them so that when converted to a path it may
		                    // still work when converted to a path, even though
		                    // as an ID it is less than ideal. In larger point
		                    // releases, may be better to just kick out an error.
		                    if (i === 0 || (i === 1 && name[2] === '..') || name[i - 1] === '..') {
		                        continue;
		                    } else if (i > 0) {
		                        name.splice(i - 1, 2);
		                        i -= 2;
		                    }
		                }
		            }
		            //end trimDots
	
		            name = name.join('/');
		        }
	
		        //Apply map config if available.
		        if ((baseParts || starMap) && map) {
		            nameParts = name.split('/');
	
		            for (i = nameParts.length; i > 0; i -= 1) {
		                nameSegment = nameParts.slice(0, i).join("/");
	
		                if (baseParts) {
		                    //Find the longest baseName segment match in the config.
		                    //So, do joins on the biggest to smallest lengths of baseParts.
		                    for (j = baseParts.length; j > 0; j -= 1) {
		                        mapValue = map[baseParts.slice(0, j).join('/')];
	
		                        //baseName segment has  config, find if it has one for
		                        //this name.
		                        if (mapValue) {
		                            mapValue = mapValue[nameSegment];
		                            if (mapValue) {
		                                //Match, update name to the new value.
		                                foundMap = mapValue;
		                                foundI = i;
		                                break;
		                            }
		                        }
		                    }
		                }
	
		                if (foundMap) {
		                    break;
		                }
	
		                //Check for a star map match, but just hold on to it,
		                //if there is a shorter segment match later in a matching
		                //config, then favor over this star map.
		                if (!foundStarMap && starMap && starMap[nameSegment]) {
		                    foundStarMap = starMap[nameSegment];
		                    starI = i;
		                }
		            }
	
		            if (!foundMap && foundStarMap) {
		                foundMap = foundStarMap;
		                foundI = starI;
		            }
	
		            if (foundMap) {
		                nameParts.splice(0, foundI, foundMap);
		                name = nameParts.join('/');
		            }
		        }
	
		        return name;
		    }
	
		    function makeRequire(relName, forceSync) {
		        return function () {
		            //A version of a require function that passes a moduleName
		            //value for items that may need to
		            //look up paths relative to the moduleName
		            var args = aps.call(arguments, 0);
	
		            //If first arg is not require('string'), and there is only
		            //one arg, it is the array form without a callback. Insert
		            //a null so that the following concat is correct.
		            if (typeof args[0] !== 'string' && args.length === 1) {
		                args.push(null);
		            }
		            return req.apply(undef, args.concat([relName, forceSync]));
		        };
		    }
	
		    function makeNormalize(relName) {
		        return function (name) {
		            return normalize(name, relName);
		        };
		    }
	
		    function makeLoad(depName) {
		        return function (value) {
		            defined[depName] = value;
		        };
		    }
	
		    function callDep(name) {
		        if (hasProp(waiting, name)) {
		            var args = waiting[name];
		            delete waiting[name];
		            defining[name] = true;
		            main.apply(undef, args);
		        }
	
		        if (!hasProp(defined, name) && !hasProp(defining, name)) {
		            throw new Error('No ' + name);
		        }
		        return defined[name];
		    }
	
		    //Turns a plugin!resource to [plugin, resource]
		    //with the plugin being undefined if the name
		    //did not have a plugin prefix.
		    function splitPrefix(name) {
		        var prefix,
		            index = name ? name.indexOf('!') : -1;
		        if (index > -1) {
		            prefix = name.substring(0, index);
		            name = name.substring(index + 1, name.length);
		        }
		        return [prefix, name];
		    }
	
		    //Creates a parts array for a relName where first part is plugin ID,
		    //second part is resource ID. Assumes relName has already been normalized.
		    function makeRelParts(relName) {
		        return relName ? splitPrefix(relName) : [];
		    }
	
		    /**
		     * Makes a name map, normalizing the name, and using a plugin
		     * for normalization if necessary. Grabs a ref to plugin
		     * too, as an optimization.
		     */
		    makeMap = function (name, relParts) {
		        var plugin,
		            parts = splitPrefix(name),
		            prefix = parts[0],
		            relResourceName = relParts[1];
	
		        name = parts[1];
	
		        if (prefix) {
		            prefix = normalize(prefix, relResourceName);
		            plugin = callDep(prefix);
		        }
	
		        //Normalize according
		        if (prefix) {
		            if (plugin && plugin.normalize) {
		                name = plugin.normalize(name, makeNormalize(relResourceName));
		            } else {
		                name = normalize(name, relResourceName);
		            }
		        } else {
		            name = normalize(name, relResourceName);
		            parts = splitPrefix(name);
		            prefix = parts[0];
		            name = parts[1];
		            if (prefix) {
		                plugin = callDep(prefix);
		            }
		        }
	
		        //Using ridiculous property names for space reasons
		        return {
		            f: prefix ? prefix + '!' + name : name, //fullName
		            n: name,
		            pr: prefix,
		            p: plugin
		        };
		    };
	
		    function makeConfig(name) {
		        return function () {
		            return (config && config.config && config.config[name]) || {};
		        };
		    }
	
		    handlers = {
		        require: function (name) {
		            return makeRequire(name);
		        },
		        exports: function (name) {
		            var e = defined[name];
		            if (typeof e !== 'undefined') {
		                return e;
		            } else {
		                return (defined[name] = {});
		            }
		        },
		        module: function (name) {
		            return {
		                id: name,
		                uri: '',
		                exports: defined[name],
		                config: makeConfig(name)
		            };
		        }
		    };
	
		    main = function (name, deps, callback, relName) {
		        var cjsModule, depName, ret, map, i, relParts,
		            args = [],
		            callbackType = typeof callback,
		            usingExports;
	
		        //Use name if no relName
		        relName = relName || name;
		        relParts = makeRelParts(relName);
	
		        //Call the callback to define the module, if necessary.
		        if (callbackType === 'undefined' || callbackType === 'function') {
		            //Pull out the defined dependencies and pass the ordered
		            //values to the callback.
		            //Default to [require, exports, module] if no deps
		            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;
		            for (i = 0; i < deps.length; i += 1) {
		                map = makeMap(deps[i], relParts);
		                depName = map.f;
	
		                //Fast path CommonJS standard dependencies.
		                if (depName === "require") {
		                    args[i] = handlers.require(name);
		                } else if (depName === "exports") {
		                    //CommonJS module spec 1.1
		                    args[i] = handlers.exports(name);
		                    usingExports = true;
		                } else if (depName === "module") {
		                    //CommonJS module spec 1.1
		                    cjsModule = args[i] = handlers.module(name);
		                } else if (hasProp(defined, depName) ||
		                           hasProp(waiting, depName) ||
		                           hasProp(defining, depName)) {
		                    args[i] = callDep(depName);
		                } else if (map.p) {
		                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});
		                    args[i] = defined[depName];
		                } else {
		                    throw new Error(name + ' missing ' + depName);
		                }
		            }
	
		            ret = callback ? callback.apply(defined[name], args) : undefined;
	
		            if (name) {
		                //If setting exports via "module" is in play,
		                //favor that over return value and exports. After that,
		                //favor a non-undefined return value over exports use.
		                if (cjsModule && cjsModule.exports !== undef &&
		                        cjsModule.exports !== defined[name]) {
		                    defined[name] = cjsModule.exports;
		                } else if (ret !== undef || !usingExports) {
		                    //Use the return value from the function.
		                    defined[name] = ret;
		                }
		            }
		        } else if (name) {
		            //May just be an object definition for the module. Only
		            //worry about defining if have a module name.
		            defined[name] = callback;
		        }
		    };
	
		    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {
		        if (typeof deps === "string") {
		            if (handlers[deps]) {
		                //callback in this case is really relName
		                return handlers[deps](callback);
		            }
		            //Just return the module wanted. In this scenario, the
		            //deps arg is the module name, and second arg (if passed)
		            //is just the relName.
		            //Normalize module name, if it contains . or ..
		            return callDep(makeMap(deps, makeRelParts(callback)).f);
		        } else if (!deps.splice) {
		            //deps is a config object, not an array.
		            config = deps;
		            if (config.deps) {
		                req(config.deps, config.callback);
		            }
		            if (!callback) {
		                return;
		            }
	
		            if (callback.splice) {
		                //callback is an array, which means it is a dependency list.
		                //Adjust args if there are dependencies
		                deps = callback;
		                callback = relName;
		                relName = null;
		            } else {
		                deps = undef;
		            }
		        }
	
		        //Support require(['a'])
		        callback = callback || function () {};
	
		        //If relName is a function, it is an errback handler,
		        //so remove it.
		        if (typeof relName === 'function') {
		            relName = forceSync;
		            forceSync = alt;
		        }
	
		        //Simulate async callback;
		        if (forceSync) {
		            main(undef, deps, callback, relName);
		        } else {
		            //Using a non-zero value because of concern for what old browsers
		            //do, and latest browsers "upgrade" to 4 if lower value is used:
		            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:
		            //If want a value immediately, use require('id') instead -- something
		            //that works in almond on the global level, but not guaranteed and
		            //unlikely to work in other AMD implementations.
		            setTimeout(function () {
		                main(undef, deps, callback, relName);
		            }, 4);
		        }
	
		        return req;
		    };
	
		    /**
		     * Just drops the config on the floor, but returns req in case
		     * the config return value is used.
		     */
		    req.config = function (cfg) {
		        return req(cfg);
		    };
	
		    /**
		     * Expose module registry for debugging and tooling
		     */
		    requirejs._defined = defined;
	
		    define = function (name, deps, callback) {
		        if (typeof name !== 'string') {
		            throw new Error('See almond README: incorrect module build, no module name');
		        }
	
		        //This module may not have dependencies
		        if (!deps.splice) {
		            //deps is not an array, so probably means
		            //an object literal or factory function for
		            //the value. Adjust args.
		            callback = deps;
		            deps = [];
		        }
	
		        if (!hasProp(defined, name) && !hasProp(waiting, name)) {
		            waiting[name] = [name, deps, callback];
		        }
		    };
	
		    define.amd = {
		        jQuery: true
		    };
		}());
	
		S2.requirejs = requirejs;S2.require = require;S2.define = define;
		}
		}());
		S2.define("almond", function(){});
	
		/* global jQuery:false, $:false */
		S2.define('jquery',[],function () {
		  var _$ = jQuery || $;
	
		  if (_$ == null && console && console.error) {
		    console.error(
		      'Select2: An instance of jQuery or a jQuery-compatible library was not ' +
		      'found. Make sure that you are including jQuery before Select2 on your ' +
		      'web page.'
		    );
		  }
	
		  return _$;
		});
	
		S2.define('select2/utils',[
		  'jquery'
		], function ($) {
		  var Utils = {};
	
		  Utils.Extend = function (ChildClass, SuperClass) {
		    var __hasProp = {}.hasOwnProperty;
	
		    function BaseConstructor () {
		      this.constructor = ChildClass;
		    }
	
		    for (var key in SuperClass) {
		      if (__hasProp.call(SuperClass, key)) {
		        ChildClass[key] = SuperClass[key];
		      }
		    }
	
		    BaseConstructor.prototype = SuperClass.prototype;
		    ChildClass.prototype = new BaseConstructor();
		    ChildClass.__super__ = SuperClass.prototype;
	
		    return ChildClass;
		  };
	
		  function getMethods (theClass) {
		    var proto = theClass.prototype;
	
		    var methods = [];
	
		    for (var methodName in proto) {
		      var m = proto[methodName];
	
		      if (typeof m !== 'function') {
		        continue;
		      }
	
		      if (methodName === 'constructor') {
		        continue;
		      }
	
		      methods.push(methodName);
		    }
	
		    return methods;
		  }
	
		  Utils.Decorate = function (SuperClass, DecoratorClass) {
		    var decoratedMethods = getMethods(DecoratorClass);
		    var superMethods = getMethods(SuperClass);
	
		    function DecoratedClass () {
		      var unshift = Array.prototype.unshift;
	
		      var argCount = DecoratorClass.prototype.constructor.length;
	
		      var calledConstructor = SuperClass.prototype.constructor;
	
		      if (argCount > 0) {
		        unshift.call(arguments, SuperClass.prototype.constructor);
	
		        calledConstructor = DecoratorClass.prototype.constructor;
		      }
	
		      calledConstructor.apply(this, arguments);
		    }
	
		    DecoratorClass.displayName = SuperClass.displayName;
	
		    function ctr () {
		      this.constructor = DecoratedClass;
		    }
	
		    DecoratedClass.prototype = new ctr();
	
		    for (var m = 0; m < superMethods.length; m++) {
		        var superMethod = superMethods[m];
	
		        DecoratedClass.prototype[superMethod] =
		          SuperClass.prototype[superMethod];
		    }
	
		    var calledMethod = function (methodName) {
		      // Stub out the original method if it's not decorating an actual method
		      var originalMethod = function () {};
	
		      if (methodName in DecoratedClass.prototype) {
		        originalMethod = DecoratedClass.prototype[methodName];
		      }
	
		      var decoratedMethod = DecoratorClass.prototype[methodName];
	
		      return function () {
		        var unshift = Array.prototype.unshift;
	
		        unshift.call(arguments, originalMethod);
	
		        return decoratedMethod.apply(this, arguments);
		      };
		    };
	
		    for (var d = 0; d < decoratedMethods.length; d++) {
		      var decoratedMethod = decoratedMethods[d];
	
		      DecoratedClass.prototype[decoratedMethod] = calledMethod(decoratedMethod);
		    }
	
		    return DecoratedClass;
		  };
	
		  var Observable = function () {
		    this.listeners = {};
		  };
	
		  Observable.prototype.on = function (event, callback) {
		    this.listeners = this.listeners || {};
	
		    if (event in this.listeners) {
		      this.listeners[event].push(callback);
		    } else {
		      this.listeners[event] = [callback];
		    }
		  };
	
		  Observable.prototype.trigger = function (event) {
		    var slice = Array.prototype.slice;
		    var params = slice.call(arguments, 1);
	
		    this.listeners = this.listeners || {};
	
		    // Params should always come in as an array
		    if (params == null) {
		      params = [];
		    }
	
		    // If there are no arguments to the event, use a temporary object
		    if (params.length === 0) {
		      params.push({});
		    }
	
		    // Set the `_type` of the first object to the event
		    params[0]._type = event;
	
		    if (event in this.listeners) {
		      this.invoke(this.listeners[event], slice.call(arguments, 1));
		    }
	
		    if ('*' in this.listeners) {
		      this.invoke(this.listeners['*'], arguments);
		    }
		  };
	
		  Observable.prototype.invoke = function (listeners, params) {
		    for (var i = 0, len = listeners.length; i < len; i++) {
		      listeners[i].apply(this, params);
		    }
		  };
	
		  Utils.Observable = Observable;
	
		  Utils.generateChars = function (length) {
		    var chars = '';
	
		    for (var i = 0; i < length; i++) {
		      var randomChar = Math.floor(Math.random() * 36);
		      chars += randomChar.toString(36);
		    }
	
		    return chars;
		  };
	
		  Utils.bind = function (func, context) {
		    return function () {
		      func.apply(context, arguments);
		    };
		  };
	
		  Utils._convertData = function (data) {
		    for (var originalKey in data) {
		      var keys = originalKey.split('-');
	
		      var dataLevel = data;
	
		      if (keys.length === 1) {
		        continue;
		      }
	
		      for (var k = 0; k < keys.length; k++) {
		        var key = keys[k];
	
		        // Lowercase the first letter
		        // By default, dash-separated becomes camelCase
		        key = key.substring(0, 1).toLowerCase() + key.substring(1);
	
		        if (!(key in dataLevel)) {
		          dataLevel[key] = {};
		        }
	
		        if (k == keys.length - 1) {
		          dataLevel[key] = data[originalKey];
		        }
	
		        dataLevel = dataLevel[key];
		      }
	
		      delete data[originalKey];
		    }
	
		    return data;
		  };
	
		  Utils.hasScroll = function (index, el) {
		    // Adapted from the function created by @ShadowScripter
		    // and adapted by @BillBarry on the Stack Exchange Code Review website.
		    // The original code can be found at
		    // http://codereview.stackexchange.com/q/13338
		    // and was designed to be used with the Sizzle selector engine.
	
		    var $el = $(el);
		    var overflowX = el.style.overflowX;
		    var overflowY = el.style.overflowY;
	
		    //Check both x and y declarations
		    if (overflowX === overflowY &&
		        (overflowY === 'hidden' || overflowY === 'visible')) {
		      return false;
		    }
	
		    if (overflowX === 'scroll' || overflowY === 'scroll') {
		      return true;
		    }
	
		    return ($el.innerHeight() < el.scrollHeight ||
		      $el.innerWidth() < el.scrollWidth);
		  };
	
		  Utils.escapeMarkup = function (markup) {
		    var replaceMap = {
		      '\\': '&#92;',
		      '&': '&amp;',
		      '<': '&lt;',
		      '>': '&gt;',
		      '"': '&quot;',
		      '\'': '&#39;',
		      '/': '&#47;'
		    };
	
		    // Do not try to escape the markup if it's not a string
		    if (typeof markup !== 'string') {
		      return markup;
		    }
	
		    return String(markup).replace(/[&<>"'\/\\]/g, function (match) {
		      return replaceMap[match];
		    });
		  };
	
		  // Append an array of jQuery nodes to a given element.
		  Utils.appendMany = function ($element, $nodes) {
		    // jQuery 1.7.x does not support $.fn.append() with an array
		    // Fall back to a jQuery object collection using $.fn.add()
		    if ($.fn.jquery.substr(0, 3) === '1.7') {
		      var $jqNodes = $();
	
		      $.map($nodes, function (node) {
		        $jqNodes = $jqNodes.add(node);
		      });
	
		      $nodes = $jqNodes;
		    }
	
		    $element.append($nodes);
		  };
	
		  return Utils;
		});
	
		S2.define('select2/results',[
		  'jquery',
		  './utils'
		], function ($, Utils) {
		  function Results ($element, options, dataAdapter) {
		    this.$element = $element;
		    this.data = dataAdapter;
		    this.options = options;
	
		    Results.__super__.constructor.call(this);
		  }
	
		  Utils.Extend(Results, Utils.Observable);
	
		  Results.prototype.render = function () {
		    var $results = $(
		      '<ul class="select2-results__options" role="tree"></ul>'
		    );
	
		    if (this.options.get('multiple')) {
		      $results.attr('aria-multiselectable', 'true');
		    }
	
		    this.$results = $results;
	
		    return $results;
		  };
	
		  Results.prototype.clear = function () {
		    this.$results.empty();
		  };
	
		  Results.prototype.displayMessage = function (params) {
		    var escapeMarkup = this.options.get('escapeMarkup');
	
		    this.clear();
		    this.hideLoading();
	
		    var $message = $(
		      '<li role="treeitem" aria-live="assertive"' +
		      ' class="select2-results__option"></li>'
		    );
	
		    var message = this.options.get('translations').get(params.message);
	
		    $message.append(
		      escapeMarkup(
		        message(params.args)
		      )
		    );
	
		    $message[0].className += ' select2-results__message';
	
		    this.$results.append($message);
		  };
	
		  Results.prototype.hideMessages = function () {
		    this.$results.find('.select2-results__message').remove();
		  };
	
		  Results.prototype.append = function (data) {
		    this.hideLoading();
	
		    var $options = [];
	
		    if (data.results == null || data.results.length === 0) {
		      if (this.$results.children().length === 0) {
		        this.trigger('results:message', {
		          message: 'noResults'
		        });
		      }
	
		      return;
		    }
	
		    data.results = this.sort(data.results);
	
		    for (var d = 0; d < data.results.length; d++) {
		      var item = data.results[d];
	
		      var $option = this.option(item);
	
		      $options.push($option);
		    }
	
		    this.$results.append($options);
		  };
	
		  Results.prototype.position = function ($results, $dropdown) {
		    var $resultsContainer = $dropdown.find('.select2-results');
		    $resultsContainer.append($results);
		  };
	
		  Results.prototype.sort = function (data) {
		    var sorter = this.options.get('sorter');
	
		    return sorter(data);
		  };
	
		  Results.prototype.highlightFirstItem = function () {
		    var $options = this.$results
		      .find('.select2-results__option[aria-selected]');
	
		    var $selected = $options.filter('[aria-selected=true]');
	
		    // Check if there are any selected options
		    if ($selected.length > 0) {
		      // If there are selected options, highlight the first
		      $selected.first().trigger('mouseenter');
		    } else {
		      // If there are no selected options, highlight the first option
		      // in the dropdown
		      $options.first().trigger('mouseenter');
		    }
	
		    this.ensureHighlightVisible();
		  };
	
		  Results.prototype.setClasses = function () {
		    var self = this;
	
		    this.data.current(function (selected) {
		      var selectedIds = $.map(selected, function (s) {
		        return s.id.toString();
		      });
	
		      var $options = self.$results
		        .find('.select2-results__option[aria-selected]');
	
		      $options.each(function () {
		        var $option = $(this);
	
		        var item = $.data(this, 'data');
	
		        // id needs to be converted to a string when comparing
		        var id = '' + item.id;
	
		        if ((item.element != null && item.element.selected) ||
		            (item.element == null && $.inArray(id, selectedIds) > -1)) {
		          $option.attr('aria-selected', 'true');
		        } else {
		          $option.attr('aria-selected', 'false');
		        }
		      });
	
		    });
		  };
	
		  Results.prototype.showLoading = function (params) {
		    this.hideLoading();
	
		    var loadingMore = this.options.get('translations').get('searching');
	
		    var loading = {
		      disabled: true,
		      loading: true,
		      text: loadingMore(params)
		    };
		    var $loading = this.option(loading);
		    $loading.className += ' loading-results';
	
		    this.$results.prepend($loading);
		  };
	
		  Results.prototype.hideLoading = function () {
		    this.$results.find('.loading-results').remove();
		  };
	
		  Results.prototype.option = function (data) {
		    var option = document.createElement('li');
		    option.className = 'select2-results__option';
	
		    var attrs = {
		      'role': 'treeitem',
		      'aria-selected': 'false'
		    };
	
		    if (data.disabled) {
		      delete attrs['aria-selected'];
		      attrs['aria-disabled'] = 'true';
		    }
	
		    if (data.id == null) {
		      delete attrs['aria-selected'];
		    }
	
		    if (data._resultId != null) {
		      option.id = data._resultId;
		    }
	
		    if (data.title) {
		      option.title = data.title;
		    }
	
		    if (data.children) {
		      attrs.role = 'group';
		      attrs['aria-label'] = data.text;
		      delete attrs['aria-selected'];
		    }
	
		    for (var attr in attrs) {
		      var val = attrs[attr];
	
		      option.setAttribute(attr, val);
		    }
	
		    if (data.children) {
		      var $option = $(option);
	
		      var label = document.createElement('strong');
		      label.className = 'select2-results__group';
	
		      var $label = $(label);
		      this.template(data, label);
	
		      var $children = [];
	
		      for (var c = 0; c < data.children.length; c++) {
		        var child = data.children[c];
	
		        var $child = this.option(child);
	
		        $children.push($child);
		      }
	
		      var $childrenContainer = $('<ul></ul>', {
		        'class': 'select2-results__options select2-results__options--nested'
		      });
	
		      $childrenContainer.append($children);
	
		      $option.append(label);
		      $option.append($childrenContainer);
		    } else {
		      this.template(data, option);
		    }
	
		    $.data(option, 'data', data);
	
		    return option;
		  };
	
		  Results.prototype.bind = function (container, $container) {
		    var self = this;
	
		    var id = container.id + '-results';
	
		    this.$results.attr('id', id);
	
		    container.on('results:all', function (params) {
		      self.clear();
		      self.append(params.data);
	
		      if (container.isOpen()) {
		        self.setClasses();
		        self.highlightFirstItem();
		      }
		    });
	
		    container.on('results:append', function (params) {
		      self.append(params.data);
	
		      if (container.isOpen()) {
		        self.setClasses();
		      }
		    });
	
		    container.on('query', function (params) {
		      self.hideMessages();
		      self.showLoading(params);
		    });
	
		    container.on('select', function () {
		      if (!container.isOpen()) {
		        return;
		      }
	
		      self.setClasses();
		      self.highlightFirstItem();
		    });
	
		    container.on('unselect', function () {
		      if (!container.isOpen()) {
		        return;
		      }
	
		      self.setClasses();
		      self.highlightFirstItem();
		    });
	
		    container.on('open', function () {
		      // When the dropdown is open, aria-expended="true"
		      self.$results.attr('aria-expanded', 'true');
		      self.$results.attr('aria-hidden', 'false');
	
		      self.setClasses();
		      self.ensureHighlightVisible();
		    });
	
		    container.on('close', function () {
		      // When the dropdown is closed, aria-expended="false"
		      self.$results.attr('aria-expanded', 'false');
		      self.$results.attr('aria-hidden', 'true');
		      self.$results.removeAttr('aria-activedescendant');
		    });
	
		    container.on('results:toggle', function () {
		      var $highlighted = self.getHighlightedResults();
	
		      if ($highlighted.length === 0) {
		        return;
		      }
	
		      $highlighted.trigger('mouseup');
		    });
	
		    container.on('results:select', function () {
		      var $highlighted = self.getHighlightedResults();
	
		      if ($highlighted.length === 0) {
		        return;
		      }
	
		      var data = $highlighted.data('data');
	
		      if ($highlighted.attr('aria-selected') == 'true') {
		        self.trigger('close', {});
		      } else {
		        self.trigger('select', {
		          data: data
		        });
		      }
		    });
	
		    container.on('results:previous', function () {
		      var $highlighted = self.getHighlightedResults();
	
		      var $options = self.$results.find('[aria-selected]');
	
		      var currentIndex = $options.index($highlighted);
	
		      // If we are already at te top, don't move further
		      if (currentIndex === 0) {
		        return;
		      }
	
		      var nextIndex = currentIndex - 1;
	
		      // If none are highlighted, highlight the first
		      if ($highlighted.length === 0) {
		        nextIndex = 0;
		      }
	
		      var $next = $options.eq(nextIndex);
	
		      $next.trigger('mouseenter');
	
		      var currentOffset = self.$results.offset().top;
		      var nextTop = $next.offset().top;
		      var nextOffset = self.$results.scrollTop() + (nextTop - currentOffset);
	
		      if (nextIndex === 0) {
		        self.$results.scrollTop(0);
		      } else if (nextTop - currentOffset < 0) {
		        self.$results.scrollTop(nextOffset);
		      }
		    });
	
		    container.on('results:next', function () {
		      var $highlighted = self.getHighlightedResults();
	
		      var $options = self.$results.find('[aria-selected]');
	
		      var currentIndex = $options.index($highlighted);
	
		      var nextIndex = currentIndex + 1;
	
		      // If we are at the last option, stay there
		      if (nextIndex >= $options.length) {
		        return;
		      }
	
		      var $next = $options.eq(nextIndex);
	
		      $next.trigger('mouseenter');
	
		      var currentOffset = self.$results.offset().top +
		        self.$results.outerHeight(false);
		      var nextBottom = $next.offset().top + $next.outerHeight(false);
		      var nextOffset = self.$results.scrollTop() + nextBottom - currentOffset;
	
		      if (nextIndex === 0) {
		        self.$results.scrollTop(0);
		      } else if (nextBottom > currentOffset) {
		        self.$results.scrollTop(nextOffset);
		      }
		    });
	
		    container.on('results:focus', function (params) {
		      params.element.addClass('select2-results__option--highlighted');
		    });
	
		    container.on('results:message', function (params) {
		      self.displayMessage(params);
		    });
	
		    if ($.fn.mousewheel) {
		      this.$results.on('mousewheel', function (e) {
		        var top = self.$results.scrollTop();
	
		        var bottom = self.$results.get(0).scrollHeight - top + e.deltaY;
	
		        var isAtTop = e.deltaY > 0 && top - e.deltaY <= 0;
		        var isAtBottom = e.deltaY < 0 && bottom <= self.$results.height();
	
		        if (isAtTop) {
		          self.$results.scrollTop(0);
	
		          e.preventDefault();
		          e.stopPropagation();
		        } else if (isAtBottom) {
		          self.$results.scrollTop(
		            self.$results.get(0).scrollHeight - self.$results.height()
		          );
	
		          e.preventDefault();
		          e.stopPropagation();
		        }
		      });
		    }
	
		    this.$results.on('mouseup', '.select2-results__option[aria-selected]',
		      function (evt) {
		      var $this = $(this);
	
		      var data = $this.data('data');
	
		      if ($this.attr('aria-selected') === 'true') {
		        if (self.options.get('multiple')) {
		          self.trigger('unselect', {
		            originalEvent: evt,
		            data: data
		          });
		        } else {
		          self.trigger('close', {});
		        }
	
		        return;
		      }
	
		      self.trigger('select', {
		        originalEvent: evt,
		        data: data
		      });
		    });
	
		    this.$results.on('mouseenter', '.select2-results__option[aria-selected]',
		      function (evt) {
		      var data = $(this).data('data');
	
		      self.getHighlightedResults()
		          .removeClass('select2-results__option--highlighted');
	
		      self.trigger('results:focus', {
		        data: data,
		        element: $(this)
		      });
		    });
		  };
	
		  Results.prototype.getHighlightedResults = function () {
		    var $highlighted = this.$results
		    .find('.select2-results__option--highlighted');
	
		    return $highlighted;
		  };
	
		  Results.prototype.destroy = function () {
		    this.$results.remove();
		  };
	
		  Results.prototype.ensureHighlightVisible = function () {
		    var $highlighted = this.getHighlightedResults();
	
		    if ($highlighted.length === 0) {
		      return;
		    }
	
		    var $options = this.$results.find('[aria-selected]');
	
		    var currentIndex = $options.index($highlighted);
	
		    var currentOffset = this.$results.offset().top;
		    var nextTop = $highlighted.offset().top;
		    var nextOffset = this.$results.scrollTop() + (nextTop - currentOffset);
	
		    var offsetDelta = nextTop - currentOffset;
		    nextOffset -= $highlighted.outerHeight(false) * 2;
	
		    if (currentIndex <= 2) {
		      this.$results.scrollTop(0);
		    } else if (offsetDelta > this.$results.outerHeight() || offsetDelta < 0) {
		      this.$results.scrollTop(nextOffset);
		    }
		  };
	
		  Results.prototype.template = function (result, container) {
		    var template = this.options.get('templateResult');
		    var escapeMarkup = this.options.get('escapeMarkup');
	
		    var content = template(result, container);
	
		    if (content == null) {
		      container.style.display = 'none';
		    } else if (typeof content === 'string') {
		      container.innerHTML = escapeMarkup(content);
		    } else {
		      $(container).append(content);
		    }
		  };
	
		  return Results;
		});
	
		S2.define('select2/keys',[
	
		], function () {
		  var KEYS = {
		    BACKSPACE: 8,
		    TAB: 9,
		    ENTER: 13,
		    SHIFT: 16,
		    CTRL: 17,
		    ALT: 18,
		    ESC: 27,
		    SPACE: 32,
		    PAGE_UP: 33,
		    PAGE_DOWN: 34,
		    END: 35,
		    HOME: 36,
		    LEFT: 37,
		    UP: 38,
		    RIGHT: 39,
		    DOWN: 40,
		    DELETE: 46
		  };
	
		  return KEYS;
		});
	
		S2.define('select2/selection/base',[
		  'jquery',
		  '../utils',
		  '../keys'
		], function ($, Utils, KEYS) {
		  function BaseSelection ($element, options) {
		    this.$element = $element;
		    this.options = options;
	
		    BaseSelection.__super__.constructor.call(this);
		  }
	
		  Utils.Extend(BaseSelection, Utils.Observable);
	
		  BaseSelection.prototype.render = function () {
		    var $selection = $(
		      '<span class="select2-selection" role="combobox" ' +
		      ' aria-haspopup="true" aria-expanded="false">' +
		      '</span>'
		    );
	
		    this._tabindex = 0;
	
		    if (this.$element.data('old-tabindex') != null) {
		      this._tabindex = this.$element.data('old-tabindex');
		    } else if (this.$element.attr('tabindex') != null) {
		      this._tabindex = this.$element.attr('tabindex');
		    }
	
		    $selection.attr('title', this.$element.attr('title'));
		    $selection.attr('tabindex', this._tabindex);
	
		    this.$selection = $selection;
	
		    return $selection;
		  };
	
		  BaseSelection.prototype.bind = function (container, $container) {
		    var self = this;
	
		    var id = container.id + '-container';
		    var resultsId = container.id + '-results';
	
		    this.container = container;
	
		    this.$selection.on('focus', function (evt) {
		      self.trigger('focus', evt);
		    });
	
		    this.$selection.on('blur', function (evt) {
		      self._handleBlur(evt);
		    });
	
		    this.$selection.on('keydown', function (evt) {
		      self.trigger('keypress', evt);
	
		      if (evt.which === KEYS.SPACE) {
		        evt.preventDefault();
		      }
		    });
	
		    container.on('results:focus', function (params) {
		      self.$selection.attr('aria-activedescendant', params.data._resultId);
		    });
	
		    container.on('selection:update', function (params) {
		      self.update(params.data);
		    });
	
		    container.on('open', function () {
		      // When the dropdown is open, aria-expanded="true"
		      self.$selection.attr('aria-expanded', 'true');
		      self.$selection.attr('aria-owns', resultsId);
	
		      self._attachCloseHandler(container);
		    });
	
		    container.on('close', function () {
		      // When the dropdown is closed, aria-expanded="false"
		      self.$selection.attr('aria-expanded', 'false');
		      self.$selection.removeAttr('aria-activedescendant');
		      self.$selection.removeAttr('aria-owns');
	
		      self.$selection.focus();
	
		      self._detachCloseHandler(container);
		    });
	
		    container.on('enable', function () {
		      self.$selection.attr('tabindex', self._tabindex);
		    });
	
		    container.on('disable', function () {
		      self.$selection.attr('tabindex', '-1');
		    });
		  };
	
		  BaseSelection.prototype._handleBlur = function (evt) {
		    var self = this;
	
		    // This needs to be delayed as the active element is the body when the tab
		    // key is pressed, possibly along with others.
		    window.setTimeout(function () {
		      // Don't trigger `blur` if the focus is still in the selection
		      if (
		        (document.activeElement == self.$selection[0]) ||
		        ($.contains(self.$selection[0], document.activeElement))
		      ) {
		        return;
		      }
	
		      self.trigger('blur', evt);
		    }, 1);
		  };
	
		  BaseSelection.prototype._attachCloseHandler = function (container) {
		    var self = this;
	
		    $(document.body).on('mousedown.select2.' + container.id, function (e) {
		      var $target = $(e.target);
	
		      var $select = $target.closest('.select2');
	
		      var $all = $('.select2.select2-container--open');
	
		      $all.each(function () {
		        var $this = $(this);
	
		        if (this == $select[0]) {
		          return;
		        }
	
		        var $element = $this.data('element');
	
		        $element.select2('close');
		      });
		    });
		  };
	
		  BaseSelection.prototype._detachCloseHandler = function (container) {
		    $(document.body).off('mousedown.select2.' + container.id);
		  };
	
		  BaseSelection.prototype.position = function ($selection, $container) {
		    var $selectionContainer = $container.find('.selection');
		    $selectionContainer.append($selection);
		  };
	
		  BaseSelection.prototype.destroy = function () {
		    this._detachCloseHandler(this.container);
		  };
	
		  BaseSelection.prototype.update = function (data) {
		    throw new Error('The `update` method must be defined in child classes.');
		  };
	
		  return BaseSelection;
		});
	
		S2.define('select2/selection/single',[
		  'jquery',
		  './base',
		  '../utils',
		  '../keys'
		], function ($, BaseSelection, Utils, KEYS) {
		  function SingleSelection () {
		    SingleSelection.__super__.constructor.apply(this, arguments);
		  }
	
		  Utils.Extend(SingleSelection, BaseSelection);
	
		  SingleSelection.prototype.render = function () {
		    var $selection = SingleSelection.__super__.render.call(this);
	
		    $selection.addClass('select2-selection--single');
	
		    $selection.html(
		      '<span class="select2-selection__rendered"></span>' +
		      '<span class="select2-selection__arrow" role="presentation">' +
		        '<b role="presentation"></b>' +
		      '</span>'
		    );
	
		    return $selection;
		  };
	
		  SingleSelection.prototype.bind = function (container, $container) {
		    var self = this;
	
		    SingleSelection.__super__.bind.apply(this, arguments);
	
		    var id = container.id + '-container';
	
		    this.$selection.find('.select2-selection__rendered').attr('id', id);
		    this.$selection.attr('aria-labelledby', id);
	
		    this.$selection.on('mousedown', function (evt) {
		      // Only respond to left clicks
		      if (evt.which !== 1) {
		        return;
		      }
	
		      self.trigger('toggle', {
		        originalEvent: evt
		      });
		    });
	
		    this.$selection.on('focus', function (evt) {
		      // User focuses on the container
		    });
	
		    this.$selection.on('blur', function (evt) {
		      // User exits the container
		    });
	
		    container.on('focus', function (evt) {
		      if (!container.isOpen()) {
		        self.$selection.focus();
		      }
		    });
	
		    container.on('selection:update', function (params) {
		      self.update(params.data);
		    });
		  };
	
		  SingleSelection.prototype.clear = function () {
		    this.$selection.find('.select2-selection__rendered').empty();
		  };
	
		  SingleSelection.prototype.display = function (data, container) {
		    var template = this.options.get('templateSelection');
		    var escapeMarkup = this.options.get('escapeMarkup');
	
		    return escapeMarkup(template(data, container));
		  };
	
		  SingleSelection.prototype.selectionContainer = function () {
		    return $('<span></span>');
		  };
	
		  SingleSelection.prototype.update = function (data) {
		    if (data.length === 0) {
		      this.clear();
		      return;
		    }
	
		    var selection = data[0];
	
		    var $rendered = this.$selection.find('.select2-selection__rendered');
		    var formatted = this.display(selection, $rendered);
	
		    $rendered.empty().append(formatted);
		    $rendered.prop('title', selection.title || selection.text);
		  };
	
		  return SingleSelection;
		});
	
		S2.define('select2/selection/multiple',[
		  'jquery',
		  './base',
		  '../utils'
		], function ($, BaseSelection, Utils) {
		  function MultipleSelection ($element, options) {
		    MultipleSelection.__super__.constructor.apply(this, arguments);
		  }
	
		  Utils.Extend(MultipleSelection, BaseSelection);
	
		  MultipleSelection.prototype.render = function () {
		    var $selection = MultipleSelection.__super__.render.call(this);
	
		    $selection.addClass('select2-selection--multiple');
	
		    $selection.html(
		      '<ul class="select2-selection__rendered"></ul>'
		    );
	
		    return $selection;
		  };
	
		  MultipleSelection.prototype.bind = function (container, $container) {
		    var self = this;
	
		    MultipleSelection.__super__.bind.apply(this, arguments);
	
		    this.$selection.on('click', function (evt) {
		      self.trigger('toggle', {
		        originalEvent: evt
		      });
		    });
	
		    this.$selection.on(
		      'click',
		      '.select2-selection__choice__remove',
		      function (evt) {
		        // Ignore the event if it is disabled
		        if (self.options.get('disabled')) {
		          return;
		        }
	
		        var $remove = $(this);
		        var $selection = $remove.parent();
	
		        var data = $selection.data('data');
	
		        self.trigger('unselect', {
		          originalEvent: evt,
		          data: data
		        });
		      }
		    );
		  };
	
		  MultipleSelection.prototype.clear = function () {
		    this.$selection.find('.select2-selection__rendered').empty();
		  };
	
		  MultipleSelection.prototype.display = function (data, container) {
		    var template = this.options.get('templateSelection');
		    var escapeMarkup = this.options.get('escapeMarkup');
	
		    return escapeMarkup(template(data, container));
		  };
	
		  MultipleSelection.prototype.selectionContainer = function () {
		    var $container = $(
		      '<li class="select2-selection__choice">' +
		        '<span class="select2-selection__choice__remove" role="presentation">' +
		          '&times;' +
		        '</span>' +
		      '</li>'
		    );
	
		    return $container;
		  };
	
		  MultipleSelection.prototype.update = function (data) {
		    this.clear();
	
		    if (data.length === 0) {
		      return;
		    }
	
		    var $selections = [];
	
		    for (var d = 0; d < data.length; d++) {
		      var selection = data[d];
	
		      var $selection = this.selectionContainer();
		      var formatted = this.display(selection, $selection);
	
		      $selection.append(formatted);
		      $selection.prop('title', selection.title || selection.text);
	
		      $selection.data('data', selection);
	
		      $selections.push($selection);
		    }
	
		    var $rendered = this.$selection.find('.select2-selection__rendered');
	
		    Utils.appendMany($rendered, $selections);
		  };
	
		  return MultipleSelection;
		});
	
		S2.define('select2/selection/placeholder',[
		  '../utils'
		], function (Utils) {
		  function Placeholder (decorated, $element, options) {
		    this.placeholder = this.normalizePlaceholder(options.get('placeholder'));
	
		    decorated.call(this, $element, options);
		  }
	
		  Placeholder.prototype.normalizePlaceholder = function (_, placeholder) {
		    if (typeof placeholder === 'string') {
		      placeholder = {
		        id: '',
		        text: placeholder
		      };
		    }
	
		    return placeholder;
		  };
	
		  Placeholder.prototype.createPlaceholder = function (decorated, placeholder) {
		    var $placeholder = this.selectionContainer();
	
		    $placeholder.html(this.display(placeholder));
		    $placeholder.addClass('select2-selection__placeholder')
		                .removeClass('select2-selection__choice');
	
		    return $placeholder;
		  };
	
		  Placeholder.prototype.update = function (decorated, data) {
		    var singlePlaceholder = (
		      data.length == 1 && data[0].id != this.placeholder.id
		    );
		    var multipleSelections = data.length > 1;
	
		    if (multipleSelections || singlePlaceholder) {
		      return decorated.call(this, data);
		    }
	
		    this.clear();
	
		    var $placeholder = this.createPlaceholder(this.placeholder);
	
		    this.$selection.find('.select2-selection__rendered').append($placeholder);
		  };
	
		  return Placeholder;
		});
	
		S2.define('select2/selection/allowClear',[
		  'jquery',
		  '../keys'
		], function ($, KEYS) {
		  function AllowClear () { }
	
		  AllowClear.prototype.bind = function (decorated, container, $container) {
		    var self = this;
	
		    decorated.call(this, container, $container);
	
		    if (this.placeholder == null) {
		      if (this.options.get('debug') && window.console && console.error) {
		        console.error(
		          'Select2: The `allowClear` option should be used in combination ' +
		          'with the `placeholder` option.'
		        );
		      }
		    }
	
		    this.$selection.on('mousedown', '.select2-selection__clear',
		      function (evt) {
		        self._handleClear(evt);
		    });
	
		    container.on('keypress', function (evt) {
		      self._handleKeyboardClear(evt, container);
		    });
		  };
	
		  AllowClear.prototype._handleClear = function (_, evt) {
		    // Ignore the event if it is disabled
		    if (this.options.get('disabled')) {
		      return;
		    }
	
		    var $clear = this.$selection.find('.select2-selection__clear');
	
		    // Ignore the event if nothing has been selected
		    if ($clear.length === 0) {
		      return;
		    }
	
		    evt.stopPropagation();
	
		    var data = $clear.data('data');
	
		    for (var d = 0; d < data.length; d++) {
		      var unselectData = {
		        data: data[d]
		      };
	
		      // Trigger the `unselect` event, so people can prevent it from being
		      // cleared.
		      this.trigger('unselect', unselectData);
	
		      // If the event was prevented, don't clear it out.
		      if (unselectData.prevented) {
		        return;
		      }
		    }
	
		    this.$element.val(this.placeholder.id).trigger('change');
	
		    this.trigger('toggle', {});
		  };
	
		  AllowClear.prototype._handleKeyboardClear = function (_, evt, container) {
		    if (container.isOpen()) {
		      return;
		    }
	
		    if (evt.which == KEYS.DELETE || evt.which == KEYS.BACKSPACE) {
		      this._handleClear(evt);
		    }
		  };
	
		  AllowClear.prototype.update = function (decorated, data) {
		    decorated.call(this, data);
	
		    if (this.$selection.find('.select2-selection__placeholder').length > 0 ||
		        data.length === 0) {
		      return;
		    }
	
		    var $remove = $(
		      '<span class="select2-selection__clear">' +
		        '&times;' +
		      '</span>'
		    );
		    $remove.data('data', data);
	
		    this.$selection.find('.select2-selection__rendered').prepend($remove);
		  };
	
		  return AllowClear;
		});
	
		S2.define('select2/selection/search',[
		  'jquery',
		  '../utils',
		  '../keys'
		], function ($, Utils, KEYS) {
		  function Search (decorated, $element, options) {
		    decorated.call(this, $element, options);
		  }
	
		  Search.prototype.render = function (decorated) {
		    var $search = $(
		      '<li class="select2-search select2-search--inline">' +
		        '<input class="select2-search__field" type="search" tabindex="-1"' +
		        ' autocomplete="off" autocorrect="off" autocapitalize="off"' +
		        ' spellcheck="false" role="textbox" aria-autocomplete="list" />' +
		      '</li>'
		    );
	
		    this.$searchContainer = $search;
		    this.$search = $search.find('input');
	
		    var $rendered = decorated.call(this);
	
		    this._transferTabIndex();
	
		    return $rendered;
		  };
	
		  Search.prototype.bind = function (decorated, container, $container) {
		    var self = this;
	
		    decorated.call(this, container, $container);
	
		    container.on('open', function () {
		      self.$search.trigger('focus');
		    });
	
		    container.on('close', function () {
		      self.$search.val('');
		      self.$search.removeAttr('aria-activedescendant');
		      self.$search.trigger('focus');
		    });
	
		    container.on('enable', function () {
		      self.$search.prop('disabled', false);
	
		      self._transferTabIndex();
		    });
	
		    container.on('disable', function () {
		      self.$search.prop('disabled', true);
		    });
	
		    container.on('focus', function (evt) {
		      self.$search.trigger('focus');
		    });
	
		    container.on('results:focus', function (params) {
		      self.$search.attr('aria-activedescendant', params.id);
		    });
	
		    this.$selection.on('focusin', '.select2-search--inline', function (evt) {
		      self.trigger('focus', evt);
		    });
	
		    this.$selection.on('focusout', '.select2-search--inline', function (evt) {
		      self._handleBlur(evt);
		    });
	
		    this.$selection.on('keydown', '.select2-search--inline', function (evt) {
		      evt.stopPropagation();
	
		      self.trigger('keypress', evt);
	
		      self._keyUpPrevented = evt.isDefaultPrevented();
	
		      var key = evt.which;
	
		      if (key === KEYS.BACKSPACE && self.$search.val() === '') {
		        var $previousChoice = self.$searchContainer
		          .prev('.select2-selection__choice');
	
		        if ($previousChoice.length > 0) {
		          var item = $previousChoice.data('data');
	
		          self.searchRemoveChoice(item);
	
		          evt.preventDefault();
		        }
		      }
		    });
	
		    // Try to detect the IE version should the `documentMode` property that
		    // is stored on the document. This is only implemented in IE and is
		    // slightly cleaner than doing a user agent check.
		    // This property is not available in Edge, but Edge also doesn't have
		    // this bug.
		    var msie = document.documentMode;
		    var disableInputEvents = msie && msie <= 11;
	
		    // Workaround for browsers which do not support the `input` event
		    // This will prevent double-triggering of events for browsers which support
		    // both the `keyup` and `input` events.
		    this.$selection.on(
		      'input.searchcheck',
		      '.select2-search--inline',
		      function (evt) {
		        // IE will trigger the `input` event when a placeholder is used on a
		        // search box. To get around this issue, we are forced to ignore all
		        // `input` events in IE and keep using `keyup`.
		        if (disableInputEvents) {
		          self.$selection.off('input.search input.searchcheck');
		          return;
		        }
	
		        // Unbind the duplicated `keyup` event
		        self.$selection.off('keyup.search');
		      }
		    );
	
		    this.$selection.on(
		      'keyup.search input.search',
		      '.select2-search--inline',
		      function (evt) {
		        // IE will trigger the `input` event when a placeholder is used on a
		        // search box. To get around this issue, we are forced to ignore all
		        // `input` events in IE and keep using `keyup`.
		        if (disableInputEvents && evt.type === 'input') {
		          self.$selection.off('input.search input.searchcheck');
		          return;
		        }
	
		        var key = evt.which;
	
		        // We can freely ignore events from modifier keys
		        if (key == KEYS.SHIFT || key == KEYS.CTRL || key == KEYS.ALT) {
		          return;
		        }
	
		        // Tabbing will be handled during the `keydown` phase
		        if (key == KEYS.TAB) {
		          return;
		        }
	
		        self.handleSearch(evt);
		      }
		    );
		  };
	
		  /**
		   * This method will transfer the tabindex attribute from the rendered
		   * selection to the search box. This allows for the search box to be used as
		   * the primary focus instead of the selection container.
		   *
		   * @private
		   */
		  Search.prototype._transferTabIndex = function (decorated) {
		    this.$search.attr('tabindex', this.$selection.attr('tabindex'));
		    this.$selection.attr('tabindex', '-1');
		  };
	
		  Search.prototype.createPlaceholder = function (decorated, placeholder) {
		    this.$search.attr('placeholder', placeholder.text);
		  };
	
		  Search.prototype.update = function (decorated, data) {
		    var searchHadFocus = this.$search[0] == document.activeElement;
	
		    this.$search.attr('placeholder', '');
	
		    decorated.call(this, data);
	
		    this.$selection.find('.select2-selection__rendered')
		                   .append(this.$searchContainer);
	
		    this.resizeSearch();
		    if (searchHadFocus) {
		      this.$search.focus();
		    }
		  };
	
		  Search.prototype.handleSearch = function () {
		    this.resizeSearch();
	
		    if (!this._keyUpPrevented) {
		      var input = this.$search.val();
	
		      this.trigger('query', {
		        term: input
		      });
		    }
	
		    this._keyUpPrevented = false;
		  };
	
		  Search.prototype.searchRemoveChoice = function (decorated, item) {
		    this.trigger('unselect', {
		      data: item
		    });
	
		    this.$search.val(item.text);
		    this.handleSearch();
		  };
	
		  Search.prototype.resizeSearch = function () {
		    this.$search.css('width', '25px');
	
		    var width = '';
	
		    if (this.$search.attr('placeholder') !== '') {
		      width = this.$selection.find('.select2-selection__rendered').innerWidth();
		    } else {
		      var minimumWidth = this.$search.val().length + 1;
	
		      width = (minimumWidth * 0.75) + 'em';
		    }
	
		    this.$search.css('width', width);
		  };
	
		  return Search;
		});
	
		S2.define('select2/selection/eventRelay',[
		  'jquery'
		], function ($) {
		  function EventRelay () { }
	
		  EventRelay.prototype.bind = function (decorated, container, $container) {
		    var self = this;
		    var relayEvents = [
		      'open', 'opening',
		      'close', 'closing',
		      'select', 'selecting',
		      'unselect', 'unselecting'
		    ];
	
		    var preventableEvents = ['opening', 'closing', 'selecting', 'unselecting'];
	
		    decorated.call(this, container, $container);
	
		    container.on('*', function (name, params) {
		      // Ignore events that should not be relayed
		      if ($.inArray(name, relayEvents) === -1) {
		        return;
		      }
	
		      // The parameters should always be an object
		      params = params || {};
	
		      // Generate the jQuery event for the Select2 event
		      var evt = $.Event('select2:' + name, {
		        params: params
		      });
	
		      self.$element.trigger(evt);
	
		      // Only handle preventable events if it was one
		      if ($.inArray(name, preventableEvents) === -1) {
		        return;
		      }
	
		      params.prevented = evt.isDefaultPrevented();
		    });
		  };
	
		  return EventRelay;
		});
	
		S2.define('select2/translation',[
		  'jquery',
		  'require'
		], function ($, require) {
		  function Translation (dict) {
		    this.dict = dict || {};
		  }
	
		  Translation.prototype.all = function () {
		    return this.dict;
		  };
	
		  Translation.prototype.get = function (key) {
		    return this.dict[key];
		  };
	
		  Translation.prototype.extend = function (translation) {
		    this.dict = $.extend({}, translation.all(), this.dict);
		  };
	
		  // Static functions
	
		  Translation._cache = {};
	
		  Translation.loadPath = function (path) {
		    if (!(path in Translation._cache)) {
		      var translations = require(path);
	
		      Translation._cache[path] = translations;
		    }
	
		    return new Translation(Translation._cache[path]);
		  };
	
		  return Translation;
		});
	
		S2.define('select2/diacritics',[
	
		], function () {
		  var diacritics = {
		    '\u24B6': 'A',
		    '\uFF21': 'A',
		    '\u00C0': 'A',
		    '\u00C1': 'A',
		    '\u00C2': 'A',
		    '\u1EA6': 'A',
		    '\u1EA4': 'A',
		    '\u1EAA': 'A',
		    '\u1EA8': 'A',
		    '\u00C3': 'A',
		    '\u0100': 'A',
		    '\u0102': 'A',
		    '\u1EB0': 'A',
		    '\u1EAE': 'A',
		    '\u1EB4': 'A',
		    '\u1EB2': 'A',
		    '\u0226': 'A',
		    '\u01E0': 'A',
		    '\u00C4': 'A',
		    '\u01DE': 'A',
		    '\u1EA2': 'A',
		    '\u00C5': 'A',
		    '\u01FA': 'A',
		    '\u01CD': 'A',
		    '\u0200': 'A',
		    '\u0202': 'A',
		    '\u1EA0': 'A',
		    '\u1EAC': 'A',
		    '\u1EB6': 'A',
		    '\u1E00': 'A',
		    '\u0104': 'A',
		    '\u023A': 'A',
		    '\u2C6F': 'A',
		    '\uA732': 'AA',
		    '\u00C6': 'AE',
		    '\u01FC': 'AE',
		    '\u01E2': 'AE',
		    '\uA734': 'AO',
		    '\uA736': 'AU',
		    '\uA738': 'AV',
		    '\uA73A': 'AV',
		    '\uA73C': 'AY',
		    '\u24B7': 'B',
		    '\uFF22': 'B',
		    '\u1E02': 'B',
		    '\u1E04': 'B',
		    '\u1E06': 'B',
		    '\u0243': 'B',
		    '\u0182': 'B',
		    '\u0181': 'B',
		    '\u24B8': 'C',
		    '\uFF23': 'C',
		    '\u0106': 'C',
		    '\u0108': 'C',
		    '\u010A': 'C',
		    '\u010C': 'C',
		    '\u00C7': 'C',
		    '\u1E08': 'C',
		    '\u0187': 'C',
		    '\u023B': 'C',
		    '\uA73E': 'C',
		    '\u24B9': 'D',
		    '\uFF24': 'D',
		    '\u1E0A': 'D',
		    '\u010E': 'D',
		    '\u1E0C': 'D',
		    '\u1E10': 'D',
		    '\u1E12': 'D',
		    '\u1E0E': 'D',
		    '\u0110': 'D',
		    '\u018B': 'D',
		    '\u018A': 'D',
		    '\u0189': 'D',
		    '\uA779': 'D',
		    '\u01F1': 'DZ',
		    '\u01C4': 'DZ',
		    '\u01F2': 'Dz',
		    '\u01C5': 'Dz',
		    '\u24BA': 'E',
		    '\uFF25': 'E',
		    '\u00C8': 'E',
		    '\u00C9': 'E',
		    '\u00CA': 'E',
		    '\u1EC0': 'E',
		    '\u1EBE': 'E',
		    '\u1EC4': 'E',
		    '\u1EC2': 'E',
		    '\u1EBC': 'E',
		    '\u0112': 'E',
		    '\u1E14': 'E',
		    '\u1E16': 'E',
		    '\u0114': 'E',
		    '\u0116': 'E',
		    '\u00CB': 'E',
		    '\u1EBA': 'E',
		    '\u011A': 'E',
		    '\u0204': 'E',
		    '\u0206': 'E',
		    '\u1EB8': 'E',
		    '\u1EC6': 'E',
		    '\u0228': 'E',
		    '\u1E1C': 'E',
		    '\u0118': 'E',
		    '\u1E18': 'E',
		    '\u1E1A': 'E',
		    '\u0190': 'E',
		    '\u018E': 'E',
		    '\u24BB': 'F',
		    '\uFF26': 'F',
		    '\u1E1E': 'F',
		    '\u0191': 'F',
		    '\uA77B': 'F',
		    '\u24BC': 'G',
		    '\uFF27': 'G',
		    '\u01F4': 'G',
		    '\u011C': 'G',
		    '\u1E20': 'G',
		    '\u011E': 'G',
		    '\u0120': 'G',
		    '\u01E6': 'G',
		    '\u0122': 'G',
		    '\u01E4': 'G',
		    '\u0193': 'G',
		    '\uA7A0': 'G',
		    '\uA77D': 'G',
		    '\uA77E': 'G',
		    '\u24BD': 'H',
		    '\uFF28': 'H',
		    '\u0124': 'H',
		    '\u1E22': 'H',
		    '\u1E26': 'H',
		    '\u021E': 'H',
		    '\u1E24': 'H',
		    '\u1E28': 'H',
		    '\u1E2A': 'H',
		    '\u0126': 'H',
		    '\u2C67': 'H',
		    '\u2C75': 'H',
		    '\uA78D': 'H',
		    '\u24BE': 'I',
		    '\uFF29': 'I',
		    '\u00CC': 'I',
		    '\u00CD': 'I',
		    '\u00CE': 'I',
		    '\u0128': 'I',
		    '\u012A': 'I',
		    '\u012C': 'I',
		    '\u0130': 'I',
		    '\u00CF': 'I',
		    '\u1E2E': 'I',
		    '\u1EC8': 'I',
		    '\u01CF': 'I',
		    '\u0208': 'I',
		    '\u020A': 'I',
		    '\u1ECA': 'I',
		    '\u012E': 'I',
		    '\u1E2C': 'I',
		    '\u0197': 'I',
		    '\u24BF': 'J',
		    '\uFF2A': 'J',
		    '\u0134': 'J',
		    '\u0248': 'J',
		    '\u24C0': 'K',
		    '\uFF2B': 'K',
		    '\u1E30': 'K',
		    '\u01E8': 'K',
		    '\u1E32': 'K',
		    '\u0136': 'K',
		    '\u1E34': 'K',
		    '\u0198': 'K',
		    '\u2C69': 'K',
		    '\uA740': 'K',
		    '\uA742': 'K',
		    '\uA744': 'K',
		    '\uA7A2': 'K',
		    '\u24C1': 'L',
		    '\uFF2C': 'L',
		    '\u013F': 'L',
		    '\u0139': 'L',
		    '\u013D': 'L',
		    '\u1E36': 'L',
		    '\u1E38': 'L',
		    '\u013B': 'L',
		    '\u1E3C': 'L',
		    '\u1E3A': 'L',
		    '\u0141': 'L',
		    '\u023D': 'L',
		    '\u2C62': 'L',
		    '\u2C60': 'L',
		    '\uA748': 'L',
		    '\uA746': 'L',
		    '\uA780': 'L',
		    '\u01C7': 'LJ',
		    '\u01C8': 'Lj',
		    '\u24C2': 'M',
		    '\uFF2D': 'M',
		    '\u1E3E': 'M',
		    '\u1E40': 'M',
		    '\u1E42': 'M',
		    '\u2C6E': 'M',
		    '\u019C': 'M',
		    '\u24C3': 'N',
		    '\uFF2E': 'N',
		    '\u01F8': 'N',
		    '\u0143': 'N',
		    '\u00D1': 'N',
		    '\u1E44': 'N',
		    '\u0147': 'N',
		    '\u1E46': 'N',
		    '\u0145': 'N',
		    '\u1E4A': 'N',
		    '\u1E48': 'N',
		    '\u0220': 'N',
		    '\u019D': 'N',
		    '\uA790': 'N',
		    '\uA7A4': 'N',
		    '\u01CA': 'NJ',
		    '\u01CB': 'Nj',
		    '\u24C4': 'O',
		    '\uFF2F': 'O',
		    '\u00D2': 'O',
		    '\u00D3': 'O',
		    '\u00D4': 'O',
		    '\u1ED2': 'O',
		    '\u1ED0': 'O',
		    '\u1ED6': 'O',
		    '\u1ED4': 'O',
		    '\u00D5': 'O',
		    '\u1E4C': 'O',
		    '\u022C': 'O',
		    '\u1E4E': 'O',
		    '\u014C': 'O',
		    '\u1E50': 'O',
		    '\u1E52': 'O',
		    '\u014E': 'O',
		    '\u022E': 'O',
		    '\u0230': 'O',
		    '\u00D6': 'O',
		    '\u022A': 'O',
		    '\u1ECE': 'O',
		    '\u0150': 'O',
		    '\u01D1': 'O',
		    '\u020C': 'O',
		    '\u020E': 'O',
		    '\u01A0': 'O',
		    '\u1EDC': 'O',
		    '\u1EDA': 'O',
		    '\u1EE0': 'O',
		    '\u1EDE': 'O',
		    '\u1EE2': 'O',
		    '\u1ECC': 'O',
		    '\u1ED8': 'O',
		    '\u01EA': 'O',
		    '\u01EC': 'O',
		    '\u00D8': 'O',
		    '\u01FE': 'O',
		    '\u0186': 'O',
		    '\u019F': 'O',
		    '\uA74A': 'O',
		    '\uA74C': 'O',
		    '\u01A2': 'OI',
		    '\uA74E': 'OO',
		    '\u0222': 'OU',
		    '\u24C5': 'P',
		    '\uFF30': 'P',
		    '\u1E54': 'P',
		    '\u1E56': 'P',
		    '\u01A4': 'P',
		    '\u2C63': 'P',
		    '\uA750': 'P',
		    '\uA752': 'P',
		    '\uA754': 'P',
		    '\u24C6': 'Q',
		    '\uFF31': 'Q',
		    '\uA756': 'Q',
		    '\uA758': 'Q',
		    '\u024A': 'Q',
		    '\u24C7': 'R',
		    '\uFF32': 'R',
		    '\u0154': 'R',
		    '\u1E58': 'R',
		    '\u0158': 'R',
		    '\u0210': 'R',
		    '\u0212': 'R',
		    '\u1E5A': 'R',
		    '\u1E5C': 'R',
		    '\u0156': 'R',
		    '\u1E5E': 'R',
		    '\u024C': 'R',
		    '\u2C64': 'R',
		    '\uA75A': 'R',
		    '\uA7A6': 'R',
		    '\uA782': 'R',
		    '\u24C8': 'S',
		    '\uFF33': 'S',
		    '\u1E9E': 'S',
		    '\u015A': 'S',
		    '\u1E64': 'S',
		    '\u015C': 'S',
		    '\u1E60': 'S',
		    '\u0160': 'S',
		    '\u1E66': 'S',
		    '\u1E62': 'S',
		    '\u1E68': 'S',
		    '\u0218': 'S',
		    '\u015E': 'S',
		    '\u2C7E': 'S',
		    '\uA7A8': 'S',
		    '\uA784': 'S',
		    '\u24C9': 'T',
		    '\uFF34': 'T',
		    '\u1E6A': 'T',
		    '\u0164': 'T',
		    '\u1E6C': 'T',
		    '\u021A': 'T',
		    '\u0162': 'T',
		    '\u1E70': 'T',
		    '\u1E6E': 'T',
		    '\u0166': 'T',
		    '\u01AC': 'T',
		    '\u01AE': 'T',
		    '\u023E': 'T',
		    '\uA786': 'T',
		    '\uA728': 'TZ',
		    '\u24CA': 'U',
		    '\uFF35': 'U',
		    '\u00D9': 'U',
		    '\u00DA': 'U',
		    '\u00DB': 'U',
		    '\u0168': 'U',
		    '\u1E78': 'U',
		    '\u016A': 'U',
		    '\u1E7A': 'U',
		    '\u016C': 'U',
		    '\u00DC': 'U',
		    '\u01DB': 'U',
		    '\u01D7': 'U',
		    '\u01D5': 'U',
		    '\u01D9': 'U',
		    '\u1EE6': 'U',
		    '\u016E': 'U',
		    '\u0170': 'U',
		    '\u01D3': 'U',
		    '\u0214': 'U',
		    '\u0216': 'U',
		    '\u01AF': 'U',
		    '\u1EEA': 'U',
		    '\u1EE8': 'U',
		    '\u1EEE': 'U',
		    '\u1EEC': 'U',
		    '\u1EF0': 'U',
		    '\u1EE4': 'U',
		    '\u1E72': 'U',
		    '\u0172': 'U',
		    '\u1E76': 'U',
		    '\u1E74': 'U',
		    '\u0244': 'U',
		    '\u24CB': 'V',
		    '\uFF36': 'V',
		    '\u1E7C': 'V',
		    '\u1E7E': 'V',
		    '\u01B2': 'V',
		    '\uA75E': 'V',
		    '\u0245': 'V',
		    '\uA760': 'VY',
		    '\u24CC': 'W',
		    '\uFF37': 'W',
		    '\u1E80': 'W',
		    '\u1E82': 'W',
		    '\u0174': 'W',
		    '\u1E86': 'W',
		    '\u1E84': 'W',
		    '\u1E88': 'W',
		    '\u2C72': 'W',
		    '\u24CD': 'X',
		    '\uFF38': 'X',
		    '\u1E8A': 'X',
		    '\u1E8C': 'X',
		    '\u24CE': 'Y',
		    '\uFF39': 'Y',
		    '\u1EF2': 'Y',
		    '\u00DD': 'Y',
		    '\u0176': 'Y',
		    '\u1EF8': 'Y',
		    '\u0232': 'Y',
		    '\u1E8E': 'Y',
		    '\u0178': 'Y',
		    '\u1EF6': 'Y',
		    '\u1EF4': 'Y',
		    '\u01B3': 'Y',
		    '\u024E': 'Y',
		    '\u1EFE': 'Y',
		    '\u24CF': 'Z',
		    '\uFF3A': 'Z',
		    '\u0179': 'Z',
		    '\u1E90': 'Z',
		    '\u017B': 'Z',
		    '\u017D': 'Z',
		    '\u1E92': 'Z',
		    '\u1E94': 'Z',
		    '\u01B5': 'Z',
		    '\u0224': 'Z',
		    '\u2C7F': 'Z',
		    '\u2C6B': 'Z',
		    '\uA762': 'Z',
		    '\u24D0': 'a',
		    '\uFF41': 'a',
		    '\u1E9A': 'a',
		    '\u00E0': 'a',
		    '\u00E1': 'a',
		    '\u00E2': 'a',
		    '\u1EA7': 'a',
		    '\u1EA5': 'a',
		    '\u1EAB': 'a',
		    '\u1EA9': 'a',
		    '\u00E3': 'a',
		    '\u0101': 'a',
		    '\u0103': 'a',
		    '\u1EB1': 'a',
		    '\u1EAF': 'a',
		    '\u1EB5': 'a',
		    '\u1EB3': 'a',
		    '\u0227': 'a',
		    '\u01E1': 'a',
		    '\u00E4': 'a',
		    '\u01DF': 'a',
		    '\u1EA3': 'a',
		    '\u00E5': 'a',
		    '\u01FB': 'a',
		    '\u01CE': 'a',
		    '\u0201': 'a',
		    '\u0203': 'a',
		    '\u1EA1': 'a',
		    '\u1EAD': 'a',
		    '\u1EB7': 'a',
		    '\u1E01': 'a',
		    '\u0105': 'a',
		    '\u2C65': 'a',
		    '\u0250': 'a',
		    '\uA733': 'aa',
		    '\u00E6': 'ae',
		    '\u01FD': 'ae',
		    '\u01E3': 'ae',
		    '\uA735': 'ao',
		    '\uA737': 'au',
		    '\uA739': 'av',
		    '\uA73B': 'av',
		    '\uA73D': 'ay',
		    '\u24D1': 'b',
		    '\uFF42': 'b',
		    '\u1E03': 'b',
		    '\u1E05': 'b',
		    '\u1E07': 'b',
		    '\u0180': 'b',
		    '\u0183': 'b',
		    '\u0253': 'b',
		    '\u24D2': 'c',
		    '\uFF43': 'c',
		    '\u0107': 'c',
		    '\u0109': 'c',
		    '\u010B': 'c',
		    '\u010D': 'c',
		    '\u00E7': 'c',
		    '\u1E09': 'c',
		    '\u0188': 'c',
		    '\u023C': 'c',
		    '\uA73F': 'c',
		    '\u2184': 'c',
		    '\u24D3': 'd',
		    '\uFF44': 'd',
		    '\u1E0B': 'd',
		    '\u010F': 'd',
		    '\u1E0D': 'd',
		    '\u1E11': 'd',
		    '\u1E13': 'd',
		    '\u1E0F': 'd',
		    '\u0111': 'd',
		    '\u018C': 'd',
		    '\u0256': 'd',
		    '\u0257': 'd',
		    '\uA77A': 'd',
		    '\u01F3': 'dz',
		    '\u01C6': 'dz',
		    '\u24D4': 'e',
		    '\uFF45': 'e',
		    '\u00E8': 'e',
		    '\u00E9': 'e',
		    '\u00EA': 'e',
		    '\u1EC1': 'e',
		    '\u1EBF': 'e',
		    '\u1EC5': 'e',
		    '\u1EC3': 'e',
		    '\u1EBD': 'e',
		    '\u0113': 'e',
		    '\u1E15': 'e',
		    '\u1E17': 'e',
		    '\u0115': 'e',
		    '\u0117': 'e',
		    '\u00EB': 'e',
		    '\u1EBB': 'e',
		    '\u011B': 'e',
		    '\u0205': 'e',
		    '\u0207': 'e',
		    '\u1EB9': 'e',
		    '\u1EC7': 'e',
		    '\u0229': 'e',
		    '\u1E1D': 'e',
		    '\u0119': 'e',
		    '\u1E19': 'e',
		    '\u1E1B': 'e',
		    '\u0247': 'e',
		    '\u025B': 'e',
		    '\u01DD': 'e',
		    '\u24D5': 'f',
		    '\uFF46': 'f',
		    '\u1E1F': 'f',
		    '\u0192': 'f',
		    '\uA77C': 'f',
		    '\u24D6': 'g',
		    '\uFF47': 'g',
		    '\u01F5': 'g',
		    '\u011D': 'g',
		    '\u1E21': 'g',
		    '\u011F': 'g',
		    '\u0121': 'g',
		    '\u01E7': 'g',
		    '\u0123': 'g',
		    '\u01E5': 'g',
		    '\u0260': 'g',
		    '\uA7A1': 'g',
		    '\u1D79': 'g',
		    '\uA77F': 'g',
		    '\u24D7': 'h',
		    '\uFF48': 'h',
		    '\u0125': 'h',
		    '\u1E23': 'h',
		    '\u1E27': 'h',
		    '\u021F': 'h',
		    '\u1E25': 'h',
		    '\u1E29': 'h',
		    '\u1E2B': 'h',
		    '\u1E96': 'h',
		    '\u0127': 'h',
		    '\u2C68': 'h',
		    '\u2C76': 'h',
		    '\u0265': 'h',
		    '\u0195': 'hv',
		    '\u24D8': 'i',
		    '\uFF49': 'i',
		    '\u00EC': 'i',
		    '\u00ED': 'i',
		    '\u00EE': 'i',
		    '\u0129': 'i',
		    '\u012B': 'i',
		    '\u012D': 'i',
		    '\u00EF': 'i',
		    '\u1E2F': 'i',
		    '\u1EC9': 'i',
		    '\u01D0': 'i',
		    '\u0209': 'i',
		    '\u020B': 'i',
		    '\u1ECB': 'i',
		    '\u012F': 'i',
		    '\u1E2D': 'i',
		    '\u0268': 'i',
		    '\u0131': 'i',
		    '\u24D9': 'j',
		    '\uFF4A': 'j',
		    '\u0135': 'j',
		    '\u01F0': 'j',
		    '\u0249': 'j',
		    '\u24DA': 'k',
		    '\uFF4B': 'k',
		    '\u1E31': 'k',
		    '\u01E9': 'k',
		    '\u1E33': 'k',
		    '\u0137': 'k',
		    '\u1E35': 'k',
		    '\u0199': 'k',
		    '\u2C6A': 'k',
		    '\uA741': 'k',
		    '\uA743': 'k',
		    '\uA745': 'k',
		    '\uA7A3': 'k',
		    '\u24DB': 'l',
		    '\uFF4C': 'l',
		    '\u0140': 'l',
		    '\u013A': 'l',
		    '\u013E': 'l',
		    '\u1E37': 'l',
		    '\u1E39': 'l',
		    '\u013C': 'l',
		    '\u1E3D': 'l',
		    '\u1E3B': 'l',
		    '\u017F': 'l',
		    '\u0142': 'l',
		    '\u019A': 'l',
		    '\u026B': 'l',
		    '\u2C61': 'l',
		    '\uA749': 'l',
		    '\uA781': 'l',
		    '\uA747': 'l',
		    '\u01C9': 'lj',
		    '\u24DC': 'm',
		    '\uFF4D': 'm',
		    '\u1E3F': 'm',
		    '\u1E41': 'm',
		    '\u1E43': 'm',
		    '\u0271': 'm',
		    '\u026F': 'm',
		    '\u24DD': 'n',
		    '\uFF4E': 'n',
		    '\u01F9': 'n',
		    '\u0144': 'n',
		    '\u00F1': 'n',
		    '\u1E45': 'n',
		    '\u0148': 'n',
		    '\u1E47': 'n',
		    '\u0146': 'n',
		    '\u1E4B': 'n',
		    '\u1E49': 'n',
		    '\u019E': 'n',
		    '\u0272': 'n',
		    '\u0149': 'n',
		    '\uA791': 'n',
		    '\uA7A5': 'n',
		    '\u01CC': 'nj',
		    '\u24DE': 'o',
		    '\uFF4F': 'o',
		    '\u00F2': 'o',
		    '\u00F3': 'o',
		    '\u00F4': 'o',
		    '\u1ED3': 'o',
		    '\u1ED1': 'o',
		    '\u1ED7': 'o',
		    '\u1ED5': 'o',
		    '\u00F5': 'o',
		    '\u1E4D': 'o',
		    '\u022D': 'o',
		    '\u1E4F': 'o',
		    '\u014D': 'o',
		    '\u1E51': 'o',
		    '\u1E53': 'o',
		    '\u014F': 'o',
		    '\u022F': 'o',
		    '\u0231': 'o',
		    '\u00F6': 'o',
		    '\u022B': 'o',
		    '\u1ECF': 'o',
		    '\u0151': 'o',
		    '\u01D2': 'o',
		    '\u020D': 'o',
		    '\u020F': 'o',
		    '\u01A1': 'o',
		    '\u1EDD': 'o',
		    '\u1EDB': 'o',
		    '\u1EE1': 'o',
		    '\u1EDF': 'o',
		    '\u1EE3': 'o',
		    '\u1ECD': 'o',
		    '\u1ED9': 'o',
		    '\u01EB': 'o',
		    '\u01ED': 'o',
		    '\u00F8': 'o',
		    '\u01FF': 'o',
		    '\u0254': 'o',
		    '\uA74B': 'o',
		    '\uA74D': 'o',
		    '\u0275': 'o',
		    '\u01A3': 'oi',
		    '\u0223': 'ou',
		    '\uA74F': 'oo',
		    '\u24DF': 'p',
		    '\uFF50': 'p',
		    '\u1E55': 'p',
		    '\u1E57': 'p',
		    '\u01A5': 'p',
		    '\u1D7D': 'p',
		    '\uA751': 'p',
		    '\uA753': 'p',
		    '\uA755': 'p',
		    '\u24E0': 'q',
		    '\uFF51': 'q',
		    '\u024B': 'q',
		    '\uA757': 'q',
		    '\uA759': 'q',
		    '\u24E1': 'r',
		    '\uFF52': 'r',
		    '\u0155': 'r',
		    '\u1E59': 'r',
		    '\u0159': 'r',
		    '\u0211': 'r',
		    '\u0213': 'r',
		    '\u1E5B': 'r',
		    '\u1E5D': 'r',
		    '\u0157': 'r',
		    '\u1E5F': 'r',
		    '\u024D': 'r',
		    '\u027D': 'r',
		    '\uA75B': 'r',
		    '\uA7A7': 'r',
		    '\uA783': 'r',
		    '\u24E2': 's',
		    '\uFF53': 's',
		    '\u00DF': 's',
		    '\u015B': 's',
		    '\u1E65': 's',
		    '\u015D': 's',
		    '\u1E61': 's',
		    '\u0161': 's',
		    '\u1E67': 's',
		    '\u1E63': 's',
		    '\u1E69': 's',
		    '\u0219': 's',
		    '\u015F': 's',
		    '\u023F': 's',
		    '\uA7A9': 's',
		    '\uA785': 's',
		    '\u1E9B': 's',
		    '\u24E3': 't',
		    '\uFF54': 't',
		    '\u1E6B': 't',
		    '\u1E97': 't',
		    '\u0165': 't',
		    '\u1E6D': 't',
		    '\u021B': 't',
		    '\u0163': 't',
		    '\u1E71': 't',
		    '\u1E6F': 't',
		    '\u0167': 't',
		    '\u01AD': 't',
		    '\u0288': 't',
		    '\u2C66': 't',
		    '\uA787': 't',
		    '\uA729': 'tz',
		    '\u24E4': 'u',
		    '\uFF55': 'u',
		    '\u00F9': 'u',
		    '\u00FA': 'u',
		    '\u00FB': 'u',
		    '\u0169': 'u',
		    '\u1E79': 'u',
		    '\u016B': 'u',
		    '\u1E7B': 'u',
		    '\u016D': 'u',
		    '\u00FC': 'u',
		    '\u01DC': 'u',
		    '\u01D8': 'u',
		    '\u01D6': 'u',
		    '\u01DA': 'u',
		    '\u1EE7': 'u',
		    '\u016F': 'u',
		    '\u0171': 'u',
		    '\u01D4': 'u',
		    '\u0215': 'u',
		    '\u0217': 'u',
		    '\u01B0': 'u',
		    '\u1EEB': 'u',
		    '\u1EE9': 'u',
		    '\u1EEF': 'u',
		    '\u1EED': 'u',
		    '\u1EF1': 'u',
		    '\u1EE5': 'u',
		    '\u1E73': 'u',
		    '\u0173': 'u',
		    '\u1E77': 'u',
		    '\u1E75': 'u',
		    '\u0289': 'u',
		    '\u24E5': 'v',
		    '\uFF56': 'v',
		    '\u1E7D': 'v',
		    '\u1E7F': 'v',
		    '\u028B': 'v',
		    '\uA75F': 'v',
		    '\u028C': 'v',
		    '\uA761': 'vy',
		    '\u24E6': 'w',
		    '\uFF57': 'w',
		    '\u1E81': 'w',
		    '\u1E83': 'w',
		    '\u0175': 'w',
		    '\u1E87': 'w',
		    '\u1E85': 'w',
		    '\u1E98': 'w',
		    '\u1E89': 'w',
		    '\u2C73': 'w',
		    '\u24E7': 'x',
		    '\uFF58': 'x',
		    '\u1E8B': 'x',
		    '\u1E8D': 'x',
		    '\u24E8': 'y',
		    '\uFF59': 'y',
		    '\u1EF3': 'y',
		    '\u00FD': 'y',
		    '\u0177': 'y',
		    '\u1EF9': 'y',
		    '\u0233': 'y',
		    '\u1E8F': 'y',
		    '\u00FF': 'y',
		    '\u1EF7': 'y',
		    '\u1E99': 'y',
		    '\u1EF5': 'y',
		    '\u01B4': 'y',
		    '\u024F': 'y',
		    '\u1EFF': 'y',
		    '\u24E9': 'z',
		    '\uFF5A': 'z',
		    '\u017A': 'z',
		    '\u1E91': 'z',
		    '\u017C': 'z',
		    '\u017E': 'z',
		    '\u1E93': 'z',
		    '\u1E95': 'z',
		    '\u01B6': 'z',
		    '\u0225': 'z',
		    '\u0240': 'z',
		    '\u2C6C': 'z',
		    '\uA763': 'z',
		    '\u0386': '\u0391',
		    '\u0388': '\u0395',
		    '\u0389': '\u0397',
		    '\u038A': '\u0399',
		    '\u03AA': '\u0399',
		    '\u038C': '\u039F',
		    '\u038E': '\u03A5',
		    '\u03AB': '\u03A5',
		    '\u038F': '\u03A9',
		    '\u03AC': '\u03B1',
		    '\u03AD': '\u03B5',
		    '\u03AE': '\u03B7',
		    '\u03AF': '\u03B9',
		    '\u03CA': '\u03B9',
		    '\u0390': '\u03B9',
		    '\u03CC': '\u03BF',
		    '\u03CD': '\u03C5',
		    '\u03CB': '\u03C5',
		    '\u03B0': '\u03C5',
		    '\u03C9': '\u03C9',
		    '\u03C2': '\u03C3'
		  };
	
		  return diacritics;
		});
	
		S2.define('select2/data/base',[
		  '../utils'
		], function (Utils) {
		  function BaseAdapter ($element, options) {
		    BaseAdapter.__super__.constructor.call(this);
		  }
	
		  Utils.Extend(BaseAdapter, Utils.Observable);
	
		  BaseAdapter.prototype.current = function (callback) {
		    throw new Error('The `current` method must be defined in child classes.');
		  };
	
		  BaseAdapter.prototype.query = function (params, callback) {
		    throw new Error('The `query` method must be defined in child classes.');
		  };
	
		  BaseAdapter.prototype.bind = function (container, $container) {
		    // Can be implemented in subclasses
		  };
	
		  BaseAdapter.prototype.destroy = function () {
		    // Can be implemented in subclasses
		  };
	
		  BaseAdapter.prototype.generateResultId = function (container, data) {
		    var id = container.id + '-result-';
	
		    id += Utils.generateChars(4);
	
		    if (data.id != null) {
		      id += '-' + data.id.toString();
		    } else {
		      id += '-' + Utils.generateChars(4);
		    }
		    return id;
		  };
	
		  return BaseAdapter;
		});
	
		S2.define('select2/data/select',[
		  './base',
		  '../utils',
		  'jquery'
		], function (BaseAdapter, Utils, $) {
		  function SelectAdapter ($element, options) {
		    this.$element = $element;
		    this.options = options;
	
		    SelectAdapter.__super__.constructor.call(this);
		  }
	
		  Utils.Extend(SelectAdapter, BaseAdapter);
	
		  SelectAdapter.prototype.current = function (callback) {
		    var data = [];
		    var self = this;
	
		    this.$element.find(':selected').each(function () {
		      var $option = $(this);
	
		      var option = self.item($option);
	
		      data.push(option);
		    });
	
		    callback(data);
		  };
	
		  SelectAdapter.prototype.select = function (data) {
		    var self = this;
	
		    data.selected = true;
	
		    // If data.element is a DOM node, use it instead
		    if ($(data.element).is('option')) {
		      data.element.selected = true;
	
		      this.$element.trigger('change');
	
		      return;
		    }
	
		    if (this.$element.prop('multiple')) {
		      this.current(function (currentData) {
		        var val = [];
	
		        data = [data];
		        data.push.apply(data, currentData);
	
		        for (var d = 0; d < data.length; d++) {
		          var id = data[d].id;
	
		          if ($.inArray(id, val) === -1) {
		            val.push(id);
		          }
		        }
	
		        self.$element.val(val);
		        self.$element.trigger('change');
		      });
		    } else {
		      var val = data.id;
	
		      this.$element.val(val);
		      this.$element.trigger('change');
		    }
		  };
	
		  SelectAdapter.prototype.unselect = function (data) {
		    var self = this;
	
		    if (!this.$element.prop('multiple')) {
		      return;
		    }
	
		    data.selected = false;
	
		    if ($(data.element).is('option')) {
		      data.element.selected = false;
	
		      this.$element.trigger('change');
	
		      return;
		    }
	
		    this.current(function (currentData) {
		      var val = [];
	
		      for (var d = 0; d < currentData.length; d++) {
		        var id = currentData[d].id;
	
		        if (id !== data.id && $.inArray(id, val) === -1) {
		          val.push(id);
		        }
		      }
	
		      self.$element.val(val);
	
		      self.$element.trigger('change');
		    });
		  };
	
		  SelectAdapter.prototype.bind = function (container, $container) {
		    var self = this;
	
		    this.container = container;
	
		    container.on('select', function (params) {
		      self.select(params.data);
		    });
	
		    container.on('unselect', function (params) {
		      self.unselect(params.data);
		    });
		  };
	
		  SelectAdapter.prototype.destroy = function () {
		    // Remove anything added to child elements
		    this.$element.find('*').each(function () {
		      // Remove any custom data set by Select2
		      $.removeData(this, 'data');
		    });
		  };
	
		  SelectAdapter.prototype.query = function (params, callback) {
		    var data = [];
		    var self = this;
	
		    var $options = this.$element.children();
	
		    $options.each(function () {
		      var $option = $(this);
	
		      if (!$option.is('option') && !$option.is('optgroup')) {
		        return;
		      }
	
		      var option = self.item($option);
	
		      var matches = self.matches(params, option);
	
		      if (matches !== null) {
		        data.push(matches);
		      }
		    });
	
		    callback({
		      results: data
		    });
		  };
	
		  SelectAdapter.prototype.addOptions = function ($options) {
		    Utils.appendMany(this.$element, $options);
		  };
	
		  SelectAdapter.prototype.option = function (data) {
		    var option;
	
		    if (data.children) {
		      option = document.createElement('optgroup');
		      option.label = data.text;
		    } else {
		      option = document.createElement('option');
	
		      if (option.textContent !== undefined) {
		        option.textContent = data.text;
		      } else {
		        option.innerText = data.text;
		      }
		    }
	
		    if (data.id !== undefined) {
		      option.value = data.id;
		    }
	
		    if (data.disabled) {
		      option.disabled = true;
		    }
	
		    if (data.selected) {
		      option.selected = true;
		    }
	
		    if (data.title) {
		      option.title = data.title;
		    }
	
		    var $option = $(option);
	
		    var normalizedData = this._normalizeItem(data);
		    normalizedData.element = option;
	
		    // Override the option's data with the combined data
		    $.data(option, 'data', normalizedData);
	
		    return $option;
		  };
	
		  SelectAdapter.prototype.item = function ($option) {
		    var data = {};
	
		    data = $.data($option[0], 'data');
	
		    if (data != null) {
		      return data;
		    }
	
		    if ($option.is('option')) {
		      data = {
		        id: $option.val(),
		        text: $option.text(),
		        disabled: $option.prop('disabled'),
		        selected: $option.prop('selected'),
		        title: $option.prop('title')
		      };
		    } else if ($option.is('optgroup')) {
		      data = {
		        text: $option.prop('label'),
		        children: [],
		        title: $option.prop('title')
		      };
	
		      var $children = $option.children('option');
		      var children = [];
	
		      for (var c = 0; c < $children.length; c++) {
		        var $child = $($children[c]);
	
		        var child = this.item($child);
	
		        children.push(child);
		      }
	
		      data.children = children;
		    }
	
		    data = this._normalizeItem(data);
		    data.element = $option[0];
	
		    $.data($option[0], 'data', data);
	
		    return data;
		  };
	
		  SelectAdapter.prototype._normalizeItem = function (item) {
		    if (!$.isPlainObject(item)) {
		      item = {
		        id: item,
		        text: item
		      };
		    }
	
		    item = $.extend({}, {
		      text: ''
		    }, item);
	
		    var defaults = {
		      selected: false,
		      disabled: false
		    };
	
		    if (item.id != null) {
		      item.id = item.id.toString();
		    }
	
		    if (item.text != null) {
		      item.text = item.text.toString();
		    }
	
		    if (item._resultId == null && item.id && this.container != null) {
		      item._resultId = this.generateResultId(this.container, item);
		    }
	
		    return $.extend({}, defaults, item);
		  };
	
		  SelectAdapter.prototype.matches = function (params, data) {
		    var matcher = this.options.get('matcher');
	
		    return matcher(params, data);
		  };
	
		  return SelectAdapter;
		});
	
		S2.define('select2/data/array',[
		  './select',
		  '../utils',
		  'jquery'
		], function (SelectAdapter, Utils, $) {
		  function ArrayAdapter ($element, options) {
		    var data = options.get('data') || [];
	
		    ArrayAdapter.__super__.constructor.call(this, $element, options);
	
		    this.addOptions(this.convertToOptions(data));
		  }
	
		  Utils.Extend(ArrayAdapter, SelectAdapter);
	
		  ArrayAdapter.prototype.select = function (data) {
		    var $option = this.$element.find('option').filter(function (i, elm) {
		      return elm.value == data.id.toString();
		    });
	
		    if ($option.length === 0) {
		      $option = this.option(data);
	
		      this.addOptions($option);
		    }
	
		    ArrayAdapter.__super__.select.call(this, data);
		  };
	
		  ArrayAdapter.prototype.convertToOptions = function (data) {
		    var self = this;
	
		    var $existing = this.$element.find('option');
		    var existingIds = $existing.map(function () {
		      return self.item($(this)).id;
		    }).get();
	
		    var $options = [];
	
		    // Filter out all items except for the one passed in the argument
		    function onlyItem (item) {
		      return function () {
		        return $(this).val() == item.id;
		      };
		    }
	
		    for (var d = 0; d < data.length; d++) {
		      var item = this._normalizeItem(data[d]);
	
		      // Skip items which were pre-loaded, only merge the data
		      if ($.inArray(item.id, existingIds) >= 0) {
		        var $existingOption = $existing.filter(onlyItem(item));
	
		        var existingData = this.item($existingOption);
		        var newData = $.extend(true, {}, item, existingData);
	
		        var $newOption = this.option(newData);
	
		        $existingOption.replaceWith($newOption);
	
		        continue;
		      }
	
		      var $option = this.option(item);
	
		      if (item.children) {
		        var $children = this.convertToOptions(item.children);
	
		        Utils.appendMany($option, $children);
		      }
	
		      $options.push($option);
		    }
	
		    return $options;
		  };
	
		  return ArrayAdapter;
		});
	
		S2.define('select2/data/ajax',[
		  './array',
		  '../utils',
		  'jquery'
		], function (ArrayAdapter, Utils, $) {
		  function AjaxAdapter ($element, options) {
		    this.ajaxOptions = this._applyDefaults(options.get('ajax'));
	
		    if (this.ajaxOptions.processResults != null) {
		      this.processResults = this.ajaxOptions.processResults;
		    }
	
		    AjaxAdapter.__super__.constructor.call(this, $element, options);
		  }
	
		  Utils.Extend(AjaxAdapter, ArrayAdapter);
	
		  AjaxAdapter.prototype._applyDefaults = function (options) {
		    var defaults = {
		      data: function (params) {
		        return $.extend({}, params, {
		          q: params.term
		        });
		      },
		      transport: function (params, success, failure) {
		        var $request = $.ajax(params);
	
		        $request.then(success);
		        $request.fail(failure);
	
		        return $request;
		      }
		    };
	
		    return $.extend({}, defaults, options, true);
		  };
	
		  AjaxAdapter.prototype.processResults = function (results) {
		    return results;
		  };
	
		  AjaxAdapter.prototype.query = function (params, callback) {
		    var matches = [];
		    var self = this;
	
		    if (this._request != null) {
		      // JSONP requests cannot always be aborted
		      if ($.isFunction(this._request.abort)) {
		        this._request.abort();
		      }
	
		      this._request = null;
		    }
	
		    var options = $.extend({
		      type: 'GET'
		    }, this.ajaxOptions);
	
		    if (typeof options.url === 'function') {
		      options.url = options.url.call(this.$element, params);
		    }
	
		    if (typeof options.data === 'function') {
		      options.data = options.data.call(this.$element, params);
		    }
	
		    function request () {
		      var $request = options.transport(options, function (data) {
		        var results = self.processResults(data, params);
	
		        if (self.options.get('debug') && window.console && console.error) {
		          // Check to make sure that the response included a `results` key.
		          if (!results || !results.results || !$.isArray(results.results)) {
		            console.error(
		              'Select2: The AJAX results did not return an array in the ' +
		              '`results` key of the response.'
		            );
		          }
		        }
	
		        callback(results);
		      }, function () {
		        // Attempt to detect if a request was aborted
		        // Only works if the transport exposes a status property
		        if ($request.status && $request.status === '0') {
		          return;
		        }
	
		        self.trigger('results:message', {
		          message: 'errorLoading'
		        });
		      });
	
		      self._request = $request;
		    }
	
		    if (this.ajaxOptions.delay && params.term != null) {
		      if (this._queryTimeout) {
		        window.clearTimeout(this._queryTimeout);
		      }
	
		      this._queryTimeout = window.setTimeout(request, this.ajaxOptions.delay);
		    } else {
		      request();
		    }
		  };
	
		  return AjaxAdapter;
		});
	
		S2.define('select2/data/tags',[
		  'jquery'
		], function ($) {
		  function Tags (decorated, $element, options) {
		    var tags = options.get('tags');
	
		    var createTag = options.get('createTag');
	
		    if (createTag !== undefined) {
		      this.createTag = createTag;
		    }
	
		    var insertTag = options.get('insertTag');
	
		    if (insertTag !== undefined) {
		        this.insertTag = insertTag;
		    }
	
		    decorated.call(this, $element, options);
	
		    if ($.isArray(tags)) {
		      for (var t = 0; t < tags.length; t++) {
		        var tag = tags[t];
		        var item = this._normalizeItem(tag);
	
		        var $option = this.option(item);
	
		        this.$element.append($option);
		      }
		    }
		  }
	
		  Tags.prototype.query = function (decorated, params, callback) {
		    var self = this;
	
		    this._removeOldTags();
	
		    if (params.term == null || params.page != null) {
		      decorated.call(this, params, callback);
		      return;
		    }
	
		    function wrapper (obj, child) {
		      var data = obj.results;
	
		      for (var i = 0; i < data.length; i++) {
		        var option = data[i];
	
		        var checkChildren = (
		          option.children != null &&
		          !wrapper({
		            results: option.children
		          }, true)
		        );
	
		        var optionText = (option.text || '').toUpperCase();
		        var paramsTerm = (params.term || '').toUpperCase();
	
		        var checkText = optionText === paramsTerm;
	
		        if (checkText || checkChildren) {
		          if (child) {
		            return false;
		          }
	
		          obj.data = data;
		          callback(obj);
	
		          return;
		        }
		      }
	
		      if (child) {
		        return true;
		      }
	
		      var tag = self.createTag(params);
	
		      if (tag != null) {
		        var $option = self.option(tag);
		        $option.attr('data-select2-tag', true);
	
		        self.addOptions([$option]);
	
		        self.insertTag(data, tag);
		      }
	
		      obj.results = data;
	
		      callback(obj);
		    }
	
		    decorated.call(this, params, wrapper);
		  };
	
		  Tags.prototype.createTag = function (decorated, params) {
		    var term = $.trim(params.term);
	
		    if (term === '') {
		      return null;
		    }
	
		    return {
		      id: term,
		      text: term
		    };
		  };
	
		  Tags.prototype.insertTag = function (_, data, tag) {
		    data.unshift(tag);
		  };
	
		  Tags.prototype._removeOldTags = function (_) {
		    var tag = this._lastTag;
	
		    var $options = this.$element.find('option[data-select2-tag]');
	
		    $options.each(function () {
		      if (this.selected) {
		        return;
		      }
	
		      $(this).remove();
		    });
		  };
	
		  return Tags;
		});
	
		S2.define('select2/data/tokenizer',[
		  'jquery'
		], function ($) {
		  function Tokenizer (decorated, $element, options) {
		    var tokenizer = options.get('tokenizer');
	
		    if (tokenizer !== undefined) {
		      this.tokenizer = tokenizer;
		    }
	
		    decorated.call(this, $element, options);
		  }
	
		  Tokenizer.prototype.bind = function (decorated, container, $container) {
		    decorated.call(this, container, $container);
	
		    this.$search =  container.dropdown.$search || container.selection.$search ||
		      $container.find('.select2-search__field');
		  };
	
		  Tokenizer.prototype.query = function (decorated, params, callback) {
		    var self = this;
	
		    function createAndSelect (data) {
		      // Normalize the data object so we can use it for checks
		      var item = self._normalizeItem(data);
	
		      // Check if the data object already exists as a tag
		      // Select it if it doesn't
		      var $existingOptions = self.$element.find('option').filter(function () {
		        return $(this).val() === item.id;
		      });
	
		      // If an existing option wasn't found for it, create the option
		      if (!$existingOptions.length) {
		        var $option = self.option(item);
		        $option.attr('data-select2-tag', true);
	
		        self._removeOldTags();
		        self.addOptions([$option]);
		      }
	
		      // Select the item, now that we know there is an option for it
		      select(item);
		    }
	
		    function select (data) {
		      self.trigger('select', {
		        data: data
		      });
		    }
	
		    params.term = params.term || '';
	
		    var tokenData = this.tokenizer(params, this.options, createAndSelect);
	
		    if (tokenData.term !== params.term) {
		      // Replace the search term if we have the search box
		      if (this.$search.length) {
		        this.$search.val(tokenData.term);
		        this.$search.focus();
		      }
	
		      params.term = tokenData.term;
		    }
	
		    decorated.call(this, params, callback);
		  };
	
		  Tokenizer.prototype.tokenizer = function (_, params, options, callback) {
		    var separators = options.get('tokenSeparators') || [];
		    var term = params.term;
		    var i = 0;
	
		    var createTag = this.createTag || function (params) {
		      return {
		        id: params.term,
		        text: params.term
		      };
		    };
	
		    while (i < term.length) {
		      var termChar = term[i];
	
		      if ($.inArray(termChar, separators) === -1) {
		        i++;
	
		        continue;
		      }
	
		      var part = term.substr(0, i);
		      var partParams = $.extend({}, params, {
		        term: part
		      });
	
		      var data = createTag(partParams);
	
		      if (data == null) {
		        i++;
		        continue;
		      }
	
		      callback(data);
	
		      // Reset the term to not include the tokenized portion
		      term = term.substr(i + 1) || '';
		      i = 0;
		    }
	
		    return {
		      term: term
		    };
		  };
	
		  return Tokenizer;
		});
	
		S2.define('select2/data/minimumInputLength',[
	
		], function () {
		  function MinimumInputLength (decorated, $e, options) {
		    this.minimumInputLength = options.get('minimumInputLength');
	
		    decorated.call(this, $e, options);
		  }
	
		  MinimumInputLength.prototype.query = function (decorated, params, callback) {
		    params.term = params.term || '';
	
		    if (params.term.length < this.minimumInputLength) {
		      this.trigger('results:message', {
		        message: 'inputTooShort',
		        args: {
		          minimum: this.minimumInputLength,
		          input: params.term,
		          params: params
		        }
		      });
	
		      return;
		    }
	
		    decorated.call(this, params, callback);
		  };
	
		  return MinimumInputLength;
		});
	
		S2.define('select2/data/maximumInputLength',[
	
		], function () {
		  function MaximumInputLength (decorated, $e, options) {
		    this.maximumInputLength = options.get('maximumInputLength');
	
		    decorated.call(this, $e, options);
		  }
	
		  MaximumInputLength.prototype.query = function (decorated, params, callback) {
		    params.term = params.term || '';
	
		    if (this.maximumInputLength > 0 &&
		        params.term.length > this.maximumInputLength) {
		      this.trigger('results:message', {
		        message: 'inputTooLong',
		        args: {
		          maximum: this.maximumInputLength,
		          input: params.term,
		          params: params
		        }
		      });
	
		      return;
		    }
	
		    decorated.call(this, params, callback);
		  };
	
		  return MaximumInputLength;
		});
	
		S2.define('select2/data/maximumSelectionLength',[
	
		], function (){
		  function MaximumSelectionLength (decorated, $e, options) {
		    this.maximumSelectionLength = options.get('maximumSelectionLength');
	
		    decorated.call(this, $e, options);
		  }
	
		  MaximumSelectionLength.prototype.query =
		    function (decorated, params, callback) {
		      var self = this;
	
		      this.current(function (currentData) {
		        var count = currentData != null ? currentData.length : 0;
		        if (self.maximumSelectionLength > 0 &&
		          count >= self.maximumSelectionLength) {
		          self.trigger('results:message', {
		            message: 'maximumSelected',
		            args: {
		              maximum: self.maximumSelectionLength
		            }
		          });
		          return;
		        }
		        decorated.call(self, params, callback);
		      });
		  };
	
		  return MaximumSelectionLength;
		});
	
		S2.define('select2/dropdown',[
		  'jquery',
		  './utils'
		], function ($, Utils) {
		  function Dropdown ($element, options) {
		    this.$element = $element;
		    this.options = options;
	
		    Dropdown.__super__.constructor.call(this);
		  }
	
		  Utils.Extend(Dropdown, Utils.Observable);
	
		  Dropdown.prototype.render = function () {
		    var $dropdown = $(
		      '<span class="select2-dropdown">' +
		        '<span class="select2-results"></span>' +
		      '</span>'
		    );
	
		    $dropdown.attr('dir', this.options.get('dir'));
	
		    this.$dropdown = $dropdown;
	
		    return $dropdown;
		  };
	
		  Dropdown.prototype.bind = function () {
		    // Should be implemented in subclasses
		  };
	
		  Dropdown.prototype.position = function ($dropdown, $container) {
		    // Should be implmented in subclasses
		  };
	
		  Dropdown.prototype.destroy = function () {
		    // Remove the dropdown from the DOM
		    this.$dropdown.remove();
		  };
	
		  return Dropdown;
		});
	
		S2.define('select2/dropdown/search',[
		  'jquery',
		  '../utils'
		], function ($, Utils) {
		  function Search () { }
	
		  Search.prototype.render = function (decorated) {
		    var $rendered = decorated.call(this);
	
		    var $search = $(
		      '<span class="select2-search select2-search--dropdown">' +
		        '<input class="select2-search__field" type="search" tabindex="-1"' +
		        ' autocomplete="off" autocorrect="off" autocapitalize="off"' +
		        ' spellcheck="false" role="textbox" />' +
		      '</span>'
		    );
	
		    this.$searchContainer = $search;
		    this.$search = $search.find('input');
	
		    $rendered.prepend($search);
	
		    return $rendered;
		  };
	
		  Search.prototype.bind = function (decorated, container, $container) {
		    var self = this;
	
		    decorated.call(this, container, $container);
	
		    this.$search.on('keydown', function (evt) {
		      self.trigger('keypress', evt);
	
		      self._keyUpPrevented = evt.isDefaultPrevented();
		    });
	
		    // Workaround for browsers which do not support the `input` event
		    // This will prevent double-triggering of events for browsers which support
		    // both the `keyup` and `input` events.
		    this.$search.on('input', function (evt) {
		      // Unbind the duplicated `keyup` event
		      $(this).off('keyup');
		    });
	
		    this.$search.on('keyup input', function (evt) {
		      self.handleSearch(evt);
		    });
	
		    container.on('open', function () {
		      self.$search.attr('tabindex', 0);
	
		      self.$search.focus();
	
		      window.setTimeout(function () {
		        self.$search.focus();
		      }, 0);
		    });
	
		    container.on('close', function () {
		      self.$search.attr('tabindex', -1);
	
		      self.$search.val('');
		    });
	
		    container.on('focus', function () {
		      if (!container.isOpen()) {
		        self.$search.focus();
		      }
		    });
	
		    container.on('results:all', function (params) {
		      if (params.query.term == null || params.query.term === '') {
		        var showSearch = self.showSearch(params);
	
		        if (showSearch) {
		          self.$searchContainer.removeClass('select2-search--hide');
		        } else {
		          self.$searchContainer.addClass('select2-search--hide');
		        }
		      }
		    });
		  };
	
		  Search.prototype.handleSearch = function (evt) {
		    if (!this._keyUpPrevented) {
		      var input = this.$search.val();
	
		      this.trigger('query', {
		        term: input
		      });
		    }
	
		    this._keyUpPrevented = false;
		  };
	
		  Search.prototype.showSearch = function (_, params) {
		    return true;
		  };
	
		  return Search;
		});
	
		S2.define('select2/dropdown/hidePlaceholder',[
	
		], function () {
		  function HidePlaceholder (decorated, $element, options, dataAdapter) {
		    this.placeholder = this.normalizePlaceholder(options.get('placeholder'));
	
		    decorated.call(this, $element, options, dataAdapter);
		  }
	
		  HidePlaceholder.prototype.append = function (decorated, data) {
		    data.results = this.removePlaceholder(data.results);
	
		    decorated.call(this, data);
		  };
	
		  HidePlaceholder.prototype.normalizePlaceholder = function (_, placeholder) {
		    if (typeof placeholder === 'string') {
		      placeholder = {
		        id: '',
		        text: placeholder
		      };
		    }
	
		    return placeholder;
		  };
	
		  HidePlaceholder.prototype.removePlaceholder = function (_, data) {
		    var modifiedData = data.slice(0);
	
		    for (var d = data.length - 1; d >= 0; d--) {
		      var item = data[d];
	
		      if (this.placeholder.id === item.id) {
		        modifiedData.splice(d, 1);
		      }
		    }
	
		    return modifiedData;
		  };
	
		  return HidePlaceholder;
		});
	
		S2.define('select2/dropdown/infiniteScroll',[
		  'jquery'
		], function ($) {
		  function InfiniteScroll (decorated, $element, options, dataAdapter) {
		    this.lastParams = {};
	
		    decorated.call(this, $element, options, dataAdapter);
	
		    this.$loadingMore = this.createLoadingMore();
		    this.loading = false;
		  }
	
		  InfiniteScroll.prototype.append = function (decorated, data) {
		    this.$loadingMore.remove();
		    this.loading = false;
	
		    decorated.call(this, data);
	
		    if (this.showLoadingMore(data)) {
		      this.$results.append(this.$loadingMore);
		    }
		  };
	
		  InfiniteScroll.prototype.bind = function (decorated, container, $container) {
		    var self = this;
	
		    decorated.call(this, container, $container);
	
		    container.on('query', function (params) {
		      self.lastParams = params;
		      self.loading = true;
		    });
	
		    container.on('query:append', function (params) {
		      self.lastParams = params;
		      self.loading = true;
		    });
	
		    this.$results.on('scroll', function () {
		      var isLoadMoreVisible = $.contains(
		        document.documentElement,
		        self.$loadingMore[0]
		      );
	
		      if (self.loading || !isLoadMoreVisible) {
		        return;
		      }
	
		      var currentOffset = self.$results.offset().top +
		        self.$results.outerHeight(false);
		      var loadingMoreOffset = self.$loadingMore.offset().top +
		        self.$loadingMore.outerHeight(false);
	
		      if (currentOffset + 50 >= loadingMoreOffset) {
		        self.loadMore();
		      }
		    });
		  };
	
		  InfiniteScroll.prototype.loadMore = function () {
		    this.loading = true;
	
		    var params = $.extend({}, {page: 1}, this.lastParams);
	
		    params.page++;
	
		    this.trigger('query:append', params);
		  };
	
		  InfiniteScroll.prototype.showLoadingMore = function (_, data) {
		    return data.pagination && data.pagination.more;
		  };
	
		  InfiniteScroll.prototype.createLoadingMore = function () {
		    var $option = $(
		      '<li ' +
		      'class="select2-results__option select2-results__option--load-more"' +
		      'role="treeitem" aria-disabled="true"></li>'
		    );
	
		    var message = this.options.get('translations').get('loadingMore');
	
		    $option.html(message(this.lastParams));
	
		    return $option;
		  };
	
		  return InfiniteScroll;
		});
	
		S2.define('select2/dropdown/attachBody',[
		  'jquery',
		  '../utils'
		], function ($, Utils) {
		  function AttachBody (decorated, $element, options) {
		    this.$dropdownParent = options.get('dropdownParent') || $(document.body);
	
		    decorated.call(this, $element, options);
		  }
	
		  AttachBody.prototype.bind = function (decorated, container, $container) {
		    var self = this;
	
		    var setupResultsEvents = false;
	
		    decorated.call(this, container, $container);
	
		    container.on('open', function () {
		      self._showDropdown();
		      self._attachPositioningHandler(container);
	
		      if (!setupResultsEvents) {
		        setupResultsEvents = true;
	
		        container.on('results:all', function () {
		          self._positionDropdown();
		          self._resizeDropdown();
		        });
	
		        container.on('results:append', function () {
		          self._positionDropdown();
		          self._resizeDropdown();
		        });
		      }
		    });
	
		    container.on('close', function () {
		      self._hideDropdown();
		      self._detachPositioningHandler(container);
		    });
	
		    this.$dropdownContainer.on('mousedown', function (evt) {
		      evt.stopPropagation();
		    });
		  };
	
		  AttachBody.prototype.destroy = function (decorated) {
		    decorated.call(this);
	
		    this.$dropdownContainer.remove();
		  };
	
		  AttachBody.prototype.position = function (decorated, $dropdown, $container) {
		    // Clone all of the container classes
		    $dropdown.attr('class', $container.attr('class'));
	
		    $dropdown.removeClass('select2');
		    $dropdown.addClass('select2-container--open');
	
		    $dropdown.css({
		      position: 'absolute',
		      top: -999999
		    });
	
		    this.$container = $container;
		  };
	
		  AttachBody.prototype.render = function (decorated) {
		    var $container = $('<span></span>');
	
		    var $dropdown = decorated.call(this);
		    $container.append($dropdown);
	
		    this.$dropdownContainer = $container;
	
		    return $container;
		  };
	
		  AttachBody.prototype._hideDropdown = function (decorated) {
		    this.$dropdownContainer.detach();
		  };
	
		  AttachBody.prototype._attachPositioningHandler =
		      function (decorated, container) {
		    var self = this;
	
		    var scrollEvent = 'scroll.select2.' + container.id;
		    var resizeEvent = 'resize.select2.' + container.id;
		    var orientationEvent = 'orientationchange.select2.' + container.id;
	
		    var $watchers = this.$container.parents().filter(Utils.hasScroll);
		    $watchers.each(function () {
		      $(this).data('select2-scroll-position', {
		        x: $(this).scrollLeft(),
		        y: $(this).scrollTop()
		      });
		    });
	
		    $watchers.on(scrollEvent, function (ev) {
		      var position = $(this).data('select2-scroll-position');
		      $(this).scrollTop(position.y);
		    });
	
		    $(window).on(scrollEvent + ' ' + resizeEvent + ' ' + orientationEvent,
		      function (e) {
		      self._positionDropdown();
		      self._resizeDropdown();
		    });
		  };
	
		  AttachBody.prototype._detachPositioningHandler =
		      function (decorated, container) {
		    var scrollEvent = 'scroll.select2.' + container.id;
		    var resizeEvent = 'resize.select2.' + container.id;
		    var orientationEvent = 'orientationchange.select2.' + container.id;
	
		    var $watchers = this.$container.parents().filter(Utils.hasScroll);
		    $watchers.off(scrollEvent);
	
		    $(window).off(scrollEvent + ' ' + resizeEvent + ' ' + orientationEvent);
		  };
	
		  AttachBody.prototype._positionDropdown = function () {
		    var $window = $(window);
	
		    var isCurrentlyAbove = this.$dropdown.hasClass('select2-dropdown--above');
		    var isCurrentlyBelow = this.$dropdown.hasClass('select2-dropdown--below');
	
		    var newDirection = null;
	
		    var offset = this.$container.offset();
	
		    offset.bottom = offset.top + this.$container.outerHeight(false);
	
		    var container = {
		      height: this.$container.outerHeight(false)
		    };
	
		    container.top = offset.top;
		    container.bottom = offset.top + container.height;
	
		    var dropdown = {
		      height: this.$dropdown.outerHeight(false)
		    };
	
		    var viewport = {
		      top: $window.scrollTop(),
		      bottom: $window.scrollTop() + $window.height()
		    };
	
		    var enoughRoomAbove = viewport.top < (offset.top - dropdown.height);
		    var enoughRoomBelow = viewport.bottom > (offset.bottom + dropdown.height);
	
		    var css = {
		      left: offset.left,
		      top: container.bottom
		    };
	
		    // Determine what the parent element is to use for calciulating the offset
		    var $offsetParent = this.$dropdownParent;
	
		    // For statically positoned elements, we need to get the element
		    // that is determining the offset
		    if ($offsetParent.css('position') === 'static') {
		      $offsetParent = $offsetParent.offsetParent();
		    }
	
		    var parentOffset = $offsetParent.offset();
	
		    css.top -= parentOffset.top;
		    css.left -= parentOffset.left;
	
		    if (!isCurrentlyAbove && !isCurrentlyBelow) {
		      newDirection = 'below';
		    }
	
		    if (!enoughRoomBelow && enoughRoomAbove && !isCurrentlyAbove) {
		      newDirection = 'above';
		    } else if (!enoughRoomAbove && enoughRoomBelow && isCurrentlyAbove) {
		      newDirection = 'below';
		    }
	
		    if (newDirection == 'above' ||
		      (isCurrentlyAbove && newDirection !== 'below')) {
		      css.top = container.top - parentOffset.top - dropdown.height;
		    }
	
		    if (newDirection != null) {
		      this.$dropdown
		        .removeClass('select2-dropdown--below select2-dropdown--above')
		        .addClass('select2-dropdown--' + newDirection);
		      this.$container
		        .removeClass('select2-container--below select2-container--above')
		        .addClass('select2-container--' + newDirection);
		    }
	
		    this.$dropdownContainer.css(css);
		  };
	
		  AttachBody.prototype._resizeDropdown = function () {
		    var css = {
		      width: this.$container.outerWidth(false) + 'px'
		    };
	
		    if (this.options.get('dropdownAutoWidth')) {
		      css.minWidth = css.width;
		      css.position = 'relative';
		      css.width = 'auto';
		    }
	
		    this.$dropdown.css(css);
		  };
	
		  AttachBody.prototype._showDropdown = function (decorated) {
		    this.$dropdownContainer.appendTo(this.$dropdownParent);
	
		    this._positionDropdown();
		    this._resizeDropdown();
		  };
	
		  return AttachBody;
		});
	
		S2.define('select2/dropdown/minimumResultsForSearch',[
	
		], function () {
		  function countResults (data) {
		    var count = 0;
	
		    for (var d = 0; d < data.length; d++) {
		      var item = data[d];
	
		      if (item.children) {
		        count += countResults(item.children);
		      } else {
		        count++;
		      }
		    }
	
		    return count;
		  }
	
		  function MinimumResultsForSearch (decorated, $element, options, dataAdapter) {
		    this.minimumResultsForSearch = options.get('minimumResultsForSearch');
	
		    if (this.minimumResultsForSearch < 0) {
		      this.minimumResultsForSearch = Infinity;
		    }
	
		    decorated.call(this, $element, options, dataAdapter);
		  }
	
		  MinimumResultsForSearch.prototype.showSearch = function (decorated, params) {
		    if (countResults(params.data.results) < this.minimumResultsForSearch) {
		      return false;
		    }
	
		    return decorated.call(this, params);
		  };
	
		  return MinimumResultsForSearch;
		});
	
		S2.define('select2/dropdown/selectOnClose',[
	
		], function () {
		  function SelectOnClose () { }
	
		  SelectOnClose.prototype.bind = function (decorated, container, $container) {
		    var self = this;
	
		    decorated.call(this, container, $container);
	
		    container.on('close', function (params) {
		      self._handleSelectOnClose(params);
		    });
		  };
	
		  SelectOnClose.prototype._handleSelectOnClose = function (_, params) {
		    if (params && params.originalSelect2Event != null) {
		      var event = params.originalSelect2Event;
	
		      // Don't select an item if the close event was triggered from a select or
		      // unselect event
		      if (event._type === 'select' || event._type === 'unselect') {
		        return;
		      }
		    }
	
		    var $highlightedResults = this.getHighlightedResults();
	
		    // Only select highlighted results
		    if ($highlightedResults.length < 1) {
		      return;
		    }
	
		    var data = $highlightedResults.data('data');
	
		    // Don't re-select already selected resulte
		    if (
		      (data.element != null && data.element.selected) ||
		      (data.element == null && data.selected)
		    ) {
		      return;
		    }
	
		    this.trigger('select', {
		        data: data
		    });
		  };
	
		  return SelectOnClose;
		});
	
		S2.define('select2/dropdown/closeOnSelect',[
	
		], function () {
		  function CloseOnSelect () { }
	
		  CloseOnSelect.prototype.bind = function (decorated, container, $container) {
		    var self = this;
	
		    decorated.call(this, container, $container);
	
		    container.on('select', function (evt) {
		      self._selectTriggered(evt);
		    });
	
		    container.on('unselect', function (evt) {
		      self._selectTriggered(evt);
		    });
		  };
	
		  CloseOnSelect.prototype._selectTriggered = function (_, evt) {
		    var originalEvent = evt.originalEvent;
	
		    // Don't close if the control key is being held
		    if (originalEvent && originalEvent.ctrlKey) {
		      return;
		    }
	
		    this.trigger('close', {
		      originalEvent: originalEvent,
		      originalSelect2Event: evt
		    });
		  };
	
		  return CloseOnSelect;
		});
	
		S2.define('select2/i18n/en',[],function () {
		  // English
		  return {
		    errorLoading: function () {
		      return 'The results could not be loaded.';
		    },
		    inputTooLong: function (args) {
		      var overChars = args.input.length - args.maximum;
	
		      var message = 'Please delete ' + overChars + ' character';
	
		      if (overChars != 1) {
		        message += 's';
		      }
	
		      return message;
		    },
		    inputTooShort: function (args) {
		      var remainingChars = args.minimum - args.input.length;
	
		      var message = 'Please enter ' + remainingChars + ' or more characters';
	
		      return message;
		    },
		    loadingMore: function () {
		      return 'Loading more results…';
		    },
		    maximumSelected: function (args) {
		      var message = 'You can only select ' + args.maximum + ' item';
	
		      if (args.maximum != 1) {
		        message += 's';
		      }
	
		      return message;
		    },
		    noResults: function () {
		      return 'No results found';
		    },
		    searching: function () {
		      return 'Searching…';
		    }
		  };
		});
	
		S2.define('select2/defaults',[
		  'jquery',
		  'require',
	
		  './results',
	
		  './selection/single',
		  './selection/multiple',
		  './selection/placeholder',
		  './selection/allowClear',
		  './selection/search',
		  './selection/eventRelay',
	
		  './utils',
		  './translation',
		  './diacritics',
	
		  './data/select',
		  './data/array',
		  './data/ajax',
		  './data/tags',
		  './data/tokenizer',
		  './data/minimumInputLength',
		  './data/maximumInputLength',
		  './data/maximumSelectionLength',
	
		  './dropdown',
		  './dropdown/search',
		  './dropdown/hidePlaceholder',
		  './dropdown/infiniteScroll',
		  './dropdown/attachBody',
		  './dropdown/minimumResultsForSearch',
		  './dropdown/selectOnClose',
		  './dropdown/closeOnSelect',
	
		  './i18n/en'
		], function ($, require,
	
		             ResultsList,
	
		             SingleSelection, MultipleSelection, Placeholder, AllowClear,
		             SelectionSearch, EventRelay,
	
		             Utils, Translation, DIACRITICS,
	
		             SelectData, ArrayData, AjaxData, Tags, Tokenizer,
		             MinimumInputLength, MaximumInputLength, MaximumSelectionLength,
	
		             Dropdown, DropdownSearch, HidePlaceholder, InfiniteScroll,
		             AttachBody, MinimumResultsForSearch, SelectOnClose, CloseOnSelect,
	
		             EnglishTranslation) {
		  function Defaults () {
		    this.reset();
		  }
	
		  Defaults.prototype.apply = function (options) {
		    options = $.extend(true, {}, this.defaults, options);
	
		    if (options.dataAdapter == null) {
		      if (options.ajax != null) {
		        options.dataAdapter = AjaxData;
		      } else if (options.data != null) {
		        options.dataAdapter = ArrayData;
		      } else {
		        options.dataAdapter = SelectData;
		      }
	
		      if (options.minimumInputLength > 0) {
		        options.dataAdapter = Utils.Decorate(
		          options.dataAdapter,
		          MinimumInputLength
		        );
		      }
	
		      if (options.maximumInputLength > 0) {
		        options.dataAdapter = Utils.Decorate(
		          options.dataAdapter,
		          MaximumInputLength
		        );
		      }
	
		      if (options.maximumSelectionLength > 0) {
		        options.dataAdapter = Utils.Decorate(
		          options.dataAdapter,
		          MaximumSelectionLength
		        );
		      }
	
		      if (options.tags) {
		        options.dataAdapter = Utils.Decorate(options.dataAdapter, Tags);
		      }
	
		      if (options.tokenSeparators != null || options.tokenizer != null) {
		        options.dataAdapter = Utils.Decorate(
		          options.dataAdapter,
		          Tokenizer
		        );
		      }
	
		      if (options.query != null) {
		        var Query = require(options.amdBase + 'compat/query');
	
		        options.dataAdapter = Utils.Decorate(
		          options.dataAdapter,
		          Query
		        );
		      }
	
		      if (options.initSelection != null) {
		        var InitSelection = require(options.amdBase + 'compat/initSelection');
	
		        options.dataAdapter = Utils.Decorate(
		          options.dataAdapter,
		          InitSelection
		        );
		      }
		    }
	
		    if (options.resultsAdapter == null) {
		      options.resultsAdapter = ResultsList;
	
		      if (options.ajax != null) {
		        options.resultsAdapter = Utils.Decorate(
		          options.resultsAdapter,
		          InfiniteScroll
		        );
		      }
	
		      if (options.placeholder != null) {
		        options.resultsAdapter = Utils.Decorate(
		          options.resultsAdapter,
		          HidePlaceholder
		        );
		      }
	
		      if (options.selectOnClose) {
		        options.resultsAdapter = Utils.Decorate(
		          options.resultsAdapter,
		          SelectOnClose
		        );
		      }
		    }
	
		    if (options.dropdownAdapter == null) {
		      if (options.multiple) {
		        options.dropdownAdapter = Dropdown;
		      } else {
		        var SearchableDropdown = Utils.Decorate(Dropdown, DropdownSearch);
	
		        options.dropdownAdapter = SearchableDropdown;
		      }
	
		      if (options.minimumResultsForSearch !== 0) {
		        options.dropdownAdapter = Utils.Decorate(
		          options.dropdownAdapter,
		          MinimumResultsForSearch
		        );
		      }
	
		      if (options.closeOnSelect) {
		        options.dropdownAdapter = Utils.Decorate(
		          options.dropdownAdapter,
		          CloseOnSelect
		        );
		      }
	
		      if (
		        options.dropdownCssClass != null ||
		        options.dropdownCss != null ||
		        options.adaptDropdownCssClass != null
		      ) {
		        var DropdownCSS = require(options.amdBase + 'compat/dropdownCss');
	
		        options.dropdownAdapter = Utils.Decorate(
		          options.dropdownAdapter,
		          DropdownCSS
		        );
		      }
	
		      options.dropdownAdapter = Utils.Decorate(
		        options.dropdownAdapter,
		        AttachBody
		      );
		    }
	
		    if (options.selectionAdapter == null) {
		      if (options.multiple) {
		        options.selectionAdapter = MultipleSelection;
		      } else {
		        options.selectionAdapter = SingleSelection;
		      }
	
		      // Add the placeholder mixin if a placeholder was specified
		      if (options.placeholder != null) {
		        options.selectionAdapter = Utils.Decorate(
		          options.selectionAdapter,
		          Placeholder
		        );
		      }
	
		      if (options.allowClear) {
		        options.selectionAdapter = Utils.Decorate(
		          options.selectionAdapter,
		          AllowClear
		        );
		      }
	
		      if (options.multiple) {
		        options.selectionAdapter = Utils.Decorate(
		          options.selectionAdapter,
		          SelectionSearch
		        );
		      }
	
		      if (
		        options.containerCssClass != null ||
		        options.containerCss != null ||
		        options.adaptContainerCssClass != null
		      ) {
		        var ContainerCSS = require(options.amdBase + 'compat/containerCss');
	
		        options.selectionAdapter = Utils.Decorate(
		          options.selectionAdapter,
		          ContainerCSS
		        );
		      }
	
		      options.selectionAdapter = Utils.Decorate(
		        options.selectionAdapter,
		        EventRelay
		      );
		    }
	
		    if (typeof options.language === 'string') {
		      // Check if the language is specified with a region
		      if (options.language.indexOf('-') > 0) {
		        // Extract the region information if it is included
		        var languageParts = options.language.split('-');
		        var baseLanguage = languageParts[0];
	
		        options.language = [options.language, baseLanguage];
		      } else {
		        options.language = [options.language];
		      }
		    }
	
		    if ($.isArray(options.language)) {
		      var languages = new Translation();
		      options.language.push('en');
	
		      var languageNames = options.language;
	
		      for (var l = 0; l < languageNames.length; l++) {
		        var name = languageNames[l];
		        var language = {};
	
		        try {
		          // Try to load it with the original name
		          language = Translation.loadPath(name);
		        } catch (e) {
		          try {
		            // If we couldn't load it, check if it wasn't the full path
		            name = this.defaults.amdLanguageBase + name;
		            language = Translation.loadPath(name);
		          } catch (ex) {
		            // The translation could not be loaded at all. Sometimes this is
		            // because of a configuration problem, other times this can be
		            // because of how Select2 helps load all possible translation files.
		            if (options.debug && window.console && console.warn) {
		              console.warn(
		                'Select2: The language file for "' + name + '" could not be ' +
		                'automatically loaded. A fallback will be used instead.'
		              );
		            }
	
		            continue;
		          }
		        }
	
		        languages.extend(language);
		      }
	
		      options.translations = languages;
		    } else {
		      var baseTranslation = Translation.loadPath(
		        this.defaults.amdLanguageBase + 'en'
		      );
		      var customTranslation = new Translation(options.language);
	
		      customTranslation.extend(baseTranslation);
	
		      options.translations = customTranslation;
		    }
	
		    return options;
		  };
	
		  Defaults.prototype.reset = function () {
		    function stripDiacritics (text) {
		      // Used 'uni range + named function' from http://jsperf.com/diacritics/18
		      function match(a) {
		        return DIACRITICS[a] || a;
		      }
	
		      return text.replace(/[^\u0000-\u007E]/g, match);
		    }
	
		    function matcher (params, data) {
		      // Always return the object if there is nothing to compare
		      if ($.trim(params.term) === '') {
		        return data;
		      }
	
		      // Do a recursive check for options with children
		      if (data.children && data.children.length > 0) {
		        // Clone the data object if there are children
		        // This is required as we modify the object to remove any non-matches
		        var match = $.extend(true, {}, data);
	
		        // Check each child of the option
		        for (var c = data.children.length - 1; c >= 0; c--) {
		          var child = data.children[c];
	
		          var matches = matcher(params, child);
	
		          // If there wasn't a match, remove the object in the array
		          if (matches == null) {
		            match.children.splice(c, 1);
		          }
		        }
	
		        // If any children matched, return the new object
		        if (match.children.length > 0) {
		          return match;
		        }
	
		        // If there were no matching children, check just the plain object
		        return matcher(params, match);
		      }
	
		      var original = stripDiacritics(data.text).toUpperCase();
		      var term = stripDiacritics(params.term).toUpperCase();
	
		      // Check if the text contains the term
		      if (original.indexOf(term) > -1) {
		        return data;
		      }
	
		      // If it doesn't contain the term, don't return anything
		      return null;
		    }
	
		    this.defaults = {
		      amdBase: './',
		      amdLanguageBase: './i18n/',
		      closeOnSelect: true,
		      debug: false,
		      dropdownAutoWidth: false,
		      escapeMarkup: Utils.escapeMarkup,
		      language: EnglishTranslation,
		      matcher: matcher,
		      minimumInputLength: 0,
		      maximumInputLength: 0,
		      maximumSelectionLength: 0,
		      minimumResultsForSearch: 0,
		      selectOnClose: false,
		      sorter: function (data) {
		        return data;
		      },
		      templateResult: function (result) {
		        return result.text;
		      },
		      templateSelection: function (selection) {
		        return selection.text;
		      },
		      theme: 'default',
		      width: 'resolve'
		    };
		  };
	
		  Defaults.prototype.set = function (key, value) {
		    var camelKey = $.camelCase(key);
	
		    var data = {};
		    data[camelKey] = value;
	
		    var convertedData = Utils._convertData(data);
	
		    $.extend(this.defaults, convertedData);
		  };
	
		  var defaults = new Defaults();
	
		  return defaults;
		});
	
		S2.define('select2/options',[
		  'require',
		  'jquery',
		  './defaults',
		  './utils'
		], function (require, $, Defaults, Utils) {
		  function Options (options, $element) {
		    this.options = options;
	
		    if ($element != null) {
		      this.fromElement($element);
		    }
	
		    this.options = Defaults.apply(this.options);
	
		    if ($element && $element.is('input')) {
		      var InputCompat = require(this.get('amdBase') + 'compat/inputData');
	
		      this.options.dataAdapter = Utils.Decorate(
		        this.options.dataAdapter,
		        InputCompat
		      );
		    }
		  }
	
		  Options.prototype.fromElement = function ($e) {
		    var excludedData = ['select2'];
	
		    if (this.options.multiple == null) {
		      this.options.multiple = $e.prop('multiple');
		    }
	
		    if (this.options.disabled == null) {
		      this.options.disabled = $e.prop('disabled');
		    }
	
		    if (this.options.language == null) {
		      if ($e.prop('lang')) {
		        this.options.language = $e.prop('lang').toLowerCase();
		      } else if ($e.closest('[lang]').prop('lang')) {
		        this.options.language = $e.closest('[lang]').prop('lang');
		      }
		    }
	
		    if (this.options.dir == null) {
		      if ($e.prop('dir')) {
		        this.options.dir = $e.prop('dir');
		      } else if ($e.closest('[dir]').prop('dir')) {
		        this.options.dir = $e.closest('[dir]').prop('dir');
		      } else {
		        this.options.dir = 'ltr';
		      }
		    }
	
		    $e.prop('disabled', this.options.disabled);
		    $e.prop('multiple', this.options.multiple);
	
		    if ($e.data('select2Tags')) {
		      if (this.options.debug && window.console && console.warn) {
		        console.warn(
		          'Select2: The `data-select2-tags` attribute has been changed to ' +
		          'use the `data-data` and `data-tags="true"` attributes and will be ' +
		          'removed in future versions of Select2.'
		        );
		      }
	
		      $e.data('data', $e.data('select2Tags'));
		      $e.data('tags', true);
		    }
	
		    if ($e.data('ajaxUrl')) {
		      if (this.options.debug && window.console && console.warn) {
		        console.warn(
		          'Select2: The `data-ajax-url` attribute has been changed to ' +
		          '`data-ajax--url` and support for the old attribute will be removed' +
		          ' in future versions of Select2.'
		        );
		      }
	
		      $e.attr('ajax--url', $e.data('ajaxUrl'));
		      $e.data('ajax--url', $e.data('ajaxUrl'));
		    }
	
		    var dataset = {};
	
		    // Prefer the element's `dataset` attribute if it exists
		    // jQuery 1.x does not correctly handle data attributes with multiple dashes
		    if ($.fn.jquery && $.fn.jquery.substr(0, 2) == '1.' && $e[0].dataset) {
		      dataset = $.extend(true, {}, $e[0].dataset, $e.data());
		    } else {
		      dataset = $e.data();
		    }
	
		    var data = $.extend(true, {}, dataset);
	
		    data = Utils._convertData(data);
	
		    for (var key in data) {
		      if ($.inArray(key, excludedData) > -1) {
		        continue;
		      }
	
		      if ($.isPlainObject(this.options[key])) {
		        $.extend(this.options[key], data[key]);
		      } else {
		        this.options[key] = data[key];
		      }
		    }
	
		    return this;
		  };
	
		  Options.prototype.get = function (key) {
		    return this.options[key];
		  };
	
		  Options.prototype.set = function (key, val) {
		    this.options[key] = val;
		  };
	
		  return Options;
		});
	
		S2.define('select2/core',[
		  'jquery',
		  './options',
		  './utils',
		  './keys'
		], function ($, Options, Utils, KEYS) {
		  var Select2 = function ($element, options) {
		    if ($element.data('select2') != null) {
		      $element.data('select2').destroy();
		    }
	
		    this.$element = $element;
	
		    this.id = this._generateId($element);
	
		    options = options || {};
	
		    this.options = new Options(options, $element);
	
		    Select2.__super__.constructor.call(this);
	
		    // Set up the tabindex
	
		    var tabindex = $element.attr('tabindex') || 0;
		    $element.data('old-tabindex', tabindex);
		    $element.attr('tabindex', '-1');
	
		    // Set up containers and adapters
	
		    var DataAdapter = this.options.get('dataAdapter');
		    this.dataAdapter = new DataAdapter($element, this.options);
	
		    var $container = this.render();
	
		    this._placeContainer($container);
	
		    var SelectionAdapter = this.options.get('selectionAdapter');
		    this.selection = new SelectionAdapter($element, this.options);
		    this.$selection = this.selection.render();
	
		    this.selection.position(this.$selection, $container);
	
		    var DropdownAdapter = this.options.get('dropdownAdapter');
		    this.dropdown = new DropdownAdapter($element, this.options);
		    this.$dropdown = this.dropdown.render();
	
		    this.dropdown.position(this.$dropdown, $container);
	
		    var ResultsAdapter = this.options.get('resultsAdapter');
		    this.results = new ResultsAdapter($element, this.options, this.dataAdapter);
		    this.$results = this.results.render();
	
		    this.results.position(this.$results, this.$dropdown);
	
		    // Bind events
	
		    var self = this;
	
		    // Bind the container to all of the adapters
		    this._bindAdapters();
	
		    // Register any DOM event handlers
		    this._registerDomEvents();
	
		    // Register any internal event handlers
		    this._registerDataEvents();
		    this._registerSelectionEvents();
		    this._registerDropdownEvents();
		    this._registerResultsEvents();
		    this._registerEvents();
	
		    // Set the initial state
		    this.dataAdapter.current(function (initialData) {
		      self.trigger('selection:update', {
		        data: initialData
		      });
		    });
	
		    // Hide the original select
		    $element.addClass('select2-hidden-accessible');
		    $element.attr('aria-hidden', 'true');
	
		    // Synchronize any monitored attributes
		    this._syncAttributes();
	
		    $element.data('select2', this);
		  };
	
		  Utils.Extend(Select2, Utils.Observable);
	
		  Select2.prototype._generateId = function ($element) {
		    var id = '';
	
		    if ($element.attr('id') != null) {
		      id = $element.attr('id');
		    } else if ($element.attr('name') != null) {
		      id = $element.attr('name') + '-' + Utils.generateChars(2);
		    } else {
		      id = Utils.generateChars(4);
		    }
	
		    id = id.replace(/(:|\.|\[|\]|,)/g, '');
		    id = 'select2-' + id;
	
		    return id;
		  };
	
		  Select2.prototype._placeContainer = function ($container) {
		    $container.insertAfter(this.$element);
	
		    var width = this._resolveWidth(this.$element, this.options.get('width'));
	
		    if (width != null) {
		      $container.css('width', width);
		    }
		  };
	
		  Select2.prototype._resolveWidth = function ($element, method) {
		    var WIDTH = /^width:(([-+]?([0-9]*\.)?[0-9]+)(px|em|ex|%|in|cm|mm|pt|pc))/i;
	
		    if (method == 'resolve') {
		      var styleWidth = this._resolveWidth($element, 'style');
	
		      if (styleWidth != null) {
		        return styleWidth;
		      }
	
		      return this._resolveWidth($element, 'element');
		    }
	
		    if (method == 'element') {
		      var elementWidth = $element.outerWidth(false);
	
		      if (elementWidth <= 0) {
		        return 'auto';
		      }
	
		      return elementWidth + 'px';
		    }
	
		    if (method == 'style') {
		      var style = $element.attr('style');
	
		      if (typeof(style) !== 'string') {
		        return null;
		      }
	
		      var attrs = style.split(';');
	
		      for (var i = 0, l = attrs.length; i < l; i = i + 1) {
		        var attr = attrs[i].replace(/\s/g, '');
		        var matches = attr.match(WIDTH);
	
		        if (matches !== null && matches.length >= 1) {
		          return matches[1];
		        }
		      }
	
		      return null;
		    }
	
		    return method;
		  };
	
		  Select2.prototype._bindAdapters = function () {
		    this.dataAdapter.bind(this, this.$container);
		    this.selection.bind(this, this.$container);
	
		    this.dropdown.bind(this, this.$container);
		    this.results.bind(this, this.$container);
		  };
	
		  Select2.prototype._registerDomEvents = function () {
		    var self = this;
	
		    this.$element.on('change.select2', function () {
		      self.dataAdapter.current(function (data) {
		        self.trigger('selection:update', {
		          data: data
		        });
		      });
		    });
	
		    this.$element.on('focus.select2', function (evt) {
		      self.trigger('focus', evt);
		    });
	
		    this._syncA = Utils.bind(this._syncAttributes, this);
		    this._syncS = Utils.bind(this._syncSubtree, this);
	
		    if (this.$element[0].attachEvent) {
		      this.$element[0].attachEvent('onpropertychange', this._syncA);
		    }
	
		    var observer = window.MutationObserver ||
		      window.WebKitMutationObserver ||
		      window.MozMutationObserver
		    ;
	
		    if (observer != null) {
		      this._observer = new observer(function (mutations) {
		        $.each(mutations, self._syncA);
		        $.each(mutations, self._syncS);
		      });
		      this._observer.observe(this.$element[0], {
		        attributes: true,
		        childList: true,
		        subtree: false
		      });
		    } else if (this.$element[0].addEventListener) {
		      this.$element[0].addEventListener(
		        'DOMAttrModified',
		        self._syncA,
		        false
		      );
		      this.$element[0].addEventListener(
		        'DOMNodeInserted',
		        self._syncS,
		        false
		      );
		      this.$element[0].addEventListener(
		        'DOMNodeRemoved',
		        self._syncS,
		        false
		      );
		    }
		  };
	
		  Select2.prototype._registerDataEvents = function () {
		    var self = this;
	
		    this.dataAdapter.on('*', function (name, params) {
		      self.trigger(name, params);
		    });
		  };
	
		  Select2.prototype._registerSelectionEvents = function () {
		    var self = this;
		    var nonRelayEvents = ['toggle', 'focus'];
	
		    this.selection.on('toggle', function () {
		      self.toggleDropdown();
		    });
	
		    this.selection.on('focus', function (params) {
		      self.focus(params);
		    });
	
		    this.selection.on('*', function (name, params) {
		      if ($.inArray(name, nonRelayEvents) !== -1) {
		        return;
		      }
	
		      self.trigger(name, params);
		    });
		  };
	
		  Select2.prototype._registerDropdownEvents = function () {
		    var self = this;
	
		    this.dropdown.on('*', function (name, params) {
		      self.trigger(name, params);
		    });
		  };
	
		  Select2.prototype._registerResultsEvents = function () {
		    var self = this;
	
		    this.results.on('*', function (name, params) {
		      self.trigger(name, params);
		    });
		  };
	
		  Select2.prototype._registerEvents = function () {
		    var self = this;
	
		    this.on('open', function () {
		      self.$container.addClass('select2-container--open');
		    });
	
		    this.on('close', function () {
		      self.$container.removeClass('select2-container--open');
		    });
	
		    this.on('enable', function () {
		      self.$container.removeClass('select2-container--disabled');
		    });
	
		    this.on('disable', function () {
		      self.$container.addClass('select2-container--disabled');
		    });
	
		    this.on('blur', function () {
		      self.$container.removeClass('select2-container--focus');
		    });
	
		    this.on('query', function (params) {
		      if (!self.isOpen()) {
		        self.trigger('open', {});
		      }
	
		      this.dataAdapter.query(params, function (data) {
		        self.trigger('results:all', {
		          data: data,
		          query: params
		        });
		      });
		    });
	
		    this.on('query:append', function (params) {
		      this.dataAdapter.query(params, function (data) {
		        self.trigger('results:append', {
		          data: data,
		          query: params
		        });
		      });
		    });
	
		    this.on('keypress', function (evt) {
		      var key = evt.which;
	
		      if (self.isOpen()) {
		        if (key === KEYS.ESC || key === KEYS.TAB ||
		            (key === KEYS.UP && evt.altKey)) {
		          self.close();
	
		          evt.preventDefault();
		        } else if (key === KEYS.ENTER) {
		          self.trigger('results:select', {});
	
		          evt.preventDefault();
		        } else if ((key === KEYS.SPACE && evt.ctrlKey)) {
		          self.trigger('results:toggle', {});
	
		          evt.preventDefault();
		        } else if (key === KEYS.UP) {
		          self.trigger('results:previous', {});
	
		          evt.preventDefault();
		        } else if (key === KEYS.DOWN) {
		          self.trigger('results:next', {});
	
		          evt.preventDefault();
		        }
		      } else {
		        if (key === KEYS.ENTER || key === KEYS.SPACE ||
		            (key === KEYS.DOWN && evt.altKey)) {
		          self.open();
	
		          evt.preventDefault();
		        }
		      }
		    });
		  };
	
		  Select2.prototype._syncAttributes = function () {
		    this.options.set('disabled', this.$element.prop('disabled'));
	
		    if (this.options.get('disabled')) {
		      if (this.isOpen()) {
		        this.close();
		      }
	
		      this.trigger('disable', {});
		    } else {
		      this.trigger('enable', {});
		    }
		  };
	
		  Select2.prototype._syncSubtree = function (evt, mutations) {
		    var changed = false;
		    var self = this;
	
		    // Ignore any mutation events raised for elements that aren't options or
		    // optgroups. This handles the case when the select element is destroyed
		    if (
		      evt && evt.target && (
		        evt.target.nodeName !== 'OPTION' && evt.target.nodeName !== 'OPTGROUP'
		      )
		    ) {
		      return;
		    }
	
		    if (!mutations) {
		      // If mutation events aren't supported, then we can only assume that the
		      // change affected the selections
		      changed = true;
		    } else if (mutations.addedNodes && mutations.addedNodes.length > 0) {
		      for (var n = 0; n < mutations.addedNodes.length; n++) {
		        var node = mutations.addedNodes[n];
	
		        if (node.selected) {
		          changed = true;
		        }
		      }
		    } else if (mutations.removedNodes && mutations.removedNodes.length > 0) {
		      changed = true;
		    }
	
		    // Only re-pull the data if we think there is a change
		    if (changed) {
		      this.dataAdapter.current(function (currentData) {
		        self.trigger('selection:update', {
		          data: currentData
		        });
		      });
		    }
		  };
	
		  /**
		   * Override the trigger method to automatically trigger pre-events when
		   * there are events that can be prevented.
		   */
		  Select2.prototype.trigger = function (name, args) {
		    var actualTrigger = Select2.__super__.trigger;
		    var preTriggerMap = {
		      'open': 'opening',
		      'close': 'closing',
		      'select': 'selecting',
		      'unselect': 'unselecting'
		    };
	
		    if (args === undefined) {
		      args = {};
		    }
	
		    if (name in preTriggerMap) {
		      var preTriggerName = preTriggerMap[name];
		      var preTriggerArgs = {
		        prevented: false,
		        name: name,
		        args: args
		      };
	
		      actualTrigger.call(this, preTriggerName, preTriggerArgs);
	
		      if (preTriggerArgs.prevented) {
		        args.prevented = true;
	
		        return;
		      }
		    }
	
		    actualTrigger.call(this, name, args);
		  };
	
		  Select2.prototype.toggleDropdown = function () {
		    if (this.options.get('disabled')) {
		      return;
		    }
	
		    if (this.isOpen()) {
		      this.close();
		    } else {
		      this.open();
		    }
		  };
	
		  Select2.prototype.open = function () {
		    if (this.isOpen()) {
		      return;
		    }
	
		    this.trigger('query', {});
		  };
	
		  Select2.prototype.close = function () {
		    if (!this.isOpen()) {
		      return;
		    }
	
		    this.trigger('close', {});
		  };
	
		  Select2.prototype.isOpen = function () {
		    return this.$container.hasClass('select2-container--open');
		  };
	
		  Select2.prototype.hasFocus = function () {
		    return this.$container.hasClass('select2-container--focus');
		  };
	
		  Select2.prototype.focus = function (data) {
		    // No need to re-trigger focus events if we are already focused
		    if (this.hasFocus()) {
		      return;
		    }
	
		    this.$container.addClass('select2-container--focus');
		    this.trigger('focus', {});
		  };
	
		  Select2.prototype.enable = function (args) {
		    if (this.options.get('debug') && window.console && console.warn) {
		      console.warn(
		        'Select2: The `select2("enable")` method has been deprecated and will' +
		        ' be removed in later Select2 versions. Use $element.prop("disabled")' +
		        ' instead.'
		      );
		    }
	
		    if (args == null || args.length === 0) {
		      args = [true];
		    }
	
		    var disabled = !args[0];
	
		    this.$element.prop('disabled', disabled);
		  };
	
		  Select2.prototype.data = function () {
		    if (this.options.get('debug') &&
		        arguments.length > 0 && window.console && console.warn) {
		      console.warn(
		        'Select2: Data can no longer be set using `select2("data")`. You ' +
		        'should consider setting the value instead using `$element.val()`.'
		      );
		    }
	
		    var data = [];
	
		    this.dataAdapter.current(function (currentData) {
		      data = currentData;
		    });
	
		    return data;
		  };
	
		  Select2.prototype.val = function (args) {
		    if (this.options.get('debug') && window.console && console.warn) {
		      console.warn(
		        'Select2: The `select2("val")` method has been deprecated and will be' +
		        ' removed in later Select2 versions. Use $element.val() instead.'
		      );
		    }
	
		    if (args == null || args.length === 0) {
		      return this.$element.val();
		    }
	
		    var newVal = args[0];
	
		    if ($.isArray(newVal)) {
		      newVal = $.map(newVal, function (obj) {
		        return obj.toString();
		      });
		    }
	
		    this.$element.val(newVal).trigger('change');
		  };
	
		  Select2.prototype.destroy = function () {
		    this.$container.remove();
	
		    if (this.$element[0].detachEvent) {
		      this.$element[0].detachEvent('onpropertychange', this._syncA);
		    }
	
		    if (this._observer != null) {
		      this._observer.disconnect();
		      this._observer = null;
		    } else if (this.$element[0].removeEventListener) {
		      this.$element[0]
		        .removeEventListener('DOMAttrModified', this._syncA, false);
		      this.$element[0]
		        .removeEventListener('DOMNodeInserted', this._syncS, false);
		      this.$element[0]
		        .removeEventListener('DOMNodeRemoved', this._syncS, false);
		    }
	
		    this._syncA = null;
		    this._syncS = null;
	
		    this.$element.off('.select2');
		    this.$element.attr('tabindex', this.$element.data('old-tabindex'));
	
		    this.$element.removeClass('select2-hidden-accessible');
		    this.$element.attr('aria-hidden', 'false');
		    this.$element.removeData('select2');
	
		    this.dataAdapter.destroy();
		    this.selection.destroy();
		    this.dropdown.destroy();
		    this.results.destroy();
	
		    this.dataAdapter = null;
		    this.selection = null;
		    this.dropdown = null;
		    this.results = null;
		  };
	
		  Select2.prototype.render = function () {
		    var $container = $(
		      '<span class="select2 select2-container">' +
		        '<span class="selection"></span>' +
		        '<span class="dropdown-wrapper" aria-hidden="true"></span>' +
		      '</span>'
		    );
	
		    $container.attr('dir', this.options.get('dir'));
	
		    this.$container = $container;
	
		    this.$container.addClass('select2-container--' + this.options.get('theme'));
	
		    $container.data('element', this.$element);
	
		    return $container;
		  };
	
		  return Select2;
		});
	
		S2.define('jquery-mousewheel',[
		  'jquery'
		], function ($) {
		  // Used to shim jQuery.mousewheel for non-full builds.
		  return $;
		});
	
		S2.define('jquery.select2',[
		  'jquery',
		  'jquery-mousewheel',
	
		  './select2/core',
		  './select2/defaults'
		], function ($, _, Select2, Defaults) {
		  if ($.fn.select2 == null) {
		    // All methods that should return the element
		    var thisMethods = ['open', 'close', 'destroy'];
	
		    $.fn.select2 = function (options) {
		      options = options || {};
	
		      if (typeof options === 'object') {
		        this.each(function () {
		          var instanceOptions = $.extend(true, {}, options);
	
		          var instance = new Select2($(this), instanceOptions);
		        });
	
		        return this;
		      } else if (typeof options === 'string') {
		        var ret;
		        var args = Array.prototype.slice.call(arguments, 1);
	
		        this.each(function () {
		          var instance = $(this).data('select2');
	
		          if (instance == null && window.console && console.error) {
		            console.error(
		              'The select2(\'' + options + '\') method was called on an ' +
		              'element that is not using Select2.'
		            );
		          }
	
		          ret = instance[options].apply(instance, args);
		        });
	
		        // Check if we should be returning `this`
		        if ($.inArray(options, thisMethods) > -1) {
		          return this;
		        }
	
		        return ret;
		      } else {
		        throw new Error('Invalid arguments for Select2: ' + options);
		      }
		    };
		  }
	
		  if ($.fn.select2.defaults == null) {
		    $.fn.select2.defaults = Defaults;
		  }
	
		  return Select2;
		});
	
		  // Return the AMD loader configuration so it can be used outside of this file
		  return {
		    define: S2.define,
		    require: S2.require
		  };
		}());
	
		  // Autoload the jQuery bindings
		  // We know that all of the modules exist above this, so we're safe
		  var select2 = S2.require('jquery.select2');
	
		  // Hold the AMD module references on the jQuery function that was just loaded
		  // This allows Select2 to use the internal loader outside of this file, such
		  // as in the language files.
		  jQuery.fn.select2.amd = S2;
	
		  // Return the Select2 instance for anyone who is importing it.
		  return select2;
		}));
	
	
	/***/ },
	/* 41 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
	
		var $ = __webpack_require__(4);
	
	
		function Image() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.Image = module.exports = inherit(Image, BaseModule, {
	
			busEvents: {},
	
			domEvents: {},
	
			init: function () {
	
			}
	
		});
	
	/***/ },
	/* 42 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
	
		var $ = __webpack_require__(4);
	
	
		function List() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.List = module.exports = inherit(List, BaseModule, {
	
			busEvents: {},
	
			domEvents: {},
	
			init: function () {
	
			}
	
		});
	
	/***/ },
	/* 43 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
	
		var $ = __webpack_require__(4);
	
	
		function MediaBanner() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.MediaBanner = module.exports = inherit(MediaBanner, BaseModule, {
	
			busEvents: {},
	
			domEvents: {},
	
			init: function () {
	
			}
	
		});
	
	/***/ },
	/* 44 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
	
		var $ = __webpack_require__(4);
	
	
		function ProgressIndicator() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.ProgressIndicator = module.exports = inherit(ProgressIndicator, BaseModule, {
	
			busEvents: {},
	
			domEvents: {},
	
			init: function () {
	
			}
	
		});
	
	/***/ },
	/* 45 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
	
		var $ = __webpack_require__(4);
	
	
		function Sandbox() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.Sandbox = module.exports = inherit(Sandbox, BaseModule, {
	
			busEvents: {},
	
			domEvents: {},
	
			init: function () {
	
			}
	
		});
	
	/***/ },
	/* 46 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var commons = __webpack_require__(23);
		var inherit = __webpack_require__(14);
	
		var $ = __webpack_require__(4);
	
		function ShareBar() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.ShareBar = module.exports = inherit(ShareBar, BaseModule, {
	
			busEvents: {
				'windowResize': 'onWindowResize',
				'breakpointChange': 'onBreakpointChange'
			},
	
			domEvents: {
				'click .mod-share-bar__button-expand' : 'toggleButton'
			},
	
			touchClass: 'is-touch',
	
			init: function () {
				this.$bar    = this.find('.mod-share-bar__inner');
				this.$button = this.find('.mod-share-bar__button-expand');
			},
	
			expander : function(show) {
				if(show == true) {
					this.$ctx.addClass('has-opener');
					this.$button.show();
				}
				else {
					this.$ctx.removeClass('has-opener');
					this.$button.hide();
				}
			},
	
			toggleButton: function(event) {
				event.preventDefault();
				this.$ctx.toggleClass("is-expanded");
			},
	
			getBarWidth : function () {
				// Initial width + padding
				var barWidth = parseInt(this.$bar.css('paddingLeft')) + parseInt(this.$bar.css('paddingRight'));
				this.$ctx.find('.mod-share-bar__bar-item').each(function(){
					barWidth += $(this).width();
				});
	
				return barWidth;
			},
	
			onWindowResize : function () {
				var barWidth = this.getBarWidth(),
					modWidth = this.$ctx.width();
	
				if(modWidth < barWidth)
					this.expander(true);
				else
					this.expander(false);
			},
	
			onBreakpointChange: function() {
				if(commons.isTouchDevice()) {
					this.$ctx.addClass(this.touchClass);
				} else {
					this.$ctx.removeClass(this.touchClass);
				}
			}
		});
	
	/***/ },
	/* 47 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
	
		var $ = __webpack_require__(4);
	
	
		function Table() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.Table = module.exports = inherit(Table, BaseModule, {
	
			busEvents: {},
	
			domEvents: {},
	
			init: function () {
	
				this.$table = this.find('.table--foldable');
	
				// check if table should be foldable (no processing if the table has got only 2 columns)
				if (this.$table.find('thead td:first-child, thead th:first-child').siblings().length === 1) {
					return;
				} else {
					this.$table.addClass('is-foldable');
				}
	
				var $foldableTable = this.find('.table--foldable.is-foldable'),
					$tableBody = $foldableTable.find('tbody'),
					$allRows = $tableBody.find('tr'),
					$xsHeadColumns = $tableBody.find('td:first-child')
					;
	
				/* no processing if there is no folding table on the page */
				if ($foldableTable.length === 0 || this.isPageEditor()) {
					return;
				}
	
				// first, add arrows
				$xsHeadColumns.each(function () {
					$(this).addClass('xs-head');
				});
	
				// create the fold out table containers
				$allRows.each(this.createFoldingTable);
	
				this.initFoldingTableHeight();
	
				this.find('.xs-content')
					.hide()
					.addClass('xs-screen-only')
				;
	
				// make the content accessible
				this.find('.xs-head').click(this.foldTable);
	
				$(window).on('resize', $.proxy(this.updateFoldingTableHeight, this));
	
			},
	
			createFoldingTable: function() {
				var $row = $(this),
					$tableContentElements = $row
						.children()
						.not('td:first-child, th:first-child'),
					$foldOutContents = $('<tr class="xs-content"><td colspan="'+ ($row.children().length) +'"></td></tr>'),
					$tableWrapper = $('<div class="foldable"><table></table></div>'),
					$table = $tableWrapper.find('table'),
					$tableHeaderElements = $(this).closest('.table--foldable.is-foldable').find('thead').find('td, th').not(':first-child')
					;
				// we have to use tables here, because bootstrap columns may easily overlap
				// if the screen gets too small
				$tableContentElements.each(function (iIndex) {
					var $tr = $('<tr/>'),
						$tdLeft = $('<td class="left-col"/>').appendTo($tr),
						$tdRight = $('<td class="right-col"/>').appendTo($tr),
						$leftContent = $($tableHeaderElements.get(iIndex)),
						$rightContent = $(this)
						;
					$tr.appendTo($table);
	
					$tdLeft.append($leftContent.html());
					$tdRight.append($rightContent.html());
	
					if ($rightContent.hasClass('table__cell--highlighted')) {
						$tdRight.addClass('table__cell--highlighted');
					}
					if (iIndex === 0) {
						$tdLeft.addClass('first');
						$tdRight.addClass('first');
					}
					if (iIndex === ($tableContentElements.length - 1)) {
						$tdLeft.addClass('last');
						$tdRight.addClass('last');
					}
				});
	
				$tableWrapper.appendTo($foldOutContents.find('td'));
				$row.after($foldOutContents);
			},
	
			initFoldingTableHeight: function() {
				this.find('.xs-content .foldable').each(function () {
					var $this = $(this);
					$this
						.attr('data-height', $this.height())
						.hide()
					;
				});
			},
	
			updateFoldingTableHeight: function() {
				this.find('.xs-content .foldable:visible').each(function () {
					var $this = $(this);
					$this
						.css('height', 'auto')
						.attr('data-height', $this.height())
						.css('height', $this.height())
					;
				});
			},
	
			foldTable: function() {
				var $this = $(this),
					$tableRow = $this.parent().next('.xs-content'),
					$animatableContent = $tableRow.find('.foldable')
					;
	
				// animating table rows is not possible. we can only animate the content.
				// unfortunately, the table rows do not collapse completely, so I increased
				// the animation speed to that this effect is not noticeable.
				if ($this.hasClass('open')) {
					$animatableContent.animate(
						{
							opacity:0,
							height: 0
						},
						{
							duration: 150,
							complete: function () {
								$animatableContent.hide();
								$tableRow.hide();
								//fire resize event to activate height and tab adjustments after closing table item
								$(window).trigger("resize");
							}
						}
					);
					$this.removeClass('open');
	
	
	
				} else {
					$tableRow.show();
	
					var oAnimateOptions = {
							opacity: 1
						},
						$contentTable = $animatableContent.find('table')
						;
	
					// We have to check if the data-height is zero and then animating
					// the content to height 100% because animation to data-height will
					// destroy the layout
					if ($animatableContent.attr('data-height') === '0') {
						oAnimateOptions.height = '100%';
					} else {
						oAnimateOptions.height = $animatableContent.attr('data-height');
					}
	
					$animatableContent
						.show()
						.height(0)
						.fadeTo(0,0)
						.animate(
							oAnimateOptions,
							{
								duration: 300,
								step: function (fNow, oTween) {
									// Check if height is actually still correct
									// problem: on first initialization the height is too big on Chrome Canary and
									// Chrome Mobile. So here we check for height changes during the animation
									// and actually change the tween if necessary.
									// The check is implemented in a way that hardly effects performance.
									if (oTween.prop === 'height' ) {
										var iExpectedHeight = $contentTable.height();
										if (oTween.end !== iExpectedHeight) {
											// this is only done
											$animatableContent.attr('data-height', iExpectedHeight);
											oTween.end = iExpectedHeight;
											// disable the step function
											oTween.options.step = '';
										}
									}
								},
								complete: function () {
									//fire resize event to activate height and tab adjustments after opening table item
									$(window).trigger("resize");
								}
							}
						)
					;
					$this.addClass('open');
				}
			},
	
			/**
			 * Determine if page is in edit mode
			 *
			 * @return {Boolean} trur if page is edited
			 */
			isPageEditor: function() {
				/* global Sitecore:false */
				if (typeof Sitecore === "undefined") {
					return false;
				}
				if (typeof Sitecore.PageModes === "undefined" || Sitecore.PageModes === null) {
					return false;
				}
				return Sitecore.PageModes.PageEditor !== null;
			}
	
		});
	
	/***/ },
	/* 48 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
	
		var $ = __webpack_require__(4);
	
	
		function Tabs() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.Tabs = module.exports = inherit(Tabs, BaseModule, {
	
			busEvents: {
				'breakpointChange': 'onBreakpointChange'
			},
	
			domEvents: {
				'click .mod-tabs__trigger' : 'toggleItem'
			},
	
			activeClass: 'is-active',
			isAccordion: false,
			hasDeeplink: false,
	
			init: function () {
				this.tabsTrigger = this.find('.mod-tabs__trigger');
				this.tabsContent = this.find('.mod-tabs__content');
	
				this.deeplink();
				this.initTabs();
			},
	
			generateAnchors: function(hash) {
				this.eHref = this.find('a[href="'+hash+'"]');
				this.eName = this.find('[name="'+hash.slice(1)+'"]');
			},
	
			deeplink: function() {
				this.hash = document.location.hash;
				this.generateAnchors(this.hash);
	
				(this.eHref.length || this.eName.length > 0) ? this.hasDeeplink = true : '';
			},
	
			accAsParent: function() {
				var $parentMods = this.$ctx.parents('[data-t-name="Accordion"]');
				if($parentMods.length > 0) {
					this.$ctx.closest('.mod-accordion__body').prev().trigger('click');
				}
			},
	
			initTabs: function() {
				if(this.hasDeeplink) {
					//position of closest tab
					var tPos = $(this.eName).closest('.mod-tabs').offset().top;
					this.tabsContent.hide();
					this.accAsParent();
					this.open(this.hash);
					//scroll to tab
					$('html,body').animate({scrollTop: tPos},'slow');
				}
				else if(this.tabsTrigger.hasClass(this.activeClass)) {
					this.tabsTrigger.filter(':not(.is-active)').next(this.tabsContent).hide();
				}
				else {
					this.tabsContent.slice(1).hide();
					this.tabsTrigger.first().addClass(this.activeClass);
				}
			},
	
			toggleItem: function(event) {
				event.preventDefault();
				var curHash = event.currentTarget.hash;
				var curTarget = $(event.currentTarget);
	
				if(!curTarget.hasClass(this.activeClass)) {
					this.close();
					this.open(curHash);
				}
			},
	
			open: function(hash) {
				var anchor = hash;
				this.generateAnchors(hash);
	
				if(!this.eHref.length) {
					anchor = '#'+ this.eName.closest('.mod-tabs__content').attr('id');
				}
	
				this.find('a[href="'+anchor+'"]').addClass(this.activeClass);
				this.isAccordion ? $(anchor).slideDown() : $(anchor).show();
	
			},
	
			close: function() {
				this.find('.mod-tabs__trigger').removeClass(this.activeClass);
				this.isAccordion ? this.tabsContent.slideUp() : this.tabsContent.hide();
			},
	
			//convert from accordion to tab
			accordionToTab: function() {
				this.find('.mod-tabs__inlay').prepend($('<div class="mod-tabs__head"></div>'));
				var wrapper = this.find('.mod-tabs__head');
	
				this.find('.mod-tabs__trigger').each(function() {
					$(this).clone(true, true).appendTo(wrapper);
				});
	
				this.isAccordion = false;
			},
	
			//convert from tab to accordion
			tabToAccordion: function() {
				this.find('.mod-tabs__head').remove();
				this.isAccordion = true;
			},
	
			//on breackpoint change
			onBreakpointChange: function(breakpointData) {
				if(breakpointData.isXs) {
					this.tabToAccordion();
				} else {
					this.tabToAccordion();
					this.accordionToTab();
				}
			}
		});
	
	/***/ },
	/* 49 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
		var $ = __webpack_require__(4);
	
		function Teaser() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.Teaser = inherit(Teaser, BaseModule, {
	
			init: function () {
				if ( (this.find('script[type="IN/MemberProfile"]').length) && $('.mod-teaser--expert').length) {
					$.getScript("//platform.linkedin.com/in.js");
				}
			},
	
			busEvents: {
	
			},
	
			domEvents: {
	
			}
		});
	
	/***/ },
	/* 50 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
		var $ = __webpack_require__(4);
	
		function Toolbar() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.Toolbar = inherit(Toolbar, BaseModule, {
	
			busEvents: {
				'windowResize': 'onWindowResize'
			},
	
			domEvents: {
	
			},
	
			hasLineBreak : false,
	
			init: function () {
			},
	
			onWindowResize: function() {
				this.rightCol = this.find('.mod-toolbar__right').position().left;
				this.leftCol = this.find('.mod-toolbar__left').position().left;
	
				if(this.rightCol <= this.leftCol) {
					this.$ctx.addClass('mod-toolbar--separator');
				} else {
					this.$ctx.removeClass('mod-toolbar--separator');
				}
			}
		});
	
	/***/ },
	/* 51 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
	
		var $ = __webpack_require__(4);
	
	
		function Video() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.Video = module.exports = inherit(Video, BaseModule, {
	
			busEvents: {},
	
			domEvents: {},
	
			init: function () {
				var account = this.find('video').data('account');
				var playerId = this.find('video').data('player');
				$.ajax({
					url: '//players.brightcove.net/'+ account +'/'+ playerId +'_default/index.min.js',
					dataType: 'script',
					cache: true
				});
			}
	
		});
	
	/***/ },
	/* 52 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
	
		var $ = __webpack_require__(4);
	
	
		function VideoGallery() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.VideoGallery = module.exports = inherit(VideoGallery, BaseModule, {
	
			busEvents: {},
	
			domEvents: {},
	
			init: function () {
				var account = this.find('video').data('account');
				var playerId = this.find('video').data('player');
				$.ajax({
					url: '//players.brightcove.net/'+ account +'/'+ playerId +'_default/index.min.js',
					dataType: 'script',
					cache: true
				});
			}
	
		});
	
	/***/ },
	/* 53 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
	
		var $ = __webpack_require__(4);
	
	
		function AgentCard() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.AgentCard = module.exports = inherit(AgentCard, BaseModule, {
	
			busEvents: {},
	
			domEvents: {},
	
			init: function () {
	
			}
	
		});
	
	/***/ },
	/* 54 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
	
		var $ = __webpack_require__(4);
	
	
		function AgentSearch() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.AgentSearch = module.exports = inherit(AgentSearch, BaseModule, {
	
			busEvents: {},
	
			domEvents: {},
	
			init: function () {
	
			}
	
		});
	
	/***/ },
	/* 55 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
	
		var $ = __webpack_require__(4);
	
	
		function Anchor() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.Anchor = module.exports = inherit(Anchor, BaseModule, {
	
			busEvents: {
				'activateAnchor': 'activateAnchor'
			},
	
			domEvents: {},
	
			init: function () {
	
			},
	
			activateAnchor: function (hash) {
				this.elem = this.$ctx.filter('[name=' + hash + ']');
				this.closestModule();
			},
	
			closestModule: function () {
				this.parentAcc = this.elem.parents('[data-t-name="Accordion"]');
				this.parentTab = this.elem.parents('[data-t-name="Tabs"]');
	
				this.parentTab.length && this.activateTab();
				this.parentAcc.length && this.activateAccordion();
			},
	
			activateTab: function () {
				var ref = this.$ctx.closest('.mod-tabs__content').attr('id');
				$('[href=#' + ref + ']').trigger('click');
				//Scroll to tab
				var sect = this.elem.closest('.mod-tabs');
				var sectPos = $(sect).offset().top;
				$('html,body').animate({scrollTop: sectPos}, 'slow');
				if (!sect.hasClass('is-open')) {
					sect.find('header').trigger('click');
				}
			},
	
			activateAccordion: function () {
				var sect = this.elem.closest('article');
				var sectPos = $(sect).offset().top;
				$('html,body').animate({scrollTop: sectPos}, 'slow');
				if (!sect.hasClass('is-open')) {
					sect.find('header').trigger('click');
				}
			}
	
		});
	
	/***/ },
	/* 56 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
	
		var $ = __webpack_require__(4);
	
	
		function ArticleHeader() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.ArticleHeader = module.exports = inherit(ArticleHeader, BaseModule, {
	
			busEvents: {},
	
			domEvents: {},
	
			init: function () {
	
			}
	
		});
	
	/***/ },
	/* 57 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
	
		var $ = __webpack_require__(4);
	
	
		function Cta() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.Cta = module.exports = inherit(Cta, BaseModule, {
	
			busEvents: {},
	
			domEvents: {
				'click .mod-cta__anchor' : 'activateAnchor'
			},
	
			init: function () {
	
			},
	
			activateAnchor: function(e) {
				var hash = e.currentTarget.hash.slice(1);
				this._events.emit('activateAnchor', hash);
			}
	
		});
	
	/***/ },
	/* 58 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
	
		var $ = __webpack_require__(4);
	
	
		function ExpertSlider() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.ExpertSlider = module.exports = inherit(ExpertSlider, BaseModule, {
	
			busEvents: {},
	
			domEvents: {},
	
			init: function () {
	
			}
	
		});
	
	/***/ },
	/* 59 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
	
		var $ = __webpack_require__(4);
	
		var commons = __webpack_require__(23);
		var noUiSlider = __webpack_require__(37);
		__webpack_require__(39);
	
	
		function FormWffm() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.FormWffm = module.exports = inherit(FormWffm, BaseModule, {
	
			busEvents: {
				'breakpointChange': 'onBreakpointChange'
			},
	
			domEvents: {},
	
			init: function () {
				this.wffmAjax = this.find('form').data('wffm-ajax');
				this.$select = this.find('.form-group select');
				this.$floating = this.find('.form-group');
				this.$datepicker = this.find('.datepicker');
	
				this.initFloatingLabels();
				this.initSelect();
				this.initDatepicker();
				this.initAjaxWffm();
				this.singleCheckboxLabel();
			},
	
			initSelect: function() {
				if(this.$select.length && !commons.isTouchDevice()) {
					this.$select.not(':has(:selected)').children(':first-child').prop('selected',true);
					this.$select.each(function() {
						$(this).css('width', '100%').select2({
							minimumResultsForSearch: Infinity
						});
					});
				}
			},
	
			initFloatingLabels: function() {
				if(this.$floating.length) {
					this.$floating.each(function() {
						$(this).wffmTextfield();
					});
				}
			},
	
			initDatepicker: function() {
				if(this.$datepicker.length) {
					this.addBusEvent('breakpointChange', 'updateDatepicker');
				}
			},
	
			updateDatepicker: function(breakpointData) {
				var $datepicker = this.find('.datepicker');
				var pageLang = document.documentElement.lang;
				var userLang = pageLang || navigator.language;
	
				var dpOptions = $.extend({},
					$.datepicker.regional[userLang], {
						dateFormat: 'y-mm-dd',
						beforeShow: function () {$(this).addClass('has-focus');},
						onClose: function () {$(this).removeClass('has-focus');}
					}
				);
	
				if(breakpointData.isXs && commons.isTouchDevice()) {
					$datepicker.each(function () {
						$(this).attr('type', 'date').datepicker('destroy');
					});
				} else {
					$datepicker.each(function() {
						$(this).attr('type', 'text').datepicker(dpOptions);
					});
				}
			},
	
			initAjaxWffm: function() {
				if(this.wffmAjax == "True") {
					var that = this;
					this.dateIds = this.$ctx.find(".wfmDatebox");
	
					if(this.dateIds.length) {
						if (typeof window.WffmFieldsData === 'undefined') {window.WffmFieldsData = {}}
	
						this.dateIds.each(function(i) {
							var fieldId = $(this).attr("id");
							that.data = window.WffmFieldsData[fieldId];
	
							that.generateDateBoxVal(that.dateIds.eq(i), that.data);
	
						});
						that.$select.on('change', function (e) {
	
							var dateId = $(this).parents('.form-group').find('.wfmDatebox');
							var fieldId = $(dateId).attr('id');
							that.generateDateBoxVal(dateId, window.WffmFieldsData[fieldId]);
						});
					}
	
				}
			},
	
			generateDateBoxVal: function(i,data) {
	
				var day =	$('#' + data.dayId).val();
				var month =	$('#' + data.monthId).val();
				var year =	$('#' + data.yearId).val();
	
				if (day == null || day == "" || month == null || month == "" || year == null || year == "") {
					$(i).val("");
					return;
				}
	
				if (month.length == 1) {month = "0" + month;}
				if (day.length == 1) {day = "0" + day;}
	
				$(i).val(year + month + day + "T000000");
	
			},
	
			onBreakpointChange: function(breakpointData) {
				if (breakpointData.isXs) {
					this.$ctx.removeClass('float-label');
				} else {
					this.$ctx.addClass('float-label');
				}
			},
	
			singleCheckboxLabel: function () {
				var formgroups = this.$ctx.find('.form-group');
				formgroups.each(function () {
					var checkboxes = $(this).find('.checkbox');
					if (checkboxes.length == 1) {
						checkboxes.siblings('.control-label').remove();
					}
				});
			}
		});
	
	/***/ },
	/* 60 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
	
		var $ = __webpack_require__(4);
	
		function IframeWidget() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.IframeWidget = module.exports = inherit(IframeWidget, BaseModule, {
	
			busEvents: {
				'breakpointChange': 'onBreakpointChange'
			},
	
			domEvents: {},
	
			receiverAdded: false,
			iframe: '',
			hasUrlXs: false,
			hasUrlMd: false,
		    breakpointWasSmall: false,
	
			init: function () {
				this.placeholder = this.find(".mod-iframe-widget__placeholder");
				this.iframeUrlXs = this.placeholder.attr('data-iframesrc-xs');
				this.iframeUrlMd = this.placeholder.attr('data-iframesrc-md');
	
				this.checkIframeSrc();
				this.createIframe();
			},
	
			//check if iframe has one or both sources
			checkIframeSrc: function() {
				if (typeof this.iframeUrlXs !== typeof undefined && this.iframeUrlXs !== false) {
					this.hasUrlXs = true;
				}
				if (typeof this.iframeUrlMd !== typeof undefined && this.iframeUrlMd !== false) {
					this.hasUrlMd = true;
				}
			},
	
			createIframe: function() {
				if(this.hasUrlXs == true || this.hasUrlMd == true) {
					this.iframe = $('<iframe class="mod-iframe-widget__iframe" allowtransparency="true" frameborder="0"></iframe>')
				} else {
					this.iframe = $('<iframe allowtransparency="true" frameborder="0"></iframe>')
				}
				this.iframe.attr({
						"height": this.placeholder.data("initialheight"),
						"id": this.placeholder.attr('data-iframe-id')
					})
					.css({
						"height": this.placeholder.data("initialheight"),
						"width": "100%"
					});
	
				this.placeholder.replaceWith(this.iframe);
			},
	
			//get iframe height with postMessage plugin //mrm/jquery/postMessage
			setIframeHeight: function() {
				// add message receiver if not already done
				if (!this.receiverAdded) {
					this.receiverAdded = true;
					$.receiveMessage(function (evt) {
						var $evtiframe = null;
						$("iframe").each(function () {
							if (this.contentWindow === evt.source) {
								$evtiframe = $(this);
								return false;
							}
						});
						if (!$evtiframe) return;
	
						var h = Number(evt.data.replace(/.*if_height=(\d+)(?:&|$)/, '$1'));
						if (!isNaN(h) && h > 0) {
							$evtiframe.css("height", h).attr("height", h);
							$(window).trigger("heightChanged", {element:$evtiframe});
						}
					});
				}
			},
	
			// helper function - add parenturl paramter to data url
			addParentUrl: function(dataId) {
				this.src = this.placeholder.data(dataId);
	
				if (!this.src || this.src.indexOf("parenturl=") > 0) {
					return;
				} else {
					var location = document.location.href.replace(/\?/g, "&");
	
					this.src = this.src +
						( this.src.indexOf("?") >= 0 ? "&" : "?") +
						'parenturl=' + encodeURIComponent(location);
				}
	
	
	
				this.iframe.attr("src", this.src);
				this.setIframeHeight();
			},
	
			// switch url src on breakpoint change and just reload when needed
			onBreakpointChange: function(breakpointData) {
	
				var isInitial = this.iframe.attr("height") == this.placeholder.data("initialheight");
				var isNotSame = this.iframeUrlXs != this.iframeUrlMd;
				var bothUrlGiven = (this.iframeUrlXs != undefined) && (this.iframeUrlMd != undefined);
				var goesToXs = breakpointData.isXs && !this.breakpointWasSmall;
				var goesToLarge = ( breakpointData.isSm || breakpointData.isMd || breakpointData.isLg ) && this.breakpointWasSmall;
	
				if( isInitial || (isNotSame && bothUrlGiven && ( goesToXs || goesToLarge )) ) {
	
					if( breakpointData.isXs ) {
						this.hasUrlXs == true ? this.addParentUrl("iframesrc-xs") : this.addParentUrl("iframesrc-md");
					} else {
						this.hasUrlMd == true ? this.addParentUrl("iframesrc-md") : this.addParentUrl("iframesrc-xs");
					}
	
		        }
	
				this.breakpointWasSmall = breakpointData.isXs;
			}
		});
	
	/***/ },
	/* 61 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
	
		var $ = __webpack_require__(4);
	
	
		var val0 = '';
		var val1 = '';
		var val2 = '';
	
	
		function RoutingTool() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.RoutingTool = module.exports = inherit(RoutingTool, BaseModule, {
	
			busEvents: {},
	
			domEvents: {},
	
			options: {
				defaultUrl: "//zurich.com",
				defaultText: "Please select..."
			},
	
			init: function () {
	
				this.$selects = this.$ctx.find("select");
				this.$link = this.$ctx.find('a.btn');
				this.defaultCountry = this.$ctx.data("default-country");
	
				// get default text and url from dom
				this.options.defaultText = this.$selects.eq(0).find("option:first-child").text();
				this.options.defaultUrl = this.$link.attr("href");
	
				// set handler/s
				this.$selects.on("change", $.proxy(this.onSelected, this));
	
				var loaded = $.proxy(function() {
					//if (!this.$selects.eq(0).data("selectBox-selectBoxIt")) {
					//	window.setTimeout(loaded,150);
					//	return;
					//};
					this.setupSelect(0);
					if (this.defaultCountry) {
						this.$selects.eq(0)
							.val(this.defaultCountry)
							.trigger("change");
					}
				},this);
	
				// load routing tool json data and set up country box
				$.ajax({
					url: this.$ctx.data("jsonurl"),
					dataType: "json",
					success: $.proxy(
						function(jsondata) {
							this.jsondata = jsondata;
							loaded();
						},
						this)
				});
	
				this.$link.on('submit', $.proxy(function(event){
	
					event.preventDefault();
	
					setTimeout(function(){
						window.location = $(event.currentTarget).attr("href");
					}, 1000);
	
				}, this));
			},
	
			/**
			 * Change event callback for selectboxes
			 */
			onSelected: function(e) {
				this.setupSelect(this.$selects.index($(e.target))+1);
				val0 = this.$selects[0].value;
				val1 = this.$selects[1].value;
				val2 = this.$selects[2].value;
	
				this.find('.cta')
					.data('i-fv-country', val0)
					.data('i-fv-customertype', val1)
					.data('i-fv-product', val2);
			},
	
			/**
			 * setup selectboxes: starting from selectbox w/supplied index, populate (or disable) the
			 * next selectboxes with the data from the loaded json
			 * @param idx {int} [0..2]
			 */
			setupSelect: function(idx) {
	
				var i,
					src = this.jsondata,
					$dest = this.$selects.eq(0),
					selectbox,
					url = this.options.defaultUrl;
	
				// find the correct json data and selectbox
				for (i=0; i<idx; i++) {
					var sel = $dest.val();
					url = src[ sel ].url;
					src = src[ sel ].list || {};
					$dest = this.$selects.eq(i+1);
				}
	
				// reset and disable all the following
				for (i=idx; i<this.$selects.length; i++) {
					selectbox = this.$selects.eq(i);
					selectbox
						.html("")
						.val(-1)
						.prop("disabled", true);
				}
	
				// here we are, use our target selectbox
				selectbox = $dest&&$dest.length?$dest:null;
	
				// if we have next select, populate
				if (selectbox) {
					var empty = true;
	
					selectbox.html("");
	
					$.each(src, function(key, value) {
						selectbox.append(
							$("<option></option>")
								.attr("value", key)
								.html( value.name)
						);
						empty = false;
					});
					// some link lists are empty, in this case just disable
					selectbox
						.prop("disabled",empty ? true: false)
						.val(-1);
				}
	
				// set url
				this.$link.attr("href", url);
			}
	
		});
	
	/***/ },
	/* 62 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
	
		var $ = __webpack_require__(4);
	
	
		function SiteOverview() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.SiteOverview = module.exports = inherit(SiteOverview, BaseModule, {
	
			busEvents: {},
	
			domEvents: {},
	
			init: function () {
	
			}
	
		});
	
	/***/ },
	/* 63 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
	
		var $ = __webpack_require__(4);
	
	
		function Sitemap() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.Sitemap = module.exports = inherit(Sitemap, BaseModule, {
	
			busEvents: {},
	
			domEvents: {},
	
			init: function () {
	
			}
	
		});
	
	/***/ },
	/* 64 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
		var cookies = __webpack_require__(24);
	
		var $ = __webpack_require__(4);
	
	
		function TeaserAgent() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.TeaserAgent = module.exports = inherit(TeaserAgent, BaseModule, {
	
			busEvents: {},
	
			domEvents: {
				'click button[type="submit"]' : 'searchRequest',
				'click .search-link' : 'newSearch'
			},
	
			init: function () {
				this.selected = $('.mod-teaser-agent--selected');
				this.unselected = $('.mod-teaser-agent--unselected');
				this.selectedLead = $('.mod-teaser-agent-lead--selected');
				this.unselectedLead = $('.mod-teaser-agent-lead--unselected');
				this.origin = window.location.origin;
				this.pathname = this.$ctx.find('button[type="submit"]').data('pathname');
			},
	
			newSearch: function () {
				this.selected.hide();
				this.selectedLead.hide();
				this.unselected.show();
				this.unselectedLead.show();
				cookies.clearCookie();
				cookies.clearSession();
			},
	
			searchRequest: function (e) {
				window.location.href = this.origin + this.pathname + '#/search=' + this.$ctx.find('input[type="search"]').val();
				e.preventDefault();
			}
	
		});
	
	/***/ },
	/* 65 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
		var cookies = __webpack_require__(24);
	
		var $ = __webpack_require__(4);
	
	
		function TeaserAgentLead() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.TeaserAgentLead = module.exports = inherit(TeaserAgentLead, BaseModule, {
	
			busEvents: {},
	
			domEvents: {
				'click button[type="submit"]' : 'searchRequest',
				'click .search-link' : 'newSearch'
			},
	
			init: function () {
				this.selected = $('.mod-teaser-agent-lead--selected');
				this.unselected = $('.mod-teaser-agent-lead--unselected');
				this.selectedTeaser = $('.mod-teaser-agent--selected');
				this.unselectedTeaser = $('.mod-teaser-agent--unselected');
				this.origin = window.location.origin;
				this.pathname = this.$ctx.find('button[type="submit"]').data('pathname');
			},
	
			newSearch: function () {
				this.selected.hide();
				this.selectedTeaser.hide();
				this.unselected.show();
				this.unselectedTeaser.show();
				this._events.emit('newSearch');
				cookies.clearCookie();
				cookies.clearSession();
			},
	
			searchRequest: function (e) {
				window.location.href = this.origin + this.pathname + '#/search=' + this.$ctx.find('input[type="search"]').val();
				e.preventDefault();
			}
	
	
		});
	
	/***/ },
	/* 66 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
	
		if(document.getElementById('app-article-list')) {
			var ArticleListApp = __webpack_require__(67);
		}
	
		//to register module
		function ArticleList() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
		//so module is getting initialized
		window.mrm.modules.ArticleList = module.exports = inherit(ArticleList, BaseModule, {});
	
	/***/ },
	/* 67 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		Object.defineProperty(exports, "__esModule", {
			value: true
		});
	
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
		var _react = __webpack_require__(68);
	
		var _react2 = _interopRequireDefault(_react);
	
		var _reactDom = __webpack_require__(99);
	
		var _reactDom2 = _interopRequireDefault(_reactDom);
	
		var _ArticleResult = __webpack_require__(250);
	
		var _ArticleResult2 = _interopRequireDefault(_ArticleResult);
	
		var _ArticleListItem = __webpack_require__(262);
	
		var _ArticleListItem2 = _interopRequireDefault(_ArticleListItem);
	
		var _articleListRepository = __webpack_require__(263);
	
		var _articleListRepository2 = _interopRequireDefault(_articleListRepository);
	
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
		function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
		var articleListRepository = new _articleListRepository2.default();
	
		var ArticleList = function (_React$Component) {
			_inherits(ArticleList, _React$Component);
	
			function ArticleList() {
				_classCallCheck(this, ArticleList);
	
				var _this = _possibleConstructorReturn(this, (ArticleList.__proto__ || Object.getPrototypeOf(ArticleList)).call(this));
	
				_this.state = {
					results: [],
					summary: [],
					typeTag: [],
					totalResults: 0,
					currentPage: 1,
					refreshScrolling: true,
					showNextResults: false,
					isLoading: true,
					pageId: document.getElementById('app-article-list').dataset.pageid
				};
				_this.setInitialContentState();
				return _this;
			}
	
			_createClass(ArticleList, [{
				key: 'setInitialContentState',
				value: function setInitialContentState() {
					var localization = JSON.parse($("#i18n").html());
	
					//send back params
					var params = {
						"Facets": [{
							"Type": document.getElementById('app-article-list').dataset.searchbyparamkey,
							"Value": document.getElementById('app-article-list').dataset.searchbyparam
						}],
						"PageNumber": 1,
						"SearchValue": "",
						"SortBy": 0,
						"PageId": this.state.pageId
					};
	
					articleListRepository.getContent(params).done(function (data) {
						this.setState({
							results: data.Articles,
							summary: data.Summary,
							typeTag: data.TypeTag,
							totalResults: data.TotalResults,
							currentPage: data.CurrentPageIndex + 1,
							noResults: localization.NoResultsFound,
							moreResults: localization.LoadMoreResults,
							headline: localization.AmountOfResultsSingle,
							refreshScrolling: true,
							realUrl: document.getElementById('app-article-list').dataset.realUrl ? document.getElementById('app-article-list').dataset.realUrl : "",
							isLoading: false
						});
					}.bind(this));
				}
			}, {
				key: 'handleMoreArticlesForShowing',
				value: function handleMoreArticlesForShowing(e) {
					e.preventDefault();
					this.setState({ showNextResults: true, isLoading: true, currentPage: 1 });
				}
			}, {
				key: 'loadNextArticles',
				value: function loadNextArticles() {
					var nextPageNumber = this.state.currentPage + 1;
	
					var params = {
						"Facets": [{
							"Type": document.getElementById('app-article-list').dataset.searchbyparamkey,
							"Value": document.getElementById('app-article-list').dataset.searchbyparam
						}],
						"PageNumber": nextPageNumber,
						"SearchValue": "",
						"SortBy": 0,
						"PageId": this.state.pageId
					};
	
					articleListRepository.getContent(params).done(function (data) {
						var results = this.state.results;
						this.setState({
							results: [].concat(_toConsumableArray(results), _toConsumableArray(data.Articles)),
							categories: data.Categories,
							totalResults: data.TotalResults,
							currentPage: nextPageNumber,
							showNextResults: true,
							isLoading: false
						});
					}.bind(this));
				}
			}, {
				key: 'render',
				value: function render() {
					var _this2 = this;
	
					return _react2.default.createElement(
						'div',
						{ className: 'mod-article-list__inlay' },
						_react2.default.createElement(
							'h2',
							{ className: 'mod-article-list__label' },
							this.state.headline
						),
						_react2.default.createElement(_ArticleResult2.default, {
							results: this.state.results ? this.state.results : [],
							totalResults: this.state.totalResults,
							currentPage: this.state.currentPage,
							handleMoreResultsForShowing: function handleMoreResultsForShowing(e) {
								return _this2.handleMoreArticlesForShowing(e);
							},
							loadNextResults: function loadNextResults(e) {
								return _this2.loadNextArticles(e);
							},
							showNextResults: this.state.showNextResults,
							isLoading: this.state.isLoading,
							noResultsLang: this.state.noResults,
							loadMoreLang: this.state.moreResults,
							itemsPerPage: '25',
							items: this.state.results ? this.state.results.map(function (key, idx) {
								return _react2.default.createElement(_ArticleListItem2.default, {
									key: idx,
									imageUrl: key.ImageUrl,
									imageAlt: key.ImageAltText,
									url: key.ContentUrl,
									date: key.ArticleDate,
									type: key.TypeTag,
									summary: key.Summary,
									label: key.Headline,
									host: this.state.realUrl,
									topStory: key.ShowTopStory
								});
							}.bind(this)) : ''
						})
					);
				}
			}]);
	
			return ArticleList;
		}(_react2.default.Component);
	
		exports.default = ArticleList;
		;
	
		_reactDom2.default.render(_react2.default.createElement(ArticleList, null), document.getElementById('app-article-list'));
	
	/***/ },
	/* 68 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		module.exports = __webpack_require__(69);
	
	
	/***/ },
	/* 69 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var _assign = __webpack_require__(71);
	
		var ReactChildren = __webpack_require__(72);
		var ReactComponent = __webpack_require__(85);
		var ReactPureComponent = __webpack_require__(88);
		var ReactClass = __webpack_require__(89);
		var ReactDOMFactories = __webpack_require__(91);
		var ReactElement = __webpack_require__(76);
		var ReactPropTypes = __webpack_require__(96);
		var ReactVersion = __webpack_require__(97);
	
		var onlyChild = __webpack_require__(98);
		var warning = __webpack_require__(78);
	
		var createElement = ReactElement.createElement;
		var createFactory = ReactElement.createFactory;
		var cloneElement = ReactElement.cloneElement;
	
		if (process.env.NODE_ENV !== 'production') {
		  var ReactElementValidator = __webpack_require__(92);
		  createElement = ReactElementValidator.createElement;
		  createFactory = ReactElementValidator.createFactory;
		  cloneElement = ReactElementValidator.cloneElement;
		}
	
		var __spread = _assign;
	
		if (process.env.NODE_ENV !== 'production') {
		  var warned = false;
		  __spread = function () {
		    process.env.NODE_ENV !== 'production' ? warning(warned, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.') : void 0;
		    warned = true;
		    return _assign.apply(null, arguments);
		  };
		}
	
		var React = {
	
		  // Modern
	
		  Children: {
		    map: ReactChildren.map,
		    forEach: ReactChildren.forEach,
		    count: ReactChildren.count,
		    toArray: ReactChildren.toArray,
		    only: onlyChild
		  },
	
		  Component: ReactComponent,
		  PureComponent: ReactPureComponent,
	
		  createElement: createElement,
		  cloneElement: cloneElement,
		  isValidElement: ReactElement.isValidElement,
	
		  // Classic
	
		  PropTypes: ReactPropTypes,
		  createClass: ReactClass.createClass,
		  createFactory: createFactory,
		  createMixin: function (mixin) {
		    // Currently a noop. Will be used to validate and trace mixins.
		    return mixin;
		  },
	
		  // This looks DOM specific but these are actually isomorphic helpers
		  // since they are just generating DOM strings.
		  DOM: ReactDOMFactories,
	
		  version: ReactVersion,
	
		  // Deprecated hook for JSX spread, don't use this for anything.
		  __spread: __spread
		};
	
		module.exports = React;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 70 */
	/***/ function(module, exports) {
	
		// shim for using process in browser
		var process = module.exports = {};
	
		// cached from whatever global is present so that test runners that stub it
		// don't break things.  But we need to wrap it in a try catch in case it is
		// wrapped in strict mode code which doesn't define any globals.  It's inside a
		// function because try/catches deoptimize in certain engines.
	
		var cachedSetTimeout;
		var cachedClearTimeout;
	
		function defaultSetTimout() {
		    throw new Error('setTimeout has not been defined');
		}
		function defaultClearTimeout () {
		    throw new Error('clearTimeout has not been defined');
		}
		(function () {
		    try {
		        if (typeof setTimeout === 'function') {
		            cachedSetTimeout = setTimeout;
		        } else {
		            cachedSetTimeout = defaultSetTimout;
		        }
		    } catch (e) {
		        cachedSetTimeout = defaultSetTimout;
		    }
		    try {
		        if (typeof clearTimeout === 'function') {
		            cachedClearTimeout = clearTimeout;
		        } else {
		            cachedClearTimeout = defaultClearTimeout;
		        }
		    } catch (e) {
		        cachedClearTimeout = defaultClearTimeout;
		    }
		} ())
		function runTimeout(fun) {
		    if (cachedSetTimeout === setTimeout) {
		        //normal enviroments in sane situations
		        return setTimeout(fun, 0);
		    }
		    // if setTimeout wasn't available but was latter defined
		    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
		        cachedSetTimeout = setTimeout;
		        return setTimeout(fun, 0);
		    }
		    try {
		        // when when somebody has screwed with setTimeout but no I.E. maddness
		        return cachedSetTimeout(fun, 0);
		    } catch(e){
		        try {
		            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
		            return cachedSetTimeout.call(null, fun, 0);
		        } catch(e){
		            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
		            return cachedSetTimeout.call(this, fun, 0);
		        }
		    }
	
	
		}
		function runClearTimeout(marker) {
		    if (cachedClearTimeout === clearTimeout) {
		        //normal enviroments in sane situations
		        return clearTimeout(marker);
		    }
		    // if clearTimeout wasn't available but was latter defined
		    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
		        cachedClearTimeout = clearTimeout;
		        return clearTimeout(marker);
		    }
		    try {
		        // when when somebody has screwed with setTimeout but no I.E. maddness
		        return cachedClearTimeout(marker);
		    } catch (e){
		        try {
		            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
		            return cachedClearTimeout.call(null, marker);
		        } catch (e){
		            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
		            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
		            return cachedClearTimeout.call(this, marker);
		        }
		    }
	
	
	
		}
		var queue = [];
		var draining = false;
		var currentQueue;
		var queueIndex = -1;
	
		function cleanUpNextTick() {
		    if (!draining || !currentQueue) {
		        return;
		    }
		    draining = false;
		    if (currentQueue.length) {
		        queue = currentQueue.concat(queue);
		    } else {
		        queueIndex = -1;
		    }
		    if (queue.length) {
		        drainQueue();
		    }
		}
	
		function drainQueue() {
		    if (draining) {
		        return;
		    }
		    var timeout = runTimeout(cleanUpNextTick);
		    draining = true;
	
		    var len = queue.length;
		    while(len) {
		        currentQueue = queue;
		        queue = [];
		        while (++queueIndex < len) {
		            if (currentQueue) {
		                currentQueue[queueIndex].run();
		            }
		        }
		        queueIndex = -1;
		        len = queue.length;
		    }
		    currentQueue = null;
		    draining = false;
		    runClearTimeout(timeout);
		}
	
		process.nextTick = function (fun) {
		    var args = new Array(arguments.length - 1);
		    if (arguments.length > 1) {
		        for (var i = 1; i < arguments.length; i++) {
		            args[i - 1] = arguments[i];
		        }
		    }
		    queue.push(new Item(fun, args));
		    if (queue.length === 1 && !draining) {
		        runTimeout(drainQueue);
		    }
		};
	
		// v8 likes predictible objects
		function Item(fun, array) {
		    this.fun = fun;
		    this.array = array;
		}
		Item.prototype.run = function () {
		    this.fun.apply(null, this.array);
		};
		process.title = 'browser';
		process.browser = true;
		process.env = {};
		process.argv = [];
		process.version = ''; // empty string to avoid regexp issues
		process.versions = {};
	
		function noop() {}
	
		process.on = noop;
		process.addListener = noop;
		process.once = noop;
		process.off = noop;
		process.removeListener = noop;
		process.removeAllListeners = noop;
		process.emit = noop;
		process.prependListener = noop;
		process.prependOnceListener = noop;
	
		process.listeners = function (name) { return [] }
	
		process.binding = function (name) {
		    throw new Error('process.binding is not supported');
		};
	
		process.cwd = function () { return '/' };
		process.chdir = function (dir) {
		    throw new Error('process.chdir is not supported');
		};
		process.umask = function() { return 0; };
	
	
	/***/ },
	/* 71 */
	/***/ function(module, exports) {
	
		/*
		object-assign
		(c) Sindre Sorhus
		@license MIT
		*/
	
		'use strict';
		/* eslint-disable no-unused-vars */
		var getOwnPropertySymbols = Object.getOwnPropertySymbols;
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		var propIsEnumerable = Object.prototype.propertyIsEnumerable;
	
		function toObject(val) {
			if (val === null || val === undefined) {
				throw new TypeError('Object.assign cannot be called with null or undefined');
			}
	
			return Object(val);
		}
	
		function shouldUseNative() {
			try {
				if (!Object.assign) {
					return false;
				}
	
				// Detect buggy property enumeration order in older V8 versions.
	
				// https://bugs.chromium.org/p/v8/issues/detail?id=4118
				var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
				test1[5] = 'de';
				if (Object.getOwnPropertyNames(test1)[0] === '5') {
					return false;
				}
	
				// https://bugs.chromium.org/p/v8/issues/detail?id=3056
				var test2 = {};
				for (var i = 0; i < 10; i++) {
					test2['_' + String.fromCharCode(i)] = i;
				}
				var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
					return test2[n];
				});
				if (order2.join('') !== '0123456789') {
					return false;
				}
	
				// https://bugs.chromium.org/p/v8/issues/detail?id=3056
				var test3 = {};
				'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
					test3[letter] = letter;
				});
				if (Object.keys(Object.assign({}, test3)).join('') !==
						'abcdefghijklmnopqrst') {
					return false;
				}
	
				return true;
			} catch (err) {
				// We don't expect any of the above to throw, but better to be safe.
				return false;
			}
		}
	
		module.exports = shouldUseNative() ? Object.assign : function (target, source) {
			var from;
			var to = toObject(target);
			var symbols;
	
			for (var s = 1; s < arguments.length; s++) {
				from = Object(arguments[s]);
	
				for (var key in from) {
					if (hasOwnProperty.call(from, key)) {
						to[key] = from[key];
					}
				}
	
				if (getOwnPropertySymbols) {
					symbols = getOwnPropertySymbols(from);
					for (var i = 0; i < symbols.length; i++) {
						if (propIsEnumerable.call(from, symbols[i])) {
							to[symbols[i]] = from[symbols[i]];
						}
					}
				}
			}
	
			return to;
		};
	
	
	/***/ },
	/* 72 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var PooledClass = __webpack_require__(73);
		var ReactElement = __webpack_require__(76);
	
		var emptyFunction = __webpack_require__(79);
		var traverseAllChildren = __webpack_require__(82);
	
		var twoArgumentPooler = PooledClass.twoArgumentPooler;
		var fourArgumentPooler = PooledClass.fourArgumentPooler;
	
		var userProvidedKeyEscapeRegex = /\/+/g;
		function escapeUserProvidedKey(text) {
		  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
		}
	
		/**
		 * PooledClass representing the bookkeeping associated with performing a child
		 * traversal. Allows avoiding binding callbacks.
		 *
		 * @constructor ForEachBookKeeping
		 * @param {!function} forEachFunction Function to perform traversal with.
		 * @param {?*} forEachContext Context to perform context with.
		 */
		function ForEachBookKeeping(forEachFunction, forEachContext) {
		  this.func = forEachFunction;
		  this.context = forEachContext;
		  this.count = 0;
		}
		ForEachBookKeeping.prototype.destructor = function () {
		  this.func = null;
		  this.context = null;
		  this.count = 0;
		};
		PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);
	
		function forEachSingleChild(bookKeeping, child, name) {
		  var func = bookKeeping.func,
		      context = bookKeeping.context;
	
		  func.call(context, child, bookKeeping.count++);
		}
	
		/**
		 * Iterates through children that are typically specified as `props.children`.
		 *
		 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach
		 *
		 * The provided forEachFunc(child, index) will be called for each
		 * leaf child.
		 *
		 * @param {?*} children Children tree container.
		 * @param {function(*, int)} forEachFunc
		 * @param {*} forEachContext Context for forEachContext.
		 */
		function forEachChildren(children, forEachFunc, forEachContext) {
		  if (children == null) {
		    return children;
		  }
		  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
		  traverseAllChildren(children, forEachSingleChild, traverseContext);
		  ForEachBookKeeping.release(traverseContext);
		}
	
		/**
		 * PooledClass representing the bookkeeping associated with performing a child
		 * mapping. Allows avoiding binding callbacks.
		 *
		 * @constructor MapBookKeeping
		 * @param {!*} mapResult Object containing the ordered map of results.
		 * @param {!function} mapFunction Function to perform mapping with.
		 * @param {?*} mapContext Context to perform mapping with.
		 */
		function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
		  this.result = mapResult;
		  this.keyPrefix = keyPrefix;
		  this.func = mapFunction;
		  this.context = mapContext;
		  this.count = 0;
		}
		MapBookKeeping.prototype.destructor = function () {
		  this.result = null;
		  this.keyPrefix = null;
		  this.func = null;
		  this.context = null;
		  this.count = 0;
		};
		PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);
	
		function mapSingleChildIntoContext(bookKeeping, child, childKey) {
		  var result = bookKeeping.result,
		      keyPrefix = bookKeeping.keyPrefix,
		      func = bookKeeping.func,
		      context = bookKeeping.context;
	
	
		  var mappedChild = func.call(context, child, bookKeeping.count++);
		  if (Array.isArray(mappedChild)) {
		    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
		  } else if (mappedChild != null) {
		    if (ReactElement.isValidElement(mappedChild)) {
		      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
		      // Keep both the (mapped) and old keys if they differ, just as
		      // traverseAllChildren used to do for objects as children
		      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
		    }
		    result.push(mappedChild);
		  }
		}
	
		function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
		  var escapedPrefix = '';
		  if (prefix != null) {
		    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
		  }
		  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
		  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
		  MapBookKeeping.release(traverseContext);
		}
	
		/**
		 * Maps children that are typically specified as `props.children`.
		 *
		 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map
		 *
		 * The provided mapFunction(child, key, index) will be called for each
		 * leaf child.
		 *
		 * @param {?*} children Children tree container.
		 * @param {function(*, int)} func The map function.
		 * @param {*} context Context for mapFunction.
		 * @return {object} Object containing the ordered map of results.
		 */
		function mapChildren(children, func, context) {
		  if (children == null) {
		    return children;
		  }
		  var result = [];
		  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
		  return result;
		}
	
		function forEachSingleChildDummy(traverseContext, child, name) {
		  return null;
		}
	
		/**
		 * Count the number of children that are typically specified as
		 * `props.children`.
		 *
		 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count
		 *
		 * @param {?*} children Children tree container.
		 * @return {number} The number of children.
		 */
		function countChildren(children, context) {
		  return traverseAllChildren(children, forEachSingleChildDummy, null);
		}
	
		/**
		 * Flatten a children object (typically specified as `props.children`) and
		 * return an array with appropriately re-keyed children.
		 *
		 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray
		 */
		function toArray(children) {
		  var result = [];
		  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
		  return result;
		}
	
		var ReactChildren = {
		  forEach: forEachChildren,
		  map: mapChildren,
		  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
		  count: countChildren,
		  toArray: toArray
		};
	
		module.exports = ReactChildren;
	
	/***/ },
	/* 73 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * 
		 */
	
		'use strict';
	
		var _prodInvariant = __webpack_require__(74);
	
		var invariant = __webpack_require__(75);
	
		/**
		 * Static poolers. Several custom versions for each potential number of
		 * arguments. A completely generic pooler is easy to implement, but would
		 * require accessing the `arguments` object. In each of these, `this` refers to
		 * the Class itself, not an instance. If any others are needed, simply add them
		 * here, or in their own files.
		 */
		var oneArgumentPooler = function (copyFieldsFrom) {
		  var Klass = this;
		  if (Klass.instancePool.length) {
		    var instance = Klass.instancePool.pop();
		    Klass.call(instance, copyFieldsFrom);
		    return instance;
		  } else {
		    return new Klass(copyFieldsFrom);
		  }
		};
	
		var twoArgumentPooler = function (a1, a2) {
		  var Klass = this;
		  if (Klass.instancePool.length) {
		    var instance = Klass.instancePool.pop();
		    Klass.call(instance, a1, a2);
		    return instance;
		  } else {
		    return new Klass(a1, a2);
		  }
		};
	
		var threeArgumentPooler = function (a1, a2, a3) {
		  var Klass = this;
		  if (Klass.instancePool.length) {
		    var instance = Klass.instancePool.pop();
		    Klass.call(instance, a1, a2, a3);
		    return instance;
		  } else {
		    return new Klass(a1, a2, a3);
		  }
		};
	
		var fourArgumentPooler = function (a1, a2, a3, a4) {
		  var Klass = this;
		  if (Klass.instancePool.length) {
		    var instance = Klass.instancePool.pop();
		    Klass.call(instance, a1, a2, a3, a4);
		    return instance;
		  } else {
		    return new Klass(a1, a2, a3, a4);
		  }
		};
	
		var standardReleaser = function (instance) {
		  var Klass = this;
		  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
		  instance.destructor();
		  if (Klass.instancePool.length < Klass.poolSize) {
		    Klass.instancePool.push(instance);
		  }
		};
	
		var DEFAULT_POOL_SIZE = 10;
		var DEFAULT_POOLER = oneArgumentPooler;
	
		/**
		 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
		 * itself (statically) not adding any prototypical fields. Any CopyConstructor
		 * you give this may have a `poolSize` property, and will look for a
		 * prototypical `destructor` on instances.
		 *
		 * @param {Function} CopyConstructor Constructor that can be used to reset.
		 * @param {Function} pooler Customizable pooler.
		 */
		var addPoolingTo = function (CopyConstructor, pooler) {
		  // Casting as any so that flow ignores the actual implementation and trusts
		  // it to match the type we declared
		  var NewKlass = CopyConstructor;
		  NewKlass.instancePool = [];
		  NewKlass.getPooled = pooler || DEFAULT_POOLER;
		  if (!NewKlass.poolSize) {
		    NewKlass.poolSize = DEFAULT_POOL_SIZE;
		  }
		  NewKlass.release = standardReleaser;
		  return NewKlass;
		};
	
		var PooledClass = {
		  addPoolingTo: addPoolingTo,
		  oneArgumentPooler: oneArgumentPooler,
		  twoArgumentPooler: twoArgumentPooler,
		  threeArgumentPooler: threeArgumentPooler,
		  fourArgumentPooler: fourArgumentPooler
		};
	
		module.exports = PooledClass;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 74 */
	/***/ function(module, exports) {
	
		/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * 
		 */
		'use strict';
	
		/**
		 * WARNING: DO NOT manually require this module.
		 * This is a replacement for `invariant(...)` used by the error code system
		 * and will _only_ be required by the corresponding babel pass.
		 * It always throws.
		 */
	
		function reactProdInvariant(code) {
		  var argCount = arguments.length - 1;
	
		  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;
	
		  for (var argIdx = 0; argIdx < argCount; argIdx++) {
		    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
		  }
	
		  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';
	
		  var error = new Error(message);
		  error.name = 'Invariant Violation';
		  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame
	
		  throw error;
		}
	
		module.exports = reactProdInvariant;
	
	/***/ },
	/* 75 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		/**
		 * Use invariant() to assert state which your program assumes to be true.
		 *
		 * Provide sprintf-style format (only %s is supported) and arguments
		 * to provide information about what broke and what you were
		 * expecting.
		 *
		 * The invariant message will be stripped in production, but the invariant
		 * will remain to ensure logic does not differ in production.
		 */
	
		var validateFormat = function validateFormat(format) {};
	
		if (process.env.NODE_ENV !== 'production') {
		  validateFormat = function validateFormat(format) {
		    if (format === undefined) {
		      throw new Error('invariant requires an error message argument');
		    }
		  };
		}
	
		function invariant(condition, format, a, b, c, d, e, f) {
		  validateFormat(format);
	
		  if (!condition) {
		    var error;
		    if (format === undefined) {
		      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
		    } else {
		      var args = [a, b, c, d, e, f];
		      var argIndex = 0;
		      error = new Error(format.replace(/%s/g, function () {
		        return args[argIndex++];
		      }));
		      error.name = 'Invariant Violation';
		    }
	
		    error.framesToPop = 1; // we don't care about invariant's own frame
		    throw error;
		  }
		}
	
		module.exports = invariant;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 76 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2014-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var _assign = __webpack_require__(71);
	
		var ReactCurrentOwner = __webpack_require__(77);
	
		var warning = __webpack_require__(78);
		var canDefineProperty = __webpack_require__(80);
		var hasOwnProperty = Object.prototype.hasOwnProperty;
	
		var REACT_ELEMENT_TYPE = __webpack_require__(81);
	
		var RESERVED_PROPS = {
		  key: true,
		  ref: true,
		  __self: true,
		  __source: true
		};
	
		var specialPropKeyWarningShown, specialPropRefWarningShown;
	
		function hasValidRef(config) {
		  if (process.env.NODE_ENV !== 'production') {
		    if (hasOwnProperty.call(config, 'ref')) {
		      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
		      if (getter && getter.isReactWarning) {
		        return false;
		      }
		    }
		  }
		  return config.ref !== undefined;
		}
	
		function hasValidKey(config) {
		  if (process.env.NODE_ENV !== 'production') {
		    if (hasOwnProperty.call(config, 'key')) {
		      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
		      if (getter && getter.isReactWarning) {
		        return false;
		      }
		    }
		  }
		  return config.key !== undefined;
		}
	
		function defineKeyPropWarningGetter(props, displayName) {
		  var warnAboutAccessingKey = function () {
		    if (!specialPropKeyWarningShown) {
		      specialPropKeyWarningShown = true;
		      process.env.NODE_ENV !== 'production' ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
		    }
		  };
		  warnAboutAccessingKey.isReactWarning = true;
		  Object.defineProperty(props, 'key', {
		    get: warnAboutAccessingKey,
		    configurable: true
		  });
		}
	
		function defineRefPropWarningGetter(props, displayName) {
		  var warnAboutAccessingRef = function () {
		    if (!specialPropRefWarningShown) {
		      specialPropRefWarningShown = true;
		      process.env.NODE_ENV !== 'production' ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
		    }
		  };
		  warnAboutAccessingRef.isReactWarning = true;
		  Object.defineProperty(props, 'ref', {
		    get: warnAboutAccessingRef,
		    configurable: true
		  });
		}
	
		/**
		 * Factory method to create a new React element. This no longer adheres to
		 * the class pattern, so do not use new to call it. Also, no instanceof check
		 * will work. Instead test $$typeof field against Symbol.for('react.element') to check
		 * if something is a React Element.
		 *
		 * @param {*} type
		 * @param {*} key
		 * @param {string|object} ref
		 * @param {*} self A *temporary* helper to detect places where `this` is
		 * different from the `owner` when React.createElement is called, so that we
		 * can warn. We want to get rid of owner and replace string `ref`s with arrow
		 * functions, and as long as `this` and owner are the same, there will be no
		 * change in behavior.
		 * @param {*} source An annotation object (added by a transpiler or otherwise)
		 * indicating filename, line number, and/or other information.
		 * @param {*} owner
		 * @param {*} props
		 * @internal
		 */
		var ReactElement = function (type, key, ref, self, source, owner, props) {
		  var element = {
		    // This tag allow us to uniquely identify this as a React Element
		    $$typeof: REACT_ELEMENT_TYPE,
	
		    // Built-in properties that belong on the element
		    type: type,
		    key: key,
		    ref: ref,
		    props: props,
	
		    // Record the component responsible for creating this element.
		    _owner: owner
		  };
	
		  if (process.env.NODE_ENV !== 'production') {
		    // The validation flag is currently mutative. We put it on
		    // an external backing store so that we can freeze the whole object.
		    // This can be replaced with a WeakMap once they are implemented in
		    // commonly used development environments.
		    element._store = {};
	
		    // To make comparing ReactElements easier for testing purposes, we make
		    // the validation flag non-enumerable (where possible, which should
		    // include every environment we run tests in), so the test framework
		    // ignores it.
		    if (canDefineProperty) {
		      Object.defineProperty(element._store, 'validated', {
		        configurable: false,
		        enumerable: false,
		        writable: true,
		        value: false
		      });
		      // self and source are DEV only properties.
		      Object.defineProperty(element, '_self', {
		        configurable: false,
		        enumerable: false,
		        writable: false,
		        value: self
		      });
		      // Two elements created in two different places should be considered
		      // equal for testing purposes and therefore we hide it from enumeration.
		      Object.defineProperty(element, '_source', {
		        configurable: false,
		        enumerable: false,
		        writable: false,
		        value: source
		      });
		    } else {
		      element._store.validated = false;
		      element._self = self;
		      element._source = source;
		    }
		    if (Object.freeze) {
		      Object.freeze(element.props);
		      Object.freeze(element);
		    }
		  }
	
		  return element;
		};
	
		/**
		 * Create and return a new ReactElement of the given type.
		 * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement
		 */
		ReactElement.createElement = function (type, config, children) {
		  var propName;
	
		  // Reserved names are extracted
		  var props = {};
	
		  var key = null;
		  var ref = null;
		  var self = null;
		  var source = null;
	
		  if (config != null) {
		    if (hasValidRef(config)) {
		      ref = config.ref;
		    }
		    if (hasValidKey(config)) {
		      key = '' + config.key;
		    }
	
		    self = config.__self === undefined ? null : config.__self;
		    source = config.__source === undefined ? null : config.__source;
		    // Remaining properties are added to a new props object
		    for (propName in config) {
		      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
		        props[propName] = config[propName];
		      }
		    }
		  }
	
		  // Children can be more than one argument, and those are transferred onto
		  // the newly allocated props object.
		  var childrenLength = arguments.length - 2;
		  if (childrenLength === 1) {
		    props.children = children;
		  } else if (childrenLength > 1) {
		    var childArray = Array(childrenLength);
		    for (var i = 0; i < childrenLength; i++) {
		      childArray[i] = arguments[i + 2];
		    }
		    if (process.env.NODE_ENV !== 'production') {
		      if (Object.freeze) {
		        Object.freeze(childArray);
		      }
		    }
		    props.children = childArray;
		  }
	
		  // Resolve default props
		  if (type && type.defaultProps) {
		    var defaultProps = type.defaultProps;
		    for (propName in defaultProps) {
		      if (props[propName] === undefined) {
		        props[propName] = defaultProps[propName];
		      }
		    }
		  }
		  if (process.env.NODE_ENV !== 'production') {
		    if (key || ref) {
		      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
		        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
		        if (key) {
		          defineKeyPropWarningGetter(props, displayName);
		        }
		        if (ref) {
		          defineRefPropWarningGetter(props, displayName);
		        }
		      }
		    }
		  }
		  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
		};
	
		/**
		 * Return a function that produces ReactElements of a given type.
		 * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory
		 */
		ReactElement.createFactory = function (type) {
		  var factory = ReactElement.createElement.bind(null, type);
		  // Expose the type on the factory and the prototype so that it can be
		  // easily accessed on elements. E.g. `<Foo />.type === Foo`.
		  // This should not be named `constructor` since this may not be the function
		  // that created the element, and it may not even be a constructor.
		  // Legacy hook TODO: Warn if this is accessed
		  factory.type = type;
		  return factory;
		};
	
		ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
		  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
	
		  return newElement;
		};
	
		/**
		 * Clone and return a new ReactElement using element as the starting point.
		 * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement
		 */
		ReactElement.cloneElement = function (element, config, children) {
		  var propName;
	
		  // Original props are copied
		  var props = _assign({}, element.props);
	
		  // Reserved names are extracted
		  var key = element.key;
		  var ref = element.ref;
		  // Self is preserved since the owner is preserved.
		  var self = element._self;
		  // Source is preserved since cloneElement is unlikely to be targeted by a
		  // transpiler, and the original source is probably a better indicator of the
		  // true owner.
		  var source = element._source;
	
		  // Owner will be preserved, unless ref is overridden
		  var owner = element._owner;
	
		  if (config != null) {
		    if (hasValidRef(config)) {
		      // Silently steal the ref from the parent.
		      ref = config.ref;
		      owner = ReactCurrentOwner.current;
		    }
		    if (hasValidKey(config)) {
		      key = '' + config.key;
		    }
	
		    // Remaining properties override existing props
		    var defaultProps;
		    if (element.type && element.type.defaultProps) {
		      defaultProps = element.type.defaultProps;
		    }
		    for (propName in config) {
		      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
		        if (config[propName] === undefined && defaultProps !== undefined) {
		          // Resolve default props
		          props[propName] = defaultProps[propName];
		        } else {
		          props[propName] = config[propName];
		        }
		      }
		    }
		  }
	
		  // Children can be more than one argument, and those are transferred onto
		  // the newly allocated props object.
		  var childrenLength = arguments.length - 2;
		  if (childrenLength === 1) {
		    props.children = children;
		  } else if (childrenLength > 1) {
		    var childArray = Array(childrenLength);
		    for (var i = 0; i < childrenLength; i++) {
		      childArray[i] = arguments[i + 2];
		    }
		    props.children = childArray;
		  }
	
		  return ReactElement(element.type, key, ref, self, source, owner, props);
		};
	
		/**
		 * Verifies the object is a ReactElement.
		 * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement
		 * @param {?object} object
		 * @return {boolean} True if `object` is a valid component.
		 * @final
		 */
		ReactElement.isValidElement = function (object) {
		  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
		};
	
		module.exports = ReactElement;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 77 */
	/***/ function(module, exports) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * 
		 */
	
		'use strict';
	
		/**
		 * Keeps track of the current owner.
		 *
		 * The current owner is the component who should own any components that are
		 * currently being constructed.
		 */
		var ReactCurrentOwner = {
	
		  /**
		   * @internal
		   * @type {ReactComponent}
		   */
		  current: null
	
		};
	
		module.exports = ReactCurrentOwner;
	
	/***/ },
	/* 78 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2014-2015, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var emptyFunction = __webpack_require__(79);
	
		/**
		 * Similar to invariant but only logs a warning if the condition is not met.
		 * This can be used to log issues in development environments in critical
		 * paths. Removing the logging code for production environments will keep the
		 * same logic and follow the same code paths.
		 */
	
		var warning = emptyFunction;
	
		if (process.env.NODE_ENV !== 'production') {
		  var printWarning = function printWarning(format) {
		    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
		      args[_key - 1] = arguments[_key];
		    }
	
		    var argIndex = 0;
		    var message = 'Warning: ' + format.replace(/%s/g, function () {
		      return args[argIndex++];
		    });
		    if (typeof console !== 'undefined') {
		      console.error(message);
		    }
		    try {
		      // --- Welcome to debugging React ---
		      // This error was thrown as a convenience so that you can use this stack
		      // to find the callsite that caused this warning to fire.
		      throw new Error(message);
		    } catch (x) {}
		  };
	
		  warning = function warning(condition, format) {
		    if (format === undefined) {
		      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
		    }
	
		    if (format.indexOf('Failed Composite propType: ') === 0) {
		      return; // Ignore CompositeComponent proptype check.
		    }
	
		    if (!condition) {
		      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
		        args[_key2 - 2] = arguments[_key2];
		      }
	
		      printWarning.apply(undefined, [format].concat(args));
		    }
		  };
		}
	
		module.exports = warning;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 79 */
	/***/ function(module, exports) {
	
		"use strict";
	
		/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * 
		 */
	
		function makeEmptyFunction(arg) {
		  return function () {
		    return arg;
		  };
		}
	
		/**
		 * This function accepts and discards inputs; it has no side effects. This is
		 * primarily useful idiomatically for overridable function endpoints which
		 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
		 */
		var emptyFunction = function emptyFunction() {};
	
		emptyFunction.thatReturns = makeEmptyFunction;
		emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
		emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
		emptyFunction.thatReturnsNull = makeEmptyFunction(null);
		emptyFunction.thatReturnsThis = function () {
		  return this;
		};
		emptyFunction.thatReturnsArgument = function (arg) {
		  return arg;
		};
	
		module.exports = emptyFunction;
	
	/***/ },
	/* 80 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * 
		 */
	
		'use strict';
	
		var canDefineProperty = false;
		if (process.env.NODE_ENV !== 'production') {
		  try {
		    // $FlowFixMe https://github.com/facebook/flow/issues/285
		    Object.defineProperty({}, 'x', { get: function () {} });
		    canDefineProperty = true;
		  } catch (x) {
		    // IE will fail on defineProperty
		  }
		}
	
		module.exports = canDefineProperty;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 81 */
	/***/ function(module, exports) {
	
		/**
		 * Copyright 2014-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * 
		 */
	
		'use strict';
	
		// The Symbol used to tag the ReactElement type. If there is no native Symbol
		// nor polyfill, then a plain number is used for performance.
	
		var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;
	
		module.exports = REACT_ELEMENT_TYPE;
	
	/***/ },
	/* 82 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var _prodInvariant = __webpack_require__(74);
	
		var ReactCurrentOwner = __webpack_require__(77);
		var REACT_ELEMENT_TYPE = __webpack_require__(81);
	
		var getIteratorFn = __webpack_require__(83);
		var invariant = __webpack_require__(75);
		var KeyEscapeUtils = __webpack_require__(84);
		var warning = __webpack_require__(78);
	
		var SEPARATOR = '.';
		var SUBSEPARATOR = ':';
	
		/**
		 * This is inlined from ReactElement since this file is shared between
		 * isomorphic and renderers. We could extract this to a
		 *
		 */
	
		/**
		 * TODO: Test that a single child and an array with one item have the same key
		 * pattern.
		 */
	
		var didWarnAboutMaps = false;
	
		/**
		 * Generate a key string that identifies a component within a set.
		 *
		 * @param {*} component A component that could contain a manual key.
		 * @param {number} index Index that is used if a manual key is not provided.
		 * @return {string}
		 */
		function getComponentKey(component, index) {
		  // Do some typechecking here since we call this blindly. We want to ensure
		  // that we don't block potential future ES APIs.
		  if (component && typeof component === 'object' && component.key != null) {
		    // Explicit key
		    return KeyEscapeUtils.escape(component.key);
		  }
		  // Implicit key determined by the index in the set
		  return index.toString(36);
		}
	
		/**
		 * @param {?*} children Children tree container.
		 * @param {!string} nameSoFar Name of the key path so far.
		 * @param {!function} callback Callback to invoke with each child found.
		 * @param {?*} traverseContext Used to pass information throughout the traversal
		 * process.
		 * @return {!number} The number of children in this subtree.
		 */
		function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
		  var type = typeof children;
	
		  if (type === 'undefined' || type === 'boolean') {
		    // All of the above are perceived as null.
		    children = null;
		  }
	
		  if (children === null || type === 'string' || type === 'number' ||
		  // The following is inlined from ReactElement. This means we can optimize
		  // some checks. React Fiber also inlines this logic for similar purposes.
		  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
		    callback(traverseContext, children,
		    // If it's the only child, treat the name as if it was wrapped in an array
		    // so that it's consistent if the number of children grows.
		    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
		    return 1;
		  }
	
		  var child;
		  var nextName;
		  var subtreeCount = 0; // Count of children found in the current subtree.
		  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;
	
		  if (Array.isArray(children)) {
		    for (var i = 0; i < children.length; i++) {
		      child = children[i];
		      nextName = nextNamePrefix + getComponentKey(child, i);
		      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
		    }
		  } else {
		    var iteratorFn = getIteratorFn(children);
		    if (iteratorFn) {
		      var iterator = iteratorFn.call(children);
		      var step;
		      if (iteratorFn !== children.entries) {
		        var ii = 0;
		        while (!(step = iterator.next()).done) {
		          child = step.value;
		          nextName = nextNamePrefix + getComponentKey(child, ii++);
		          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
		        }
		      } else {
		        if (process.env.NODE_ENV !== 'production') {
		          var mapsAsChildrenAddendum = '';
		          if (ReactCurrentOwner.current) {
		            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
		            if (mapsAsChildrenOwnerName) {
		              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
		            }
		          }
		          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
		          didWarnAboutMaps = true;
		        }
		        // Iterator will provide entry [k,v] tuples rather than values.
		        while (!(step = iterator.next()).done) {
		          var entry = step.value;
		          if (entry) {
		            child = entry[1];
		            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
		            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
		          }
		        }
		      }
		    } else if (type === 'object') {
		      var addendum = '';
		      if (process.env.NODE_ENV !== 'production') {
		        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
		        if (children._isReactElement) {
		          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
		        }
		        if (ReactCurrentOwner.current) {
		          var name = ReactCurrentOwner.current.getName();
		          if (name) {
		            addendum += ' Check the render method of `' + name + '`.';
		          }
		        }
		      }
		      var childrenString = String(children);
		       true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
		    }
		  }
	
		  return subtreeCount;
		}
	
		/**
		 * Traverses children that are typically specified as `props.children`, but
		 * might also be specified through attributes:
		 *
		 * - `traverseAllChildren(this.props.children, ...)`
		 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
		 *
		 * The `traverseContext` is an optional argument that is passed through the
		 * entire traversal. It can be used to store accumulations or anything else that
		 * the callback might find relevant.
		 *
		 * @param {?*} children Children tree object.
		 * @param {!function} callback To invoke upon traversing each child.
		 * @param {?*} traverseContext Context for traversal.
		 * @return {!number} The number of children in this subtree.
		 */
		function traverseAllChildren(children, callback, traverseContext) {
		  if (children == null) {
		    return 0;
		  }
	
		  return traverseAllChildrenImpl(children, '', callback, traverseContext);
		}
	
		module.exports = traverseAllChildren;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 83 */
	/***/ function(module, exports) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * 
		 */
	
		'use strict';
	
		/* global Symbol */
	
		var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
		var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.
	
		/**
		 * Returns the iterator method function contained on the iterable object.
		 *
		 * Be sure to invoke the function with the iterable as context:
		 *
		 *     var iteratorFn = getIteratorFn(myIterable);
		 *     if (iteratorFn) {
		 *       var iterator = iteratorFn.call(myIterable);
		 *       ...
		 *     }
		 *
		 * @param {?object} maybeIterable
		 * @return {?function}
		 */
		function getIteratorFn(maybeIterable) {
		  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
		  if (typeof iteratorFn === 'function') {
		    return iteratorFn;
		  }
		}
	
		module.exports = getIteratorFn;
	
	/***/ },
	/* 84 */
	/***/ function(module, exports) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * 
		 */
	
		'use strict';
	
		/**
		 * Escape and wrap key so it is safe to use as a reactid
		 *
		 * @param {string} key to be escaped.
		 * @return {string} the escaped key.
		 */
	
		function escape(key) {
		  var escapeRegex = /[=:]/g;
		  var escaperLookup = {
		    '=': '=0',
		    ':': '=2'
		  };
		  var escapedString = ('' + key).replace(escapeRegex, function (match) {
		    return escaperLookup[match];
		  });
	
		  return '$' + escapedString;
		}
	
		/**
		 * Unescape and unwrap key for human-readable display
		 *
		 * @param {string} key to unescape.
		 * @return {string} the unescaped key.
		 */
		function unescape(key) {
		  var unescapeRegex = /(=0|=2)/g;
		  var unescaperLookup = {
		    '=0': '=',
		    '=2': ':'
		  };
		  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);
	
		  return ('' + keySubstring).replace(unescapeRegex, function (match) {
		    return unescaperLookup[match];
		  });
		}
	
		var KeyEscapeUtils = {
		  escape: escape,
		  unescape: unescape
		};
	
		module.exports = KeyEscapeUtils;
	
	/***/ },
	/* 85 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var _prodInvariant = __webpack_require__(74);
	
		var ReactNoopUpdateQueue = __webpack_require__(86);
	
		var canDefineProperty = __webpack_require__(80);
		var emptyObject = __webpack_require__(87);
		var invariant = __webpack_require__(75);
		var warning = __webpack_require__(78);
	
		/**
		 * Base class helpers for the updating state of a component.
		 */
		function ReactComponent(props, context, updater) {
		  this.props = props;
		  this.context = context;
		  this.refs = emptyObject;
		  // We initialize the default updater but the real one gets injected by the
		  // renderer.
		  this.updater = updater || ReactNoopUpdateQueue;
		}
	
		ReactComponent.prototype.isReactComponent = {};
	
		/**
		 * Sets a subset of the state. Always use this to mutate
		 * state. You should treat `this.state` as immutable.
		 *
		 * There is no guarantee that `this.state` will be immediately updated, so
		 * accessing `this.state` after calling this method may return the old value.
		 *
		 * There is no guarantee that calls to `setState` will run synchronously,
		 * as they may eventually be batched together.  You can provide an optional
		 * callback that will be executed when the call to setState is actually
		 * completed.
		 *
		 * When a function is provided to setState, it will be called at some point in
		 * the future (not synchronously). It will be called with the up to date
		 * component arguments (state, props, context). These values can be different
		 * from this.* because your function may be called after receiveProps but before
		 * shouldComponentUpdate, and this new state, props, and context will not yet be
		 * assigned to this.
		 *
		 * @param {object|function} partialState Next partial state or function to
		 *        produce next partial state to be merged with current state.
		 * @param {?function} callback Called after state is updated.
		 * @final
		 * @protected
		 */
		ReactComponent.prototype.setState = function (partialState, callback) {
		  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;
		  this.updater.enqueueSetState(this, partialState);
		  if (callback) {
		    this.updater.enqueueCallback(this, callback, 'setState');
		  }
		};
	
		/**
		 * Forces an update. This should only be invoked when it is known with
		 * certainty that we are **not** in a DOM transaction.
		 *
		 * You may want to call this when you know that some deeper aspect of the
		 * component's state has changed but `setState` was not called.
		 *
		 * This will not invoke `shouldComponentUpdate`, but it will invoke
		 * `componentWillUpdate` and `componentDidUpdate`.
		 *
		 * @param {?function} callback Called after update is complete.
		 * @final
		 * @protected
		 */
		ReactComponent.prototype.forceUpdate = function (callback) {
		  this.updater.enqueueForceUpdate(this);
		  if (callback) {
		    this.updater.enqueueCallback(this, callback, 'forceUpdate');
		  }
		};
	
		/**
		 * Deprecated APIs. These APIs used to exist on classic React classes but since
		 * we would like to deprecate them, we're not going to move them over to this
		 * modern base class. Instead, we define a getter that warns if it's accessed.
		 */
		if (process.env.NODE_ENV !== 'production') {
		  var deprecatedAPIs = {
		    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
		    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
		  };
		  var defineDeprecationWarning = function (methodName, info) {
		    if (canDefineProperty) {
		      Object.defineProperty(ReactComponent.prototype, methodName, {
		        get: function () {
		          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : void 0;
		          return undefined;
		        }
		      });
		    }
		  };
		  for (var fnName in deprecatedAPIs) {
		    if (deprecatedAPIs.hasOwnProperty(fnName)) {
		      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
		    }
		  }
		}
	
		module.exports = ReactComponent;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 86 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2015-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var warning = __webpack_require__(78);
	
		function warnNoop(publicInstance, callerName) {
		  if (process.env.NODE_ENV !== 'production') {
		    var constructor = publicInstance.constructor;
		    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
		  }
		}
	
		/**
		 * This is the abstract API for an update queue.
		 */
		var ReactNoopUpdateQueue = {
	
		  /**
		   * Checks whether or not this composite component is mounted.
		   * @param {ReactClass} publicInstance The instance we want to test.
		   * @return {boolean} True if mounted, false otherwise.
		   * @protected
		   * @final
		   */
		  isMounted: function (publicInstance) {
		    return false;
		  },
	
		  /**
		   * Enqueue a callback that will be executed after all the pending updates
		   * have processed.
		   *
		   * @param {ReactClass} publicInstance The instance to use as `this` context.
		   * @param {?function} callback Called after state is updated.
		   * @internal
		   */
		  enqueueCallback: function (publicInstance, callback) {},
	
		  /**
		   * Forces an update. This should only be invoked when it is known with
		   * certainty that we are **not** in a DOM transaction.
		   *
		   * You may want to call this when you know that some deeper aspect of the
		   * component's state has changed but `setState` was not called.
		   *
		   * This will not invoke `shouldComponentUpdate`, but it will invoke
		   * `componentWillUpdate` and `componentDidUpdate`.
		   *
		   * @param {ReactClass} publicInstance The instance that should rerender.
		   * @internal
		   */
		  enqueueForceUpdate: function (publicInstance) {
		    warnNoop(publicInstance, 'forceUpdate');
		  },
	
		  /**
		   * Replaces all of the state. Always use this or `setState` to mutate state.
		   * You should treat `this.state` as immutable.
		   *
		   * There is no guarantee that `this.state` will be immediately updated, so
		   * accessing `this.state` after calling this method may return the old value.
		   *
		   * @param {ReactClass} publicInstance The instance that should rerender.
		   * @param {object} completeState Next state.
		   * @internal
		   */
		  enqueueReplaceState: function (publicInstance, completeState) {
		    warnNoop(publicInstance, 'replaceState');
		  },
	
		  /**
		   * Sets a subset of the state. This only exists because _pendingState is
		   * internal. This provides a merging strategy that is not available to deep
		   * properties which is confusing. TODO: Expose pendingState or don't use it
		   * during the merge.
		   *
		   * @param {ReactClass} publicInstance The instance that should rerender.
		   * @param {object} partialState Next partial state to be merged with state.
		   * @internal
		   */
		  enqueueSetState: function (publicInstance, partialState) {
		    warnNoop(publicInstance, 'setState');
		  }
		};
	
		module.exports = ReactNoopUpdateQueue;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 87 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var emptyObject = {};
	
		if (process.env.NODE_ENV !== 'production') {
		  Object.freeze(emptyObject);
		}
	
		module.exports = emptyObject;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 88 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var _assign = __webpack_require__(71);
	
		var ReactComponent = __webpack_require__(85);
		var ReactNoopUpdateQueue = __webpack_require__(86);
	
		var emptyObject = __webpack_require__(87);
	
		/**
		 * Base class helpers for the updating state of a component.
		 */
		function ReactPureComponent(props, context, updater) {
		  // Duplicated from ReactComponent.
		  this.props = props;
		  this.context = context;
		  this.refs = emptyObject;
		  // We initialize the default updater but the real one gets injected by the
		  // renderer.
		  this.updater = updater || ReactNoopUpdateQueue;
		}
	
		function ComponentDummy() {}
		ComponentDummy.prototype = ReactComponent.prototype;
		ReactPureComponent.prototype = new ComponentDummy();
		ReactPureComponent.prototype.constructor = ReactPureComponent;
		// Avoid an extra prototype jump for these methods.
		_assign(ReactPureComponent.prototype, ReactComponent.prototype);
		ReactPureComponent.prototype.isPureReactComponent = true;
	
		module.exports = ReactPureComponent;
	
	/***/ },
	/* 89 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var _prodInvariant = __webpack_require__(74),
		    _assign = __webpack_require__(71);
	
		var ReactComponent = __webpack_require__(85);
		var ReactElement = __webpack_require__(76);
		var ReactPropTypeLocationNames = __webpack_require__(90);
		var ReactNoopUpdateQueue = __webpack_require__(86);
	
		var emptyObject = __webpack_require__(87);
		var invariant = __webpack_require__(75);
		var warning = __webpack_require__(78);
	
		var MIXINS_KEY = 'mixins';
	
		// Helper function to allow the creation of anonymous functions which do not
		// have .name set to the name of the variable being assigned to.
		function identity(fn) {
		  return fn;
		}
	
		/**
		 * Policies that describe methods in `ReactClassInterface`.
		 */
	
	
		var injectedMixins = [];
	
		/**
		 * Composite components are higher-level components that compose other composite
		 * or host components.
		 *
		 * To create a new type of `ReactClass`, pass a specification of
		 * your new class to `React.createClass`. The only requirement of your class
		 * specification is that you implement a `render` method.
		 *
		 *   var MyComponent = React.createClass({
		 *     render: function() {
		 *       return <div>Hello World</div>;
		 *     }
		 *   });
		 *
		 * The class specification supports a specific protocol of methods that have
		 * special meaning (e.g. `render`). See `ReactClassInterface` for
		 * more the comprehensive protocol. Any other properties and methods in the
		 * class specification will be available on the prototype.
		 *
		 * @interface ReactClassInterface
		 * @internal
		 */
		var ReactClassInterface = {
	
		  /**
		   * An array of Mixin objects to include when defining your component.
		   *
		   * @type {array}
		   * @optional
		   */
		  mixins: 'DEFINE_MANY',
	
		  /**
		   * An object containing properties and methods that should be defined on
		   * the component's constructor instead of its prototype (static methods).
		   *
		   * @type {object}
		   * @optional
		   */
		  statics: 'DEFINE_MANY',
	
		  /**
		   * Definition of prop types for this component.
		   *
		   * @type {object}
		   * @optional
		   */
		  propTypes: 'DEFINE_MANY',
	
		  /**
		   * Definition of context types for this component.
		   *
		   * @type {object}
		   * @optional
		   */
		  contextTypes: 'DEFINE_MANY',
	
		  /**
		   * Definition of context types this component sets for its children.
		   *
		   * @type {object}
		   * @optional
		   */
		  childContextTypes: 'DEFINE_MANY',
	
		  // ==== Definition methods ====
	
		  /**
		   * Invoked when the component is mounted. Values in the mapping will be set on
		   * `this.props` if that prop is not specified (i.e. using an `in` check).
		   *
		   * This method is invoked before `getInitialState` and therefore cannot rely
		   * on `this.state` or use `this.setState`.
		   *
		   * @return {object}
		   * @optional
		   */
		  getDefaultProps: 'DEFINE_MANY_MERGED',
	
		  /**
		   * Invoked once before the component is mounted. The return value will be used
		   * as the initial value of `this.state`.
		   *
		   *   getInitialState: function() {
		   *     return {
		   *       isOn: false,
		   *       fooBaz: new BazFoo()
		   *     }
		   *   }
		   *
		   * @return {object}
		   * @optional
		   */
		  getInitialState: 'DEFINE_MANY_MERGED',
	
		  /**
		   * @return {object}
		   * @optional
		   */
		  getChildContext: 'DEFINE_MANY_MERGED',
	
		  /**
		   * Uses props from `this.props` and state from `this.state` to render the
		   * structure of the component.
		   *
		   * No guarantees are made about when or how often this method is invoked, so
		   * it must not have side effects.
		   *
		   *   render: function() {
		   *     var name = this.props.name;
		   *     return <div>Hello, {name}!</div>;
		   *   }
		   *
		   * @return {ReactComponent}
		   * @nosideeffects
		   * @required
		   */
		  render: 'DEFINE_ONCE',
	
		  // ==== Delegate methods ====
	
		  /**
		   * Invoked when the component is initially created and about to be mounted.
		   * This may have side effects, but any external subscriptions or data created
		   * by this method must be cleaned up in `componentWillUnmount`.
		   *
		   * @optional
		   */
		  componentWillMount: 'DEFINE_MANY',
	
		  /**
		   * Invoked when the component has been mounted and has a DOM representation.
		   * However, there is no guarantee that the DOM node is in the document.
		   *
		   * Use this as an opportunity to operate on the DOM when the component has
		   * been mounted (initialized and rendered) for the first time.
		   *
		   * @param {DOMElement} rootNode DOM element representing the component.
		   * @optional
		   */
		  componentDidMount: 'DEFINE_MANY',
	
		  /**
		   * Invoked before the component receives new props.
		   *
		   * Use this as an opportunity to react to a prop transition by updating the
		   * state using `this.setState`. Current props are accessed via `this.props`.
		   *
		   *   componentWillReceiveProps: function(nextProps, nextContext) {
		   *     this.setState({
		   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
		   *     });
		   *   }
		   *
		   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
		   * transition may cause a state change, but the opposite is not true. If you
		   * need it, you are probably looking for `componentWillUpdate`.
		   *
		   * @param {object} nextProps
		   * @optional
		   */
		  componentWillReceiveProps: 'DEFINE_MANY',
	
		  /**
		   * Invoked while deciding if the component should be updated as a result of
		   * receiving new props, state and/or context.
		   *
		   * Use this as an opportunity to `return false` when you're certain that the
		   * transition to the new props/state/context will not require a component
		   * update.
		   *
		   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
		   *     return !equal(nextProps, this.props) ||
		   *       !equal(nextState, this.state) ||
		   *       !equal(nextContext, this.context);
		   *   }
		   *
		   * @param {object} nextProps
		   * @param {?object} nextState
		   * @param {?object} nextContext
		   * @return {boolean} True if the component should update.
		   * @optional
		   */
		  shouldComponentUpdate: 'DEFINE_ONCE',
	
		  /**
		   * Invoked when the component is about to update due to a transition from
		   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
		   * and `nextContext`.
		   *
		   * Use this as an opportunity to perform preparation before an update occurs.
		   *
		   * NOTE: You **cannot** use `this.setState()` in this method.
		   *
		   * @param {object} nextProps
		   * @param {?object} nextState
		   * @param {?object} nextContext
		   * @param {ReactReconcileTransaction} transaction
		   * @optional
		   */
		  componentWillUpdate: 'DEFINE_MANY',
	
		  /**
		   * Invoked when the component's DOM representation has been updated.
		   *
		   * Use this as an opportunity to operate on the DOM when the component has
		   * been updated.
		   *
		   * @param {object} prevProps
		   * @param {?object} prevState
		   * @param {?object} prevContext
		   * @param {DOMElement} rootNode DOM element representing the component.
		   * @optional
		   */
		  componentDidUpdate: 'DEFINE_MANY',
	
		  /**
		   * Invoked when the component is about to be removed from its parent and have
		   * its DOM representation destroyed.
		   *
		   * Use this as an opportunity to deallocate any external resources.
		   *
		   * NOTE: There is no `componentDidUnmount` since your component will have been
		   * destroyed by that point.
		   *
		   * @optional
		   */
		  componentWillUnmount: 'DEFINE_MANY',
	
		  // ==== Advanced methods ====
	
		  /**
		   * Updates the component's currently mounted DOM representation.
		   *
		   * By default, this implements React's rendering and reconciliation algorithm.
		   * Sophisticated clients may wish to override this.
		   *
		   * @param {ReactReconcileTransaction} transaction
		   * @internal
		   * @overridable
		   */
		  updateComponent: 'OVERRIDE_BASE'
	
		};
	
		/**
		 * Mapping from class specification keys to special processing functions.
		 *
		 * Although these are declared like instance properties in the specification
		 * when defining classes using `React.createClass`, they are actually static
		 * and are accessible on the constructor instead of the prototype. Despite
		 * being static, they must be defined outside of the "statics" key under
		 * which all other static methods are defined.
		 */
		var RESERVED_SPEC_KEYS = {
		  displayName: function (Constructor, displayName) {
		    Constructor.displayName = displayName;
		  },
		  mixins: function (Constructor, mixins) {
		    if (mixins) {
		      for (var i = 0; i < mixins.length; i++) {
		        mixSpecIntoComponent(Constructor, mixins[i]);
		      }
		    }
		  },
		  childContextTypes: function (Constructor, childContextTypes) {
		    if (process.env.NODE_ENV !== 'production') {
		      validateTypeDef(Constructor, childContextTypes, 'childContext');
		    }
		    Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, childContextTypes);
		  },
		  contextTypes: function (Constructor, contextTypes) {
		    if (process.env.NODE_ENV !== 'production') {
		      validateTypeDef(Constructor, contextTypes, 'context');
		    }
		    Constructor.contextTypes = _assign({}, Constructor.contextTypes, contextTypes);
		  },
		  /**
		   * Special case getDefaultProps which should move into statics but requires
		   * automatic merging.
		   */
		  getDefaultProps: function (Constructor, getDefaultProps) {
		    if (Constructor.getDefaultProps) {
		      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);
		    } else {
		      Constructor.getDefaultProps = getDefaultProps;
		    }
		  },
		  propTypes: function (Constructor, propTypes) {
		    if (process.env.NODE_ENV !== 'production') {
		      validateTypeDef(Constructor, propTypes, 'prop');
		    }
		    Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);
		  },
		  statics: function (Constructor, statics) {
		    mixStaticSpecIntoComponent(Constructor, statics);
		  },
		  autobind: function () {} };
	
		function validateTypeDef(Constructor, typeDef, location) {
		  for (var propName in typeDef) {
		    if (typeDef.hasOwnProperty(propName)) {
		      // use a warning instead of an invariant so components
		      // don't show up in prod but only in __DEV__
		      process.env.NODE_ENV !== 'production' ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : void 0;
		    }
		  }
		}
	
		function validateMethodOverride(isAlreadyDefined, name) {
		  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;
	
		  // Disallow overriding of base class methods unless explicitly allowed.
		  if (ReactClassMixin.hasOwnProperty(name)) {
		    !(specPolicy === 'OVERRIDE_BASE') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.', name) : _prodInvariant('73', name) : void 0;
		  }
	
		  // Disallow defining methods more than once unless explicitly allowed.
		  if (isAlreadyDefined) {
		    !(specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('74', name) : void 0;
		  }
		}
	
		/**
		 * Mixin helper which handles policy validation and reserved
		 * specification keys when building React classes.
		 */
		function mixSpecIntoComponent(Constructor, spec) {
		  if (!spec) {
		    if (process.env.NODE_ENV !== 'production') {
		      var typeofSpec = typeof spec;
		      var isMixinValid = typeofSpec === 'object' && spec !== null;
	
		      process.env.NODE_ENV !== 'production' ? warning(isMixinValid, '%s: You\'re attempting to include a mixin that is either null ' + 'or not an object. Check the mixins included by the component, ' + 'as well as any mixins they include themselves. ' + 'Expected object but got %s.', Constructor.displayName || 'ReactClass', spec === null ? null : typeofSpec) : void 0;
		    }
	
		    return;
		  }
	
		  !(typeof spec !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to use a component class or function as a mixin. Instead, just use a regular object.') : _prodInvariant('75') : void 0;
		  !!ReactElement.isValidElement(spec) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to use a component as a mixin. Instead, just use a regular object.') : _prodInvariant('76') : void 0;
	
		  var proto = Constructor.prototype;
		  var autoBindPairs = proto.__reactAutoBindPairs;
	
		  // By handling mixins before any other properties, we ensure the same
		  // chaining order is applied to methods with DEFINE_MANY policy, whether
		  // mixins are listed before or after these methods in the spec.
		  if (spec.hasOwnProperty(MIXINS_KEY)) {
		    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
		  }
	
		  for (var name in spec) {
		    if (!spec.hasOwnProperty(name)) {
		      continue;
		    }
	
		    if (name === MIXINS_KEY) {
		      // We have already handled mixins in a special case above.
		      continue;
		    }
	
		    var property = spec[name];
		    var isAlreadyDefined = proto.hasOwnProperty(name);
		    validateMethodOverride(isAlreadyDefined, name);
	
		    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
		      RESERVED_SPEC_KEYS[name](Constructor, property);
		    } else {
		      // Setup methods on prototype:
		      // The following member methods should not be automatically bound:
		      // 1. Expected ReactClass methods (in the "interface").
		      // 2. Overridden methods (that were mixed in).
		      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
		      var isFunction = typeof property === 'function';
		      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;
	
		      if (shouldAutoBind) {
		        autoBindPairs.push(name, property);
		        proto[name] = property;
		      } else {
		        if (isAlreadyDefined) {
		          var specPolicy = ReactClassInterface[name];
	
		          // These cases should already be caught by validateMethodOverride.
		          !(isReactClassMethod && (specPolicy === 'DEFINE_MANY_MERGED' || specPolicy === 'DEFINE_MANY')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.', specPolicy, name) : _prodInvariant('77', specPolicy, name) : void 0;
	
		          // For methods which are defined more than once, call the existing
		          // methods before calling the new property, merging if appropriate.
		          if (specPolicy === 'DEFINE_MANY_MERGED') {
		            proto[name] = createMergedResultFunction(proto[name], property);
		          } else if (specPolicy === 'DEFINE_MANY') {
		            proto[name] = createChainedFunction(proto[name], property);
		          }
		        } else {
		          proto[name] = property;
		          if (process.env.NODE_ENV !== 'production') {
		            // Add verbose displayName to the function, which helps when looking
		            // at profiling tools.
		            if (typeof property === 'function' && spec.displayName) {
		              proto[name].displayName = spec.displayName + '_' + name;
		            }
		          }
		        }
		      }
		    }
		  }
		}
	
		function mixStaticSpecIntoComponent(Constructor, statics) {
		  if (!statics) {
		    return;
		  }
		  for (var name in statics) {
		    var property = statics[name];
		    if (!statics.hasOwnProperty(name)) {
		      continue;
		    }
	
		    var isReserved = name in RESERVED_SPEC_KEYS;
		    !!isReserved ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\'t be on the "statics" key. Define it as an instance property instead; it will still be accessible on the constructor.', name) : _prodInvariant('78', name) : void 0;
	
		    var isInherited = name in Constructor;
		    !!isInherited ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('79', name) : void 0;
		    Constructor[name] = property;
		  }
		}
	
		/**
		 * Merge two objects, but throw if both contain the same key.
		 *
		 * @param {object} one The first object, which is mutated.
		 * @param {object} two The second object
		 * @return {object} one after it has been mutated to contain everything in two.
		 */
		function mergeIntoWithNoDuplicateKeys(one, two) {
		  !(one && two && typeof one === 'object' && typeof two === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : _prodInvariant('80') : void 0;
	
		  for (var key in two) {
		    if (two.hasOwnProperty(key)) {
		      !(one[key] === undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.', key) : _prodInvariant('81', key) : void 0;
		      one[key] = two[key];
		    }
		  }
		  return one;
		}
	
		/**
		 * Creates a function that invokes two functions and merges their return values.
		 *
		 * @param {function} one Function to invoke first.
		 * @param {function} two Function to invoke second.
		 * @return {function} Function that invokes the two argument functions.
		 * @private
		 */
		function createMergedResultFunction(one, two) {
		  return function mergedResult() {
		    var a = one.apply(this, arguments);
		    var b = two.apply(this, arguments);
		    if (a == null) {
		      return b;
		    } else if (b == null) {
		      return a;
		    }
		    var c = {};
		    mergeIntoWithNoDuplicateKeys(c, a);
		    mergeIntoWithNoDuplicateKeys(c, b);
		    return c;
		  };
		}
	
		/**
		 * Creates a function that invokes two functions and ignores their return vales.
		 *
		 * @param {function} one Function to invoke first.
		 * @param {function} two Function to invoke second.
		 * @return {function} Function that invokes the two argument functions.
		 * @private
		 */
		function createChainedFunction(one, two) {
		  return function chainedFunction() {
		    one.apply(this, arguments);
		    two.apply(this, arguments);
		  };
		}
	
		/**
		 * Binds a method to the component.
		 *
		 * @param {object} component Component whose method is going to be bound.
		 * @param {function} method Method to be bound.
		 * @return {function} The bound method.
		 */
		function bindAutoBindMethod(component, method) {
		  var boundMethod = method.bind(component);
		  if (process.env.NODE_ENV !== 'production') {
		    boundMethod.__reactBoundContext = component;
		    boundMethod.__reactBoundMethod = method;
		    boundMethod.__reactBoundArguments = null;
		    var componentName = component.constructor.displayName;
		    var _bind = boundMethod.bind;
		    boundMethod.bind = function (newThis) {
		      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
		        args[_key - 1] = arguments[_key];
		      }
	
		      // User is trying to bind() an autobound method; we effectively will
		      // ignore the value of "this" that the user is trying to use, so
		      // let's warn.
		      if (newThis !== component && newThis !== null) {
		        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : void 0;
		      } else if (!args.length) {
		        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : void 0;
		        return boundMethod;
		      }
		      var reboundMethod = _bind.apply(boundMethod, arguments);
		      reboundMethod.__reactBoundContext = component;
		      reboundMethod.__reactBoundMethod = method;
		      reboundMethod.__reactBoundArguments = args;
		      return reboundMethod;
		    };
		  }
		  return boundMethod;
		}
	
		/**
		 * Binds all auto-bound methods in a component.
		 *
		 * @param {object} component Component whose method is going to be bound.
		 */
		function bindAutoBindMethods(component) {
		  var pairs = component.__reactAutoBindPairs;
		  for (var i = 0; i < pairs.length; i += 2) {
		    var autoBindKey = pairs[i];
		    var method = pairs[i + 1];
		    component[autoBindKey] = bindAutoBindMethod(component, method);
		  }
		}
	
		/**
		 * Add more to the ReactClass base class. These are all legacy features and
		 * therefore not already part of the modern ReactComponent.
		 */
		var ReactClassMixin = {
	
		  /**
		   * TODO: This will be deprecated because state should always keep a consistent
		   * type signature and the only use case for this, is to avoid that.
		   */
		  replaceState: function (newState, callback) {
		    this.updater.enqueueReplaceState(this, newState);
		    if (callback) {
		      this.updater.enqueueCallback(this, callback, 'replaceState');
		    }
		  },
	
		  /**
		   * Checks whether or not this composite component is mounted.
		   * @return {boolean} True if mounted, false otherwise.
		   * @protected
		   * @final
		   */
		  isMounted: function () {
		    return this.updater.isMounted(this);
		  }
		};
	
		var ReactClassComponent = function () {};
		_assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);
	
		/**
		 * Module for creating composite components.
		 *
		 * @class ReactClass
		 */
		var ReactClass = {
	
		  /**
		   * Creates a composite component class given a class specification.
		   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
		   *
		   * @param {object} spec Class specification (which must define `render`).
		   * @return {function} Component constructor function.
		   * @public
		   */
		  createClass: function (spec) {
		    // To keep our warnings more understandable, we'll use a little hack here to
		    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't
		    // unnecessarily identify a class without displayName as 'Constructor'.
		    var Constructor = identity(function (props, context, updater) {
		      // This constructor gets overridden by mocks. The argument is used
		      // by mocks to assert on what gets mounted.
	
		      if (process.env.NODE_ENV !== 'production') {
		        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : void 0;
		      }
	
		      // Wire up auto-binding
		      if (this.__reactAutoBindPairs.length) {
		        bindAutoBindMethods(this);
		      }
	
		      this.props = props;
		      this.context = context;
		      this.refs = emptyObject;
		      this.updater = updater || ReactNoopUpdateQueue;
	
		      this.state = null;
	
		      // ReactClasses doesn't have constructors. Instead, they use the
		      // getInitialState and componentWillMount methods for initialization.
	
		      var initialState = this.getInitialState ? this.getInitialState() : null;
		      if (process.env.NODE_ENV !== 'production') {
		        // We allow auto-mocks to proceed as if they're returning null.
		        if (initialState === undefined && this.getInitialState._isMockFunction) {
		          // This is probably bad practice. Consider warning here and
		          // deprecating this convenience.
		          initialState = null;
		        }
		      }
		      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : _prodInvariant('82', Constructor.displayName || 'ReactCompositeComponent') : void 0;
	
		      this.state = initialState;
		    });
		    Constructor.prototype = new ReactClassComponent();
		    Constructor.prototype.constructor = Constructor;
		    Constructor.prototype.__reactAutoBindPairs = [];
	
		    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));
	
		    mixSpecIntoComponent(Constructor, spec);
	
		    // Initialize the defaultProps property after all mixins have been merged.
		    if (Constructor.getDefaultProps) {
		      Constructor.defaultProps = Constructor.getDefaultProps();
		    }
	
		    if (process.env.NODE_ENV !== 'production') {
		      // This is a tag to indicate that the use of these method names is ok,
		      // since it's used with createClass. If it's not, then it's likely a
		      // mistake so we'll warn you to use the static property, property
		      // initializer or constructor respectively.
		      if (Constructor.getDefaultProps) {
		        Constructor.getDefaultProps.isReactClassApproved = {};
		      }
		      if (Constructor.prototype.getInitialState) {
		        Constructor.prototype.getInitialState.isReactClassApproved = {};
		      }
		    }
	
		    !Constructor.prototype.render ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : _prodInvariant('83') : void 0;
	
		    if (process.env.NODE_ENV !== 'production') {
		      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : void 0;
		      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : void 0;
		    }
	
		    // Reduce time spent doing lookups by setting these on the prototype.
		    for (var methodName in ReactClassInterface) {
		      if (!Constructor.prototype[methodName]) {
		        Constructor.prototype[methodName] = null;
		      }
		    }
	
		    return Constructor;
		  },
	
		  injection: {
		    injectMixin: function (mixin) {
		      injectedMixins.push(mixin);
		    }
		  }
	
		};
	
		module.exports = ReactClass;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 90 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * 
		 */
	
		'use strict';
	
		var ReactPropTypeLocationNames = {};
	
		if (process.env.NODE_ENV !== 'production') {
		  ReactPropTypeLocationNames = {
		    prop: 'prop',
		    context: 'context',
		    childContext: 'child context'
		  };
		}
	
		module.exports = ReactPropTypeLocationNames;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 91 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var ReactElement = __webpack_require__(76);
	
		/**
		 * Create a factory that creates HTML tag elements.
		 *
		 * @private
		 */
		var createDOMFactory = ReactElement.createFactory;
		if (process.env.NODE_ENV !== 'production') {
		  var ReactElementValidator = __webpack_require__(92);
		  createDOMFactory = ReactElementValidator.createFactory;
		}
	
		/**
		 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
		 * This is also accessible via `React.DOM`.
		 *
		 * @public
		 */
		var ReactDOMFactories = {
		  a: createDOMFactory('a'),
		  abbr: createDOMFactory('abbr'),
		  address: createDOMFactory('address'),
		  area: createDOMFactory('area'),
		  article: createDOMFactory('article'),
		  aside: createDOMFactory('aside'),
		  audio: createDOMFactory('audio'),
		  b: createDOMFactory('b'),
		  base: createDOMFactory('base'),
		  bdi: createDOMFactory('bdi'),
		  bdo: createDOMFactory('bdo'),
		  big: createDOMFactory('big'),
		  blockquote: createDOMFactory('blockquote'),
		  body: createDOMFactory('body'),
		  br: createDOMFactory('br'),
		  button: createDOMFactory('button'),
		  canvas: createDOMFactory('canvas'),
		  caption: createDOMFactory('caption'),
		  cite: createDOMFactory('cite'),
		  code: createDOMFactory('code'),
		  col: createDOMFactory('col'),
		  colgroup: createDOMFactory('colgroup'),
		  data: createDOMFactory('data'),
		  datalist: createDOMFactory('datalist'),
		  dd: createDOMFactory('dd'),
		  del: createDOMFactory('del'),
		  details: createDOMFactory('details'),
		  dfn: createDOMFactory('dfn'),
		  dialog: createDOMFactory('dialog'),
		  div: createDOMFactory('div'),
		  dl: createDOMFactory('dl'),
		  dt: createDOMFactory('dt'),
		  em: createDOMFactory('em'),
		  embed: createDOMFactory('embed'),
		  fieldset: createDOMFactory('fieldset'),
		  figcaption: createDOMFactory('figcaption'),
		  figure: createDOMFactory('figure'),
		  footer: createDOMFactory('footer'),
		  form: createDOMFactory('form'),
		  h1: createDOMFactory('h1'),
		  h2: createDOMFactory('h2'),
		  h3: createDOMFactory('h3'),
		  h4: createDOMFactory('h4'),
		  h5: createDOMFactory('h5'),
		  h6: createDOMFactory('h6'),
		  head: createDOMFactory('head'),
		  header: createDOMFactory('header'),
		  hgroup: createDOMFactory('hgroup'),
		  hr: createDOMFactory('hr'),
		  html: createDOMFactory('html'),
		  i: createDOMFactory('i'),
		  iframe: createDOMFactory('iframe'),
		  img: createDOMFactory('img'),
		  input: createDOMFactory('input'),
		  ins: createDOMFactory('ins'),
		  kbd: createDOMFactory('kbd'),
		  keygen: createDOMFactory('keygen'),
		  label: createDOMFactory('label'),
		  legend: createDOMFactory('legend'),
		  li: createDOMFactory('li'),
		  link: createDOMFactory('link'),
		  main: createDOMFactory('main'),
		  map: createDOMFactory('map'),
		  mark: createDOMFactory('mark'),
		  menu: createDOMFactory('menu'),
		  menuitem: createDOMFactory('menuitem'),
		  meta: createDOMFactory('meta'),
		  meter: createDOMFactory('meter'),
		  nav: createDOMFactory('nav'),
		  noscript: createDOMFactory('noscript'),
		  object: createDOMFactory('object'),
		  ol: createDOMFactory('ol'),
		  optgroup: createDOMFactory('optgroup'),
		  option: createDOMFactory('option'),
		  output: createDOMFactory('output'),
		  p: createDOMFactory('p'),
		  param: createDOMFactory('param'),
		  picture: createDOMFactory('picture'),
		  pre: createDOMFactory('pre'),
		  progress: createDOMFactory('progress'),
		  q: createDOMFactory('q'),
		  rp: createDOMFactory('rp'),
		  rt: createDOMFactory('rt'),
		  ruby: createDOMFactory('ruby'),
		  s: createDOMFactory('s'),
		  samp: createDOMFactory('samp'),
		  script: createDOMFactory('script'),
		  section: createDOMFactory('section'),
		  select: createDOMFactory('select'),
		  small: createDOMFactory('small'),
		  source: createDOMFactory('source'),
		  span: createDOMFactory('span'),
		  strong: createDOMFactory('strong'),
		  style: createDOMFactory('style'),
		  sub: createDOMFactory('sub'),
		  summary: createDOMFactory('summary'),
		  sup: createDOMFactory('sup'),
		  table: createDOMFactory('table'),
		  tbody: createDOMFactory('tbody'),
		  td: createDOMFactory('td'),
		  textarea: createDOMFactory('textarea'),
		  tfoot: createDOMFactory('tfoot'),
		  th: createDOMFactory('th'),
		  thead: createDOMFactory('thead'),
		  time: createDOMFactory('time'),
		  title: createDOMFactory('title'),
		  tr: createDOMFactory('tr'),
		  track: createDOMFactory('track'),
		  u: createDOMFactory('u'),
		  ul: createDOMFactory('ul'),
		  'var': createDOMFactory('var'),
		  video: createDOMFactory('video'),
		  wbr: createDOMFactory('wbr'),
	
		  // SVG
		  circle: createDOMFactory('circle'),
		  clipPath: createDOMFactory('clipPath'),
		  defs: createDOMFactory('defs'),
		  ellipse: createDOMFactory('ellipse'),
		  g: createDOMFactory('g'),
		  image: createDOMFactory('image'),
		  line: createDOMFactory('line'),
		  linearGradient: createDOMFactory('linearGradient'),
		  mask: createDOMFactory('mask'),
		  path: createDOMFactory('path'),
		  pattern: createDOMFactory('pattern'),
		  polygon: createDOMFactory('polygon'),
		  polyline: createDOMFactory('polyline'),
		  radialGradient: createDOMFactory('radialGradient'),
		  rect: createDOMFactory('rect'),
		  stop: createDOMFactory('stop'),
		  svg: createDOMFactory('svg'),
		  text: createDOMFactory('text'),
		  tspan: createDOMFactory('tspan')
		};
	
		module.exports = ReactDOMFactories;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 92 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2014-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		/**
		 * ReactElementValidator provides a wrapper around a element factory
		 * which validates the props passed to the element. This is intended to be
		 * used only in DEV and could be replaced by a static type checker for languages
		 * that support it.
		 */
	
		'use strict';
	
		var ReactCurrentOwner = __webpack_require__(77);
		var ReactComponentTreeHook = __webpack_require__(93);
		var ReactElement = __webpack_require__(76);
	
		var checkReactTypeSpec = __webpack_require__(94);
	
		var canDefineProperty = __webpack_require__(80);
		var getIteratorFn = __webpack_require__(83);
		var warning = __webpack_require__(78);
	
		function getDeclarationErrorAddendum() {
		  if (ReactCurrentOwner.current) {
		    var name = ReactCurrentOwner.current.getName();
		    if (name) {
		      return ' Check the render method of `' + name + '`.';
		    }
		  }
		  return '';
		}
	
		/**
		 * Warn if there's no key explicitly set on dynamic arrays of children or
		 * object keys are not valid. This allows us to keep track of children between
		 * updates.
		 */
		var ownerHasKeyUseWarning = {};
	
		function getCurrentComponentErrorInfo(parentType) {
		  var info = getDeclarationErrorAddendum();
	
		  if (!info) {
		    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
		    if (parentName) {
		      info = ' Check the top-level render call using <' + parentName + '>.';
		    }
		  }
		  return info;
		}
	
		/**
		 * Warn if the element doesn't have an explicit key assigned to it.
		 * This element is in an array. The array could grow and shrink or be
		 * reordered. All children that haven't already been validated are required to
		 * have a "key" property assigned to it. Error statuses are cached so a warning
		 * will only be shown once.
		 *
		 * @internal
		 * @param {ReactElement} element Element that requires a key.
		 * @param {*} parentType element's parent's type.
		 */
		function validateExplicitKey(element, parentType) {
		  if (!element._store || element._store.validated || element.key != null) {
		    return;
		  }
		  element._store.validated = true;
	
		  var memoizer = ownerHasKeyUseWarning.uniqueKey || (ownerHasKeyUseWarning.uniqueKey = {});
	
		  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
		  if (memoizer[currentComponentErrorInfo]) {
		    return;
		  }
		  memoizer[currentComponentErrorInfo] = true;
	
		  // Usually the current owner is the offender, but if it accepts children as a
		  // property, it may be the creator of the child that's responsible for
		  // assigning it a key.
		  var childOwner = '';
		  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
		    // Give the component that originally created this child.
		    childOwner = ' It was passed a child from ' + element._owner.getName() + '.';
		  }
	
		  process.env.NODE_ENV !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, ReactComponentTreeHook.getCurrentStackAddendum(element)) : void 0;
		}
	
		/**
		 * Ensure that every element either is passed in a static location, in an
		 * array with an explicit keys property defined, or in an object literal
		 * with valid key property.
		 *
		 * @internal
		 * @param {ReactNode} node Statically passed child of any type.
		 * @param {*} parentType node's parent's type.
		 */
		function validateChildKeys(node, parentType) {
		  if (typeof node !== 'object') {
		    return;
		  }
		  if (Array.isArray(node)) {
		    for (var i = 0; i < node.length; i++) {
		      var child = node[i];
		      if (ReactElement.isValidElement(child)) {
		        validateExplicitKey(child, parentType);
		      }
		    }
		  } else if (ReactElement.isValidElement(node)) {
		    // This element was passed in a valid location.
		    if (node._store) {
		      node._store.validated = true;
		    }
		  } else if (node) {
		    var iteratorFn = getIteratorFn(node);
		    // Entry iterators provide implicit keys.
		    if (iteratorFn) {
		      if (iteratorFn !== node.entries) {
		        var iterator = iteratorFn.call(node);
		        var step;
		        while (!(step = iterator.next()).done) {
		          if (ReactElement.isValidElement(step.value)) {
		            validateExplicitKey(step.value, parentType);
		          }
		        }
		      }
		    }
		  }
		}
	
		/**
		 * Given an element, validate that its props follow the propTypes definition,
		 * provided by the type.
		 *
		 * @param {ReactElement} element
		 */
		function validatePropTypes(element) {
		  var componentClass = element.type;
		  if (typeof componentClass !== 'function') {
		    return;
		  }
		  var name = componentClass.displayName || componentClass.name;
		  if (componentClass.propTypes) {
		    checkReactTypeSpec(componentClass.propTypes, element.props, 'prop', name, element, null);
		  }
		  if (typeof componentClass.getDefaultProps === 'function') {
		    process.env.NODE_ENV !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
		  }
		}
	
		var ReactElementValidator = {
	
		  createElement: function (type, props, children) {
		    var validType = typeof type === 'string' || typeof type === 'function';
		    // We warn in this case but don't throw. We expect the element creation to
		    // succeed and there will likely be errors in render.
		    if (!validType) {
		      if (typeof type !== 'function' && typeof type !== 'string') {
		        var info = '';
		        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
		          info += ' You likely forgot to export your component from the file ' + 'it\'s defined in.';
		        }
		        info += getDeclarationErrorAddendum();
		        process.env.NODE_ENV !== 'production' ? warning(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', type == null ? type : typeof type, info) : void 0;
		      }
		    }
	
		    var element = ReactElement.createElement.apply(this, arguments);
	
		    // The result can be nullish if a mock or a custom function is used.
		    // TODO: Drop this when these are no longer allowed as the type argument.
		    if (element == null) {
		      return element;
		    }
	
		    // Skip key warning if the type isn't valid since our key validation logic
		    // doesn't expect a non-string/function type and can throw confusing errors.
		    // We don't want exception behavior to differ between dev and prod.
		    // (Rendering will throw with a helpful message and as soon as the type is
		    // fixed, the key warnings will appear.)
		    if (validType) {
		      for (var i = 2; i < arguments.length; i++) {
		        validateChildKeys(arguments[i], type);
		      }
		    }
	
		    validatePropTypes(element);
	
		    return element;
		  },
	
		  createFactory: function (type) {
		    var validatedFactory = ReactElementValidator.createElement.bind(null, type);
		    // Legacy hook TODO: Warn if this is accessed
		    validatedFactory.type = type;
	
		    if (process.env.NODE_ENV !== 'production') {
		      if (canDefineProperty) {
		        Object.defineProperty(validatedFactory, 'type', {
		          enumerable: false,
		          get: function () {
		            process.env.NODE_ENV !== 'production' ? warning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.') : void 0;
		            Object.defineProperty(this, 'type', {
		              value: type
		            });
		            return type;
		          }
		        });
		      }
		    }
	
		    return validatedFactory;
		  },
	
		  cloneElement: function (element, props, children) {
		    var newElement = ReactElement.cloneElement.apply(this, arguments);
		    for (var i = 2; i < arguments.length; i++) {
		      validateChildKeys(arguments[i], newElement.type);
		    }
		    validatePropTypes(newElement);
		    return newElement;
		  }
	
		};
	
		module.exports = ReactElementValidator;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 93 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2016-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * 
		 */
	
		'use strict';
	
		var _prodInvariant = __webpack_require__(74);
	
		var ReactCurrentOwner = __webpack_require__(77);
	
		var invariant = __webpack_require__(75);
		var warning = __webpack_require__(78);
	
		function isNative(fn) {
		  // Based on isNative() from Lodash
		  var funcToString = Function.prototype.toString;
		  var hasOwnProperty = Object.prototype.hasOwnProperty;
		  var reIsNative = RegExp('^' + funcToString
		  // Take an example native function source for comparison
		  .call(hasOwnProperty)
		  // Strip regex characters so we can use it for regex
		  .replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
		  // Remove hasOwnProperty from the template to make it generic
		  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
		  try {
		    var source = funcToString.call(fn);
		    return reIsNative.test(source);
		  } catch (err) {
		    return false;
		  }
		}
	
		var canUseCollections =
		// Array.from
		typeof Array.from === 'function' &&
		// Map
		typeof Map === 'function' && isNative(Map) &&
		// Map.prototype.keys
		Map.prototype != null && typeof Map.prototype.keys === 'function' && isNative(Map.prototype.keys) &&
		// Set
		typeof Set === 'function' && isNative(Set) &&
		// Set.prototype.keys
		Set.prototype != null && typeof Set.prototype.keys === 'function' && isNative(Set.prototype.keys);
	
		var setItem;
		var getItem;
		var removeItem;
		var getItemIDs;
		var addRoot;
		var removeRoot;
		var getRootIDs;
	
		if (canUseCollections) {
		  var itemMap = new Map();
		  var rootIDSet = new Set();
	
		  setItem = function (id, item) {
		    itemMap.set(id, item);
		  };
		  getItem = function (id) {
		    return itemMap.get(id);
		  };
		  removeItem = function (id) {
		    itemMap['delete'](id);
		  };
		  getItemIDs = function () {
		    return Array.from(itemMap.keys());
		  };
	
		  addRoot = function (id) {
		    rootIDSet.add(id);
		  };
		  removeRoot = function (id) {
		    rootIDSet['delete'](id);
		  };
		  getRootIDs = function () {
		    return Array.from(rootIDSet.keys());
		  };
		} else {
		  var itemByKey = {};
		  var rootByKey = {};
	
		  // Use non-numeric keys to prevent V8 performance issues:
		  // https://github.com/facebook/react/pull/7232
		  var getKeyFromID = function (id) {
		    return '.' + id;
		  };
		  var getIDFromKey = function (key) {
		    return parseInt(key.substr(1), 10);
		  };
	
		  setItem = function (id, item) {
		    var key = getKeyFromID(id);
		    itemByKey[key] = item;
		  };
		  getItem = function (id) {
		    var key = getKeyFromID(id);
		    return itemByKey[key];
		  };
		  removeItem = function (id) {
		    var key = getKeyFromID(id);
		    delete itemByKey[key];
		  };
		  getItemIDs = function () {
		    return Object.keys(itemByKey).map(getIDFromKey);
		  };
	
		  addRoot = function (id) {
		    var key = getKeyFromID(id);
		    rootByKey[key] = true;
		  };
		  removeRoot = function (id) {
		    var key = getKeyFromID(id);
		    delete rootByKey[key];
		  };
		  getRootIDs = function () {
		    return Object.keys(rootByKey).map(getIDFromKey);
		  };
		}
	
		var unmountedIDs = [];
	
		function purgeDeep(id) {
		  var item = getItem(id);
		  if (item) {
		    var childIDs = item.childIDs;
	
		    removeItem(id);
		    childIDs.forEach(purgeDeep);
		  }
		}
	
		function describeComponentFrame(name, source, ownerName) {
		  return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
		}
	
		function getDisplayName(element) {
		  if (element == null) {
		    return '#empty';
		  } else if (typeof element === 'string' || typeof element === 'number') {
		    return '#text';
		  } else if (typeof element.type === 'string') {
		    return element.type;
		  } else {
		    return element.type.displayName || element.type.name || 'Unknown';
		  }
		}
	
		function describeID(id) {
		  var name = ReactComponentTreeHook.getDisplayName(id);
		  var element = ReactComponentTreeHook.getElement(id);
		  var ownerID = ReactComponentTreeHook.getOwnerID(id);
		  var ownerName;
		  if (ownerID) {
		    ownerName = ReactComponentTreeHook.getDisplayName(ownerID);
		  }
		  process.env.NODE_ENV !== 'production' ? warning(element, 'ReactComponentTreeHook: Missing React element for debugID %s when ' + 'building stack', id) : void 0;
		  return describeComponentFrame(name, element && element._source, ownerName);
		}
	
		var ReactComponentTreeHook = {
		  onSetChildren: function (id, nextChildIDs) {
		    var item = getItem(id);
		    !item ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
		    item.childIDs = nextChildIDs;
	
		    for (var i = 0; i < nextChildIDs.length; i++) {
		      var nextChildID = nextChildIDs[i];
		      var nextChild = getItem(nextChildID);
		      !nextChild ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected hook events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('140') : void 0;
		      !(nextChild.childIDs != null || typeof nextChild.element !== 'object' || nextChild.element == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().') : _prodInvariant('141') : void 0;
		      !nextChild.isMounted ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;
		      if (nextChild.parentID == null) {
		        nextChild.parentID = id;
		        // TODO: This shouldn't be necessary but mounting a new root during in
		        // componentWillMount currently causes not-yet-mounted components to
		        // be purged from our tree data so their parent id is missing.
		      }
		      !(nextChild.parentID === id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('142', nextChildID, nextChild.parentID, id) : void 0;
		    }
		  },
		  onBeforeMountComponent: function (id, element, parentID) {
		    var item = {
		      element: element,
		      parentID: parentID,
		      text: null,
		      childIDs: [],
		      isMounted: false,
		      updateCount: 0
		    };
		    setItem(id, item);
		  },
		  onBeforeUpdateComponent: function (id, element) {
		    var item = getItem(id);
		    if (!item || !item.isMounted) {
		      // We may end up here as a result of setState() in componentWillUnmount().
		      // In this case, ignore the element.
		      return;
		    }
		    item.element = element;
		  },
		  onMountComponent: function (id) {
		    var item = getItem(id);
		    !item ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
		    item.isMounted = true;
		    var isRoot = item.parentID === 0;
		    if (isRoot) {
		      addRoot(id);
		    }
		  },
		  onUpdateComponent: function (id) {
		    var item = getItem(id);
		    if (!item || !item.isMounted) {
		      // We may end up here as a result of setState() in componentWillUnmount().
		      // In this case, ignore the element.
		      return;
		    }
		    item.updateCount++;
		  },
		  onUnmountComponent: function (id) {
		    var item = getItem(id);
		    if (item) {
		      // We need to check if it exists.
		      // `item` might not exist if it is inside an error boundary, and a sibling
		      // error boundary child threw while mounting. Then this instance never
		      // got a chance to mount, but it still gets an unmounting event during
		      // the error boundary cleanup.
		      item.isMounted = false;
		      var isRoot = item.parentID === 0;
		      if (isRoot) {
		        removeRoot(id);
		      }
		    }
		    unmountedIDs.push(id);
		  },
		  purgeUnmountedComponents: function () {
		    if (ReactComponentTreeHook._preventPurging) {
		      // Should only be used for testing.
		      return;
		    }
	
		    for (var i = 0; i < unmountedIDs.length; i++) {
		      var id = unmountedIDs[i];
		      purgeDeep(id);
		    }
		    unmountedIDs.length = 0;
		  },
		  isMounted: function (id) {
		    var item = getItem(id);
		    return item ? item.isMounted : false;
		  },
		  getCurrentStackAddendum: function (topElement) {
		    var info = '';
		    if (topElement) {
		      var name = getDisplayName(topElement);
		      var owner = topElement._owner;
		      info += describeComponentFrame(name, topElement._source, owner && owner.getName());
		    }
	
		    var currentOwner = ReactCurrentOwner.current;
		    var id = currentOwner && currentOwner._debugID;
	
		    info += ReactComponentTreeHook.getStackAddendumByID(id);
		    return info;
		  },
		  getStackAddendumByID: function (id) {
		    var info = '';
		    while (id) {
		      info += describeID(id);
		      id = ReactComponentTreeHook.getParentID(id);
		    }
		    return info;
		  },
		  getChildIDs: function (id) {
		    var item = getItem(id);
		    return item ? item.childIDs : [];
		  },
		  getDisplayName: function (id) {
		    var element = ReactComponentTreeHook.getElement(id);
		    if (!element) {
		      return null;
		    }
		    return getDisplayName(element);
		  },
		  getElement: function (id) {
		    var item = getItem(id);
		    return item ? item.element : null;
		  },
		  getOwnerID: function (id) {
		    var element = ReactComponentTreeHook.getElement(id);
		    if (!element || !element._owner) {
		      return null;
		    }
		    return element._owner._debugID;
		  },
		  getParentID: function (id) {
		    var item = getItem(id);
		    return item ? item.parentID : null;
		  },
		  getSource: function (id) {
		    var item = getItem(id);
		    var element = item ? item.element : null;
		    var source = element != null ? element._source : null;
		    return source;
		  },
		  getText: function (id) {
		    var element = ReactComponentTreeHook.getElement(id);
		    if (typeof element === 'string') {
		      return element;
		    } else if (typeof element === 'number') {
		      return '' + element;
		    } else {
		      return null;
		    }
		  },
		  getUpdateCount: function (id) {
		    var item = getItem(id);
		    return item ? item.updateCount : 0;
		  },
	
	
		  getRootIDs: getRootIDs,
		  getRegisteredIDs: getItemIDs
		};
	
		module.exports = ReactComponentTreeHook;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 94 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var _prodInvariant = __webpack_require__(74);
	
		var ReactPropTypeLocationNames = __webpack_require__(90);
		var ReactPropTypesSecret = __webpack_require__(95);
	
		var invariant = __webpack_require__(75);
		var warning = __webpack_require__(78);
	
		var ReactComponentTreeHook;
	
		if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
		  // Temporary hack.
		  // Inline requires don't work well with Jest:
		  // https://github.com/facebook/react/issues/7240
		  // Remove the inline requires when we don't need them anymore:
		  // https://github.com/facebook/react/pull/7178
		  ReactComponentTreeHook = __webpack_require__(93);
		}
	
		var loggedTypeFailures = {};
	
		/**
		 * Assert that the values match with the type specs.
		 * Error messages are memorized and will only be shown once.
		 *
		 * @param {object} typeSpecs Map of name to a ReactPropType
		 * @param {object} values Runtime values that need to be type-checked
		 * @param {string} location e.g. "prop", "context", "child context"
		 * @param {string} componentName Name of the component for error messages.
		 * @param {?object} element The React element that is being type-checked
		 * @param {?number} debugID The React component instance that is being type-checked
		 * @private
		 */
		function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
		  for (var typeSpecName in typeSpecs) {
		    if (typeSpecs.hasOwnProperty(typeSpecName)) {
		      var error;
		      // Prop type validation may throw. In case they do, we don't want to
		      // fail the render phase where it didn't fail before. So we log it.
		      // After these have been cleaned up, we'll let them throw.
		      try {
		        // This is intentionally an invariant that gets caught. It's the same
		        // behavior as without this statement except with a better message.
		        !(typeof typeSpecs[typeSpecName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
		        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
		      } catch (ex) {
		        error = ex;
		      }
		      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
		      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
		        // Only monitor this failure once because there tends to be a lot of the
		        // same error.
		        loggedTypeFailures[error.message] = true;
	
		        var componentStackInfo = '';
	
		        if (process.env.NODE_ENV !== 'production') {
		          if (!ReactComponentTreeHook) {
		            ReactComponentTreeHook = __webpack_require__(93);
		          }
		          if (debugID !== null) {
		            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
		          } else if (element !== null) {
		            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
		          }
		        }
	
		        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
		      }
		    }
		  }
		}
	
		module.exports = checkReactTypeSpec;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 95 */
	/***/ function(module, exports) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * 
		 */
	
		'use strict';
	
		var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
	
		module.exports = ReactPropTypesSecret;
	
	/***/ },
	/* 96 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var ReactElement = __webpack_require__(76);
		var ReactPropTypeLocationNames = __webpack_require__(90);
		var ReactPropTypesSecret = __webpack_require__(95);
	
		var emptyFunction = __webpack_require__(79);
		var getIteratorFn = __webpack_require__(83);
		var warning = __webpack_require__(78);
	
		/**
		 * Collection of methods that allow declaration and validation of props that are
		 * supplied to React components. Example usage:
		 *
		 *   var Props = require('ReactPropTypes');
		 *   var MyArticle = React.createClass({
		 *     propTypes: {
		 *       // An optional string prop named "description".
		 *       description: Props.string,
		 *
		 *       // A required enum prop named "category".
		 *       category: Props.oneOf(['News','Photos']).isRequired,
		 *
		 *       // A prop named "dialog" that requires an instance of Dialog.
		 *       dialog: Props.instanceOf(Dialog).isRequired
		 *     },
		 *     render: function() { ... }
		 *   });
		 *
		 * A more formal specification of how these methods are used:
		 *
		 *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
		 *   decl := ReactPropTypes.{type}(.isRequired)?
		 *
		 * Each and every declaration produces a function with the same signature. This
		 * allows the creation of custom validation functions. For example:
		 *
		 *  var MyLink = React.createClass({
		 *    propTypes: {
		 *      // An optional string or URI prop named "href".
		 *      href: function(props, propName, componentName) {
		 *        var propValue = props[propName];
		 *        if (propValue != null && typeof propValue !== 'string' &&
		 *            !(propValue instanceof URI)) {
		 *          return new Error(
		 *            'Expected a string or an URI for ' + propName + ' in ' +
		 *            componentName
		 *          );
		 *        }
		 *      }
		 *    },
		 *    render: function() {...}
		 *  });
		 *
		 * @internal
		 */
	
		var ANONYMOUS = '<<anonymous>>';
	
		var ReactPropTypes = {
		  array: createPrimitiveTypeChecker('array'),
		  bool: createPrimitiveTypeChecker('boolean'),
		  func: createPrimitiveTypeChecker('function'),
		  number: createPrimitiveTypeChecker('number'),
		  object: createPrimitiveTypeChecker('object'),
		  string: createPrimitiveTypeChecker('string'),
		  symbol: createPrimitiveTypeChecker('symbol'),
	
		  any: createAnyTypeChecker(),
		  arrayOf: createArrayOfTypeChecker,
		  element: createElementTypeChecker(),
		  instanceOf: createInstanceTypeChecker,
		  node: createNodeChecker(),
		  objectOf: createObjectOfTypeChecker,
		  oneOf: createEnumTypeChecker,
		  oneOfType: createUnionTypeChecker,
		  shape: createShapeTypeChecker
		};
	
		/**
		 * inlined Object.is polyfill to avoid requiring consumers ship their own
		 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
		 */
		/*eslint-disable no-self-compare*/
		function is(x, y) {
		  // SameValue algorithm
		  if (x === y) {
		    // Steps 1-5, 7-10
		    // Steps 6.b-6.e: +0 != -0
		    return x !== 0 || 1 / x === 1 / y;
		  } else {
		    // Step 6.a: NaN == NaN
		    return x !== x && y !== y;
		  }
		}
		/*eslint-enable no-self-compare*/
	
		/**
		 * We use an Error-like object for backward compatibility as people may call
		 * PropTypes directly and inspect their output. However we don't use real
		 * Errors anymore. We don't inspect their stack anyway, and creating them
		 * is prohibitively expensive if they are created too often, such as what
		 * happens in oneOfType() for any type before the one that matched.
		 */
		function PropTypeError(message) {
		  this.message = message;
		  this.stack = '';
		}
		// Make `instanceof Error` still work for returned errors.
		PropTypeError.prototype = Error.prototype;
	
		function createChainableTypeChecker(validate) {
		  if (process.env.NODE_ENV !== 'production') {
		    var manualPropTypeCallCache = {};
		  }
		  function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
		    componentName = componentName || ANONYMOUS;
		    propFullName = propFullName || propName;
		    if (process.env.NODE_ENV !== 'production') {
		      if (secret !== ReactPropTypesSecret && typeof console !== 'undefined') {
		        var cacheKey = componentName + ':' + propName;
		        if (!manualPropTypeCallCache[cacheKey]) {
		          process.env.NODE_ENV !== 'production' ? warning(false, 'You are manually calling a React.PropTypes validation ' + 'function for the `%s` prop on `%s`. This is deprecated ' + 'and will not work in production with the next major version. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.', propFullName, componentName) : void 0;
		          manualPropTypeCallCache[cacheKey] = true;
		        }
		      }
		    }
		    if (props[propName] == null) {
		      var locationName = ReactPropTypeLocationNames[location];
		      if (isRequired) {
		        if (props[propName] === null) {
		          return new PropTypeError('The ' + locationName + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
		        }
		        return new PropTypeError('The ' + locationName + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
		      }
		      return null;
		    } else {
		      return validate(props, propName, componentName, location, propFullName);
		    }
		  }
	
		  var chainedCheckType = checkType.bind(null, false);
		  chainedCheckType.isRequired = checkType.bind(null, true);
	
		  return chainedCheckType;
		}
	
		function createPrimitiveTypeChecker(expectedType) {
		  function validate(props, propName, componentName, location, propFullName, secret) {
		    var propValue = props[propName];
		    var propType = getPropType(propValue);
		    if (propType !== expectedType) {
		      var locationName = ReactPropTypeLocationNames[location];
		      // `propValue` being instance of, say, date/regexp, pass the 'object'
		      // check, but we can offer a more precise error message here rather than
		      // 'of type `object`'.
		      var preciseType = getPreciseType(propValue);
	
		      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
		    }
		    return null;
		  }
		  return createChainableTypeChecker(validate);
		}
	
		function createAnyTypeChecker() {
		  return createChainableTypeChecker(emptyFunction.thatReturns(null));
		}
	
		function createArrayOfTypeChecker(typeChecker) {
		  function validate(props, propName, componentName, location, propFullName) {
		    if (typeof typeChecker !== 'function') {
		      return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
		    }
		    var propValue = props[propName];
		    if (!Array.isArray(propValue)) {
		      var locationName = ReactPropTypeLocationNames[location];
		      var propType = getPropType(propValue);
		      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
		    }
		    for (var i = 0; i < propValue.length; i++) {
		      var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
		      if (error instanceof Error) {
		        return error;
		      }
		    }
		    return null;
		  }
		  return createChainableTypeChecker(validate);
		}
	
		function createElementTypeChecker() {
		  function validate(props, propName, componentName, location, propFullName) {
		    var propValue = props[propName];
		    if (!ReactElement.isValidElement(propValue)) {
		      var locationName = ReactPropTypeLocationNames[location];
		      var propType = getPropType(propValue);
		      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
		    }
		    return null;
		  }
		  return createChainableTypeChecker(validate);
		}
	
		function createInstanceTypeChecker(expectedClass) {
		  function validate(props, propName, componentName, location, propFullName) {
		    if (!(props[propName] instanceof expectedClass)) {
		      var locationName = ReactPropTypeLocationNames[location];
		      var expectedClassName = expectedClass.name || ANONYMOUS;
		      var actualClassName = getClassName(props[propName]);
		      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
		    }
		    return null;
		  }
		  return createChainableTypeChecker(validate);
		}
	
		function createEnumTypeChecker(expectedValues) {
		  if (!Array.isArray(expectedValues)) {
		    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
		    return emptyFunction.thatReturnsNull;
		  }
	
		  function validate(props, propName, componentName, location, propFullName) {
		    var propValue = props[propName];
		    for (var i = 0; i < expectedValues.length; i++) {
		      if (is(propValue, expectedValues[i])) {
		        return null;
		      }
		    }
	
		    var locationName = ReactPropTypeLocationNames[location];
		    var valuesString = JSON.stringify(expectedValues);
		    return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
		  }
		  return createChainableTypeChecker(validate);
		}
	
		function createObjectOfTypeChecker(typeChecker) {
		  function validate(props, propName, componentName, location, propFullName) {
		    if (typeof typeChecker !== 'function') {
		      return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
		    }
		    var propValue = props[propName];
		    var propType = getPropType(propValue);
		    if (propType !== 'object') {
		      var locationName = ReactPropTypeLocationNames[location];
		      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
		    }
		    for (var key in propValue) {
		      if (propValue.hasOwnProperty(key)) {
		        var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
		        if (error instanceof Error) {
		          return error;
		        }
		      }
		    }
		    return null;
		  }
		  return createChainableTypeChecker(validate);
		}
	
		function createUnionTypeChecker(arrayOfTypeCheckers) {
		  if (!Array.isArray(arrayOfTypeCheckers)) {
		    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
		    return emptyFunction.thatReturnsNull;
		  }
	
		  function validate(props, propName, componentName, location, propFullName) {
		    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
		      var checker = arrayOfTypeCheckers[i];
		      if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
		        return null;
		      }
		    }
	
		    var locationName = ReactPropTypeLocationNames[location];
		    return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
		  }
		  return createChainableTypeChecker(validate);
		}
	
		function createNodeChecker() {
		  function validate(props, propName, componentName, location, propFullName) {
		    if (!isNode(props[propName])) {
		      var locationName = ReactPropTypeLocationNames[location];
		      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
		    }
		    return null;
		  }
		  return createChainableTypeChecker(validate);
		}
	
		function createShapeTypeChecker(shapeTypes) {
		  function validate(props, propName, componentName, location, propFullName) {
		    var propValue = props[propName];
		    var propType = getPropType(propValue);
		    if (propType !== 'object') {
		      var locationName = ReactPropTypeLocationNames[location];
		      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
		    }
		    for (var key in shapeTypes) {
		      var checker = shapeTypes[key];
		      if (!checker) {
		        continue;
		      }
		      var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
		      if (error) {
		        return error;
		      }
		    }
		    return null;
		  }
		  return createChainableTypeChecker(validate);
		}
	
		function isNode(propValue) {
		  switch (typeof propValue) {
		    case 'number':
		    case 'string':
		    case 'undefined':
		      return true;
		    case 'boolean':
		      return !propValue;
		    case 'object':
		      if (Array.isArray(propValue)) {
		        return propValue.every(isNode);
		      }
		      if (propValue === null || ReactElement.isValidElement(propValue)) {
		        return true;
		      }
	
		      var iteratorFn = getIteratorFn(propValue);
		      if (iteratorFn) {
		        var iterator = iteratorFn.call(propValue);
		        var step;
		        if (iteratorFn !== propValue.entries) {
		          while (!(step = iterator.next()).done) {
		            if (!isNode(step.value)) {
		              return false;
		            }
		          }
		        } else {
		          // Iterator will provide entry [k,v] tuples rather than values.
		          while (!(step = iterator.next()).done) {
		            var entry = step.value;
		            if (entry) {
		              if (!isNode(entry[1])) {
		                return false;
		              }
		            }
		          }
		        }
		      } else {
		        return false;
		      }
	
		      return true;
		    default:
		      return false;
		  }
		}
	
		function isSymbol(propType, propValue) {
		  // Native Symbol.
		  if (propType === 'symbol') {
		    return true;
		  }
	
		  // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
		  if (propValue['@@toStringTag'] === 'Symbol') {
		    return true;
		  }
	
		  // Fallback for non-spec compliant Symbols which are polyfilled.
		  if (typeof Symbol === 'function' && propValue instanceof Symbol) {
		    return true;
		  }
	
		  return false;
		}
	
		// Equivalent of `typeof` but with special handling for array and regexp.
		function getPropType(propValue) {
		  var propType = typeof propValue;
		  if (Array.isArray(propValue)) {
		    return 'array';
		  }
		  if (propValue instanceof RegExp) {
		    // Old webkits (at least until Android 4.0) return 'function' rather than
		    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
		    // passes PropTypes.object.
		    return 'object';
		  }
		  if (isSymbol(propType, propValue)) {
		    return 'symbol';
		  }
		  return propType;
		}
	
		// This handles more types than `getPropType`. Only used for error messages.
		// See `createPrimitiveTypeChecker`.
		function getPreciseType(propValue) {
		  var propType = getPropType(propValue);
		  if (propType === 'object') {
		    if (propValue instanceof Date) {
		      return 'date';
		    } else if (propValue instanceof RegExp) {
		      return 'regexp';
		    }
		  }
		  return propType;
		}
	
		// Returns class name of the object, if any.
		function getClassName(propValue) {
		  if (!propValue.constructor || !propValue.constructor.name) {
		    return ANONYMOUS;
		  }
		  return propValue.constructor.name;
		}
	
		module.exports = ReactPropTypes;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 97 */
	/***/ function(module, exports) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		module.exports = '15.4.2';
	
	/***/ },
	/* 98 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
		'use strict';
	
		var _prodInvariant = __webpack_require__(74);
	
		var ReactElement = __webpack_require__(76);
	
		var invariant = __webpack_require__(75);
	
		/**
		 * Returns the first child in a collection of children and verifies that there
		 * is only one child in the collection.
		 *
		 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only
		 *
		 * The current implementation of this function assumes that a single child gets
		 * passed without a wrapper, but the purpose of this helper function is to
		 * abstract away the particular structure of children.
		 *
		 * @param {?object} children Child collection structure.
		 * @return {ReactElement} The first and only `ReactElement` contained in the
		 * structure.
		 */
		function onlyChild(children) {
		  !ReactElement.isValidElement(children) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;
		  return children;
		}
	
		module.exports = onlyChild;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 99 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		module.exports = __webpack_require__(100);
	
	
	/***/ },
	/* 100 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/
	
		'use strict';
	
		var ReactDOMComponentTree = __webpack_require__(101);
		var ReactDefaultInjection = __webpack_require__(106);
		var ReactMount = __webpack_require__(238);
		var ReactReconciler = __webpack_require__(130);
		var ReactUpdates = __webpack_require__(127);
		var ReactVersion = __webpack_require__(243);
	
		var findDOMNode = __webpack_require__(244);
		var getHostComponentFromComposite = __webpack_require__(245);
		var renderSubtreeIntoContainer = __webpack_require__(246);
		var warning = __webpack_require__(114);
	
		ReactDefaultInjection.inject();
	
		var ReactDOM = {
		  findDOMNode: findDOMNode,
		  render: ReactMount.render,
		  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
		  version: ReactVersion,
	
		  /* eslint-disable camelcase */
		  unstable_batchedUpdates: ReactUpdates.batchedUpdates,
		  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
		};
	
		// Inject the runtime into a devtools global hook regardless of browser.
		// Allows for debugging when the hook is injected on the page.
		if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
		  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
		    ComponentTree: {
		      getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,
		      getNodeFromInstance: function (inst) {
		        // inst is an internal instance (but could be a composite)
		        if (inst._renderedComponent) {
		          inst = getHostComponentFromComposite(inst);
		        }
		        if (inst) {
		          return ReactDOMComponentTree.getNodeFromInstance(inst);
		        } else {
		          return null;
		        }
		      }
		    },
		    Mount: ReactMount,
		    Reconciler: ReactReconciler
		  });
		}
	
		if (process.env.NODE_ENV !== 'production') {
		  var ExecutionEnvironment = __webpack_require__(118);
		  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {
	
		    // First check if devtools is not installed
		    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
		      // If we're in Chrome or Firefox, provide a download link if not installed.
		      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
		        // Firefox does not have the issue with devtools loaded over file://
		        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;
		        console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');
		      }
		    }
	
		    var testFunc = function testFn() {};
		    process.env.NODE_ENV !== 'production' ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, 'It looks like you\'re using a minified copy of the development build ' + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;
	
		    // If we're in IE8, check to see if we are in compatibility mode and provide
		    // information on preventing compatibility mode
		    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;
	
		    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : void 0;
	
		    var expectedFeatures = [
		    // shims
		    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.trim];
	
		    for (var i = 0; i < expectedFeatures.length; i++) {
		      if (!expectedFeatures[i]) {
		        process.env.NODE_ENV !== 'production' ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;
		        break;
		      }
		    }
		  }
		}
	
		if (process.env.NODE_ENV !== 'production') {
		  var ReactInstrumentation = __webpack_require__(133);
		  var ReactDOMUnknownPropertyHook = __webpack_require__(247);
		  var ReactDOMNullInputValuePropHook = __webpack_require__(248);
		  var ReactDOMInvalidARIAHook = __webpack_require__(249);
	
		  ReactInstrumentation.debugTool.addHook(ReactDOMUnknownPropertyHook);
		  ReactInstrumentation.debugTool.addHook(ReactDOMNullInputValuePropHook);
		  ReactInstrumentation.debugTool.addHook(ReactDOMInvalidARIAHook);
		}
	
		module.exports = ReactDOM;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 101 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var _prodInvariant = __webpack_require__(102);
	
		var DOMProperty = __webpack_require__(103);
		var ReactDOMComponentFlags = __webpack_require__(105);
	
		var invariant = __webpack_require__(104);
	
		var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
		var Flags = ReactDOMComponentFlags;
	
		var internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);
	
		/**
		 * Check if a given node should be cached.
		 */
		function shouldPrecacheNode(node, nodeID) {
		  return node.nodeType === 1 && node.getAttribute(ATTR_NAME) === String(nodeID) || node.nodeType === 8 && node.nodeValue === ' react-text: ' + nodeID + ' ' || node.nodeType === 8 && node.nodeValue === ' react-empty: ' + nodeID + ' ';
		}
	
		/**
		 * Drill down (through composites and empty components) until we get a host or
		 * host text component.
		 *
		 * This is pretty polymorphic but unavoidable with the current structure we have
		 * for `_renderedChildren`.
		 */
		function getRenderedHostOrTextFromComponent(component) {
		  var rendered;
		  while (rendered = component._renderedComponent) {
		    component = rendered;
		  }
		  return component;
		}
	
		/**
		 * Populate `_hostNode` on the rendered host/text component with the given
		 * DOM node. The passed `inst` can be a composite.
		 */
		function precacheNode(inst, node) {
		  var hostInst = getRenderedHostOrTextFromComponent(inst);
		  hostInst._hostNode = node;
		  node[internalInstanceKey] = hostInst;
		}
	
		function uncacheNode(inst) {
		  var node = inst._hostNode;
		  if (node) {
		    delete node[internalInstanceKey];
		    inst._hostNode = null;
		  }
		}
	
		/**
		 * Populate `_hostNode` on each child of `inst`, assuming that the children
		 * match up with the DOM (element) children of `node`.
		 *
		 * We cache entire levels at once to avoid an n^2 problem where we access the
		 * children of a node sequentially and have to walk from the start to our target
		 * node every time.
		 *
		 * Since we update `_renderedChildren` and the actual DOM at (slightly)
		 * different times, we could race here and see a newer `_renderedChildren` than
		 * the DOM nodes we see. To avoid this, ReactMultiChild calls
		 * `prepareToManageChildren` before we change `_renderedChildren`, at which
		 * time the container's child nodes are always cached (until it unmounts).
		 */
		function precacheChildNodes(inst, node) {
		  if (inst._flags & Flags.hasCachedChildNodes) {
		    return;
		  }
		  var children = inst._renderedChildren;
		  var childNode = node.firstChild;
		  outer: for (var name in children) {
		    if (!children.hasOwnProperty(name)) {
		      continue;
		    }
		    var childInst = children[name];
		    var childID = getRenderedHostOrTextFromComponent(childInst)._domID;
		    if (childID === 0) {
		      // We're currently unmounting this child in ReactMultiChild; skip it.
		      continue;
		    }
		    // We assume the child nodes are in the same order as the child instances.
		    for (; childNode !== null; childNode = childNode.nextSibling) {
		      if (shouldPrecacheNode(childNode, childID)) {
		        precacheNode(childInst, childNode);
		        continue outer;
		      }
		    }
		    // We reached the end of the DOM children without finding an ID match.
		     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unable to find element with ID %s.', childID) : _prodInvariant('32', childID) : void 0;
		  }
		  inst._flags |= Flags.hasCachedChildNodes;
		}
	
		/**
		 * Given a DOM node, return the closest ReactDOMComponent or
		 * ReactDOMTextComponent instance ancestor.
		 */
		function getClosestInstanceFromNode(node) {
		  if (node[internalInstanceKey]) {
		    return node[internalInstanceKey];
		  }
	
		  // Walk up the tree until we find an ancestor whose instance we have cached.
		  var parents = [];
		  while (!node[internalInstanceKey]) {
		    parents.push(node);
		    if (node.parentNode) {
		      node = node.parentNode;
		    } else {
		      // Top of the tree. This node must not be part of a React tree (or is
		      // unmounted, potentially).
		      return null;
		    }
		  }
	
		  var closest;
		  var inst;
		  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {
		    closest = inst;
		    if (parents.length) {
		      precacheChildNodes(inst, node);
		    }
		  }
	
		  return closest;
		}
	
		/**
		 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
		 * instance, or null if the node was not rendered by this React.
		 */
		function getInstanceFromNode(node) {
		  var inst = getClosestInstanceFromNode(node);
		  if (inst != null && inst._hostNode === node) {
		    return inst;
		  } else {
		    return null;
		  }
		}
	
		/**
		 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
		 * DOM node.
		 */
		function getNodeFromInstance(inst) {
		  // Without this first invariant, passing a non-DOM-component triggers the next
		  // invariant for a missing parent, which is super confusing.
		  !(inst._hostNode !== undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
	
		  if (inst._hostNode) {
		    return inst._hostNode;
		  }
	
		  // Walk up the tree until we find an ancestor whose DOM node we have cached.
		  var parents = [];
		  while (!inst._hostNode) {
		    parents.push(inst);
		    !inst._hostParent ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React DOM tree root should always have a node reference.') : _prodInvariant('34') : void 0;
		    inst = inst._hostParent;
		  }
	
		  // Now parents contains each ancestor that does *not* have a cached native
		  // node, and `inst` is the deepest ancestor that does.
		  for (; parents.length; inst = parents.pop()) {
		    precacheChildNodes(inst, inst._hostNode);
		  }
	
		  return inst._hostNode;
		}
	
		var ReactDOMComponentTree = {
		  getClosestInstanceFromNode: getClosestInstanceFromNode,
		  getInstanceFromNode: getInstanceFromNode,
		  getNodeFromInstance: getNodeFromInstance,
		  precacheChildNodes: precacheChildNodes,
		  precacheNode: precacheNode,
		  uncacheNode: uncacheNode
		};
	
		module.exports = ReactDOMComponentTree;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 102 */
	/***/ function(module, exports) {
	
		/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * 
		 */
		'use strict';
	
		/**
		 * WARNING: DO NOT manually require this module.
		 * This is a replacement for `invariant(...)` used by the error code system
		 * and will _only_ be required by the corresponding babel pass.
		 * It always throws.
		 */
	
		function reactProdInvariant(code) {
		  var argCount = arguments.length - 1;
	
		  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;
	
		  for (var argIdx = 0; argIdx < argCount; argIdx++) {
		    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
		  }
	
		  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';
	
		  var error = new Error(message);
		  error.name = 'Invariant Violation';
		  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame
	
		  throw error;
		}
	
		module.exports = reactProdInvariant;
	
	/***/ },
	/* 103 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var _prodInvariant = __webpack_require__(102);
	
		var invariant = __webpack_require__(104);
	
		function checkMask(value, bitmask) {
		  return (value & bitmask) === bitmask;
		}
	
		var DOMPropertyInjection = {
		  /**
		   * Mapping from normalized, camelcased property names to a configuration that
		   * specifies how the associated DOM property should be accessed or rendered.
		   */
		  MUST_USE_PROPERTY: 0x1,
		  HAS_BOOLEAN_VALUE: 0x4,
		  HAS_NUMERIC_VALUE: 0x8,
		  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,
		  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,
	
		  /**
		   * Inject some specialized knowledge about the DOM. This takes a config object
		   * with the following properties:
		   *
		   * isCustomAttribute: function that given an attribute name will return true
		   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
		   * attributes where it's impossible to enumerate all of the possible
		   * attribute names,
		   *
		   * Properties: object mapping DOM property name to one of the
		   * DOMPropertyInjection constants or null. If your attribute isn't in here,
		   * it won't get written to the DOM.
		   *
		   * DOMAttributeNames: object mapping React attribute name to the DOM
		   * attribute name. Attribute names not specified use the **lowercase**
		   * normalized name.
		   *
		   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
		   * attribute namespace URL. (Attribute names not specified use no namespace.)
		   *
		   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
		   * Property names not specified use the normalized name.
		   *
		   * DOMMutationMethods: Properties that require special mutation methods. If
		   * `value` is undefined, the mutation method should unset the property.
		   *
		   * @param {object} domPropertyConfig the config as described above.
		   */
		  injectDOMPropertyConfig: function (domPropertyConfig) {
		    var Injection = DOMPropertyInjection;
		    var Properties = domPropertyConfig.Properties || {};
		    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
		    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
		    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
		    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};
	
		    if (domPropertyConfig.isCustomAttribute) {
		      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
		    }
	
		    for (var propName in Properties) {
		      !!DOMProperty.properties.hasOwnProperty(propName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property \'%s\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : _prodInvariant('48', propName) : void 0;
	
		      var lowerCased = propName.toLowerCase();
		      var propConfig = Properties[propName];
	
		      var propertyInfo = {
		        attributeName: lowerCased,
		        attributeNamespace: null,
		        propertyName: propName,
		        mutationMethod: null,
	
		        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
		        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
		        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
		        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
		        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
		      };
		      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : _prodInvariant('50', propName) : void 0;
	
		      if (process.env.NODE_ENV !== 'production') {
		        DOMProperty.getPossibleStandardName[lowerCased] = propName;
		      }
	
		      if (DOMAttributeNames.hasOwnProperty(propName)) {
		        var attributeName = DOMAttributeNames[propName];
		        propertyInfo.attributeName = attributeName;
		        if (process.env.NODE_ENV !== 'production') {
		          DOMProperty.getPossibleStandardName[attributeName] = propName;
		        }
		      }
	
		      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
		        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
		      }
	
		      if (DOMPropertyNames.hasOwnProperty(propName)) {
		        propertyInfo.propertyName = DOMPropertyNames[propName];
		      }
	
		      if (DOMMutationMethods.hasOwnProperty(propName)) {
		        propertyInfo.mutationMethod = DOMMutationMethods[propName];
		      }
	
		      DOMProperty.properties[propName] = propertyInfo;
		    }
		  }
		};
	
		/* eslint-disable max-len */
		var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
		/* eslint-enable max-len */
	
		/**
		 * DOMProperty exports lookup objects that can be used like functions:
		 *
		 *   > DOMProperty.isValid['id']
		 *   true
		 *   > DOMProperty.isValid['foobar']
		 *   undefined
		 *
		 * Although this may be confusing, it performs better in general.
		 *
		 * @see http://jsperf.com/key-exists
		 * @see http://jsperf.com/key-missing
		 */
		var DOMProperty = {
	
		  ID_ATTRIBUTE_NAME: 'data-reactid',
		  ROOT_ATTRIBUTE_NAME: 'data-reactroot',
	
		  ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,
		  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040',
	
		  /**
		   * Map from property "standard name" to an object with info about how to set
		   * the property in the DOM. Each object contains:
		   *
		   * attributeName:
		   *   Used when rendering markup or with `*Attribute()`.
		   * attributeNamespace
		   * propertyName:
		   *   Used on DOM node instances. (This includes properties that mutate due to
		   *   external factors.)
		   * mutationMethod:
		   *   If non-null, used instead of the property or `setAttribute()` after
		   *   initial render.
		   * mustUseProperty:
		   *   Whether the property must be accessed and mutated as an object property.
		   * hasBooleanValue:
		   *   Whether the property should be removed when set to a falsey value.
		   * hasNumericValue:
		   *   Whether the property must be numeric or parse as a numeric and should be
		   *   removed when set to a falsey value.
		   * hasPositiveNumericValue:
		   *   Whether the property must be positive numeric or parse as a positive
		   *   numeric and should be removed when set to a falsey value.
		   * hasOverloadedBooleanValue:
		   *   Whether the property can be used as a flag as well as with a value.
		   *   Removed when strictly equal to false; present without a value when
		   *   strictly equal to true; present with a value otherwise.
		   */
		  properties: {},
	
		  /**
		   * Mapping from lowercase property names to the properly cased version, used
		   * to warn in the case of missing properties. Available only in __DEV__.
		   *
		   * autofocus is predefined, because adding it to the property whitelist
		   * causes unintended side effects.
		   *
		   * @type {Object}
		   */
		  getPossibleStandardName: process.env.NODE_ENV !== 'production' ? { autofocus: 'autoFocus' } : null,
	
		  /**
		   * All of the isCustomAttribute() functions that have been injected.
		   */
		  _isCustomAttributeFunctions: [],
	
		  /**
		   * Checks whether a property name is a custom attribute.
		   * @method
		   */
		  isCustomAttribute: function (attributeName) {
		    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
		      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
		      if (isCustomAttributeFn(attributeName)) {
		        return true;
		      }
		    }
		    return false;
		  },
	
		  injection: DOMPropertyInjection
		};
	
		module.exports = DOMProperty;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 104 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		/**
		 * Use invariant() to assert state which your program assumes to be true.
		 *
		 * Provide sprintf-style format (only %s is supported) and arguments
		 * to provide information about what broke and what you were
		 * expecting.
		 *
		 * The invariant message will be stripped in production, but the invariant
		 * will remain to ensure logic does not differ in production.
		 */
	
		var validateFormat = function validateFormat(format) {};
	
		if (process.env.NODE_ENV !== 'production') {
		  validateFormat = function validateFormat(format) {
		    if (format === undefined) {
		      throw new Error('invariant requires an error message argument');
		    }
		  };
		}
	
		function invariant(condition, format, a, b, c, d, e, f) {
		  validateFormat(format);
	
		  if (!condition) {
		    var error;
		    if (format === undefined) {
		      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
		    } else {
		      var args = [a, b, c, d, e, f];
		      var argIndex = 0;
		      error = new Error(format.replace(/%s/g, function () {
		        return args[argIndex++];
		      }));
		      error.name = 'Invariant Violation';
		    }
	
		    error.framesToPop = 1; // we don't care about invariant's own frame
		    throw error;
		  }
		}
	
		module.exports = invariant;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 105 */
	/***/ function(module, exports) {
	
		/**
		 * Copyright 2015-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var ReactDOMComponentFlags = {
		  hasCachedChildNodes: 1 << 0
		};
	
		module.exports = ReactDOMComponentFlags;
	
	/***/ },
	/* 106 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var ARIADOMPropertyConfig = __webpack_require__(107);
		var BeforeInputEventPlugin = __webpack_require__(108);
		var ChangeEventPlugin = __webpack_require__(126);
		var DefaultEventPluginOrder = __webpack_require__(143);
		var EnterLeaveEventPlugin = __webpack_require__(144);
		var HTMLDOMPropertyConfig = __webpack_require__(149);
		var ReactComponentBrowserEnvironment = __webpack_require__(150);
		var ReactDOMComponent = __webpack_require__(163);
		var ReactDOMComponentTree = __webpack_require__(101);
		var ReactDOMEmptyComponent = __webpack_require__(209);
		var ReactDOMTreeTraversal = __webpack_require__(210);
		var ReactDOMTextComponent = __webpack_require__(211);
		var ReactDefaultBatchingStrategy = __webpack_require__(212);
		var ReactEventListener = __webpack_require__(213);
		var ReactInjection = __webpack_require__(216);
		var ReactReconcileTransaction = __webpack_require__(217);
		var SVGDOMPropertyConfig = __webpack_require__(225);
		var SelectEventPlugin = __webpack_require__(226);
		var SimpleEventPlugin = __webpack_require__(227);
	
		var alreadyInjected = false;
	
		function inject() {
		  if (alreadyInjected) {
		    // TODO: This is currently true because these injections are shared between
		    // the client and the server package. They should be built independently
		    // and not share any injection state. Then this problem will be solved.
		    return;
		  }
		  alreadyInjected = true;
	
		  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);
	
		  /**
		   * Inject modules for resolving DOM hierarchy and plugin ordering.
		   */
		  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
		  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);
		  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);
	
		  /**
		   * Some important event plugins included by default (without having to require
		   * them).
		   */
		  ReactInjection.EventPluginHub.injectEventPluginsByName({
		    SimpleEventPlugin: SimpleEventPlugin,
		    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
		    ChangeEventPlugin: ChangeEventPlugin,
		    SelectEventPlugin: SelectEventPlugin,
		    BeforeInputEventPlugin: BeforeInputEventPlugin
		  });
	
		  ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);
	
		  ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);
	
		  ReactInjection.DOMProperty.injectDOMPropertyConfig(ARIADOMPropertyConfig);
		  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
		  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);
	
		  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {
		    return new ReactDOMEmptyComponent(instantiate);
		  });
	
		  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
		  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);
	
		  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
		}
	
		module.exports = {
		  inject: inject
		};
	
	/***/ },
	/* 107 */
	/***/ function(module, exports) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var ARIADOMPropertyConfig = {
		  Properties: {
		    // Global States and Properties
		    'aria-current': 0, // state
		    'aria-details': 0,
		    'aria-disabled': 0, // state
		    'aria-hidden': 0, // state
		    'aria-invalid': 0, // state
		    'aria-keyshortcuts': 0,
		    'aria-label': 0,
		    'aria-roledescription': 0,
		    // Widget Attributes
		    'aria-autocomplete': 0,
		    'aria-checked': 0,
		    'aria-expanded': 0,
		    'aria-haspopup': 0,
		    'aria-level': 0,
		    'aria-modal': 0,
		    'aria-multiline': 0,
		    'aria-multiselectable': 0,
		    'aria-orientation': 0,
		    'aria-placeholder': 0,
		    'aria-pressed': 0,
		    'aria-readonly': 0,
		    'aria-required': 0,
		    'aria-selected': 0,
		    'aria-sort': 0,
		    'aria-valuemax': 0,
		    'aria-valuemin': 0,
		    'aria-valuenow': 0,
		    'aria-valuetext': 0,
		    // Live Region Attributes
		    'aria-atomic': 0,
		    'aria-busy': 0,
		    'aria-live': 0,
		    'aria-relevant': 0,
		    // Drag-and-Drop Attributes
		    'aria-dropeffect': 0,
		    'aria-grabbed': 0,
		    // Relationship Attributes
		    'aria-activedescendant': 0,
		    'aria-colcount': 0,
		    'aria-colindex': 0,
		    'aria-colspan': 0,
		    'aria-controls': 0,
		    'aria-describedby': 0,
		    'aria-errormessage': 0,
		    'aria-flowto': 0,
		    'aria-labelledby': 0,
		    'aria-owns': 0,
		    'aria-posinset': 0,
		    'aria-rowcount': 0,
		    'aria-rowindex': 0,
		    'aria-rowspan': 0,
		    'aria-setsize': 0
		  },
		  DOMAttributeNames: {},
		  DOMPropertyNames: {}
		};
	
		module.exports = ARIADOMPropertyConfig;
	
	/***/ },
	/* 108 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright 2013-present Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var EventPropagators = __webpack_require__(109);
		var ExecutionEnvironment = __webpack_require__(118);
		var FallbackCompositionState = __webpack_require__(119);
		var SyntheticCompositionEvent = __webpack_require__(123);
		var SyntheticInputEvent = __webpack_require__(125);
	
		var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
		var START_KEYCODE = 229;
	
		var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;
	
		var documentMode = null;
		if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
		  documentMode = document.documentMode;
		}
	
		// Webkit offers a very useful `textInput` event that can be used to
		// directly represent `beforeInput`. The IE `textinput` event is not as
		// useful, so we don't use it.
		var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();
	
		// In IE9+, we have access to composition events, but the data supplied
		// by the native compositionend event may be incorrect. Japanese ideographic
		// spaces, for instance (\u3000) are not recorded correctly.
		var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);
	
		/**
		 * Opera <= 12 includes TextEvent in window, but does not fire
		 * text input events. Rely on keypress instead.
		 */
		function isPresto() {
		  var opera = window.opera;
		  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
		}
	
		var SPACEBAR_CODE = 32;
		var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);
	
		// Events and their corresponding property names.
		var eventTypes = {
		  beforeInput: {
		    phasedRegistrationNames: {
		      bubbled: 'onBeforeInput',
		      captured: 'onBeforeInputCapture'
		    },
		    dependencies: ['topCompositionEnd', 'topKeyPress', 'topTextInput', 'topPaste']
		  },
		  compositionEnd: {
		    phasedRegistrationNames: {
		      bubbled: 'onCompositionEnd',
		      captured: 'onCompositionEndCapture'
		    },
		    dependencies: ['topBlur', 'topCompositionEnd', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
		  },
		  compositionStart: {
		    phasedRegistrationNames: {
		      bubbled: 'onCompositionStart',
		      captured: 'onCompositionStartCapture'
		    },
		    dependencies: ['topBlur', 'topCompositionStart', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
		  },
		  compositionUpdate: {
		    phasedRegistrationNames: {
		      bubbled: 'onCompositionUpdate',
		      captured: 'onCompositionUpdateCapture'
		    },
		    dependencies: ['topBlur', 'topCompositionUpdate', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
		  }
		};
	
		// Track whether we've ever handled a keypress on the space key.
		var hasSpaceKeypress = false;
	
		/**
		 * Return whether a native keypress event is assumed to be a command.
		 * This is required because Firefox fires `keypress` events for key commands
		 * (cut, copy, select-all, etc.) even though no character is inserted.
		 */
		function isKeypressCommand(nativeEvent) {
		  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
		  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
		  !(nativeEvent.ctrlKey && nativeEvent.altKey);
		}
	
		/**
		 * Translate native top level events into event types.
		 *
		 * @param {string} topLevelType
		 * @return {object}
		 */
		function getCompositionEventType(topLevelType) {
		  switch (topLevelType) {
		    case 'topCompositionStart':
		      return eventTypes.compositionStart;
		    case 'topCompositionEnd':
		      return eventTypes.compositionEnd;
		    case 'topCompositionUpdate':
		      return eventTypes.compositionUpdate;
		  }
		}
	
		/**
		 * Does our fallback best-guess model think this event signifies that
		 * composition has begun?
		 *
		 * @param {string} topLevelType
		 * @param {object} nativeEvent
		 * @return {boolean}
		 */
		function isFallbackCompositionStart(topLevelType, nativeEvent) {
		  return topLevelType === 'topKeyDown' && nativeEvent.keyCode === START_KEYCODE;
		}
	
		/**
		 * Does our fallback mode think that this event is the end of composition?
		 *
		 * @param {string} topLevelType
		 * @param {object} nativeEvent
		 * @return {boolean}
		 */
		function isFallbackCompositionEnd(topLevelType, nativeEvent) {
		  switch (topLevelType) {
		    case 'topKeyUp':
		      // Command keys insert or clear IME input.
		      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
		    case 'topKeyDown':
		      // Expect IME keyCode on each keydown. If we get any other
		      // code we must have exited earlier.
		      return nativeEvent.keyCode !== START_KEYCODE;
		    case 'topKeyPress':
		    case 'topMouseDown':
		    case 'topBlur':
		      // Events are not possible without cancelling IME.
		      return true;
		    default:
		      return false;
		  }
		}
	
		/**
		 * Google Input Tools provides composition data via a CustomEvent,
		 * with the `data` property populated in the `detail` object. If this
		 * is available on the event object, use it. If not, this is a plain
		 * composition event and we have nothing special to extract.
		 *
		 * @param {object} nativeEvent
		 * @return {?string}
		 */
		function getDataFromCustomEvent(nativeEvent) {
		  var detail = nativeEvent.detail;
		  if (typeof detail === 'object' && 'data' in detail) {
		    return detail.data;
		  }
		  return null;
		}
	
		// Track the current IME composition fallback object, if any.
		var currentComposition = null;
	
		/**
		 * @return {?object} A SyntheticCompositionEvent.
		 */
		function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
		  var eventType;
		  var fallbackData;
	
		  if (canUseCompositionEvent) {
		    eventType = getCompositionEventType(topLevelType);
		  } else if (!currentComposition) {
		    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
		      eventType = eventTypes.compositionStart;
		    }
		  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
		    eventType = eventTypes.compositionEnd;
		  }
	
		  if (!eventType) {
		    return null;
		  }
	
		  if (useFallbackCompositionData) {
		    // The current composition is stored statically and must not be
		    // overwritten while composition continues.
		    if (!currentComposition && eventType === eventTypes.compositionStart) {
		      currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);
		    } else if (eventType === eventTypes.compositionEnd) {
		      if (currentComposition) {
		        fallbackData = currentComposition.getData();
		      }
		    }
		  }
	
		  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);
	
		  if (fallbackData) {
		    // Inject data generated from fallback path into the synthetic event.
		    // This matches the property of native CompositionEventInterface.
		    event.data = fallbackData;
		  } else {
		    var customData = getDataFromCustomEvent(nativeEvent);
		    if (customData !== null) {
		      event.data = customData;
		    }
		  }
	
		  EventPropagators.accumulateTwoPhaseDispatches(event);
		  return event;
		}
	
		/**
		 * @param {string} topLevelType Record from `EventConstants`.
		 * @param {object} nativeEvent Native browser event.
		 * @return {?string} The string corresponding to this `beforeInput` event.
		 */
		function getNativeBeforeInputChars(topLevelType, nativeEvent) {
		  switch (topLevelType) {
		    case 'topCompositionEnd':
		      return getDataFromCustomEvent(nativeEvent);
		    case 'topKeyPress':
		      /**
		       * If native `textInput` events are available, our goal is to make
		       * use of them. However, there is a special case: the spacebar key.
		       * In Webkit, preventing default on a spacebar `textInput` event
		       * cancels character insertion, but it *also* causes the browser
		       * to fall back to its default spacebar behavior of scrolling the
		       * page.
		       *
		       * Tracking at:
		       * https://code.google.com/p/chromium/issues/detail?id=355103
		       *
		       * To avoid this issue, use the keypress event as if no `textInput`
		       * event is available.
		       */
		      var which = nativeEvent.which;
		      if (which !== SPACEBAR_CODE) {
		        return null;
		      }
	
		      hasSpaceKeypress = true;
		      return SPACEBAR_CHAR;
	
		    case 'topTextInput':
		      // Record the characters to be added to the DOM.
		      var chars = nativeEvent.data;
	
		      // If it's a spacebar character, assume that we have already handled
		      // it at the keypress level and bail immediately. Android Chrome
		      // doesn't give us keycodes, so we need to blacklist it.
		      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
		        return null;
		      }
	
		      return chars;
	
		    default:
		      // For other native event types, do nothing.
		      return null;
		  }
		}
	
		/**
		 * For browsers that do not provide the `textInput` event, extract the
		 * appropriate string to use for SyntheticInputEvent.
		 *
		 * @param {string} topLevelType Record from `EventConstants`.
		 * @param {object} nativeEvent Native browser event.
		 * @return {?string} The fallback string for this `beforeInput` event.
		 */
		function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
		  // If we are currently composing (IME) and using a fallback to do so,
		  // try to extract the composed characters from the fallback object.
		  // If composition event is available, we extract a string only at
		  // compositionevent, otherwise extract it at fallback events.
		  if (currentComposition) {
		    if (topLevelType === 'topCompositionEnd' || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {
		      var chars = currentComposition.getData();
		      FallbackCompositionState.release(currentComposition);
		      currentComposition = null;
		      return chars;
		    }
		    return null;
		  }
	
		  switch (topLevelType) {
		    case 'topPaste':
		      // If a paste event occurs after a keypress, throw out the input
		      // chars. Paste events should not lead to BeforeInput events.
		      return null;
		    case 'topKeyPress':
		      /**
		       * As of v27, Firefox may fire keypress events even when no character
		       * will be inserted. A few possibilities:
		       *
		       * - `which` is `0`. Arrow keys, Esc key, etc.
		       *
		       * - `which` is the pressed key code, but no char is available.
		       *   Ex: 'AltGr + d` in Polish. There is no modified character for
		       *   this key combination and no character is inserted into the
		       *   document, but FF fires the keypress for char code `100` anyway.
		       *   No `input` event will occur.
		       *
		       * - `which` is the pressed key code, but a command combination is
		       *   being used. Ex: `Cmd+C`. No character is inserted, and no
		       *   `input` event will occur.
		       */
		      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
		        return String.fromCharCode(nativeEvent.which);
		      }
		      return null;
		    case 'topCompositionEnd':
		      return useFallbackCompositionData ? null : nativeEvent.data;
		    default:
		      return null;
		  }
		}
	
		/**
		 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
		 * `textInput` or fallback behavior.
		 *
		 * @return {?object} A SyntheticInputEvent.
		 */
		function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
		  var chars;
	
		  if (canUseTextInputEvent) {
		    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
		  } else {
		    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
		  }
	
		  // If no characters are being inserted, no BeforeInput event should
		  // be fired.
		  if (!chars) {
		    return null;
		  }
	
		  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);
	
		  event.data = chars;
		  EventPropagators.accumulateTwoPhaseDispatches(event);
		  return event;
		}
	
		/**
		 * Create an `onBeforeInput` event to match
		 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
		 *
		 * This event plugin is based on the native `textInput` event
		 * available in Chrome, Safari, Opera, and IE. This event fires after
		 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
		 *
		 * `beforeInput` is spec'd but not implemented in any browsers, and
		 * the `input` event does not provide any useful information about what has
		 * actually been added, contrary to the spec. Thus, `textInput` is the best
		 * available event to identify the characters that have actually been inserted
		 * into the target node.
		 *
		 * This plugin is also responsible for emitting `composition` events, thus
		 * allowing us to share composition fallback code for both `beforeInput` and
		 * `composition` event types.
		 */
		var BeforeInputEventPlugin = {
	
		  eventTypes: eventTypes,
	
		  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
		    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];
		  }
		};
	
		module.exports = BeforeInputEventPlugin;
	
	/***/ },
	/* 109 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var EventPluginHub = __webpack_require__(110);
		var EventPluginUtils = __webpack_require__(112);
	
		var accumulateInto = __webpack_require__(116);
		var forEachAccumulated = __webpack_require__(117);
		var warning = __webpack_require__(114);
	
		var getListener = EventPluginHub.getListener;
	
		/**
		 * Some event types have a notion of different registration names for different
		 * "phases" of propagation. This finds listeners by a given phase.
		 */
		function listenerAtPhase(inst, event, propagationPhase) {
		  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
		  return getListener(inst, registrationName);
		}
	
		/**
		 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
		 * here, allows us to not have to bind or create functions for each event.
		 * Mutating the event's members allows us to not have to create a wrapping
		 * "dispatch" object that pairs the event with the listener.
		 */
		function accumulateDirectionalDispatches(inst, phase, event) {
		  if (process.env.NODE_ENV !== 'production') {
		    process.env.NODE_ENV !== 'production' ? warning(inst, 'Dispatching inst must not be null') : void 0;
		  }
		  var listener = listenerAtPhase(inst, event, phase);
		  if (listener) {
		    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
		    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
		  }
		}
	
		/**
		 * Collect dispatches (must be entirely collected before dispatching - see unit
		 * tests). Lazily allocate the array to conserve memory.  We must loop through
		 * each event and perform the traversal for each one. We cannot perform a
		 * single traversal for the entire collection of events because each event may
		 * have a different target.
		 */
		function accumulateTwoPhaseDispatchesSingle(event) {
		  if (event && event.dispatchConfig.phasedRegistrationNames) {
		    EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
		  }
		}
	
		/**
		 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
		 */
		function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
		  if (event && event.dispatchConfig.phasedRegistrationNames) {
		    var targetInst = event._targetInst;
		    var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;
		    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
		  }
		}
	
		/**
		 * Accumulates without regard to direction, does not look for phased
		 * registration names. Same as `accumulateDirectDispatchesSingle` but without
		 * requiring that the `dispatchMarker` be the same as the dispatched ID.
		 */
		function accumulateDispatches(inst, ignoredDirection, event) {
		  if (event && event.dispatchConfig.registrationName) {
		    var registrationName = event.dispatchConfig.registrationName;
		    var listener = getListener(inst, registrationName);
		    if (listener) {
		      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
		      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
		    }
		  }
		}
	
		/**
		 * Accumulates dispatches on an `SyntheticEvent`, but only for the
		 * `dispatchMarker`.
		 * @param {SyntheticEvent} event
		 */
		function accumulateDirectDispatchesSingle(event) {
		  if (event && event.dispatchConfig.registrationName) {
		    accumulateDispatches(event._targetInst, null, event);
		  }
		}
	
		function accumulateTwoPhaseDispatches(events) {
		  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
		}
	
		function accumulateTwoPhaseDispatchesSkipTarget(events) {
		  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
		}
	
		function accumulateEnterLeaveDispatches(leave, enter, from, to) {
		  EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
		}
	
		function accumulateDirectDispatches(events) {
		  forEachAccumulated(events, accumulateDirectDispatchesSingle);
		}
	
		/**
		 * A small set of propagation patterns, each of which will accept a small amount
		 * of information, and generate a set of "dispatch ready event objects" - which
		 * are sets of events that have already been annotated with a set of dispatched
		 * listener functions/ids. The API is designed this way to discourage these
		 * propagation strategies from actually executing the dispatches, since we
		 * always want to collect the entire set of dispatches before executing event a
		 * single one.
		 *
		 * @constructor EventPropagators
		 */
		var EventPropagators = {
		  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
		  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
		  accumulateDirectDispatches: accumulateDirectDispatches,
		  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
		};
	
		module.exports = EventPropagators;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 110 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var _prodInvariant = __webpack_require__(102);
	
		var EventPluginRegistry = __webpack_require__(111);
		var EventPluginUtils = __webpack_require__(112);
		var ReactErrorUtils = __webpack_require__(113);
	
		var accumulateInto = __webpack_require__(116);
		var forEachAccumulated = __webpack_require__(117);
		var invariant = __webpack_require__(104);
	
		/**
		 * Internal store for event listeners
		 */
		var listenerBank = {};
	
		/**
		 * Internal queue of events that have accumulated their dispatches and are
		 * waiting to have their dispatches executed.
		 */
		var eventQueue = null;
	
		/**
		 * Dispatches an event and releases it back into the pool, unless persistent.
		 *
		 * @param {?object} event Synthetic event to be dispatched.
		 * @param {boolean} simulated If the event is simulated (changes exn behavior)
		 * @private
		 */
		var executeDispatchesAndRelease = function (event, simulated) {
		  if (event) {
		    EventPluginUtils.executeDispatchesInOrder(event, simulated);
	
		    if (!event.isPersistent()) {
		      event.constructor.release(event);
		    }
		  }
		};
		var executeDispatchesAndReleaseSimulated = function (e) {
		  return executeDispatchesAndRelease(e, true);
		};
		var executeDispatchesAndReleaseTopLevel = function (e) {
		  return executeDispatchesAndRelease(e, false);
		};
	
		var getDictionaryKey = function (inst) {
		  // Prevents V8 performance issue:
		  // https://github.com/facebook/react/pull/7232
		  return '.' + inst._rootNodeID;
		};
	
		function isInteractive(tag) {
		  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
		}
	
		function shouldPreventMouseEvent(name, type, props) {
		  switch (name) {
		    case 'onClick':
		    case 'onClickCapture':
		    case 'onDoubleClick':
		    case 'onDoubleClickCapture':
		    case 'onMouseDown':
		    case 'onMouseDownCapture':
		    case 'onMouseMove':
		    case 'onMouseMoveCapture':
		    case 'onMouseUp':
		    case 'onMouseUpCapture':
		      return !!(props.disabled && isInteractive(type));
		    default:
		      return false;
		  }
		}
	
		/**
		 * This is a unified interface for event plugins to be installed and configured.
		 *
		 * Event plugins can implement the following properties:
		 *
		 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
		 *     Required. When a top-level event is fired, this method is expected to
		 *     extract synthetic events that will in turn be queued and dispatched.
		 *
		 *   `eventTypes` {object}
		 *     Optional, plugins that fire events must publish a mapping of registration
		 *     names that are used to register listeners. Values of this mapping must
		 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
		 *
		 *   `executeDispatch` {function(object, function, string)}
		 *     Optional, allows plugins to override how an event gets dispatched. By
		 *     default, the listener is simply invoked.
		 *
		 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
		 *
		 * @public
		 */
		var EventPluginHub = {
	
		  /**
		   * Methods for injecting dependencies.
		   */
		  injection: {
	
		    /**
		     * @param {array} InjectedEventPluginOrder
		     * @public
		     */
		    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,
	
		    /**
		     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
		     */
		    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName
	
		  },
	
		  /**
		   * Stores `listener` at `listenerBank[registrationName][key]`. Is idempotent.
		   *
		   * @param {object} inst The instance, which is the source of events.
		   * @param {string} registrationName Name of listener (e.g. `onClick`).
		   * @param {function} listener The callback to store.
		   */
		  putListener: function (inst, registrationName, listener) {
		    !(typeof listener === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : _prodInvariant('94', registrationName, typeof listener) : void 0;
	
		    var key = getDictionaryKey(inst);
		    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
		    bankForRegistrationName[key] = listener;
	
		    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
		    if (PluginModule && PluginModule.didPutListener) {
		      PluginModule.didPutListener(inst, registrationName, listener);
		    }
		  },
	
		  /**
		   * @param {object} inst The instance, which is the source of events.
		   * @param {string} registrationName Name of listener (e.g. `onClick`).
		   * @return {?function} The stored callback.
		   */
		  getListener: function (inst, registrationName) {
		    // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not
		    // live here; needs to be moved to a better place soon
		    var bankForRegistrationName = listenerBank[registrationName];
		    if (shouldPreventMouseEvent(registrationName, inst._currentElement.type, inst._currentElement.props)) {
		      return null;
		    }
		    var key = getDictionaryKey(inst);
		    return bankForRegistrationName && bankForRegistrationName[key];
		  },
	
		  /**
		   * Deletes a listener from the registration bank.
		   *
		   * @param {object} inst The instance, which is the source of events.
		   * @param {string} registrationName Name of listener (e.g. `onClick`).
		   */
		  deleteListener: function (inst, registrationName) {
		    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
		    if (PluginModule && PluginModule.willDeleteListener) {
		      PluginModule.willDeleteListener(inst, registrationName);
		    }
	
		    var bankForRegistrationName = listenerBank[registrationName];
		    // TODO: This should never be null -- when is it?
		    if (bankForRegistrationName) {
		      var key = getDictionaryKey(inst);
		      delete bankForRegistrationName[key];
		    }
		  },
	
		  /**
		   * Deletes all listeners for the DOM element with the supplied ID.
		   *
		   * @param {object} inst The instance, which is the source of events.
		   */
		  deleteAllListeners: function (inst) {
		    var key = getDictionaryKey(inst);
		    for (var registrationName in listenerBank) {
		      if (!listenerBank.hasOwnProperty(registrationName)) {
		        continue;
		      }
	
		      if (!listenerBank[registrationName][key]) {
		        continue;
		      }
	
		      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
		      if (PluginModule && PluginModule.willDeleteListener) {
		        PluginModule.willDeleteListener(inst, registrationName);
		      }
	
		      delete listenerBank[registrationName][key];
		    }
		  },
	
		  /**
		   * Allows registered plugins an opportunity to extract events from top-level
		   * native browser events.
		   *
		   * @return {*} An accumulation of synthetic events.
		   * @internal
		   */
		  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
		    var events;
		    var plugins = EventPluginRegistry.plugins;
		    for (var i = 0; i < plugins.length; i++) {
		      // Not every plugin in the ordering may be loaded at runtime.
		      var possiblePlugin = plugins[i];
		      if (possiblePlugin) {
		        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
		        if (extractedEvents) {
		          events = accumulateInto(events, extractedEvents);
		        }
		      }
		    }
		    return events;
		  },
	
		  /**
		   * Enqueues a synthetic event that should be dispatched when
		   * `processEventQueue` is invoked.
		   *
		   * @param {*} events An accumulation of synthetic events.
		   * @internal
		   */
		  enqueueEvents: function (events) {
		    if (events) {
		      eventQueue = accumulateInto(eventQueue, events);
		    }
		  },
	
		  /**
		   * Dispatches all synthetic events on the event queue.
		   *
		   * @internal
		   */
		  processEventQueue: function (simulated) {
		    // Set `eventQueue` to null before processing it so that we can tell if more
		    // events get enqueued while processing.
		    var processingEventQueue = eventQueue;
		    eventQueue = null;
		    if (simulated) {
		      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
		    } else {
		      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
		    }
		    !!eventQueue ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;
		    // This would be a good time to rethrow if any of the event handlers threw.
		    ReactErrorUtils.rethrowCaughtError();
		  },
	
		  /**
		   * These are needed for tests only. Do not use!
		   */
		  __purge: function () {
		    listenerBank = {};
		  },
	
		  __getListenerBank: function () {
		    return listenerBank;
		  }
	
		};
	
		module.exports = EventPluginHub;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 111 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * 
		 */
	
		'use strict';
	
		var _prodInvariant = __webpack_require__(102);
	
		var invariant = __webpack_require__(104);
	
		/**
		 * Injectable ordering of event plugins.
		 */
		var eventPluginOrder = null;
	
		/**
		 * Injectable mapping from names to event plugin modules.
		 */
		var namesToPlugins = {};
	
		/**
		 * Recomputes the plugin list using the injected plugins and plugin ordering.
		 *
		 * @private
		 */
		function recomputePluginOrdering() {
		  if (!eventPluginOrder) {
		    // Wait until an `eventPluginOrder` is injected.
		    return;
		  }
		  for (var pluginName in namesToPlugins) {
		    var pluginModule = namesToPlugins[pluginName];
		    var pluginIndex = eventPluginOrder.indexOf(pluginName);
		    !(pluginIndex > -1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : _prodInvariant('96', pluginName) : void 0;
		    if (EventPluginRegistry.plugins[pluginIndex]) {
		      continue;
		    }
		    !pluginModule.extractEvents ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : _prodInvariant('97', pluginName) : void 0;
		    EventPluginRegistry.plugins[pluginIndex] = pluginModule;
		    var publishedEvents = pluginModule.eventTypes;
		    for (var eventName in publishedEvents) {
		      !publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : _prodInvariant('98', eventName, pluginName) : void 0;
		    }
		  }
		}
	
		/**
		 * Publishes an event so that it can be dispatched by the supplied plugin.
		 *
		 * @param {object} dispatchConfig Dispatch configuration for the event.
		 * @param {object} PluginModule Plugin publishing the event.
		 * @return {boolean} True if the event was successfully published.
		 * @private
		 */
		function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
		  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : _prodInvariant('99', eventName) : void 0;
		  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;
	
		  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
		  if (phasedRegistrationNames) {
		    for (var phaseName in phasedRegistrationNames) {
		      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
		        var phasedRegistrationName = phasedRegistrationNames[phaseName];
		        publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
		      }
		    }
		    return true;
		  } else if (dispatchConfig.registrationName) {
		    publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);
		    return true;
		  }
		  return false;
		}
	
		/**
		 * Publishes a registration name that is used to identify dispatched events and
		 * can be used with `EventPluginHub.putListener` to register listeners.
		 *
		 * @param {string} registrationName Registration name to add.
		 * @param {object} PluginModule Plugin publishing the event.
		 * @private
		 */
		function publishRegistrationName(registrationName, pluginModule, eventName) {
		  !!EventPluginRegistry.registrationNameModules[registrationName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : _prodInvariant('100', registrationName) : void 0;
		  EventPluginRegistry.registrationNameModules[registrationName] = pluginModule;
		  EventPluginRegistry.registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;
	
		  if (process.env.NODE_ENV !== 'production') {
		    var lowerCasedName = registrationName.toLowerCase();
		    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;
	
		    if (registrationName === 'onDoubleClick') {
		      EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;
		    }
		  }
		}
	
		/**
		 * Registers plugins so that they can extract and dispatch events.
		 *
		 * @see {EventPluginHub}
		 */
		var EventPluginRegistry = {
	
		  /**
		   * Ordered list of injected plugins.
		   */
		  plugins: [],
	
		  /**
		   * Mapping from event name to dispatch config
		   */
		  eventNameDispatchConfigs: {},
	
		  /**
		   * Mapping from registration name to plugin module
		   */
		  registrationNameModules: {},
	
		  /**
		   * Mapping from registration name to event name
		   */
		  registrationNameDependencies: {},
	
		  /**
		   * Mapping from lowercase registration names to the properly cased version,
		   * used to warn in the case of missing event handlers. Available
		   * only in __DEV__.
		   * @type {Object}
		   */
		  possibleRegistrationNames: process.env.NODE_ENV !== 'production' ? {} : null,
		  // Trust the developer to only use possibleRegistrationNames in __DEV__
	
		  /**
		   * Injects an ordering of plugins (by plugin name). This allows the ordering
		   * to be decoupled from injection of the actual plugins so that ordering is
		   * always deterministic regardless of packaging, on-the-fly injection, etc.
		   *
		   * @param {array} InjectedEventPluginOrder
		   * @internal
		   * @see {EventPluginHub.injection.injectEventPluginOrder}
		   */
		  injectEventPluginOrder: function (injectedEventPluginOrder) {
		    !!eventPluginOrder ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : _prodInvariant('101') : void 0;
		    // Clone the ordering so it cannot be dynamically mutated.
		    eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
		    recomputePluginOrdering();
		  },
	
		  /**
		   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
		   * in the ordering injected by `injectEventPluginOrder`.
		   *
		   * Plugins can be injected as part of page initialization or on-the-fly.
		   *
		   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
		   * @internal
		   * @see {EventPluginHub.injection.injectEventPluginsByName}
		   */
		  injectEventPluginsByName: function (injectedNamesToPlugins) {
		    var isOrderingDirty = false;
		    for (var pluginName in injectedNamesToPlugins) {
		      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
		        continue;
		      }
		      var pluginModule = injectedNamesToPlugins[pluginName];
		      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
		        !!namesToPlugins[pluginName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : _prodInvariant('102', pluginName) : void 0;
		        namesToPlugins[pluginName] = pluginModule;
		        isOrderingDirty = true;
		      }
		    }
		    if (isOrderingDirty) {
		      recomputePluginOrdering();
		    }
		  },
	
		  /**
		   * Looks up the plugin for the supplied event.
		   *
		   * @param {object} event A synthetic event.
		   * @return {?object} The plugin that created the supplied event.
		   * @internal
		   */
		  getPluginModuleForEvent: function (event) {
		    var dispatchConfig = event.dispatchConfig;
		    if (dispatchConfig.registrationName) {
		      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
		    }
		    if (dispatchConfig.phasedRegistrationNames !== undefined) {
		      // pulling phasedRegistrationNames out of dispatchConfig helps Flow see
		      // that it is not undefined.
		      var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
	
		      for (var phase in phasedRegistrationNames) {
		        if (!phasedRegistrationNames.hasOwnProperty(phase)) {
		          continue;
		        }
		        var pluginModule = EventPluginRegistry.registrationNameModules[phasedRegistrationNames[phase]];
		        if (pluginModule) {
		          return pluginModule;
		        }
		      }
		    }
		    return null;
		  },
	
		  /**
		   * Exposed for unit testing.
		   * @private
		   */
		  _resetEventPlugins: function () {
		    eventPluginOrder = null;
		    for (var pluginName in namesToPlugins) {
		      if (namesToPlugins.hasOwnProperty(pluginName)) {
		        delete namesToPlugins[pluginName];
		      }
		    }
		    EventPluginRegistry.plugins.length = 0;
	
		    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
		    for (var eventName in eventNameDispatchConfigs) {
		      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
		        delete eventNameDispatchConfigs[eventName];
		      }
		    }
	
		    var registrationNameModules = EventPluginRegistry.registrationNameModules;
		    for (var registrationName in registrationNameModules) {
		      if (registrationNameModules.hasOwnProperty(registrationName)) {
		        delete registrationNameModules[registrationName];
		      }
		    }
	
		    if (process.env.NODE_ENV !== 'production') {
		      var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;
		      for (var lowerCasedName in possibleRegistrationNames) {
		        if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {
		          delete possibleRegistrationNames[lowerCasedName];
		        }
		      }
		    }
		  }
	
		};
	
		module.exports = EventPluginRegistry;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 112 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var _prodInvariant = __webpack_require__(102);
	
		var ReactErrorUtils = __webpack_require__(113);
	
		var invariant = __webpack_require__(104);
		var warning = __webpack_require__(114);
	
		/**
		 * Injected dependencies:
		 */
	
		/**
		 * - `ComponentTree`: [required] Module that can convert between React instances
		 *   and actual node references.
		 */
		var ComponentTree;
		var TreeTraversal;
		var injection = {
		  injectComponentTree: function (Injected) {
		    ComponentTree = Injected;
		    if (process.env.NODE_ENV !== 'production') {
		      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
		    }
		  },
		  injectTreeTraversal: function (Injected) {
		    TreeTraversal = Injected;
		    if (process.env.NODE_ENV !== 'production') {
		      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;
		    }
		  }
		};
	
		function isEndish(topLevelType) {
		  return topLevelType === 'topMouseUp' || topLevelType === 'topTouchEnd' || topLevelType === 'topTouchCancel';
		}
	
		function isMoveish(topLevelType) {
		  return topLevelType === 'topMouseMove' || topLevelType === 'topTouchMove';
		}
		function isStartish(topLevelType) {
		  return topLevelType === 'topMouseDown' || topLevelType === 'topTouchStart';
		}
	
		var validateEventDispatches;
		if (process.env.NODE_ENV !== 'production') {
		  validateEventDispatches = function (event) {
		    var dispatchListeners = event._dispatchListeners;
		    var dispatchInstances = event._dispatchInstances;
	
		    var listenersIsArr = Array.isArray(dispatchListeners);
		    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;
	
		    var instancesIsArr = Array.isArray(dispatchInstances);
		    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;
	
		    process.env.NODE_ENV !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;
		  };
		}
	
		/**
		 * Dispatch the event to the listener.
		 * @param {SyntheticEvent} event SyntheticEvent to handle
		 * @param {boolean} simulated If the event is simulated (changes exn behavior)
		 * @param {function} listener Application-level callback
		 * @param {*} inst Internal component instance
		 */
		function executeDispatch(event, simulated, listener, inst) {
		  var type = event.type || 'unknown-event';
		  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);
		  if (simulated) {
		    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);
		  } else {
		    ReactErrorUtils.invokeGuardedCallback(type, listener, event);
		  }
		  event.currentTarget = null;
		}
	
		/**
		 * Standard/simple iteration through an event's collected dispatches.
		 */
		function executeDispatchesInOrder(event, simulated) {
		  var dispatchListeners = event._dispatchListeners;
		  var dispatchInstances = event._dispatchInstances;
		  if (process.env.NODE_ENV !== 'production') {
		    validateEventDispatches(event);
		  }
		  if (Array.isArray(dispatchListeners)) {
		    for (var i = 0; i < dispatchListeners.length; i++) {
		      if (event.isPropagationStopped()) {
		        break;
		      }
		      // Listeners and Instances are two parallel arrays that are always in sync.
		      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
		    }
		  } else if (dispatchListeners) {
		    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
		  }
		  event._dispatchListeners = null;
		  event._dispatchInstances = null;
		}
	
		/**
		 * Standard/simple iteration through an event's collected dispatches, but stops
		 * at the first dispatch execution returning true, and returns that id.
		 *
		 * @return {?string} id of the first dispatch execution who's listener returns
		 * true, or null if no listener returned true.
		 */
		function executeDispatchesInOrderStopAtTrueImpl(event) {
		  var dispatchListeners = event._dispatchListeners;
		  var dispatchInstances = event._dispatchInstances;
		  if (process.env.NODE_ENV !== 'production') {
		    validateEventDispatches(event);
		  }
		  if (Array.isArray(dispatchListeners)) {
		    for (var i = 0; i < dispatchListeners.length; i++) {
		      if (event.isPropagationStopped()) {
		        break;
		      }
		      // Listeners and Instances are two parallel arrays that are always in sync.
		      if (dispatchListeners[i](event, dispatchInstances[i])) {
		        return dispatchInstances[i];
		      }
		    }
		  } else if (dispatchListeners) {
		    if (dispatchListeners(event, dispatchInstances)) {
		      return dispatchInstances;
		    }
		  }
		  return null;
		}
	
		/**
		 * @see executeDispatchesInOrderStopAtTrueImpl
		 */
		function executeDispatchesInOrderStopAtTrue(event) {
		  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
		  event._dispatchInstances = null;
		  event._dispatchListeners = null;
		  return ret;
		}
	
		/**
		 * Execution of a "direct" dispatch - there must be at most one dispatch
		 * accumulated on the event or it is considered an error. It doesn't really make
		 * sense for an event with multiple dispatches (bubbled) to keep track of the
		 * return values at each dispatch execution, but it does tend to make sense when
		 * dealing with "direct" dispatches.
		 *
		 * @return {*} The return value of executing the single dispatch.
		 */
		function executeDirectDispatch(event) {
		  if (process.env.NODE_ENV !== 'production') {
		    validateEventDispatches(event);
		  }
		  var dispatchListener = event._dispatchListeners;
		  var dispatchInstance = event._dispatchInstances;
		  !!Array.isArray(dispatchListener) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;
		  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
		  var res = dispatchListener ? dispatchListener(event) : null;
		  event.currentTarget = null;
		  event._dispatchListeners = null;
		  event._dispatchInstances = null;
		  return res;
		}
	
		/**
		 * @param {SyntheticEvent} event
		 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
		 */
		function hasDispatches(event) {
		  return !!event._dispatchListeners;
		}
	
		/**
		 * General utilities that are useful in creating custom Event Plugins.
		 */
		var EventPluginUtils = {
		  isEndish: isEndish,
		  isMoveish: isMoveish,
		  isStartish: isStartish,
	
		  executeDirectDispatch: executeDirectDispatch,
		  executeDispatchesInOrder: executeDispatchesInOrder,
		  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
		  hasDispatches: hasDispatches,
	
		  getInstanceFromNode: function (node) {
		    return ComponentTree.getInstanceFromNode(node);
		  },
		  getNodeFromInstance: function (node) {
		    return ComponentTree.getNodeFromInstance(node);
		  },
		  isAncestor: function (a, b) {
		    return TreeTraversal.isAncestor(a, b);
		  },
		  getLowestCommonAncestor: function (a, b) {
		    return TreeTraversal.getLowestCommonAncestor(a, b);
		  },
		  getParentInstance: function (inst) {
		    return TreeTraversal.getParentInstance(inst);
		  },
		  traverseTwoPhase: function (target, fn, arg) {
		    return TreeTraversal.traverseTwoPhase(target, fn, arg);
		  },
		  traverseEnterLeave: function (from, to, fn, argFrom, argTo) {
		    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);
		  },
	
		  injection: injection
		};
	
		module.exports = EventPluginUtils;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 113 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * 
		 */
	
		'use strict';
	
		var caughtError = null;
	
		/**
		 * Call a function while guarding against errors that happens within it.
		 *
		 * @param {String} name of the guard to use for logging or debugging
		 * @param {Function} func The function to invoke
		 * @param {*} a First argument
		 * @param {*} b Second argument
		 */
		function invokeGuardedCallback(name, func, a) {
		  try {
		    func(a);
		  } catch (x) {
		    if (caughtError === null) {
		      caughtError = x;
		    }
		  }
		}
	
		var ReactErrorUtils = {
		  invokeGuardedCallback: invokeGuardedCallback,
	
		  /**
		   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
		   * handler are sure to be rethrown by rethrowCaughtError.
		   */
		  invokeGuardedCallbackWithCatch: invokeGuardedCallback,
	
		  /**
		   * During execution of guarded functions we will capture the first error which
		   * we will rethrow to be handled by the top level error handler.
		   */
		  rethrowCaughtError: function () {
		    if (caughtError) {
		      var error = caughtError;
		      caughtError = null;
		      throw error;
		    }
		  }
		};
	
		if (process.env.NODE_ENV !== 'production') {
		  /**
		   * To help development we can get better devtools integration by simulating a
		   * real browser event.
		   */
		  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
		    var fakeNode = document.createElement('react');
		    ReactErrorUtils.invokeGuardedCallback = function (name, func, a) {
		      var boundFunc = func.bind(null, a);
		      var evtType = 'react-' + name;
		      fakeNode.addEventListener(evtType, boundFunc, false);
		      var evt = document.createEvent('Event');
		      // $FlowFixMe https://github.com/facebook/flow/issues/2336
		      evt.initEvent(evtType, false, false);
		      fakeNode.dispatchEvent(evt);
		      fakeNode.removeEventListener(evtType, boundFunc, false);
		    };
		  }
		}
	
		module.exports = ReactErrorUtils;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 114 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2014-2015, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var emptyFunction = __webpack_require__(115);
	
		/**
		 * Similar to invariant but only logs a warning if the condition is not met.
		 * This can be used to log issues in development environments in critical
		 * paths. Removing the logging code for production environments will keep the
		 * same logic and follow the same code paths.
		 */
	
		var warning = emptyFunction;
	
		if (process.env.NODE_ENV !== 'production') {
		  var printWarning = function printWarning(format) {
		    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
		      args[_key - 1] = arguments[_key];
		    }
	
		    var argIndex = 0;
		    var message = 'Warning: ' + format.replace(/%s/g, function () {
		      return args[argIndex++];
		    });
		    if (typeof console !== 'undefined') {
		      console.error(message);
		    }
		    try {
		      // --- Welcome to debugging React ---
		      // This error was thrown as a convenience so that you can use this stack
		      // to find the callsite that caused this warning to fire.
		      throw new Error(message);
		    } catch (x) {}
		  };
	
		  warning = function warning(condition, format) {
		    if (format === undefined) {
		      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
		    }
	
		    if (format.indexOf('Failed Composite propType: ') === 0) {
		      return; // Ignore CompositeComponent proptype check.
		    }
	
		    if (!condition) {
		      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
		        args[_key2 - 2] = arguments[_key2];
		      }
	
		      printWarning.apply(undefined, [format].concat(args));
		    }
		  };
		}
	
		module.exports = warning;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 115 */
	/***/ function(module, exports) {
	
		"use strict";
	
		/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * 
		 */
	
		function makeEmptyFunction(arg) {
		  return function () {
		    return arg;
		  };
		}
	
		/**
		 * This function accepts and discards inputs; it has no side effects. This is
		 * primarily useful idiomatically for overridable function endpoints which
		 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
		 */
		var emptyFunction = function emptyFunction() {};
	
		emptyFunction.thatReturns = makeEmptyFunction;
		emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
		emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
		emptyFunction.thatReturnsNull = makeEmptyFunction(null);
		emptyFunction.thatReturnsThis = function () {
		  return this;
		};
		emptyFunction.thatReturnsArgument = function (arg) {
		  return arg;
		};
	
		module.exports = emptyFunction;
	
	/***/ },
	/* 116 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2014-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * 
		 */
	
		'use strict';
	
		var _prodInvariant = __webpack_require__(102);
	
		var invariant = __webpack_require__(104);
	
		/**
		 * Accumulates items that must not be null or undefined into the first one. This
		 * is used to conserve memory by avoiding array allocations, and thus sacrifices
		 * API cleanness. Since `current` can be null before being passed in and not
		 * null after this function, make sure to assign it back to `current`:
		 *
		 * `a = accumulateInto(a, b);`
		 *
		 * This API should be sparingly used. Try `accumulate` for something cleaner.
		 *
		 * @return {*|array<*>} An accumulation of items.
		 */
	
		function accumulateInto(current, next) {
		  !(next != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;
	
		  if (current == null) {
		    return next;
		  }
	
		  // Both are not empty. Warning: Never call x.concat(y) when you are not
		  // certain that x is an Array (x could be a string with concat method).
		  if (Array.isArray(current)) {
		    if (Array.isArray(next)) {
		      current.push.apply(current, next);
		      return current;
		    }
		    current.push(next);
		    return current;
		  }
	
		  if (Array.isArray(next)) {
		    // A bit too dangerous to mutate `next`.
		    return [current].concat(next);
		  }
	
		  return [current, next];
		}
	
		module.exports = accumulateInto;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 117 */
	/***/ function(module, exports) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * 
		 */
	
		'use strict';
	
		/**
		 * @param {array} arr an "accumulation" of items which is either an Array or
		 * a single item. Useful when paired with the `accumulate` module. This is a
		 * simple utility that allows us to reason about a collection of items, but
		 * handling the case when there is exactly one item (and we do not need to
		 * allocate an array).
		 */
	
		function forEachAccumulated(arr, cb, scope) {
		  if (Array.isArray(arr)) {
		    arr.forEach(cb, scope);
		  } else if (arr) {
		    cb.call(scope, arr);
		  }
		}
	
		module.exports = forEachAccumulated;
	
	/***/ },
	/* 118 */
	/***/ function(module, exports) {
	
		/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
	
		/**
		 * Simple, lightweight module assisting with the detection and context of
		 * Worker. Helps avoid circular dependencies and allows code to reason about
		 * whether or not they are in a Worker, even if they never include the main
		 * `ReactWorker` dependency.
		 */
		var ExecutionEnvironment = {
	
		  canUseDOM: canUseDOM,
	
		  canUseWorkers: typeof Worker !== 'undefined',
	
		  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),
	
		  canUseViewport: canUseDOM && !!window.screen,
	
		  isInWorker: !canUseDOM // For now, this is true - might change in the future.
	
		};
	
		module.exports = ExecutionEnvironment;
	
	/***/ },
	/* 119 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var _assign = __webpack_require__(120);
	
		var PooledClass = __webpack_require__(121);
	
		var getTextContentAccessor = __webpack_require__(122);
	
		/**
		 * This helper class stores information about text content of a target node,
		 * allowing comparison of content before and after a given event.
		 *
		 * Identify the node where selection currently begins, then observe
		 * both its text content and its current position in the DOM. Since the
		 * browser may natively replace the target node during composition, we can
		 * use its position to find its replacement.
		 *
		 * @param {DOMEventTarget} root
		 */
		function FallbackCompositionState(root) {
		  this._root = root;
		  this._startText = this.getText();
		  this._fallbackText = null;
		}
	
		_assign(FallbackCompositionState.prototype, {
		  destructor: function () {
		    this._root = null;
		    this._startText = null;
		    this._fallbackText = null;
		  },
	
		  /**
		   * Get current text of input.
		   *
		   * @return {string}
		   */
		  getText: function () {
		    if ('value' in this._root) {
		      return this._root.value;
		    }
		    return this._root[getTextContentAccessor()];
		  },
	
		  /**
		   * Determine the differing substring between the initially stored
		   * text content and the current content.
		   *
		   * @return {string}
		   */
		  getData: function () {
		    if (this._fallbackText) {
		      return this._fallbackText;
		    }
	
		    var start;
		    var startValue = this._startText;
		    var startLength = startValue.length;
		    var end;
		    var endValue = this.getText();
		    var endLength = endValue.length;
	
		    for (start = 0; start < startLength; start++) {
		      if (startValue[start] !== endValue[start]) {
		        break;
		      }
		    }
	
		    var minEnd = startLength - start;
		    for (end = 1; end <= minEnd; end++) {
		      if (startValue[startLength - end] !== endValue[endLength - end]) {
		        break;
		      }
		    }
	
		    var sliceTail = end > 1 ? 1 - end : undefined;
		    this._fallbackText = endValue.slice(start, sliceTail);
		    return this._fallbackText;
		  }
		});
	
		PooledClass.addPoolingTo(FallbackCompositionState);
	
		module.exports = FallbackCompositionState;
	
	/***/ },
	/* 120 */
	/***/ function(module, exports) {
	
		/*
		object-assign
		(c) Sindre Sorhus
		@license MIT
		*/
	
		'use strict';
		/* eslint-disable no-unused-vars */
		var getOwnPropertySymbols = Object.getOwnPropertySymbols;
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		var propIsEnumerable = Object.prototype.propertyIsEnumerable;
	
		function toObject(val) {
			if (val === null || val === undefined) {
				throw new TypeError('Object.assign cannot be called with null or undefined');
			}
	
			return Object(val);
		}
	
		function shouldUseNative() {
			try {
				if (!Object.assign) {
					return false;
				}
	
				// Detect buggy property enumeration order in older V8 versions.
	
				// https://bugs.chromium.org/p/v8/issues/detail?id=4118
				var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
				test1[5] = 'de';
				if (Object.getOwnPropertyNames(test1)[0] === '5') {
					return false;
				}
	
				// https://bugs.chromium.org/p/v8/issues/detail?id=3056
				var test2 = {};
				for (var i = 0; i < 10; i++) {
					test2['_' + String.fromCharCode(i)] = i;
				}
				var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
					return test2[n];
				});
				if (order2.join('') !== '0123456789') {
					return false;
				}
	
				// https://bugs.chromium.org/p/v8/issues/detail?id=3056
				var test3 = {};
				'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
					test3[letter] = letter;
				});
				if (Object.keys(Object.assign({}, test3)).join('') !==
						'abcdefghijklmnopqrst') {
					return false;
				}
	
				return true;
			} catch (err) {
				// We don't expect any of the above to throw, but better to be safe.
				return false;
			}
		}
	
		module.exports = shouldUseNative() ? Object.assign : function (target, source) {
			var from;
			var to = toObject(target);
			var symbols;
	
			for (var s = 1; s < arguments.length; s++) {
				from = Object(arguments[s]);
	
				for (var key in from) {
					if (hasOwnProperty.call(from, key)) {
						to[key] = from[key];
					}
				}
	
				if (getOwnPropertySymbols) {
					symbols = getOwnPropertySymbols(from);
					for (var i = 0; i < symbols.length; i++) {
						if (propIsEnumerable.call(from, symbols[i])) {
							to[symbols[i]] = from[symbols[i]];
						}
					}
				}
			}
	
			return to;
		};
	
	
	/***/ },
	/* 121 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * 
		 */
	
		'use strict';
	
		var _prodInvariant = __webpack_require__(102);
	
		var invariant = __webpack_require__(104);
	
		/**
		 * Static poolers. Several custom versions for each potential number of
		 * arguments. A completely generic pooler is easy to implement, but would
		 * require accessing the `arguments` object. In each of these, `this` refers to
		 * the Class itself, not an instance. If any others are needed, simply add them
		 * here, or in their own files.
		 */
		var oneArgumentPooler = function (copyFieldsFrom) {
		  var Klass = this;
		  if (Klass.instancePool.length) {
		    var instance = Klass.instancePool.pop();
		    Klass.call(instance, copyFieldsFrom);
		    return instance;
		  } else {
		    return new Klass(copyFieldsFrom);
		  }
		};
	
		var twoArgumentPooler = function (a1, a2) {
		  var Klass = this;
		  if (Klass.instancePool.length) {
		    var instance = Klass.instancePool.pop();
		    Klass.call(instance, a1, a2);
		    return instance;
		  } else {
		    return new Klass(a1, a2);
		  }
		};
	
		var threeArgumentPooler = function (a1, a2, a3) {
		  var Klass = this;
		  if (Klass.instancePool.length) {
		    var instance = Klass.instancePool.pop();
		    Klass.call(instance, a1, a2, a3);
		    return instance;
		  } else {
		    return new Klass(a1, a2, a3);
		  }
		};
	
		var fourArgumentPooler = function (a1, a2, a3, a4) {
		  var Klass = this;
		  if (Klass.instancePool.length) {
		    var instance = Klass.instancePool.pop();
		    Klass.call(instance, a1, a2, a3, a4);
		    return instance;
		  } else {
		    return new Klass(a1, a2, a3, a4);
		  }
		};
	
		var standardReleaser = function (instance) {
		  var Klass = this;
		  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
		  instance.destructor();
		  if (Klass.instancePool.length < Klass.poolSize) {
		    Klass.instancePool.push(instance);
		  }
		};
	
		var DEFAULT_POOL_SIZE = 10;
		var DEFAULT_POOLER = oneArgumentPooler;
	
		/**
		 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
		 * itself (statically) not adding any prototypical fields. Any CopyConstructor
		 * you give this may have a `poolSize` property, and will look for a
		 * prototypical `destructor` on instances.
		 *
		 * @param {Function} CopyConstructor Constructor that can be used to reset.
		 * @param {Function} pooler Customizable pooler.
		 */
		var addPoolingTo = function (CopyConstructor, pooler) {
		  // Casting as any so that flow ignores the actual implementation and trusts
		  // it to match the type we declared
		  var NewKlass = CopyConstructor;
		  NewKlass.instancePool = [];
		  NewKlass.getPooled = pooler || DEFAULT_POOLER;
		  if (!NewKlass.poolSize) {
		    NewKlass.poolSize = DEFAULT_POOL_SIZE;
		  }
		  NewKlass.release = standardReleaser;
		  return NewKlass;
		};
	
		var PooledClass = {
		  addPoolingTo: addPoolingTo,
		  oneArgumentPooler: oneArgumentPooler,
		  twoArgumentPooler: twoArgumentPooler,
		  threeArgumentPooler: threeArgumentPooler,
		  fourArgumentPooler: fourArgumentPooler
		};
	
		module.exports = PooledClass;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 122 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var ExecutionEnvironment = __webpack_require__(118);
	
		var contentKey = null;
	
		/**
		 * Gets the key used to access text content on a DOM node.
		 *
		 * @return {?string} Key used to access text content.
		 * @internal
		 */
		function getTextContentAccessor() {
		  if (!contentKey && ExecutionEnvironment.canUseDOM) {
		    // Prefer textContent to innerText because many browsers support both but
		    // SVG <text> elements don't support innerText even when <div> does.
		    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
		  }
		  return contentKey;
		}
	
		module.exports = getTextContentAccessor;
	
	/***/ },
	/* 123 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var SyntheticEvent = __webpack_require__(124);
	
		/**
		 * @interface Event
		 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
		 */
		var CompositionEventInterface = {
		  data: null
		};
	
		/**
		 * @param {object} dispatchConfig Configuration used to dispatch this event.
		 * @param {string} dispatchMarker Marker identifying the event target.
		 * @param {object} nativeEvent Native browser event.
		 * @extends {SyntheticUIEvent}
		 */
		function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
		  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
		}
	
		SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);
	
		module.exports = SyntheticCompositionEvent;
	
	/***/ },
	/* 124 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var _assign = __webpack_require__(120);
	
		var PooledClass = __webpack_require__(121);
	
		var emptyFunction = __webpack_require__(115);
		var warning = __webpack_require__(114);
	
		var didWarnForAddedNewProperty = false;
		var isProxySupported = typeof Proxy === 'function';
	
		var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];
	
		/**
		 * @interface Event
		 * @see http://www.w3.org/TR/DOM-Level-3-Events/
		 */
		var EventInterface = {
		  type: null,
		  target: null,
		  // currentTarget is set when dispatching; no use in copying it here
		  currentTarget: emptyFunction.thatReturnsNull,
		  eventPhase: null,
		  bubbles: null,
		  cancelable: null,
		  timeStamp: function (event) {
		    return event.timeStamp || Date.now();
		  },
		  defaultPrevented: null,
		  isTrusted: null
		};
	
		/**
		 * Synthetic events are dispatched by event plugins, typically in response to a
		 * top-level event delegation handler.
		 *
		 * These systems should generally use pooling to reduce the frequency of garbage
		 * collection. The system should check `isPersistent` to determine whether the
		 * event should be released into the pool after being dispatched. Users that
		 * need a persisted event should invoke `persist`.
		 *
		 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
		 * normalizing browser quirks. Subclasses do not necessarily have to implement a
		 * DOM interface; custom application-specific events can also subclass this.
		 *
		 * @param {object} dispatchConfig Configuration used to dispatch this event.
		 * @param {*} targetInst Marker identifying the event target.
		 * @param {object} nativeEvent Native browser event.
		 * @param {DOMEventTarget} nativeEventTarget Target node.
		 */
		function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
		  if (process.env.NODE_ENV !== 'production') {
		    // these have a getter/setter for warnings
		    delete this.nativeEvent;
		    delete this.preventDefault;
		    delete this.stopPropagation;
		  }
	
		  this.dispatchConfig = dispatchConfig;
		  this._targetInst = targetInst;
		  this.nativeEvent = nativeEvent;
	
		  var Interface = this.constructor.Interface;
		  for (var propName in Interface) {
		    if (!Interface.hasOwnProperty(propName)) {
		      continue;
		    }
		    if (process.env.NODE_ENV !== 'production') {
		      delete this[propName]; // this has a getter/setter for warnings
		    }
		    var normalize = Interface[propName];
		    if (normalize) {
		      this[propName] = normalize(nativeEvent);
		    } else {
		      if (propName === 'target') {
		        this.target = nativeEventTarget;
		      } else {
		        this[propName] = nativeEvent[propName];
		      }
		    }
		  }
	
		  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
		  if (defaultPrevented) {
		    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
		  } else {
		    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
		  }
		  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
		  return this;
		}
	
		_assign(SyntheticEvent.prototype, {
	
		  preventDefault: function () {
		    this.defaultPrevented = true;
		    var event = this.nativeEvent;
		    if (!event) {
		      return;
		    }
	
		    if (event.preventDefault) {
		      event.preventDefault();
		    } else if (typeof event.returnValue !== 'unknown') {
		      // eslint-disable-line valid-typeof
		      event.returnValue = false;
		    }
		    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
		  },
	
		  stopPropagation: function () {
		    var event = this.nativeEvent;
		    if (!event) {
		      return;
		    }
	
		    if (event.stopPropagation) {
		      event.stopPropagation();
		    } else if (typeof event.cancelBubble !== 'unknown') {
		      // eslint-disable-line valid-typeof
		      // The ChangeEventPlugin registers a "propertychange" event for
		      // IE. This event does not support bubbling or cancelling, and
		      // any references to cancelBubble throw "Member not found".  A
		      // typeof check of "unknown" circumvents this issue (and is also
		      // IE specific).
		      event.cancelBubble = true;
		    }
	
		    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
		  },
	
		  /**
		   * We release all dispatched `SyntheticEvent`s after each event loop, adding
		   * them back into the pool. This allows a way to hold onto a reference that
		   * won't be added back into the pool.
		   */
		  persist: function () {
		    this.isPersistent = emptyFunction.thatReturnsTrue;
		  },
	
		  /**
		   * Checks if this event should be released back into the pool.
		   *
		   * @return {boolean} True if this should not be released, false otherwise.
		   */
		  isPersistent: emptyFunction.thatReturnsFalse,
	
		  /**
		   * `PooledClass` looks for `destructor` on each instance it releases.
		   */
		  destructor: function () {
		    var Interface = this.constructor.Interface;
		    for (var propName in Interface) {
		      if (process.env.NODE_ENV !== 'production') {
		        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
		      } else {
		        this[propName] = null;
		      }
		    }
		    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
		      this[shouldBeReleasedProperties[i]] = null;
		    }
		    if (process.env.NODE_ENV !== 'production') {
		      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
		      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));
		      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));
		    }
		  }
	
		});
	
		SyntheticEvent.Interface = EventInterface;
	
		if (process.env.NODE_ENV !== 'production') {
		  if (isProxySupported) {
		    /*eslint-disable no-func-assign */
		    SyntheticEvent = new Proxy(SyntheticEvent, {
		      construct: function (target, args) {
		        return this.apply(target, Object.create(target.prototype), args);
		      },
		      apply: function (constructor, that, args) {
		        return new Proxy(constructor.apply(that, args), {
		          set: function (target, prop, value) {
		            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
		              process.env.NODE_ENV !== 'production' ? warning(didWarnForAddedNewProperty || target.isPersistent(), 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re adding a new property in the synthetic event object. ' + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;
		              didWarnForAddedNewProperty = true;
		            }
		            target[prop] = value;
		            return true;
		          }
		        });
		      }
		    });
		    /*eslint-enable no-func-assign */
		  }
		}
		/**
		 * Helper to reduce boilerplate when creating subclasses.
		 *
		 * @param {function} Class
		 * @param {?object} Interface
		 */
		SyntheticEvent.augmentClass = function (Class, Interface) {
		  var Super = this;
	
		  var E = function () {};
		  E.prototype = Super.prototype;
		  var prototype = new E();
	
		  _assign(prototype, Class.prototype);
		  Class.prototype = prototype;
		  Class.prototype.constructor = Class;
	
		  Class.Interface = _assign({}, Super.Interface, Interface);
		  Class.augmentClass = Super.augmentClass;
	
		  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
		};
	
		PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);
	
		module.exports = SyntheticEvent;
	
		/**
		  * Helper to nullify syntheticEvent instance properties when destructing
		  *
		  * @param {object} SyntheticEvent
		  * @param {String} propName
		  * @return {object} defineProperty object
		  */
		function getPooledWarningPropertyDefinition(propName, getVal) {
		  var isFunction = typeof getVal === 'function';
		  return {
		    configurable: true,
		    set: set,
		    get: get
		  };
	
		  function set(val) {
		    var action = isFunction ? 'setting the method' : 'setting the property';
		    warn(action, 'This is effectively a no-op');
		    return val;
		  }
	
		  function get() {
		    var action = isFunction ? 'accessing the method' : 'accessing the property';
		    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
		    warn(action, result);
		    return getVal;
		  }
	
		  function warn(action, result) {
		    var warningCondition = false;
		    process.env.NODE_ENV !== 'production' ? warning(warningCondition, 'This synthetic event is reused for performance reasons. If you\'re seeing this, ' + 'you\'re %s `%s` on a released/nullified synthetic event. %s. ' + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
		  }
		}
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 125 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var SyntheticEvent = __webpack_require__(124);
	
		/**
		 * @interface Event
		 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
		 *      /#events-inputevents
		 */
		var InputEventInterface = {
		  data: null
		};
	
		/**
		 * @param {object} dispatchConfig Configuration used to dispatch this event.
		 * @param {string} dispatchMarker Marker identifying the event target.
		 * @param {object} nativeEvent Native browser event.
		 * @extends {SyntheticUIEvent}
		 */
		function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
		  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
		}
	
		SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);
	
		module.exports = SyntheticInputEvent;
	
	/***/ },
	/* 126 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var EventPluginHub = __webpack_require__(110);
		var EventPropagators = __webpack_require__(109);
		var ExecutionEnvironment = __webpack_require__(118);
		var ReactDOMComponentTree = __webpack_require__(101);
		var ReactUpdates = __webpack_require__(127);
		var SyntheticEvent = __webpack_require__(124);
	
		var getEventTarget = __webpack_require__(140);
		var isEventSupported = __webpack_require__(141);
		var isTextInputElement = __webpack_require__(142);
	
		var eventTypes = {
		  change: {
		    phasedRegistrationNames: {
		      bubbled: 'onChange',
		      captured: 'onChangeCapture'
		    },
		    dependencies: ['topBlur', 'topChange', 'topClick', 'topFocus', 'topInput', 'topKeyDown', 'topKeyUp', 'topSelectionChange']
		  }
		};
	
		/**
		 * For IE shims
		 */
		var activeElement = null;
		var activeElementInst = null;
		var activeElementValue = null;
		var activeElementValueProp = null;
	
		/**
		 * SECTION: handle `change` event
		 */
		function shouldUseChangeEvent(elem) {
		  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
		  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
		}
	
		var doesChangeEventBubble = false;
		if (ExecutionEnvironment.canUseDOM) {
		  // See `handleChange` comment below
		  doesChangeEventBubble = isEventSupported('change') && (!document.documentMode || document.documentMode > 8);
		}
	
		function manualDispatchChangeEvent(nativeEvent) {
		  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementInst, nativeEvent, getEventTarget(nativeEvent));
		  EventPropagators.accumulateTwoPhaseDispatches(event);
	
		  // If change and propertychange bubbled, we'd just bind to it like all the
		  // other events and have it go through ReactBrowserEventEmitter. Since it
		  // doesn't, we manually listen for the events and so we have to enqueue and
		  // process the abstract event manually.
		  //
		  // Batching is necessary here in order to ensure that all event handlers run
		  // before the next rerender (including event handlers attached to ancestor
		  // elements instead of directly on the input). Without this, controlled
		  // components don't work properly in conjunction with event bubbling because
		  // the component is rerendered and the value reverted before all the event
		  // handlers can run. See https://github.com/facebook/react/issues/708.
		  ReactUpdates.batchedUpdates(runEventInBatch, event);
		}
	
		function runEventInBatch(event) {
		  EventPluginHub.enqueueEvents(event);
		  EventPluginHub.processEventQueue(false);
		}
	
		function startWatchingForChangeEventIE8(target, targetInst) {
		  activeElement = target;
		  activeElementInst = targetInst;
		  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
		}
	
		function stopWatchingForChangeEventIE8() {
		  if (!activeElement) {
		    return;
		  }
		  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
		  activeElement = null;
		  activeElementInst = null;
		}
	
		function getTargetInstForChangeEvent(topLevelType, targetInst) {
		  if (topLevelType === 'topChange') {
		    return targetInst;
		  }
		}
		function handleEventsForChangeEventIE8(topLevelType, target, targetInst) {
		  if (topLevelType === 'topFocus') {
		    // stopWatching() should be a noop here but we call it just in case we
		    // missed a blur event somehow.
		    stopWatchingForChangeEventIE8();
		    startWatchingForChangeEventIE8(target, targetInst);
		  } else if (topLevelType === 'topBlur') {
		    stopWatchingForChangeEventIE8();
		  }
		}
	
		/**
		 * SECTION: handle `input` event
		 */
		var isInputEventSupported = false;
		if (ExecutionEnvironment.canUseDOM) {
		  // IE9 claims to support the input event but fails to trigger it when
		  // deleting text, so we ignore its input events.
		  // IE10+ fire input events to often, such when a placeholder
		  // changes or when an input with a placeholder is focused.
		  isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 11);
		}
	
		/**
		 * (For IE <=11) Replacement getter/setter for the `value` property that gets
		 * set on the active element.
		 */
		var newValueProp = {
		  get: function () {
		    return activeElementValueProp.get.call(this);
		  },
		  set: function (val) {
		    // Cast to a string so we can do equality checks.
		    activeElementValue = '' + val;
		    activeElementValueProp.set.call(this, val);
		  }
		};
	
		/**
		 * (For IE <=11) Starts tracking propertychange events on the passed-in element
		 * and override the value property so that we can distinguish user events from
		 * value changes in JS.
		 */
		function startWatchingForValueChange(target, targetInst) {
		  activeElement = target;
		  activeElementInst = targetInst;
		  activeElementValue = target.value;
		  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');
	
		  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only
		  // on DOM elements
		  Object.defineProperty(activeElement, 'value', newValueProp);
		  if (activeElement.attachEvent) {
		    activeElement.attachEvent('onpropertychange', handlePropertyChange);
		  } else {
		    activeElement.addEventListener('propertychange', handlePropertyChange, false);
		  }
		}
	
		/**
		 * (For IE <=11) Removes the event listeners from the currently-tracked element,
		 * if any exists.
		 */
		function stopWatchingForValueChange() {
		  if (!activeElement) {
		    return;
		  }
	
		  // delete restores the original property definition
		  delete activeElement.value;
	
		  if (activeElement.detachEvent) {
		    activeElement.detachEvent('onpropertychange', handlePropertyChange);
		  } else {
		    activeElement.removeEventListener('propertychange', handlePropertyChange, false);
		  }
	
		  activeElement = null;
		  activeElementInst = null;
		  activeElementValue = null;
		  activeElementValueProp = null;
		}
	
		/**
		 * (For IE <=11) Handles a propertychange event, sending a `change` event if
		 * the value of the active element has changed.
		 */
		function handlePropertyChange(nativeEvent) {
		  if (nativeEvent.propertyName !== 'value') {
		    return;
		  }
		  var value = nativeEvent.srcElement.value;
		  if (value === activeElementValue) {
		    return;
		  }
		  activeElementValue = value;
	
		  manualDispatchChangeEvent(nativeEvent);
		}
	
		/**
		 * If a `change` event should be fired, returns the target's ID.
		 */
		function getTargetInstForInputEvent(topLevelType, targetInst) {
		  if (topLevelType === 'topInput') {
		    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
		    // what we want so fall through here and trigger an abstract event
		    return targetInst;
		  }
		}
	
		function handleEventsForInputEventIE(topLevelType, target, targetInst) {
		  if (topLevelType === 'topFocus') {
		    // In IE8, we can capture almost all .value changes by adding a
		    // propertychange handler and looking for events with propertyName
		    // equal to 'value'
		    // In IE9-11, propertychange fires for most input events but is buggy and
		    // doesn't fire when text is deleted, but conveniently, selectionchange
		    // appears to fire in all of the remaining cases so we catch those and
		    // forward the event if the value has changed
		    // In either case, we don't want to call the event handler if the value
		    // is changed from JS so we redefine a setter for `.value` that updates
		    // our activeElementValue variable, allowing us to ignore those changes
		    //
		    // stopWatching() should be a noop here but we call it just in case we
		    // missed a blur event somehow.
		    stopWatchingForValueChange();
		    startWatchingForValueChange(target, targetInst);
		  } else if (topLevelType === 'topBlur') {
		    stopWatchingForValueChange();
		  }
		}
	
		// For IE8 and IE9.
		function getTargetInstForInputEventIE(topLevelType, targetInst) {
		  if (topLevelType === 'topSelectionChange' || topLevelType === 'topKeyUp' || topLevelType === 'topKeyDown') {
		    // On the selectionchange event, the target is just document which isn't
		    // helpful for us so just check activeElement instead.
		    //
		    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
		    // propertychange on the first input event after setting `value` from a
		    // script and fires only keydown, keypress, keyup. Catching keyup usually
		    // gets it and catching keydown lets us fire an event for the first
		    // keystroke if user does a key repeat (it'll be a little delayed: right
		    // before the second keystroke). Other input methods (e.g., paste) seem to
		    // fire selectionchange normally.
		    if (activeElement && activeElement.value !== activeElementValue) {
		      activeElementValue = activeElement.value;
		      return activeElementInst;
		    }
		  }
		}
	
		/**
		 * SECTION: handle `click` event
		 */
		function shouldUseClickEvent(elem) {
		  // Use the `click` event to detect changes to checkbox and radio inputs.
		  // This approach works across all browsers, whereas `change` does not fire
		  // until `blur` in IE8.
		  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
		}
	
		function getTargetInstForClickEvent(topLevelType, targetInst) {
		  if (topLevelType === 'topClick') {
		    return targetInst;
		  }
		}
	
		/**
		 * This plugin creates an `onChange` event that normalizes change events
		 * across form elements. This event fires at a time when it's possible to
		 * change the element's value without seeing a flicker.
		 *
		 * Supported elements are:
		 * - input (see `isTextInputElement`)
		 * - textarea
		 * - select
		 */
		var ChangeEventPlugin = {
	
		  eventTypes: eventTypes,
	
		  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
		    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;
	
		    var getTargetInstFunc, handleEventFunc;
		    if (shouldUseChangeEvent(targetNode)) {
		      if (doesChangeEventBubble) {
		        getTargetInstFunc = getTargetInstForChangeEvent;
		      } else {
		        handleEventFunc = handleEventsForChangeEventIE8;
		      }
		    } else if (isTextInputElement(targetNode)) {
		      if (isInputEventSupported) {
		        getTargetInstFunc = getTargetInstForInputEvent;
		      } else {
		        getTargetInstFunc = getTargetInstForInputEventIE;
		        handleEventFunc = handleEventsForInputEventIE;
		      }
		    } else if (shouldUseClickEvent(targetNode)) {
		      getTargetInstFunc = getTargetInstForClickEvent;
		    }
	
		    if (getTargetInstFunc) {
		      var inst = getTargetInstFunc(topLevelType, targetInst);
		      if (inst) {
		        var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, nativeEventTarget);
		        event.type = 'change';
		        EventPropagators.accumulateTwoPhaseDispatches(event);
		        return event;
		      }
		    }
	
		    if (handleEventFunc) {
		      handleEventFunc(topLevelType, targetNode, targetInst);
		    }
		  }
	
		};
	
		module.exports = ChangeEventPlugin;
	
	/***/ },
	/* 127 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var _prodInvariant = __webpack_require__(102),
		    _assign = __webpack_require__(120);
	
		var CallbackQueue = __webpack_require__(128);
		var PooledClass = __webpack_require__(121);
		var ReactFeatureFlags = __webpack_require__(129);
		var ReactReconciler = __webpack_require__(130);
		var Transaction = __webpack_require__(139);
	
		var invariant = __webpack_require__(104);
	
		var dirtyComponents = [];
		var updateBatchNumber = 0;
		var asapCallbackQueue = CallbackQueue.getPooled();
		var asapEnqueued = false;
	
		var batchingStrategy = null;
	
		function ensureInjected() {
		  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching strategy') : _prodInvariant('123') : void 0;
		}
	
		var NESTED_UPDATES = {
		  initialize: function () {
		    this.dirtyComponentsLength = dirtyComponents.length;
		  },
		  close: function () {
		    if (this.dirtyComponentsLength !== dirtyComponents.length) {
		      // Additional updates were enqueued by componentDidUpdate handlers or
		      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
		      // these new updates so that if A's componentDidUpdate calls setState on
		      // B, B will update before the callback A's updater provided when calling
		      // setState.
		      dirtyComponents.splice(0, this.dirtyComponentsLength);
		      flushBatchedUpdates();
		    } else {
		      dirtyComponents.length = 0;
		    }
		  }
		};
	
		var UPDATE_QUEUEING = {
		  initialize: function () {
		    this.callbackQueue.reset();
		  },
		  close: function () {
		    this.callbackQueue.notifyAll();
		  }
		};
	
		var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];
	
		function ReactUpdatesFlushTransaction() {
		  this.reinitializeTransaction();
		  this.dirtyComponentsLength = null;
		  this.callbackQueue = CallbackQueue.getPooled();
		  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(
		  /* useCreateElement */true);
		}
	
		_assign(ReactUpdatesFlushTransaction.prototype, Transaction, {
		  getTransactionWrappers: function () {
		    return TRANSACTION_WRAPPERS;
		  },
	
		  destructor: function () {
		    this.dirtyComponentsLength = null;
		    CallbackQueue.release(this.callbackQueue);
		    this.callbackQueue = null;
		    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
		    this.reconcileTransaction = null;
		  },
	
		  perform: function (method, scope, a) {
		    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
		    // with this transaction's wrappers around it.
		    return Transaction.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
		  }
		});
	
		PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);
	
		function batchedUpdates(callback, a, b, c, d, e) {
		  ensureInjected();
		  return batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
		}
	
		/**
		 * Array comparator for ReactComponents by mount ordering.
		 *
		 * @param {ReactComponent} c1 first component you're comparing
		 * @param {ReactComponent} c2 second component you're comparing
		 * @return {number} Return value usable by Array.prototype.sort().
		 */
		function mountOrderComparator(c1, c2) {
		  return c1._mountOrder - c2._mountOrder;
		}
	
		function runBatchedUpdates(transaction) {
		  var len = transaction.dirtyComponentsLength;
		  !(len === dirtyComponents.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to match dirty-components array length (%s).', len, dirtyComponents.length) : _prodInvariant('124', len, dirtyComponents.length) : void 0;
	
		  // Since reconciling a component higher in the owner hierarchy usually (not
		  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
		  // them before their children by sorting the array.
		  dirtyComponents.sort(mountOrderComparator);
	
		  // Any updates enqueued while reconciling must be performed after this entire
		  // batch. Otherwise, if dirtyComponents is [A, B] where A has children B and
		  // C, B could update twice in a single batch if C's render enqueues an update
		  // to B (since B would have already updated, we should skip it, and the only
		  // way we can know to do so is by checking the batch counter).
		  updateBatchNumber++;
	
		  for (var i = 0; i < len; i++) {
		    // If a component is unmounted before pending changes apply, it will still
		    // be here, but we assume that it has cleared its _pendingCallbacks and
		    // that performUpdateIfNecessary is a noop.
		    var component = dirtyComponents[i];
	
		    // If performUpdateIfNecessary happens to enqueue any new updates, we
		    // shouldn't execute the callbacks until the next render happens, so
		    // stash the callbacks first
		    var callbacks = component._pendingCallbacks;
		    component._pendingCallbacks = null;
	
		    var markerName;
		    if (ReactFeatureFlags.logTopLevelRenders) {
		      var namedComponent = component;
		      // Duck type TopLevelWrapper. This is probably always true.
		      if (component._currentElement.type.isReactTopLevelWrapper) {
		        namedComponent = component._renderedComponent;
		      }
		      markerName = 'React update: ' + namedComponent.getName();
		      console.time(markerName);
		    }
	
		    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);
	
		    if (markerName) {
		      console.timeEnd(markerName);
		    }
	
		    if (callbacks) {
		      for (var j = 0; j < callbacks.length; j++) {
		        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
		      }
		    }
		  }
		}
	
		var flushBatchedUpdates = function () {
		  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
		  // array and perform any updates enqueued by mount-ready handlers (i.e.,
		  // componentDidUpdate) but we need to check here too in order to catch
		  // updates enqueued by setState callbacks and asap calls.
		  while (dirtyComponents.length || asapEnqueued) {
		    if (dirtyComponents.length) {
		      var transaction = ReactUpdatesFlushTransaction.getPooled();
		      transaction.perform(runBatchedUpdates, null, transaction);
		      ReactUpdatesFlushTransaction.release(transaction);
		    }
	
		    if (asapEnqueued) {
		      asapEnqueued = false;
		      var queue = asapCallbackQueue;
		      asapCallbackQueue = CallbackQueue.getPooled();
		      queue.notifyAll();
		      CallbackQueue.release(queue);
		    }
		  }
		};
	
		/**
		 * Mark a component as needing a rerender, adding an optional callback to a
		 * list of functions which will be executed once the rerender occurs.
		 */
		function enqueueUpdate(component) {
		  ensureInjected();
	
		  // Various parts of our code (such as ReactCompositeComponent's
		  // _renderValidatedComponent) assume that calls to render aren't nested;
		  // verify that that's the case. (This is called by each top-level update
		  // function, like setState, forceUpdate, etc.; creation and
		  // destruction of top-level components is guarded in ReactMount.)
	
		  if (!batchingStrategy.isBatchingUpdates) {
		    batchingStrategy.batchedUpdates(enqueueUpdate, component);
		    return;
		  }
	
		  dirtyComponents.push(component);
		  if (component._updateBatchNumber == null) {
		    component._updateBatchNumber = updateBatchNumber + 1;
		  }
		}
	
		/**
		 * Enqueue a callback to be run at the end of the current batching cycle. Throws
		 * if no updates are currently being performed.
		 */
		function asap(callback, context) {
		  !batchingStrategy.isBatchingUpdates ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates.asap: Can\'t enqueue an asap callback in a context whereupdates are not being batched.') : _prodInvariant('125') : void 0;
		  asapCallbackQueue.enqueue(callback, context);
		  asapEnqueued = true;
		}
	
		var ReactUpdatesInjection = {
		  injectReconcileTransaction: function (ReconcileTransaction) {
		    !ReconcileTransaction ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : _prodInvariant('126') : void 0;
		    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
		  },
	
		  injectBatchingStrategy: function (_batchingStrategy) {
		    !_batchingStrategy ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batching strategy') : _prodInvariant('127') : void 0;
		    !(typeof _batchingStrategy.batchedUpdates === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : _prodInvariant('128') : void 0;
		    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : _prodInvariant('129') : void 0;
		    batchingStrategy = _batchingStrategy;
		  }
		};
	
		var ReactUpdates = {
		  /**
		   * React references `ReactReconcileTransaction` using this property in order
		   * to allow dependency injection.
		   *
		   * @internal
		   */
		  ReactReconcileTransaction: null,
	
		  batchedUpdates: batchedUpdates,
		  enqueueUpdate: enqueueUpdate,
		  flushBatchedUpdates: flushBatchedUpdates,
		  injection: ReactUpdatesInjection,
		  asap: asap
		};
	
		module.exports = ReactUpdates;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 128 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * 
		 */
	
		'use strict';
	
		var _prodInvariant = __webpack_require__(102);
	
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
		var PooledClass = __webpack_require__(121);
	
		var invariant = __webpack_require__(104);
	
		/**
		 * A specialized pseudo-event module to help keep track of components waiting to
		 * be notified when their DOM representations are available for use.
		 *
		 * This implements `PooledClass`, so you should never need to instantiate this.
		 * Instead, use `CallbackQueue.getPooled()`.
		 *
		 * @class ReactMountReady
		 * @implements PooledClass
		 * @internal
		 */
	
		var CallbackQueue = function () {
		  function CallbackQueue(arg) {
		    _classCallCheck(this, CallbackQueue);
	
		    this._callbacks = null;
		    this._contexts = null;
		    this._arg = arg;
		  }
	
		  /**
		   * Enqueues a callback to be invoked when `notifyAll` is invoked.
		   *
		   * @param {function} callback Invoked when `notifyAll` is invoked.
		   * @param {?object} context Context to call `callback` with.
		   * @internal
		   */
	
	
		  CallbackQueue.prototype.enqueue = function enqueue(callback, context) {
		    this._callbacks = this._callbacks || [];
		    this._callbacks.push(callback);
		    this._contexts = this._contexts || [];
		    this._contexts.push(context);
		  };
	
		  /**
		   * Invokes all enqueued callbacks and clears the queue. This is invoked after
		   * the DOM representation of a component has been created or updated.
		   *
		   * @internal
		   */
	
	
		  CallbackQueue.prototype.notifyAll = function notifyAll() {
		    var callbacks = this._callbacks;
		    var contexts = this._contexts;
		    var arg = this._arg;
		    if (callbacks && contexts) {
		      !(callbacks.length === contexts.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;
		      this._callbacks = null;
		      this._contexts = null;
		      for (var i = 0; i < callbacks.length; i++) {
		        callbacks[i].call(contexts[i], arg);
		      }
		      callbacks.length = 0;
		      contexts.length = 0;
		    }
		  };
	
		  CallbackQueue.prototype.checkpoint = function checkpoint() {
		    return this._callbacks ? this._callbacks.length : 0;
		  };
	
		  CallbackQueue.prototype.rollback = function rollback(len) {
		    if (this._callbacks && this._contexts) {
		      this._callbacks.length = len;
		      this._contexts.length = len;
		    }
		  };
	
		  /**
		   * Resets the internal queue.
		   *
		   * @internal
		   */
	
	
		  CallbackQueue.prototype.reset = function reset() {
		    this._callbacks = null;
		    this._contexts = null;
		  };
	
		  /**
		   * `PooledClass` looks for this.
		   */
	
	
		  CallbackQueue.prototype.destructor = function destructor() {
		    this.reset();
		  };
	
		  return CallbackQueue;
		}();
	
		module.exports = PooledClass.addPoolingTo(CallbackQueue);
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 129 */
	/***/ function(module, exports) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * 
		 */
	
		'use strict';
	
		var ReactFeatureFlags = {
		  // When true, call console.time() before and .timeEnd() after each top-level
		  // render (both initial renders and updates). Useful when looking at prod-mode
		  // timeline profiles in Chrome, for example.
		  logTopLevelRenders: false
		};
	
		module.exports = ReactFeatureFlags;
	
	/***/ },
	/* 130 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var ReactRef = __webpack_require__(131);
		var ReactInstrumentation = __webpack_require__(133);
	
		var warning = __webpack_require__(114);
	
		/**
		 * Helper to call ReactRef.attachRefs with this composite component, split out
		 * to avoid allocations in the transaction mount-ready queue.
		 */
		function attachRefs() {
		  ReactRef.attachRefs(this, this._currentElement);
		}
	
		var ReactReconciler = {
	
		  /**
		   * Initializes the component, renders markup, and registers event listeners.
		   *
		   * @param {ReactComponent} internalInstance
		   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
		   * @param {?object} the containing host component instance
		   * @param {?object} info about the host container
		   * @return {?string} Rendered markup to be inserted into the DOM.
		   * @final
		   * @internal
		   */
		  mountComponent: function (internalInstance, transaction, hostParent, hostContainerInfo, context, parentDebugID // 0 in production and for roots
		  ) {
		    if (process.env.NODE_ENV !== 'production') {
		      if (internalInstance._debugID !== 0) {
		        ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement, parentDebugID);
		      }
		    }
		    var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID);
		    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
		      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
		    }
		    if (process.env.NODE_ENV !== 'production') {
		      if (internalInstance._debugID !== 0) {
		        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);
		      }
		    }
		    return markup;
		  },
	
		  /**
		   * Returns a value that can be passed to
		   * ReactComponentEnvironment.replaceNodeWithMarkup.
		   */
		  getHostNode: function (internalInstance) {
		    return internalInstance.getHostNode();
		  },
	
		  /**
		   * Releases any resources allocated by `mountComponent`.
		   *
		   * @final
		   * @internal
		   */
		  unmountComponent: function (internalInstance, safely) {
		    if (process.env.NODE_ENV !== 'production') {
		      if (internalInstance._debugID !== 0) {
		        ReactInstrumentation.debugTool.onBeforeUnmountComponent(internalInstance._debugID);
		      }
		    }
		    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
		    internalInstance.unmountComponent(safely);
		    if (process.env.NODE_ENV !== 'production') {
		      if (internalInstance._debugID !== 0) {
		        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);
		      }
		    }
		  },
	
		  /**
		   * Update a component using a new element.
		   *
		   * @param {ReactComponent} internalInstance
		   * @param {ReactElement} nextElement
		   * @param {ReactReconcileTransaction} transaction
		   * @param {object} context
		   * @internal
		   */
		  receiveComponent: function (internalInstance, nextElement, transaction, context) {
		    var prevElement = internalInstance._currentElement;
	
		    if (nextElement === prevElement && context === internalInstance._context) {
		      // Since elements are immutable after the owner is rendered,
		      // we can do a cheap identity compare here to determine if this is a
		      // superfluous reconcile. It's possible for state to be mutable but such
		      // change should trigger an update of the owner which would recreate
		      // the element. We explicitly check for the existence of an owner since
		      // it's possible for an element created outside a composite to be
		      // deeply mutated and reused.
	
		      // TODO: Bailing out early is just a perf optimization right?
		      // TODO: Removing the return statement should affect correctness?
		      return;
		    }
	
		    if (process.env.NODE_ENV !== 'production') {
		      if (internalInstance._debugID !== 0) {
		        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);
		      }
		    }
	
		    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);
	
		    if (refsChanged) {
		      ReactRef.detachRefs(internalInstance, prevElement);
		    }
	
		    internalInstance.receiveComponent(nextElement, transaction, context);
	
		    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
		      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
		    }
	
		    if (process.env.NODE_ENV !== 'production') {
		      if (internalInstance._debugID !== 0) {
		        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
		      }
		    }
		  },
	
		  /**
		   * Flush any dirty changes in a component.
		   *
		   * @param {ReactComponent} internalInstance
		   * @param {ReactReconcileTransaction} transaction
		   * @internal
		   */
		  performUpdateIfNecessary: function (internalInstance, transaction, updateBatchNumber) {
		    if (internalInstance._updateBatchNumber !== updateBatchNumber) {
		      // The component's enqueued batch number should always be the current
		      // batch or the following one.
		      process.env.NODE_ENV !== 'production' ? warning(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1, 'performUpdateIfNecessary: Unexpected batch number (current %s, ' + 'pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;
		      return;
		    }
		    if (process.env.NODE_ENV !== 'production') {
		      if (internalInstance._debugID !== 0) {
		        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);
		      }
		    }
		    internalInstance.performUpdateIfNecessary(transaction);
		    if (process.env.NODE_ENV !== 'production') {
		      if (internalInstance._debugID !== 0) {
		        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
		      }
		    }
		  }
	
		};
	
		module.exports = ReactReconciler;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 131 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * 
		 */
	
		'use strict';
	
		var ReactOwner = __webpack_require__(132);
	
		var ReactRef = {};
	
		function attachRef(ref, component, owner) {
		  if (typeof ref === 'function') {
		    ref(component.getPublicInstance());
		  } else {
		    // Legacy ref
		    ReactOwner.addComponentAsRefTo(component, ref, owner);
		  }
		}
	
		function detachRef(ref, component, owner) {
		  if (typeof ref === 'function') {
		    ref(null);
		  } else {
		    // Legacy ref
		    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
		  }
		}
	
		ReactRef.attachRefs = function (instance, element) {
		  if (element === null || typeof element !== 'object') {
		    return;
		  }
		  var ref = element.ref;
		  if (ref != null) {
		    attachRef(ref, instance, element._owner);
		  }
		};
	
		ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
		  // If either the owner or a `ref` has changed, make sure the newest owner
		  // has stored a reference to `this`, and the previous owner (if different)
		  // has forgotten the reference to `this`. We use the element instead
		  // of the public this.props because the post processing cannot determine
		  // a ref. The ref conceptually lives on the element.
	
		  // TODO: Should this even be possible? The owner cannot change because
		  // it's forbidden by shouldUpdateReactComponent. The ref can change
		  // if you swap the keys of but not the refs. Reconsider where this check
		  // is made. It probably belongs where the key checking and
		  // instantiateReactComponent is done.
	
		  var prevRef = null;
		  var prevOwner = null;
		  if (prevElement !== null && typeof prevElement === 'object') {
		    prevRef = prevElement.ref;
		    prevOwner = prevElement._owner;
		  }
	
		  var nextRef = null;
		  var nextOwner = null;
		  if (nextElement !== null && typeof nextElement === 'object') {
		    nextRef = nextElement.ref;
		    nextOwner = nextElement._owner;
		  }
	
		  return prevRef !== nextRef ||
		  // If owner changes but we have an unchanged function ref, don't update refs
		  typeof nextRef === 'string' && nextOwner !== prevOwner;
		};
	
		ReactRef.detachRefs = function (instance, element) {
		  if (element === null || typeof element !== 'object') {
		    return;
		  }
		  var ref = element.ref;
		  if (ref != null) {
		    detachRef(ref, instance, element._owner);
		  }
		};
	
		module.exports = ReactRef;
	
	/***/ },
	/* 132 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * 
		 */
	
		'use strict';
	
		var _prodInvariant = __webpack_require__(102);
	
		var invariant = __webpack_require__(104);
	
		/**
		 * @param {?object} object
		 * @return {boolean} True if `object` is a valid owner.
		 * @final
		 */
		function isValidOwner(object) {
		  return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
		}
	
		/**
		 * ReactOwners are capable of storing references to owned components.
		 *
		 * All components are capable of //being// referenced by owner components, but
		 * only ReactOwner components are capable of //referencing// owned components.
		 * The named reference is known as a "ref".
		 *
		 * Refs are available when mounted and updated during reconciliation.
		 *
		 *   var MyComponent = React.createClass({
		 *     render: function() {
		 *       return (
		 *         <div onClick={this.handleClick}>
		 *           <CustomComponent ref="custom" />
		 *         </div>
		 *       );
		 *     },
		 *     handleClick: function() {
		 *       this.refs.custom.handleClick();
		 *     },
		 *     componentDidMount: function() {
		 *       this.refs.custom.initialize();
		 *     }
		 *   });
		 *
		 * Refs should rarely be used. When refs are used, they should only be done to
		 * control data that is not handled by React's data flow.
		 *
		 * @class ReactOwner
		 */
		var ReactOwner = {
		  /**
		   * Adds a component by ref to an owner component.
		   *
		   * @param {ReactComponent} component Component to reference.
		   * @param {string} ref Name by which to refer to the component.
		   * @param {ReactOwner} owner Component on which to record the ref.
		   * @final
		   * @internal
		   */
		  addComponentAsRefTo: function (component, ref, owner) {
		    !isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('119') : void 0;
		    owner.attachRef(ref, component);
		  },
	
		  /**
		   * Removes a component by ref from an owner component.
		   *
		   * @param {ReactComponent} component Component to dereference.
		   * @param {string} ref Name of the ref to remove.
		   * @param {ReactOwner} owner Component on which the ref is recorded.
		   * @final
		   * @internal
		   */
		  removeComponentAsRefFrom: function (component, ref, owner) {
		    !isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('120') : void 0;
		    var ownerPublicInstance = owner.getPublicInstance();
		    // Check that `component`'s owner is still alive and that `component` is still the current ref
		    // because we do not want to detach the ref if another component stole it.
		    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {
		      owner.detachRef(ref);
		    }
		  }
	
		};
	
		module.exports = ReactOwner;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 133 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2016-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * 
		 */
	
		'use strict';
	
		// Trust the developer to only use ReactInstrumentation with a __DEV__ check
	
		var debugTool = null;
	
		if (process.env.NODE_ENV !== 'production') {
		  var ReactDebugTool = __webpack_require__(134);
		  debugTool = ReactDebugTool;
		}
	
		module.exports = { debugTool: debugTool };
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 134 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2016-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * 
		 */
	
		'use strict';
	
		var ReactInvalidSetStateWarningHook = __webpack_require__(135);
		var ReactHostOperationHistoryHook = __webpack_require__(136);
		var ReactComponentTreeHook = __webpack_require__(93);
		var ExecutionEnvironment = __webpack_require__(118);
	
		var performanceNow = __webpack_require__(137);
		var warning = __webpack_require__(114);
	
		var hooks = [];
		var didHookThrowForEvent = {};
	
		function callHook(event, fn, context, arg1, arg2, arg3, arg4, arg5) {
		  try {
		    fn.call(context, arg1, arg2, arg3, arg4, arg5);
		  } catch (e) {
		    process.env.NODE_ENV !== 'production' ? warning(didHookThrowForEvent[event], 'Exception thrown by hook while handling %s: %s', event, e + '\n' + e.stack) : void 0;
		    didHookThrowForEvent[event] = true;
		  }
		}
	
		function emitEvent(event, arg1, arg2, arg3, arg4, arg5) {
		  for (var i = 0; i < hooks.length; i++) {
		    var hook = hooks[i];
		    var fn = hook[event];
		    if (fn) {
		      callHook(event, fn, hook, arg1, arg2, arg3, arg4, arg5);
		    }
		  }
		}
	
		var isProfiling = false;
		var flushHistory = [];
		var lifeCycleTimerStack = [];
		var currentFlushNesting = 0;
		var currentFlushMeasurements = [];
		var currentFlushStartTime = 0;
		var currentTimerDebugID = null;
		var currentTimerStartTime = 0;
		var currentTimerNestedFlushDuration = 0;
		var currentTimerType = null;
	
		var lifeCycleTimerHasWarned = false;
	
		function clearHistory() {
		  ReactComponentTreeHook.purgeUnmountedComponents();
		  ReactHostOperationHistoryHook.clearHistory();
		}
	
		function getTreeSnapshot(registeredIDs) {
		  return registeredIDs.reduce(function (tree, id) {
		    var ownerID = ReactComponentTreeHook.getOwnerID(id);
		    var parentID = ReactComponentTreeHook.getParentID(id);
		    tree[id] = {
		      displayName: ReactComponentTreeHook.getDisplayName(id),
		      text: ReactComponentTreeHook.getText(id),
		      updateCount: ReactComponentTreeHook.getUpdateCount(id),
		      childIDs: ReactComponentTreeHook.getChildIDs(id),
		      // Text nodes don't have owners but this is close enough.
		      ownerID: ownerID || parentID && ReactComponentTreeHook.getOwnerID(parentID) || 0,
		      parentID: parentID
		    };
		    return tree;
		  }, {});
		}
	
		function resetMeasurements() {
		  var previousStartTime = currentFlushStartTime;
		  var previousMeasurements = currentFlushMeasurements;
		  var previousOperations = ReactHostOperationHistoryHook.getHistory();
	
		  if (currentFlushNesting === 0) {
		    currentFlushStartTime = 0;
		    currentFlushMeasurements = [];
		    clearHistory();
		    return;
		  }
	
		  if (previousMeasurements.length || previousOperations.length) {
		    var registeredIDs = ReactComponentTreeHook.getRegisteredIDs();
		    flushHistory.push({
		      duration: performanceNow() - previousStartTime,
		      measurements: previousMeasurements || [],
		      operations: previousOperations || [],
		      treeSnapshot: getTreeSnapshot(registeredIDs)
		    });
		  }
	
		  clearHistory();
		  currentFlushStartTime = performanceNow();
		  currentFlushMeasurements = [];
		}
	
		function checkDebugID(debugID) {
		  var allowRoot = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
	
		  if (allowRoot && debugID === 0) {
		    return;
		  }
		  if (!debugID) {
		    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDebugTool: debugID may not be empty.') : void 0;
		  }
		}
	
		function beginLifeCycleTimer(debugID, timerType) {
		  if (currentFlushNesting === 0) {
		    return;
		  }
		  if (currentTimerType && !lifeCycleTimerHasWarned) {
		    process.env.NODE_ENV !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'Did not expect %s timer to start while %s timer is still in ' + 'progress for %s instance.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
		    lifeCycleTimerHasWarned = true;
		  }
		  currentTimerStartTime = performanceNow();
		  currentTimerNestedFlushDuration = 0;
		  currentTimerDebugID = debugID;
		  currentTimerType = timerType;
		}
	
		function endLifeCycleTimer(debugID, timerType) {
		  if (currentFlushNesting === 0) {
		    return;
		  }
		  if (currentTimerType !== timerType && !lifeCycleTimerHasWarned) {
		    process.env.NODE_ENV !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'We did not expect %s timer to stop while %s timer is still in ' + 'progress for %s instance. Please report this as a bug in React.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
		    lifeCycleTimerHasWarned = true;
		  }
		  if (isProfiling) {
		    currentFlushMeasurements.push({
		      timerType: timerType,
		      instanceID: debugID,
		      duration: performanceNow() - currentTimerStartTime - currentTimerNestedFlushDuration
		    });
		  }
		  currentTimerStartTime = 0;
		  currentTimerNestedFlushDuration = 0;
		  currentTimerDebugID = null;
		  currentTimerType = null;
		}
	
		function pauseCurrentLifeCycleTimer() {
		  var currentTimer = {
		    startTime: currentTimerStartTime,
		    nestedFlushStartTime: performanceNow(),
		    debugID: currentTimerDebugID,
		    timerType: currentTimerType
		  };
		  lifeCycleTimerStack.push(currentTimer);
		  currentTimerStartTime = 0;
		  currentTimerNestedFlushDuration = 0;
		  currentTimerDebugID = null;
		  currentTimerType = null;
		}
	
		function resumeCurrentLifeCycleTimer() {
		  var _lifeCycleTimerStack$ = lifeCycleTimerStack.pop(),
		      startTime = _lifeCycleTimerStack$.startTime,
		      nestedFlushStartTime = _lifeCycleTimerStack$.nestedFlushStartTime,
		      debugID = _lifeCycleTimerStack$.debugID,
		      timerType = _lifeCycleTimerStack$.timerType;
	
		  var nestedFlushDuration = performanceNow() - nestedFlushStartTime;
		  currentTimerStartTime = startTime;
		  currentTimerNestedFlushDuration += nestedFlushDuration;
		  currentTimerDebugID = debugID;
		  currentTimerType = timerType;
		}
	
		var lastMarkTimeStamp = 0;
		var canUsePerformanceMeasure =
		// $FlowFixMe https://github.com/facebook/flow/issues/2345
		typeof performance !== 'undefined' && typeof performance.mark === 'function' && typeof performance.clearMarks === 'function' && typeof performance.measure === 'function' && typeof performance.clearMeasures === 'function';
	
		function shouldMark(debugID) {
		  if (!isProfiling || !canUsePerformanceMeasure) {
		    return false;
		  }
		  var element = ReactComponentTreeHook.getElement(debugID);
		  if (element == null || typeof element !== 'object') {
		    return false;
		  }
		  var isHostElement = typeof element.type === 'string';
		  if (isHostElement) {
		    return false;
		  }
		  return true;
		}
	
		function markBegin(debugID, markType) {
		  if (!shouldMark(debugID)) {
		    return;
		  }
	
		  var markName = debugID + '::' + markType;
		  lastMarkTimeStamp = performanceNow();
		  performance.mark(markName);
		}
	
		function markEnd(debugID, markType) {
		  if (!shouldMark(debugID)) {
		    return;
		  }
	
		  var markName = debugID + '::' + markType;
		  var displayName = ReactComponentTreeHook.getDisplayName(debugID) || 'Unknown';
	
		  // Chrome has an issue of dropping markers recorded too fast:
		  // https://bugs.chromium.org/p/chromium/issues/detail?id=640652
		  // To work around this, we will not report very small measurements.
		  // I determined the magic number by tweaking it back and forth.
		  // 0.05ms was enough to prevent the issue, but I set it to 0.1ms to be safe.
		  // When the bug is fixed, we can `measure()` unconditionally if we want to.
		  var timeStamp = performanceNow();
		  if (timeStamp - lastMarkTimeStamp > 0.1) {
		    var measurementName = displayName + ' [' + markType + ']';
		    performance.measure(measurementName, markName);
		  }
	
		  performance.clearMarks(markName);
		  performance.clearMeasures(measurementName);
		}
	
		var ReactDebugTool = {
		  addHook: function (hook) {
		    hooks.push(hook);
		  },
		  removeHook: function (hook) {
		    for (var i = 0; i < hooks.length; i++) {
		      if (hooks[i] === hook) {
		        hooks.splice(i, 1);
		        i--;
		      }
		    }
		  },
		  isProfiling: function () {
		    return isProfiling;
		  },
		  beginProfiling: function () {
		    if (isProfiling) {
		      return;
		    }
	
		    isProfiling = true;
		    flushHistory.length = 0;
		    resetMeasurements();
		    ReactDebugTool.addHook(ReactHostOperationHistoryHook);
		  },
		  endProfiling: function () {
		    if (!isProfiling) {
		      return;
		    }
	
		    isProfiling = false;
		    resetMeasurements();
		    ReactDebugTool.removeHook(ReactHostOperationHistoryHook);
		  },
		  getFlushHistory: function () {
		    return flushHistory;
		  },
		  onBeginFlush: function () {
		    currentFlushNesting++;
		    resetMeasurements();
		    pauseCurrentLifeCycleTimer();
		    emitEvent('onBeginFlush');
		  },
		  onEndFlush: function () {
		    resetMeasurements();
		    currentFlushNesting--;
		    resumeCurrentLifeCycleTimer();
		    emitEvent('onEndFlush');
		  },
		  onBeginLifeCycleTimer: function (debugID, timerType) {
		    checkDebugID(debugID);
		    emitEvent('onBeginLifeCycleTimer', debugID, timerType);
		    markBegin(debugID, timerType);
		    beginLifeCycleTimer(debugID, timerType);
		  },
		  onEndLifeCycleTimer: function (debugID, timerType) {
		    checkDebugID(debugID);
		    endLifeCycleTimer(debugID, timerType);
		    markEnd(debugID, timerType);
		    emitEvent('onEndLifeCycleTimer', debugID, timerType);
		  },
		  onBeginProcessingChildContext: function () {
		    emitEvent('onBeginProcessingChildContext');
		  },
		  onEndProcessingChildContext: function () {
		    emitEvent('onEndProcessingChildContext');
		  },
		  onHostOperation: function (operation) {
		    checkDebugID(operation.instanceID);
		    emitEvent('onHostOperation', operation);
		  },
		  onSetState: function () {
		    emitEvent('onSetState');
		  },
		  onSetChildren: function (debugID, childDebugIDs) {
		    checkDebugID(debugID);
		    childDebugIDs.forEach(checkDebugID);
		    emitEvent('onSetChildren', debugID, childDebugIDs);
		  },
		  onBeforeMountComponent: function (debugID, element, parentDebugID) {
		    checkDebugID(debugID);
		    checkDebugID(parentDebugID, true);
		    emitEvent('onBeforeMountComponent', debugID, element, parentDebugID);
		    markBegin(debugID, 'mount');
		  },
		  onMountComponent: function (debugID) {
		    checkDebugID(debugID);
		    markEnd(debugID, 'mount');
		    emitEvent('onMountComponent', debugID);
		  },
		  onBeforeUpdateComponent: function (debugID, element) {
		    checkDebugID(debugID);
		    emitEvent('onBeforeUpdateComponent', debugID, element);
		    markBegin(debugID, 'update');
		  },
		  onUpdateComponent: function (debugID) {
		    checkDebugID(debugID);
		    markEnd(debugID, 'update');
		    emitEvent('onUpdateComponent', debugID);
		  },
		  onBeforeUnmountComponent: function (debugID) {
		    checkDebugID(debugID);
		    emitEvent('onBeforeUnmountComponent', debugID);
		    markBegin(debugID, 'unmount');
		  },
		  onUnmountComponent: function (debugID) {
		    checkDebugID(debugID);
		    markEnd(debugID, 'unmount');
		    emitEvent('onUnmountComponent', debugID);
		  },
		  onTestEvent: function () {
		    emitEvent('onTestEvent');
		  }
		};
	
		// TODO remove these when RN/www gets updated
		ReactDebugTool.addDevtool = ReactDebugTool.addHook;
		ReactDebugTool.removeDevtool = ReactDebugTool.removeHook;
	
		ReactDebugTool.addHook(ReactInvalidSetStateWarningHook);
		ReactDebugTool.addHook(ReactComponentTreeHook);
		var url = ExecutionEnvironment.canUseDOM && window.location.href || '';
		if (/[?&]react_perf\b/.test(url)) {
		  ReactDebugTool.beginProfiling();
		}
	
		module.exports = ReactDebugTool;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 135 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2016-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * 
		 */
	
		'use strict';
	
		var warning = __webpack_require__(114);
	
		if (process.env.NODE_ENV !== 'production') {
		  var processingChildContext = false;
	
		  var warnInvalidSetState = function () {
		    process.env.NODE_ENV !== 'production' ? warning(!processingChildContext, 'setState(...): Cannot call setState() inside getChildContext()') : void 0;
		  };
		}
	
		var ReactInvalidSetStateWarningHook = {
		  onBeginProcessingChildContext: function () {
		    processingChildContext = true;
		  },
		  onEndProcessingChildContext: function () {
		    processingChildContext = false;
		  },
		  onSetState: function () {
		    warnInvalidSetState();
		  }
		};
	
		module.exports = ReactInvalidSetStateWarningHook;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 136 */
	/***/ function(module, exports) {
	
		/**
		 * Copyright 2016-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * 
		 */
	
		'use strict';
	
		var history = [];
	
		var ReactHostOperationHistoryHook = {
		  onHostOperation: function (operation) {
		    history.push(operation);
		  },
		  clearHistory: function () {
		    if (ReactHostOperationHistoryHook._preventClearing) {
		      // Should only be used for tests.
		      return;
		    }
	
		    history = [];
		  },
		  getHistory: function () {
		    return history;
		  }
		};
	
		module.exports = ReactHostOperationHistoryHook;
	
	/***/ },
	/* 137 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * @typechecks
		 */
	
		var performance = __webpack_require__(138);
	
		var performanceNow;
	
		/**
		 * Detect if we can use `window.performance.now()` and gracefully fallback to
		 * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now
		 * because of Facebook's testing infrastructure.
		 */
		if (performance.now) {
		  performanceNow = function performanceNow() {
		    return performance.now();
		  };
		} else {
		  performanceNow = function performanceNow() {
		    return Date.now();
		  };
		}
	
		module.exports = performanceNow;
	
	/***/ },
	/* 138 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * @typechecks
		 */
	
		'use strict';
	
		var ExecutionEnvironment = __webpack_require__(118);
	
		var performance;
	
		if (ExecutionEnvironment.canUseDOM) {
		  performance = window.performance || window.msPerformance || window.webkitPerformance;
		}
	
		module.exports = performance || {};
	
	/***/ },
	/* 139 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * 
		 */
	
		'use strict';
	
		var _prodInvariant = __webpack_require__(102);
	
		var invariant = __webpack_require__(104);
	
		var OBSERVED_ERROR = {};
	
		/**
		 * `Transaction` creates a black box that is able to wrap any method such that
		 * certain invariants are maintained before and after the method is invoked
		 * (Even if an exception is thrown while invoking the wrapped method). Whoever
		 * instantiates a transaction can provide enforcers of the invariants at
		 * creation time. The `Transaction` class itself will supply one additional
		 * automatic invariant for you - the invariant that any transaction instance
		 * should not be run while it is already being run. You would typically create a
		 * single instance of a `Transaction` for reuse multiple times, that potentially
		 * is used to wrap several different methods. Wrappers are extremely simple -
		 * they only require implementing two methods.
		 *
		 * <pre>
		 *                       wrappers (injected at creation time)
		 *                                      +        +
		 *                                      |        |
		 *                    +-----------------|--------|--------------+
		 *                    |                 v        |              |
		 *                    |      +---------------+   |              |
		 *                    |   +--|    wrapper1   |---|----+         |
		 *                    |   |  +---------------+   v    |         |
		 *                    |   |          +-------------+  |         |
		 *                    |   |     +----|   wrapper2  |--------+   |
		 *                    |   |     |    +-------------+  |     |   |
		 *                    |   |     |                     |     |   |
		 *                    |   v     v                     v     v   | wrapper
		 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
		 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
		 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
		 *                    | |   | |   |   |         |   |   | |   | |
		 *                    | |   | |   |   |         |   |   | |   | |
		 *                    | |   | |   |   |         |   |   | |   | |
		 *                    | +---+ +---+   +---------+   +---+ +---+ |
		 *                    |  initialize                    close    |
		 *                    +-----------------------------------------+
		 * </pre>
		 *
		 * Use cases:
		 * - Preserving the input selection ranges before/after reconciliation.
		 *   Restoring selection even in the event of an unexpected error.
		 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
		 *   while guaranteeing that afterwards, the event system is reactivated.
		 * - Flushing a queue of collected DOM mutations to the main UI thread after a
		 *   reconciliation takes place in a worker thread.
		 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
		 *   content.
		 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
		 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
		 * - (Future use case): Layout calculations before and after DOM updates.
		 *
		 * Transactional plugin API:
		 * - A module that has an `initialize` method that returns any precomputation.
		 * - and a `close` method that accepts the precomputation. `close` is invoked
		 *   when the wrapped process is completed, or has failed.
		 *
		 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
		 * that implement `initialize` and `close`.
		 * @return {Transaction} Single transaction for reuse in thread.
		 *
		 * @class Transaction
		 */
		var TransactionImpl = {
		  /**
		   * Sets up this instance so that it is prepared for collecting metrics. Does
		   * so such that this setup method may be used on an instance that is already
		   * initialized, in a way that does not consume additional memory upon reuse.
		   * That can be useful if you decide to make your subclass of this mixin a
		   * "PooledClass".
		   */
		  reinitializeTransaction: function () {
		    this.transactionWrappers = this.getTransactionWrappers();
		    if (this.wrapperInitData) {
		      this.wrapperInitData.length = 0;
		    } else {
		      this.wrapperInitData = [];
		    }
		    this._isInTransaction = false;
		  },
	
		  _isInTransaction: false,
	
		  /**
		   * @abstract
		   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
		   */
		  getTransactionWrappers: null,
	
		  isInTransaction: function () {
		    return !!this._isInTransaction;
		  },
	
		  /**
		   * Executes the function within a safety window. Use this for the top level
		   * methods that result in large amounts of computation/mutations that would
		   * need to be safety checked. The optional arguments helps prevent the need
		   * to bind in many cases.
		   *
		   * @param {function} method Member of scope to call.
		   * @param {Object} scope Scope to invoke from.
		   * @param {Object?=} a Argument to pass to the method.
		   * @param {Object?=} b Argument to pass to the method.
		   * @param {Object?=} c Argument to pass to the method.
		   * @param {Object?=} d Argument to pass to the method.
		   * @param {Object?=} e Argument to pass to the method.
		   * @param {Object?=} f Argument to pass to the method.
		   *
		   * @return {*} Return value from `method`.
		   */
		  perform: function (method, scope, a, b, c, d, e, f) {
		    !!this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.') : _prodInvariant('27') : void 0;
		    var errorThrown;
		    var ret;
		    try {
		      this._isInTransaction = true;
		      // Catching errors makes debugging more difficult, so we start with
		      // errorThrown set to true before setting it to false after calling
		      // close -- if it's still set to true in the finally block, it means
		      // one of these calls threw.
		      errorThrown = true;
		      this.initializeAll(0);
		      ret = method.call(scope, a, b, c, d, e, f);
		      errorThrown = false;
		    } finally {
		      try {
		        if (errorThrown) {
		          // If `method` throws, prefer to show that stack trace over any thrown
		          // by invoking `closeAll`.
		          try {
		            this.closeAll(0);
		          } catch (err) {}
		        } else {
		          // Since `method` didn't throw, we don't want to silence the exception
		          // here.
		          this.closeAll(0);
		        }
		      } finally {
		        this._isInTransaction = false;
		      }
		    }
		    return ret;
		  },
	
		  initializeAll: function (startIndex) {
		    var transactionWrappers = this.transactionWrappers;
		    for (var i = startIndex; i < transactionWrappers.length; i++) {
		      var wrapper = transactionWrappers[i];
		      try {
		        // Catching errors makes debugging more difficult, so we start with the
		        // OBSERVED_ERROR state before overwriting it with the real return value
		        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
		        // block, it means wrapper.initialize threw.
		        this.wrapperInitData[i] = OBSERVED_ERROR;
		        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
		      } finally {
		        if (this.wrapperInitData[i] === OBSERVED_ERROR) {
		          // The initializer for wrapper i threw an error; initialize the
		          // remaining wrappers but silence any exceptions from them to ensure
		          // that the first error is the one to bubble up.
		          try {
		            this.initializeAll(i + 1);
		          } catch (err) {}
		        }
		      }
		    }
		  },
	
		  /**
		   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
		   * them the respective return values of `this.transactionWrappers.init[i]`
		   * (`close`rs that correspond to initializers that failed will not be
		   * invoked).
		   */
		  closeAll: function (startIndex) {
		    !this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : _prodInvariant('28') : void 0;
		    var transactionWrappers = this.transactionWrappers;
		    for (var i = startIndex; i < transactionWrappers.length; i++) {
		      var wrapper = transactionWrappers[i];
		      var initData = this.wrapperInitData[i];
		      var errorThrown;
		      try {
		        // Catching errors makes debugging more difficult, so we start with
		        // errorThrown set to true before setting it to false after calling
		        // close -- if it's still set to true in the finally block, it means
		        // wrapper.close threw.
		        errorThrown = true;
		        if (initData !== OBSERVED_ERROR && wrapper.close) {
		          wrapper.close.call(this, initData);
		        }
		        errorThrown = false;
		      } finally {
		        if (errorThrown) {
		          // The closer for wrapper i threw an error; close the remaining
		          // wrappers but silence any exceptions from them to ensure that the
		          // first error is the one to bubble up.
		          try {
		            this.closeAll(i + 1);
		          } catch (e) {}
		        }
		      }
		    }
		    this.wrapperInitData.length = 0;
		  }
		};
	
		module.exports = TransactionImpl;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 140 */
	/***/ function(module, exports) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		/**
		 * Gets the target node from a native browser event by accounting for
		 * inconsistencies in browser DOM APIs.
		 *
		 * @param {object} nativeEvent Native browser event.
		 * @return {DOMEventTarget} Target node.
		 */
	
		function getEventTarget(nativeEvent) {
		  var target = nativeEvent.target || nativeEvent.srcElement || window;
	
		  // Normalize SVG <use> element events #4963
		  if (target.correspondingUseElement) {
		    target = target.correspondingUseElement;
		  }
	
		  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
		  // @see http://www.quirksmode.org/js/events_properties.html
		  return target.nodeType === 3 ? target.parentNode : target;
		}
	
		module.exports = getEventTarget;
	
	/***/ },
	/* 141 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var ExecutionEnvironment = __webpack_require__(118);
	
		var useHasFeature;
		if (ExecutionEnvironment.canUseDOM) {
		  useHasFeature = document.implementation && document.implementation.hasFeature &&
		  // always returns true in newer browsers as per the standard.
		  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
		  document.implementation.hasFeature('', '') !== true;
		}
	
		/**
		 * Checks if an event is supported in the current execution environment.
		 *
		 * NOTE: This will not work correctly for non-generic events such as `change`,
		 * `reset`, `load`, `error`, and `select`.
		 *
		 * Borrows from Modernizr.
		 *
		 * @param {string} eventNameSuffix Event name, e.g. "click".
		 * @param {?boolean} capture Check if the capture phase is supported.
		 * @return {boolean} True if the event is supported.
		 * @internal
		 * @license Modernizr 3.0.0pre (Custom Build) | MIT
		 */
		function isEventSupported(eventNameSuffix, capture) {
		  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
		    return false;
		  }
	
		  var eventName = 'on' + eventNameSuffix;
		  var isSupported = eventName in document;
	
		  if (!isSupported) {
		    var element = document.createElement('div');
		    element.setAttribute(eventName, 'return;');
		    isSupported = typeof element[eventName] === 'function';
		  }
	
		  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
		    // This is the only way to test support for the `wheel` event in IE9+.
		    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
		  }
	
		  return isSupported;
		}
	
		module.exports = isEventSupported;
	
	/***/ },
	/* 142 */
	/***/ function(module, exports) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * 
		 */
	
		'use strict';
	
		/**
		 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
		 */
	
		var supportedInputTypes = {
		  'color': true,
		  'date': true,
		  'datetime': true,
		  'datetime-local': true,
		  'email': true,
		  'month': true,
		  'number': true,
		  'password': true,
		  'range': true,
		  'search': true,
		  'tel': true,
		  'text': true,
		  'time': true,
		  'url': true,
		  'week': true
		};
	
		function isTextInputElement(elem) {
		  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	
		  if (nodeName === 'input') {
		    return !!supportedInputTypes[elem.type];
		  }
	
		  if (nodeName === 'textarea') {
		    return true;
		  }
	
		  return false;
		}
	
		module.exports = isTextInputElement;
	
	/***/ },
	/* 143 */
	/***/ function(module, exports) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		/**
		 * Module that is injectable into `EventPluginHub`, that specifies a
		 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
		 * plugins, without having to package every one of them. This is better than
		 * having plugins be ordered in the same order that they are injected because
		 * that ordering would be influenced by the packaging order.
		 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
		 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
		 */
	
		var DefaultEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'TapEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];
	
		module.exports = DefaultEventPluginOrder;
	
	/***/ },
	/* 144 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var EventPropagators = __webpack_require__(109);
		var ReactDOMComponentTree = __webpack_require__(101);
		var SyntheticMouseEvent = __webpack_require__(145);
	
		var eventTypes = {
		  mouseEnter: {
		    registrationName: 'onMouseEnter',
		    dependencies: ['topMouseOut', 'topMouseOver']
		  },
		  mouseLeave: {
		    registrationName: 'onMouseLeave',
		    dependencies: ['topMouseOut', 'topMouseOver']
		  }
		};
	
		var EnterLeaveEventPlugin = {
	
		  eventTypes: eventTypes,
	
		  /**
		   * For almost every interaction we care about, there will be both a top-level
		   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
		   * we do not extract duplicate events. However, moving the mouse into the
		   * browser from outside will not fire a `mouseout` event. In this case, we use
		   * the `mouseover` top-level event.
		   */
		  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
		    if (topLevelType === 'topMouseOver' && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
		      return null;
		    }
		    if (topLevelType !== 'topMouseOut' && topLevelType !== 'topMouseOver') {
		      // Must not be a mouse in or mouse out - ignoring.
		      return null;
		    }
	
		    var win;
		    if (nativeEventTarget.window === nativeEventTarget) {
		      // `nativeEventTarget` is probably a window object.
		      win = nativeEventTarget;
		    } else {
		      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
		      var doc = nativeEventTarget.ownerDocument;
		      if (doc) {
		        win = doc.defaultView || doc.parentWindow;
		      } else {
		        win = window;
		      }
		    }
	
		    var from;
		    var to;
		    if (topLevelType === 'topMouseOut') {
		      from = targetInst;
		      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
		      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;
		    } else {
		      // Moving to a node from outside the window.
		      from = null;
		      to = targetInst;
		    }
	
		    if (from === to) {
		      // Nothing pertains to our managed components.
		      return null;
		    }
	
		    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);
		    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);
	
		    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);
		    leave.type = 'mouseleave';
		    leave.target = fromNode;
		    leave.relatedTarget = toNode;
	
		    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);
		    enter.type = 'mouseenter';
		    enter.target = toNode;
		    enter.relatedTarget = fromNode;
	
		    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);
	
		    return [leave, enter];
		  }
	
		};
	
		module.exports = EnterLeaveEventPlugin;
	
	/***/ },
	/* 145 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var SyntheticUIEvent = __webpack_require__(146);
		var ViewportMetrics = __webpack_require__(147);
	
		var getEventModifierState = __webpack_require__(148);
	
		/**
		 * @interface MouseEvent
		 * @see http://www.w3.org/TR/DOM-Level-3-Events/
		 */
		var MouseEventInterface = {
		  screenX: null,
		  screenY: null,
		  clientX: null,
		  clientY: null,
		  ctrlKey: null,
		  shiftKey: null,
		  altKey: null,
		  metaKey: null,
		  getModifierState: getEventModifierState,
		  button: function (event) {
		    // Webkit, Firefox, IE9+
		    // which:  1 2 3
		    // button: 0 1 2 (standard)
		    var button = event.button;
		    if ('which' in event) {
		      return button;
		    }
		    // IE<9
		    // which:  undefined
		    // button: 0 0 0
		    // button: 1 4 2 (onmouseup)
		    return button === 2 ? 2 : button === 4 ? 1 : 0;
		  },
		  buttons: null,
		  relatedTarget: function (event) {
		    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
		  },
		  // "Proprietary" Interface.
		  pageX: function (event) {
		    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
		  },
		  pageY: function (event) {
		    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
		  }
		};
	
		/**
		 * @param {object} dispatchConfig Configuration used to dispatch this event.
		 * @param {string} dispatchMarker Marker identifying the event target.
		 * @param {object} nativeEvent Native browser event.
		 * @extends {SyntheticUIEvent}
		 */
		function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
		  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
		}
	
		SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);
	
		module.exports = SyntheticMouseEvent;
	
	/***/ },
	/* 146 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var SyntheticEvent = __webpack_require__(124);
	
		var getEventTarget = __webpack_require__(140);
	
		/**
		 * @interface UIEvent
		 * @see http://www.w3.org/TR/DOM-Level-3-Events/
		 */
		var UIEventInterface = {
		  view: function (event) {
		    if (event.view) {
		      return event.view;
		    }
	
		    var target = getEventTarget(event);
		    if (target.window === target) {
		      // target is a window object
		      return target;
		    }
	
		    var doc = target.ownerDocument;
		    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
		    if (doc) {
		      return doc.defaultView || doc.parentWindow;
		    } else {
		      return window;
		    }
		  },
		  detail: function (event) {
		    return event.detail || 0;
		  }
		};
	
		/**
		 * @param {object} dispatchConfig Configuration used to dispatch this event.
		 * @param {string} dispatchMarker Marker identifying the event target.
		 * @param {object} nativeEvent Native browser event.
		 * @extends {SyntheticEvent}
		 */
		function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
		  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
		}
	
		SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);
	
		module.exports = SyntheticUIEvent;
	
	/***/ },
	/* 147 */
	/***/ function(module, exports) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var ViewportMetrics = {
	
		  currentScrollLeft: 0,
	
		  currentScrollTop: 0,
	
		  refreshScrollValues: function (scrollPosition) {
		    ViewportMetrics.currentScrollLeft = scrollPosition.x;
		    ViewportMetrics.currentScrollTop = scrollPosition.y;
		  }
	
		};
	
		module.exports = ViewportMetrics;
	
	/***/ },
	/* 148 */
	/***/ function(module, exports) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		/**
		 * Translation from modifier key to the associated property in the event.
		 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
		 */
	
		var modifierKeyToProp = {
		  'Alt': 'altKey',
		  'Control': 'ctrlKey',
		  'Meta': 'metaKey',
		  'Shift': 'shiftKey'
		};
	
		// IE8 does not implement getModifierState so we simply map it to the only
		// modifier keys exposed by the event itself, does not support Lock-keys.
		// Currently, all major browsers except Chrome seems to support Lock-keys.
		function modifierStateGetter(keyArg) {
		  var syntheticEvent = this;
		  var nativeEvent = syntheticEvent.nativeEvent;
		  if (nativeEvent.getModifierState) {
		    return nativeEvent.getModifierState(keyArg);
		  }
		  var keyProp = modifierKeyToProp[keyArg];
		  return keyProp ? !!nativeEvent[keyProp] : false;
		}
	
		function getEventModifierState(nativeEvent) {
		  return modifierStateGetter;
		}
	
		module.exports = getEventModifierState;
	
	/***/ },
	/* 149 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var DOMProperty = __webpack_require__(103);
	
		var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
		var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
		var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
		var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
		var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;
	
		var HTMLDOMPropertyConfig = {
		  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),
		  Properties: {
		    /**
		     * Standard Properties
		     */
		    accept: 0,
		    acceptCharset: 0,
		    accessKey: 0,
		    action: 0,
		    allowFullScreen: HAS_BOOLEAN_VALUE,
		    allowTransparency: 0,
		    alt: 0,
		    // specifies target context for links with `preload` type
		    as: 0,
		    async: HAS_BOOLEAN_VALUE,
		    autoComplete: 0,
		    // autoFocus is polyfilled/normalized by AutoFocusUtils
		    // autoFocus: HAS_BOOLEAN_VALUE,
		    autoPlay: HAS_BOOLEAN_VALUE,
		    capture: HAS_BOOLEAN_VALUE,
		    cellPadding: 0,
		    cellSpacing: 0,
		    charSet: 0,
		    challenge: 0,
		    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
		    cite: 0,
		    classID: 0,
		    className: 0,
		    cols: HAS_POSITIVE_NUMERIC_VALUE,
		    colSpan: 0,
		    content: 0,
		    contentEditable: 0,
		    contextMenu: 0,
		    controls: HAS_BOOLEAN_VALUE,
		    coords: 0,
		    crossOrigin: 0,
		    data: 0, // For `<object />` acts as `src`.
		    dateTime: 0,
		    'default': HAS_BOOLEAN_VALUE,
		    defer: HAS_BOOLEAN_VALUE,
		    dir: 0,
		    disabled: HAS_BOOLEAN_VALUE,
		    download: HAS_OVERLOADED_BOOLEAN_VALUE,
		    draggable: 0,
		    encType: 0,
		    form: 0,
		    formAction: 0,
		    formEncType: 0,
		    formMethod: 0,
		    formNoValidate: HAS_BOOLEAN_VALUE,
		    formTarget: 0,
		    frameBorder: 0,
		    headers: 0,
		    height: 0,
		    hidden: HAS_BOOLEAN_VALUE,
		    high: 0,
		    href: 0,
		    hrefLang: 0,
		    htmlFor: 0,
		    httpEquiv: 0,
		    icon: 0,
		    id: 0,
		    inputMode: 0,
		    integrity: 0,
		    is: 0,
		    keyParams: 0,
		    keyType: 0,
		    kind: 0,
		    label: 0,
		    lang: 0,
		    list: 0,
		    loop: HAS_BOOLEAN_VALUE,
		    low: 0,
		    manifest: 0,
		    marginHeight: 0,
		    marginWidth: 0,
		    max: 0,
		    maxLength: 0,
		    media: 0,
		    mediaGroup: 0,
		    method: 0,
		    min: 0,
		    minLength: 0,
		    // Caution; `option.selected` is not updated if `select.multiple` is
		    // disabled with `removeAttribute`.
		    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
		    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
		    name: 0,
		    nonce: 0,
		    noValidate: HAS_BOOLEAN_VALUE,
		    open: HAS_BOOLEAN_VALUE,
		    optimum: 0,
		    pattern: 0,
		    placeholder: 0,
		    playsInline: HAS_BOOLEAN_VALUE,
		    poster: 0,
		    preload: 0,
		    profile: 0,
		    radioGroup: 0,
		    readOnly: HAS_BOOLEAN_VALUE,
		    referrerPolicy: 0,
		    rel: 0,
		    required: HAS_BOOLEAN_VALUE,
		    reversed: HAS_BOOLEAN_VALUE,
		    role: 0,
		    rows: HAS_POSITIVE_NUMERIC_VALUE,
		    rowSpan: HAS_NUMERIC_VALUE,
		    sandbox: 0,
		    scope: 0,
		    scoped: HAS_BOOLEAN_VALUE,
		    scrolling: 0,
		    seamless: HAS_BOOLEAN_VALUE,
		    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
		    shape: 0,
		    size: HAS_POSITIVE_NUMERIC_VALUE,
		    sizes: 0,
		    span: HAS_POSITIVE_NUMERIC_VALUE,
		    spellCheck: 0,
		    src: 0,
		    srcDoc: 0,
		    srcLang: 0,
		    srcSet: 0,
		    start: HAS_NUMERIC_VALUE,
		    step: 0,
		    style: 0,
		    summary: 0,
		    tabIndex: 0,
		    target: 0,
		    title: 0,
		    // Setting .type throws on non-<input> tags
		    type: 0,
		    useMap: 0,
		    value: 0,
		    width: 0,
		    wmode: 0,
		    wrap: 0,
	
		    /**
		     * RDFa Properties
		     */
		    about: 0,
		    datatype: 0,
		    inlist: 0,
		    prefix: 0,
		    // property is also supported for OpenGraph in meta tags.
		    property: 0,
		    resource: 0,
		    'typeof': 0,
		    vocab: 0,
	
		    /**
		     * Non-standard Properties
		     */
		    // autoCapitalize and autoCorrect are supported in Mobile Safari for
		    // keyboard hints.
		    autoCapitalize: 0,
		    autoCorrect: 0,
		    // autoSave allows WebKit/Blink to persist values of input fields on page reloads
		    autoSave: 0,
		    // color is for Safari mask-icon link
		    color: 0,
		    // itemProp, itemScope, itemType are for
		    // Microdata support. See http://schema.org/docs/gs.html
		    itemProp: 0,
		    itemScope: HAS_BOOLEAN_VALUE,
		    itemType: 0,
		    // itemID and itemRef are for Microdata support as well but
		    // only specified in the WHATWG spec document. See
		    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
		    itemID: 0,
		    itemRef: 0,
		    // results show looking glass icon and recent searches on input
		    // search fields in WebKit/Blink
		    results: 0,
		    // IE-only attribute that specifies security restrictions on an iframe
		    // as an alternative to the sandbox attribute on IE<10
		    security: 0,
		    // IE-only attribute that controls focus behavior
		    unselectable: 0
		  },
		  DOMAttributeNames: {
		    acceptCharset: 'accept-charset',
		    className: 'class',
		    htmlFor: 'for',
		    httpEquiv: 'http-equiv'
		  },
		  DOMPropertyNames: {}
		};
	
		module.exports = HTMLDOMPropertyConfig;
	
	/***/ },
	/* 150 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var DOMChildrenOperations = __webpack_require__(151);
		var ReactDOMIDOperations = __webpack_require__(162);
	
		/**
		 * Abstracts away all functionality of the reconciler that requires knowledge of
		 * the browser context. TODO: These callers should be refactored to avoid the
		 * need for this injection.
		 */
		var ReactComponentBrowserEnvironment = {
	
		  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,
	
		  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup
	
		};
	
		module.exports = ReactComponentBrowserEnvironment;
	
	/***/ },
	/* 151 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var DOMLazyTree = __webpack_require__(152);
		var Danger = __webpack_require__(158);
		var ReactDOMComponentTree = __webpack_require__(101);
		var ReactInstrumentation = __webpack_require__(133);
	
		var createMicrosoftUnsafeLocalFunction = __webpack_require__(155);
		var setInnerHTML = __webpack_require__(154);
		var setTextContent = __webpack_require__(156);
	
		function getNodeAfter(parentNode, node) {
		  // Special case for text components, which return [open, close] comments
		  // from getHostNode.
		  if (Array.isArray(node)) {
		    node = node[1];
		  }
		  return node ? node.nextSibling : parentNode.firstChild;
		}
	
		/**
		 * Inserts `childNode` as a child of `parentNode` at the `index`.
		 *
		 * @param {DOMElement} parentNode Parent node in which to insert.
		 * @param {DOMElement} childNode Child node to insert.
		 * @param {number} index Index at which to insert the child.
		 * @internal
		 */
		var insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {
		  // We rely exclusively on `insertBefore(node, null)` instead of also using
		  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so
		  // we are careful to use `null`.)
		  parentNode.insertBefore(childNode, referenceNode);
		});
	
		function insertLazyTreeChildAt(parentNode, childTree, referenceNode) {
		  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);
		}
	
		function moveChild(parentNode, childNode, referenceNode) {
		  if (Array.isArray(childNode)) {
		    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);
		  } else {
		    insertChildAt(parentNode, childNode, referenceNode);
		  }
		}
	
		function removeChild(parentNode, childNode) {
		  if (Array.isArray(childNode)) {
		    var closingComment = childNode[1];
		    childNode = childNode[0];
		    removeDelimitedText(parentNode, childNode, closingComment);
		    parentNode.removeChild(closingComment);
		  }
		  parentNode.removeChild(childNode);
		}
	
		function moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {
		  var node = openingComment;
		  while (true) {
		    var nextNode = node.nextSibling;
		    insertChildAt(parentNode, node, referenceNode);
		    if (node === closingComment) {
		      break;
		    }
		    node = nextNode;
		  }
		}
	
		function removeDelimitedText(parentNode, startNode, closingComment) {
		  while (true) {
		    var node = startNode.nextSibling;
		    if (node === closingComment) {
		      // The closing comment is removed by ReactMultiChild.
		      break;
		    } else {
		      parentNode.removeChild(node);
		    }
		  }
		}
	
		function replaceDelimitedText(openingComment, closingComment, stringText) {
		  var parentNode = openingComment.parentNode;
		  var nodeAfterComment = openingComment.nextSibling;
		  if (nodeAfterComment === closingComment) {
		    // There are no text nodes between the opening and closing comments; insert
		    // a new one if stringText isn't empty.
		    if (stringText) {
		      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);
		    }
		  } else {
		    if (stringText) {
		      // Set the text content of the first node after the opening comment, and
		      // remove all following nodes up until the closing comment.
		      setTextContent(nodeAfterComment, stringText);
		      removeDelimitedText(parentNode, nodeAfterComment, closingComment);
		    } else {
		      removeDelimitedText(parentNode, openingComment, closingComment);
		    }
		  }
	
		  if (process.env.NODE_ENV !== 'production') {
		    ReactInstrumentation.debugTool.onHostOperation({
		      instanceID: ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID,
		      type: 'replace text',
		      payload: stringText
		    });
		  }
		}
	
		var dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;
		if (process.env.NODE_ENV !== 'production') {
		  dangerouslyReplaceNodeWithMarkup = function (oldChild, markup, prevInstance) {
		    Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);
		    if (prevInstance._debugID !== 0) {
		      ReactInstrumentation.debugTool.onHostOperation({
		        instanceID: prevInstance._debugID,
		        type: 'replace with',
		        payload: markup.toString()
		      });
		    } else {
		      var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);
		      if (nextInstance._debugID !== 0) {
		        ReactInstrumentation.debugTool.onHostOperation({
		          instanceID: nextInstance._debugID,
		          type: 'mount',
		          payload: markup.toString()
		        });
		      }
		    }
		  };
		}
	
		/**
		 * Operations for updating with DOM children.
		 */
		var DOMChildrenOperations = {
	
		  dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,
	
		  replaceDelimitedText: replaceDelimitedText,
	
		  /**
		   * Updates a component's children by processing a series of updates. The
		   * update configurations are each expected to have a `parentNode` property.
		   *
		   * @param {array<object>} updates List of update configurations.
		   * @internal
		   */
		  processUpdates: function (parentNode, updates) {
		    if (process.env.NODE_ENV !== 'production') {
		      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;
		    }
	
		    for (var k = 0; k < updates.length; k++) {
		      var update = updates[k];
		      switch (update.type) {
		        case 'INSERT_MARKUP':
		          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));
		          if (process.env.NODE_ENV !== 'production') {
		            ReactInstrumentation.debugTool.onHostOperation({
		              instanceID: parentNodeDebugID,
		              type: 'insert child',
		              payload: { toIndex: update.toIndex, content: update.content.toString() }
		            });
		          }
		          break;
		        case 'MOVE_EXISTING':
		          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));
		          if (process.env.NODE_ENV !== 'production') {
		            ReactInstrumentation.debugTool.onHostOperation({
		              instanceID: parentNodeDebugID,
		              type: 'move child',
		              payload: { fromIndex: update.fromIndex, toIndex: update.toIndex }
		            });
		          }
		          break;
		        case 'SET_MARKUP':
		          setInnerHTML(parentNode, update.content);
		          if (process.env.NODE_ENV !== 'production') {
		            ReactInstrumentation.debugTool.onHostOperation({
		              instanceID: parentNodeDebugID,
		              type: 'replace children',
		              payload: update.content.toString()
		            });
		          }
		          break;
		        case 'TEXT_CONTENT':
		          setTextContent(parentNode, update.content);
		          if (process.env.NODE_ENV !== 'production') {
		            ReactInstrumentation.debugTool.onHostOperation({
		              instanceID: parentNodeDebugID,
		              type: 'replace text',
		              payload: update.content.toString()
		            });
		          }
		          break;
		        case 'REMOVE_NODE':
		          removeChild(parentNode, update.fromNode);
		          if (process.env.NODE_ENV !== 'production') {
		            ReactInstrumentation.debugTool.onHostOperation({
		              instanceID: parentNodeDebugID,
		              type: 'remove child',
		              payload: { fromIndex: update.fromIndex }
		            });
		          }
		          break;
		      }
		    }
		  }
	
		};
	
		module.exports = DOMChildrenOperations;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 152 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright 2015-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var DOMNamespaces = __webpack_require__(153);
		var setInnerHTML = __webpack_require__(154);
	
		var createMicrosoftUnsafeLocalFunction = __webpack_require__(155);
		var setTextContent = __webpack_require__(156);
	
		var ELEMENT_NODE_TYPE = 1;
		var DOCUMENT_FRAGMENT_NODE_TYPE = 11;
	
		/**
		 * In IE (8-11) and Edge, appending nodes with no children is dramatically
		 * faster than appending a full subtree, so we essentially queue up the
		 * .appendChild calls here and apply them so each node is added to its parent
		 * before any children are added.
		 *
		 * In other browsers, doing so is slower or neutral compared to the other order
		 * (in Firefox, twice as slow) so we only do this inversion in IE.
		 *
		 * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.
		 */
		var enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\bEdge\/\d/.test(navigator.userAgent);
	
		function insertTreeChildren(tree) {
		  if (!enableLazy) {
		    return;
		  }
		  var node = tree.node;
		  var children = tree.children;
		  if (children.length) {
		    for (var i = 0; i < children.length; i++) {
		      insertTreeBefore(node, children[i], null);
		    }
		  } else if (tree.html != null) {
		    setInnerHTML(node, tree.html);
		  } else if (tree.text != null) {
		    setTextContent(node, tree.text);
		  }
		}
	
		var insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {
		  // DocumentFragments aren't actually part of the DOM after insertion so
		  // appending children won't update the DOM. We need to ensure the fragment
		  // is properly populated first, breaking out of our lazy approach for just
		  // this level. Also, some <object> plugins (like Flash Player) will read
		  // <param> nodes immediately upon insertion into the DOM, so <object>
		  // must also be populated prior to insertion into the DOM.
		  if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {
		    insertTreeChildren(tree);
		    parentNode.insertBefore(tree.node, referenceNode);
		  } else {
		    parentNode.insertBefore(tree.node, referenceNode);
		    insertTreeChildren(tree);
		  }
		});
	
		function replaceChildWithTree(oldNode, newTree) {
		  oldNode.parentNode.replaceChild(newTree.node, oldNode);
		  insertTreeChildren(newTree);
		}
	
		function queueChild(parentTree, childTree) {
		  if (enableLazy) {
		    parentTree.children.push(childTree);
		  } else {
		    parentTree.node.appendChild(childTree.node);
		  }
		}
	
		function queueHTML(tree, html) {
		  if (enableLazy) {
		    tree.html = html;
		  } else {
		    setInnerHTML(tree.node, html);
		  }
		}
	
		function queueText(tree, text) {
		  if (enableLazy) {
		    tree.text = text;
		  } else {
		    setTextContent(tree.node, text);
		  }
		}
	
		function toString() {
		  return this.node.nodeName;
		}
	
		function DOMLazyTree(node) {
		  return {
		    node: node,
		    children: [],
		    html: null,
		    text: null,
		    toString: toString
		  };
		}
	
		DOMLazyTree.insertTreeBefore = insertTreeBefore;
		DOMLazyTree.replaceChildWithTree = replaceChildWithTree;
		DOMLazyTree.queueChild = queueChild;
		DOMLazyTree.queueHTML = queueHTML;
		DOMLazyTree.queueText = queueText;
	
		module.exports = DOMLazyTree;
	
	/***/ },
	/* 153 */
	/***/ function(module, exports) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var DOMNamespaces = {
		  html: 'http://www.w3.org/1999/xhtml',
		  mathml: 'http://www.w3.org/1998/Math/MathML',
		  svg: 'http://www.w3.org/2000/svg'
		};
	
		module.exports = DOMNamespaces;
	
	/***/ },
	/* 154 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var ExecutionEnvironment = __webpack_require__(118);
		var DOMNamespaces = __webpack_require__(153);
	
		var WHITESPACE_TEST = /^[ \r\n\t\f]/;
		var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;
	
		var createMicrosoftUnsafeLocalFunction = __webpack_require__(155);
	
		// SVG temp container for IE lacking innerHTML
		var reusableSVGContainer;
	
		/**
		 * Set the innerHTML property of a node, ensuring that whitespace is preserved
		 * even in IE8.
		 *
		 * @param {DOMElement} node
		 * @param {string} html
		 * @internal
		 */
		var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
		  // IE does not have innerHTML for SVG nodes, so instead we inject the
		  // new markup in a temp node and then move the child nodes across into
		  // the target node
		  if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {
		    reusableSVGContainer = reusableSVGContainer || document.createElement('div');
		    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
		    var svgNode = reusableSVGContainer.firstChild;
		    while (svgNode.firstChild) {
		      node.appendChild(svgNode.firstChild);
		    }
		  } else {
		    node.innerHTML = html;
		  }
		});
	
		if (ExecutionEnvironment.canUseDOM) {
		  // IE8: When updating a just created node with innerHTML only leading
		  // whitespace is removed. When updating an existing node with innerHTML
		  // whitespace in root TextNodes is also collapsed.
		  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html
	
		  // Feature detection; only IE8 is known to behave improperly like this.
		  var testElement = document.createElement('div');
		  testElement.innerHTML = ' ';
		  if (testElement.innerHTML === '') {
		    setInnerHTML = function (node, html) {
		      // Magic theory: IE8 supposedly differentiates between added and updated
		      // nodes when processing innerHTML, innerHTML on updated nodes suffers
		      // from worse whitespace behavior. Re-adding a node like this triggers
		      // the initial and more favorable whitespace behavior.
		      // TODO: What to do on a detached node?
		      if (node.parentNode) {
		        node.parentNode.replaceChild(node, node);
		      }
	
		      // We also implement a workaround for non-visible tags disappearing into
		      // thin air on IE8, this only happens if there is no visible text
		      // in-front of the non-visible tags. Piggyback on the whitespace fix
		      // and simply check if any non-visible tags appear in the source.
		      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
		        // Recover leading whitespace by temporarily prepending any character.
		        // \uFEFF has the potential advantage of being zero-width/invisible.
		        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
		        // in hopes that this is preserved even if "\uFEFF" is transformed to
		        // the actual Unicode character (by Babel, for example).
		        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
		        node.innerHTML = String.fromCharCode(0xFEFF) + html;
	
		        // deleteData leaves an empty `TextNode` which offsets the index of all
		        // children. Definitely want to avoid this.
		        var textNode = node.firstChild;
		        if (textNode.data.length === 1) {
		          node.removeChild(textNode);
		        } else {
		          textNode.deleteData(0, 1);
		        }
		      } else {
		        node.innerHTML = html;
		      }
		    };
		  }
		  testElement = null;
		}
	
		module.exports = setInnerHTML;
	
	/***/ },
	/* 155 */
	/***/ function(module, exports) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		/* globals MSApp */
	
		'use strict';
	
		/**
		 * Create a function which has 'unsafe' privileges (required by windows8 apps)
		 */
	
		var createMicrosoftUnsafeLocalFunction = function (func) {
		  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
		    return function (arg0, arg1, arg2, arg3) {
		      MSApp.execUnsafeLocalFunction(function () {
		        return func(arg0, arg1, arg2, arg3);
		      });
		    };
		  } else {
		    return func;
		  }
		};
	
		module.exports = createMicrosoftUnsafeLocalFunction;
	
	/***/ },
	/* 156 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var ExecutionEnvironment = __webpack_require__(118);
		var escapeTextContentForBrowser = __webpack_require__(157);
		var setInnerHTML = __webpack_require__(154);
	
		/**
		 * Set the textContent property of a node, ensuring that whitespace is preserved
		 * even in IE8. innerText is a poor substitute for textContent and, among many
		 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
		 * as it should.
		 *
		 * @param {DOMElement} node
		 * @param {string} text
		 * @internal
		 */
		var setTextContent = function (node, text) {
		  if (text) {
		    var firstChild = node.firstChild;
	
		    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {
		      firstChild.nodeValue = text;
		      return;
		    }
		  }
		  node.textContent = text;
		};
	
		if (ExecutionEnvironment.canUseDOM) {
		  if (!('textContent' in document.documentElement)) {
		    setTextContent = function (node, text) {
		      if (node.nodeType === 3) {
		        node.nodeValue = text;
		        return;
		      }
		      setInnerHTML(node, escapeTextContentForBrowser(text));
		    };
		  }
		}
	
		module.exports = setTextContent;
	
	/***/ },
	/* 157 */
	/***/ function(module, exports) {
	
		/**
		 * Copyright 2016-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * Based on the escape-html library, which is used under the MIT License below:
		 *
		 * Copyright (c) 2012-2013 TJ Holowaychuk
		 * Copyright (c) 2015 Andreas Lubbe
		 * Copyright (c) 2015 Tiancheng "Timothy" Gu
		 *
		 * Permission is hereby granted, free of charge, to any person obtaining
		 * a copy of this software and associated documentation files (the
		 * 'Software'), to deal in the Software without restriction, including
		 * without limitation the rights to use, copy, modify, merge, publish,
		 * distribute, sublicense, and/or sell copies of the Software, and to
		 * permit persons to whom the Software is furnished to do so, subject to
		 * the following conditions:
		 *
		 * The above copyright notice and this permission notice shall be
		 * included in all copies or substantial portions of the Software.
		 *
		 * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
		 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
		 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
		 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
		 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
		 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
		 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
		 *
		 */
	
		'use strict';
	
		// code copied and modified from escape-html
		/**
		 * Module variables.
		 * @private
		 */
	
		var matchHtmlRegExp = /["'&<>]/;
	
		/**
		 * Escape special characters in the given string of html.
		 *
		 * @param  {string} string The string to escape for inserting into HTML
		 * @return {string}
		 * @public
		 */
	
		function escapeHtml(string) {
		  var str = '' + string;
		  var match = matchHtmlRegExp.exec(str);
	
		  if (!match) {
		    return str;
		  }
	
		  var escape;
		  var html = '';
		  var index = 0;
		  var lastIndex = 0;
	
		  for (index = match.index; index < str.length; index++) {
		    switch (str.charCodeAt(index)) {
		      case 34:
		        // "
		        escape = '&quot;';
		        break;
		      case 38:
		        // &
		        escape = '&amp;';
		        break;
		      case 39:
		        // '
		        escape = '&#x27;'; // modified from escape-html; used to be '&#39'
		        break;
		      case 60:
		        // <
		        escape = '&lt;';
		        break;
		      case 62:
		        // >
		        escape = '&gt;';
		        break;
		      default:
		        continue;
		    }
	
		    if (lastIndex !== index) {
		      html += str.substring(lastIndex, index);
		    }
	
		    lastIndex = index + 1;
		    html += escape;
		  }
	
		  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
		}
		// end code copied and modified from escape-html
	
	
		/**
		 * Escapes text to prevent scripting attacks.
		 *
		 * @param {*} text Text value to escape.
		 * @return {string} An escaped string.
		 */
		function escapeTextContentForBrowser(text) {
		  if (typeof text === 'boolean' || typeof text === 'number') {
		    // this shortcircuit helps perf for types that we know will never have
		    // special characters, especially given that this function is used often
		    // for numeric dom ids.
		    return '' + text;
		  }
		  return escapeHtml(text);
		}
	
		module.exports = escapeTextContentForBrowser;
	
	/***/ },
	/* 158 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var _prodInvariant = __webpack_require__(102);
	
		var DOMLazyTree = __webpack_require__(152);
		var ExecutionEnvironment = __webpack_require__(118);
	
		var createNodesFromMarkup = __webpack_require__(159);
		var emptyFunction = __webpack_require__(115);
		var invariant = __webpack_require__(104);
	
		var Danger = {
	
		  /**
		   * Replaces a node with a string of markup at its current position within its
		   * parent. The markup must render into a single root node.
		   *
		   * @param {DOMElement} oldChild Child node to replace.
		   * @param {string} markup Markup to render in place of the child node.
		   * @internal
		   */
		  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {
		    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('56') : void 0;
		    !markup ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : _prodInvariant('57') : void 0;
		    !(oldChild.nodeName !== 'HTML') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().') : _prodInvariant('58') : void 0;
	
		    if (typeof markup === 'string') {
		      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
		      oldChild.parentNode.replaceChild(newChild, oldChild);
		    } else {
		      DOMLazyTree.replaceChildWithTree(oldChild, markup);
		    }
		  }
	
		};
	
		module.exports = Danger;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 159 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
		/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * @typechecks
		 */
	
		/*eslint-disable fb-www/unsafe-html*/
	
		var ExecutionEnvironment = __webpack_require__(118);
	
		var createArrayFromMixed = __webpack_require__(160);
		var getMarkupWrap = __webpack_require__(161);
		var invariant = __webpack_require__(104);
	
		/**
		 * Dummy container used to render all markup.
		 */
		var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;
	
		/**
		 * Pattern used by `getNodeName`.
		 */
		var nodeNamePattern = /^\s*<(\w+)/;
	
		/**
		 * Extracts the `nodeName` of the first element in a string of markup.
		 *
		 * @param {string} markup String of markup.
		 * @return {?string} Node name of the supplied markup.
		 */
		function getNodeName(markup) {
		  var nodeNameMatch = markup.match(nodeNamePattern);
		  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
		}
	
		/**
		 * Creates an array containing the nodes rendered from the supplied markup. The
		 * optionally supplied `handleScript` function will be invoked once for each
		 * <script> element that is rendered. If no `handleScript` function is supplied,
		 * an exception is thrown if any <script> elements are rendered.
		 *
		 * @param {string} markup A string of valid HTML markup.
		 * @param {?function} handleScript Invoked once for each rendered <script>.
		 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
		 */
		function createNodesFromMarkup(markup, handleScript) {
		  var node = dummyNode;
		  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;
		  var nodeName = getNodeName(markup);
	
		  var wrap = nodeName && getMarkupWrap(nodeName);
		  if (wrap) {
		    node.innerHTML = wrap[1] + markup + wrap[2];
	
		    var wrapDepth = wrap[0];
		    while (wrapDepth--) {
		      node = node.lastChild;
		    }
		  } else {
		    node.innerHTML = markup;
		  }
	
		  var scripts = node.getElementsByTagName('script');
		  if (scripts.length) {
		    !handleScript ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;
		    createArrayFromMixed(scripts).forEach(handleScript);
		  }
	
		  var nodes = Array.from(node.childNodes);
		  while (node.lastChild) {
		    node.removeChild(node.lastChild);
		  }
		  return nodes;
		}
	
		module.exports = createNodesFromMarkup;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 160 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
		/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * @typechecks
		 */
	
		var invariant = __webpack_require__(104);
	
		/**
		 * Convert array-like objects to arrays.
		 *
		 * This API assumes the caller knows the contents of the data type. For less
		 * well defined inputs use createArrayFromMixed.
		 *
		 * @param {object|function|filelist} obj
		 * @return {array}
		 */
		function toArray(obj) {
		  var length = obj.length;
	
		  // Some browsers builtin objects can report typeof 'function' (e.g. NodeList
		  // in old versions of Safari).
		  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;
	
		  !(typeof length === 'number') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;
	
		  !(length === 0 || length - 1 in obj) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;
	
		  !(typeof obj.callee !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object can\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;
	
		  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
		  // without method will throw during the slice call and skip straight to the
		  // fallback.
		  if (obj.hasOwnProperty) {
		    try {
		      return Array.prototype.slice.call(obj);
		    } catch (e) {
		      // IE < 9 does not support Array#slice on collections objects
		    }
		  }
	
		  // Fall back to copying key by key. This assumes all keys have a value,
		  // so will not preserve sparsely populated inputs.
		  var ret = Array(length);
		  for (var ii = 0; ii < length; ii++) {
		    ret[ii] = obj[ii];
		  }
		  return ret;
		}
	
		/**
		 * Perform a heuristic test to determine if an object is "array-like".
		 *
		 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
		 *   Joshu replied: "Mu."
		 *
		 * This function determines if its argument has "array nature": it returns
		 * true if the argument is an actual array, an `arguments' object, or an
		 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
		 *
		 * It will return false for other array-like objects like Filelist.
		 *
		 * @param {*} obj
		 * @return {boolean}
		 */
		function hasArrayNature(obj) {
		  return (
		    // not null/false
		    !!obj && (
		    // arrays are objects, NodeLists are functions in Safari
		    typeof obj == 'object' || typeof obj == 'function') &&
		    // quacks like an array
		    'length' in obj &&
		    // not window
		    !('setInterval' in obj) &&
		    // no DOM node should be considered an array-like
		    // a 'select' element has 'length' and 'item' properties on IE8
		    typeof obj.nodeType != 'number' && (
		    // a real array
		    Array.isArray(obj) ||
		    // arguments
		    'callee' in obj ||
		    // HTMLCollection/NodeList
		    'item' in obj)
		  );
		}
	
		/**
		 * Ensure that the argument is an array by wrapping it in an array if it is not.
		 * Creates a copy of the argument if it is already an array.
		 *
		 * This is mostly useful idiomatically:
		 *
		 *   var createArrayFromMixed = require('createArrayFromMixed');
		 *
		 *   function takesOneOrMoreThings(things) {
		 *     things = createArrayFromMixed(things);
		 *     ...
		 *   }
		 *
		 * This allows you to treat `things' as an array, but accept scalars in the API.
		 *
		 * If you need to convert an array-like object, like `arguments`, into an array
		 * use toArray instead.
		 *
		 * @param {*} obj
		 * @return {array}
		 */
		function createArrayFromMixed(obj) {
		  if (!hasArrayNature(obj)) {
		    return [obj];
		  } else if (Array.isArray(obj)) {
		    return obj.slice();
		  } else {
		    return toArray(obj);
		  }
		}
	
		module.exports = createArrayFromMixed;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 161 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
		/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		/*eslint-disable fb-www/unsafe-html */
	
		var ExecutionEnvironment = __webpack_require__(118);
	
		var invariant = __webpack_require__(104);
	
		/**
		 * Dummy container used to detect which wraps are necessary.
		 */
		var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;
	
		/**
		 * Some browsers cannot use `innerHTML` to render certain elements standalone,
		 * so we wrap them, render the wrapped nodes, then extract the desired node.
		 *
		 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
		 */
	
		var shouldWrap = {};
	
		var selectWrap = [1, '<select multiple="true">', '</select>'];
		var tableWrap = [1, '<table>', '</table>'];
		var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];
	
		var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];
	
		var markupWrap = {
		  '*': [1, '?<div>', '</div>'],
	
		  'area': [1, '<map>', '</map>'],
		  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
		  'legend': [1, '<fieldset>', '</fieldset>'],
		  'param': [1, '<object>', '</object>'],
		  'tr': [2, '<table><tbody>', '</tbody></table>'],
	
		  'optgroup': selectWrap,
		  'option': selectWrap,
	
		  'caption': tableWrap,
		  'colgroup': tableWrap,
		  'tbody': tableWrap,
		  'tfoot': tableWrap,
		  'thead': tableWrap,
	
		  'td': trWrap,
		  'th': trWrap
		};
	
		// Initialize the SVG elements since we know they'll always need to be wrapped
		// consistently. If they are created inside a <div> they will be initialized in
		// the wrong namespace (and will not display).
		var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
		svgElements.forEach(function (nodeName) {
		  markupWrap[nodeName] = svgWrap;
		  shouldWrap[nodeName] = true;
		});
	
		/**
		 * Gets the markup wrap configuration for the supplied `nodeName`.
		 *
		 * NOTE: This lazily detects which wraps are necessary for the current browser.
		 *
		 * @param {string} nodeName Lowercase `nodeName`.
		 * @return {?array} Markup wrap configuration, if applicable.
		 */
		function getMarkupWrap(nodeName) {
		  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;
		  if (!markupWrap.hasOwnProperty(nodeName)) {
		    nodeName = '*';
		  }
		  if (!shouldWrap.hasOwnProperty(nodeName)) {
		    if (nodeName === '*') {
		      dummyNode.innerHTML = '<link />';
		    } else {
		      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
		    }
		    shouldWrap[nodeName] = !dummyNode.firstChild;
		  }
		  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
		}
	
		module.exports = getMarkupWrap;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 162 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var DOMChildrenOperations = __webpack_require__(151);
		var ReactDOMComponentTree = __webpack_require__(101);
	
		/**
		 * Operations used to process updates to DOM nodes.
		 */
		var ReactDOMIDOperations = {
	
		  /**
		   * Updates a component's children by processing a series of updates.
		   *
		   * @param {array<object>} updates List of update configurations.
		   * @internal
		   */
		  dangerouslyProcessChildrenUpdates: function (parentInst, updates) {
		    var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);
		    DOMChildrenOperations.processUpdates(node, updates);
		  }
		};
	
		module.exports = ReactDOMIDOperations;
	
	/***/ },
	/* 163 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		/* global hasOwnProperty:true */
	
		'use strict';
	
		var _prodInvariant = __webpack_require__(102),
		    _assign = __webpack_require__(120);
	
		var AutoFocusUtils = __webpack_require__(164);
		var CSSPropertyOperations = __webpack_require__(166);
		var DOMLazyTree = __webpack_require__(152);
		var DOMNamespaces = __webpack_require__(153);
		var DOMProperty = __webpack_require__(103);
		var DOMPropertyOperations = __webpack_require__(174);
		var EventPluginHub = __webpack_require__(110);
		var EventPluginRegistry = __webpack_require__(111);
		var ReactBrowserEventEmitter = __webpack_require__(176);
		var ReactDOMComponentFlags = __webpack_require__(105);
		var ReactDOMComponentTree = __webpack_require__(101);
		var ReactDOMInput = __webpack_require__(179);
		var ReactDOMOption = __webpack_require__(182);
		var ReactDOMSelect = __webpack_require__(183);
		var ReactDOMTextarea = __webpack_require__(184);
		var ReactInstrumentation = __webpack_require__(133);
		var ReactMultiChild = __webpack_require__(185);
		var ReactServerRenderingTransaction = __webpack_require__(205);
	
		var emptyFunction = __webpack_require__(115);
		var escapeTextContentForBrowser = __webpack_require__(157);
		var invariant = __webpack_require__(104);
		var isEventSupported = __webpack_require__(141);
		var shallowEqual = __webpack_require__(195);
		var validateDOMNesting = __webpack_require__(208);
		var warning = __webpack_require__(114);
	
		var Flags = ReactDOMComponentFlags;
		var deleteListener = EventPluginHub.deleteListener;
		var getNode = ReactDOMComponentTree.getNodeFromInstance;
		var listenTo = ReactBrowserEventEmitter.listenTo;
		var registrationNameModules = EventPluginRegistry.registrationNameModules;
	
		// For quickly matching children type, to test if can be treated as content.
		var CONTENT_TYPES = { 'string': true, 'number': true };
	
		var STYLE = 'style';
		var HTML = '__html';
		var RESERVED_PROPS = {
		  children: null,
		  dangerouslySetInnerHTML: null,
		  suppressContentEditableWarning: null
		};
	
		// Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).
		var DOC_FRAGMENT_TYPE = 11;
	
		function getDeclarationErrorAddendum(internalInstance) {
		  if (internalInstance) {
		    var owner = internalInstance._currentElement._owner || null;
		    if (owner) {
		      var name = owner.getName();
		      if (name) {
		        return ' This DOM node was rendered by `' + name + '`.';
		      }
		    }
		  }
		  return '';
		}
	
		function friendlyStringify(obj) {
		  if (typeof obj === 'object') {
		    if (Array.isArray(obj)) {
		      return '[' + obj.map(friendlyStringify).join(', ') + ']';
		    } else {
		      var pairs = [];
		      for (var key in obj) {
		        if (Object.prototype.hasOwnProperty.call(obj, key)) {
		          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
		          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
		        }
		      }
		      return '{' + pairs.join(', ') + '}';
		    }
		  } else if (typeof obj === 'string') {
		    return JSON.stringify(obj);
		  } else if (typeof obj === 'function') {
		    return '[function object]';
		  }
		  // Differs from JSON.stringify in that undefined because undefined and that
		  // inf and nan don't become null
		  return String(obj);
		}
	
		var styleMutationWarning = {};
	
		function checkAndWarnForMutatedStyle(style1, style2, component) {
		  if (style1 == null || style2 == null) {
		    return;
		  }
		  if (shallowEqual(style1, style2)) {
		    return;
		  }
	
		  var componentName = component._tag;
		  var owner = component._currentElement._owner;
		  var ownerName;
		  if (owner) {
		    ownerName = owner.getName();
		  }
	
		  var hash = ownerName + '|' + componentName;
	
		  if (styleMutationWarning.hasOwnProperty(hash)) {
		    return;
		  }
	
		  styleMutationWarning[hash] = true;
	
		  process.env.NODE_ENV !== 'production' ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;
		}
	
		/**
		 * @param {object} component
		 * @param {?object} props
		 */
		function assertValidProps(component, props) {
		  if (!props) {
		    return;
		  }
		  // Note the use of `==` which checks for null or undefined.
		  if (voidElementTags[component._tag]) {
		    !(props.children == null && props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : _prodInvariant('137', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : void 0;
		  }
		  if (props.dangerouslySetInnerHTML != null) {
		    !(props.children == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : _prodInvariant('60') : void 0;
		    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : _prodInvariant('61') : void 0;
		  }
		  if (process.env.NODE_ENV !== 'production') {
		    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;
		    process.env.NODE_ENV !== 'production' ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
		    process.env.NODE_ENV !== 'production' ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;
		  }
		  !(props.style == null || typeof props.style === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', getDeclarationErrorAddendum(component)) : _prodInvariant('62', getDeclarationErrorAddendum(component)) : void 0;
		}
	
		function enqueuePutListener(inst, registrationName, listener, transaction) {
		  if (transaction instanceof ReactServerRenderingTransaction) {
		    return;
		  }
		  if (process.env.NODE_ENV !== 'production') {
		    // IE8 has no API for event capturing and the `onScroll` event doesn't
		    // bubble.
		    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\'t support the `onScroll` event') : void 0;
		  }
		  var containerInfo = inst._hostContainerInfo;
		  var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;
		  var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;
		  listenTo(registrationName, doc);
		  transaction.getReactMountReady().enqueue(putListener, {
		    inst: inst,
		    registrationName: registrationName,
		    listener: listener
		  });
		}
	
		function putListener() {
		  var listenerToPut = this;
		  EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);
		}
	
		function inputPostMount() {
		  var inst = this;
		  ReactDOMInput.postMountWrapper(inst);
		}
	
		function textareaPostMount() {
		  var inst = this;
		  ReactDOMTextarea.postMountWrapper(inst);
		}
	
		function optionPostMount() {
		  var inst = this;
		  ReactDOMOption.postMountWrapper(inst);
		}
	
		var setAndValidateContentChildDev = emptyFunction;
		if (process.env.NODE_ENV !== 'production') {
		  setAndValidateContentChildDev = function (content) {
		    var hasExistingContent = this._contentDebugID != null;
		    var debugID = this._debugID;
		    // This ID represents the inlined child that has no backing instance:
		    var contentDebugID = -debugID;
	
		    if (content == null) {
		      if (hasExistingContent) {
		        ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);
		      }
		      this._contentDebugID = null;
		      return;
		    }
	
		    validateDOMNesting(null, String(content), this, this._ancestorInfo);
		    this._contentDebugID = contentDebugID;
		    if (hasExistingContent) {
		      ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);
		      ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);
		    } else {
		      ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content, debugID);
		      ReactInstrumentation.debugTool.onMountComponent(contentDebugID);
		      ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);
		    }
		  };
		}
	
		// There are so many media events, it makes sense to just
		// maintain a list rather than create a `trapBubbledEvent` for each
		var mediaEvents = {
		  topAbort: 'abort',
		  topCanPlay: 'canplay',
		  topCanPlayThrough: 'canplaythrough',
		  topDurationChange: 'durationchange',
		  topEmptied: 'emptied',
		  topEncrypted: 'encrypted',
		  topEnded: 'ended',
		  topError: 'error',
		  topLoadedData: 'loadeddata',
		  topLoadedMetadata: 'loadedmetadata',
		  topLoadStart: 'loadstart',
		  topPause: 'pause',
		  topPlay: 'play',
		  topPlaying: 'playing',
		  topProgress: 'progress',
		  topRateChange: 'ratechange',
		  topSeeked: 'seeked',
		  topSeeking: 'seeking',
		  topStalled: 'stalled',
		  topSuspend: 'suspend',
		  topTimeUpdate: 'timeupdate',
		  topVolumeChange: 'volumechange',
		  topWaiting: 'waiting'
		};
	
		function trapBubbledEventsLocal() {
		  var inst = this;
		  // If a component renders to null or if another component fatals and causes
		  // the state of the tree to be corrupted, `node` here can be null.
		  !inst._rootNodeID ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Must be mounted to trap events') : _prodInvariant('63') : void 0;
		  var node = getNode(inst);
		  !node ? process.env.NODE_ENV !== 'production' ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : _prodInvariant('64') : void 0;
	
		  switch (inst._tag) {
		    case 'iframe':
		    case 'object':
		      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];
		      break;
		    case 'video':
		    case 'audio':
	
		      inst._wrapperState.listeners = [];
		      // Create listener for each media event
		      for (var event in mediaEvents) {
		        if (mediaEvents.hasOwnProperty(event)) {
		          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(event, mediaEvents[event], node));
		        }
		      }
		      break;
		    case 'source':
		      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node)];
		      break;
		    case 'img':
		      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node), ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];
		      break;
		    case 'form':
		      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topReset', 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent('topSubmit', 'submit', node)];
		      break;
		    case 'input':
		    case 'select':
		    case 'textarea':
		      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topInvalid', 'invalid', node)];
		      break;
		  }
		}
	
		function postUpdateSelectWrapper() {
		  ReactDOMSelect.postUpdateWrapper(this);
		}
	
		// For HTML, certain tags should omit their close tag. We keep a whitelist for
		// those special-case tags.
	
		var omittedCloseTags = {
		  'area': true,
		  'base': true,
		  'br': true,
		  'col': true,
		  'embed': true,
		  'hr': true,
		  'img': true,
		  'input': true,
		  'keygen': true,
		  'link': true,
		  'meta': true,
		  'param': true,
		  'source': true,
		  'track': true,
		  'wbr': true
		};
	
		var newlineEatingTags = {
		  'listing': true,
		  'pre': true,
		  'textarea': true
		};
	
		// For HTML, certain tags cannot have children. This has the same purpose as
		// `omittedCloseTags` except that `menuitem` should still have its closing tag.
	
		var voidElementTags = _assign({
		  'menuitem': true
		}, omittedCloseTags);
	
		// We accept any tag to be rendered but since this gets injected into arbitrary
		// HTML, we want to make sure that it's a safe tag.
		// http://www.w3.org/TR/REC-xml/#NT-Name
	
		var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
		var validatedTagCache = {};
		var hasOwnProperty = {}.hasOwnProperty;
	
		function validateDangerousTag(tag) {
		  if (!hasOwnProperty.call(validatedTagCache, tag)) {
		    !VALID_TAG_REGEX.test(tag) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Invalid tag: %s', tag) : _prodInvariant('65', tag) : void 0;
		    validatedTagCache[tag] = true;
		  }
		}
	
		function isCustomComponent(tagName, props) {
		  return tagName.indexOf('-') >= 0 || props.is != null;
		}
	
		var globalIdCounter = 1;
	
		/**
		 * Creates a new React class that is idempotent and capable of containing other
		 * React components. It accepts event listeners and DOM properties that are
		 * valid according to `DOMProperty`.
		 *
		 *  - Event listeners: `onClick`, `onMouseDown`, etc.
		 *  - DOM properties: `className`, `name`, `title`, etc.
		 *
		 * The `style` property functions differently from the DOM API. It accepts an
		 * object mapping of style properties to values.
		 *
		 * @constructor ReactDOMComponent
		 * @extends ReactMultiChild
		 */
		function ReactDOMComponent(element) {
		  var tag = element.type;
		  validateDangerousTag(tag);
		  this._currentElement = element;
		  this._tag = tag.toLowerCase();
		  this._namespaceURI = null;
		  this._renderedChildren = null;
		  this._previousStyle = null;
		  this._previousStyleCopy = null;
		  this._hostNode = null;
		  this._hostParent = null;
		  this._rootNodeID = 0;
		  this._domID = 0;
		  this._hostContainerInfo = null;
		  this._wrapperState = null;
		  this._topLevelWrapper = null;
		  this._flags = 0;
		  if (process.env.NODE_ENV !== 'production') {
		    this._ancestorInfo = null;
		    setAndValidateContentChildDev.call(this, null);
		  }
		}
	
		ReactDOMComponent.displayName = 'ReactDOMComponent';
	
		ReactDOMComponent.Mixin = {
	
		  /**
		   * Generates root tag markup then recurses. This method has side effects and
		   * is not idempotent.
		   *
		   * @internal
		   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
		   * @param {?ReactDOMComponent} the parent component instance
		   * @param {?object} info about the host container
		   * @param {object} context
		   * @return {string} The computed markup.
		   */
		  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
		    this._rootNodeID = globalIdCounter++;
		    this._domID = hostContainerInfo._idCounter++;
		    this._hostParent = hostParent;
		    this._hostContainerInfo = hostContainerInfo;
	
		    var props = this._currentElement.props;
	
		    switch (this._tag) {
		      case 'audio':
		      case 'form':
		      case 'iframe':
		      case 'img':
		      case 'link':
		      case 'object':
		      case 'source':
		      case 'video':
		        this._wrapperState = {
		          listeners: null
		        };
		        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
		        break;
		      case 'input':
		        ReactDOMInput.mountWrapper(this, props, hostParent);
		        props = ReactDOMInput.getHostProps(this, props);
		        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
		        break;
		      case 'option':
		        ReactDOMOption.mountWrapper(this, props, hostParent);
		        props = ReactDOMOption.getHostProps(this, props);
		        break;
		      case 'select':
		        ReactDOMSelect.mountWrapper(this, props, hostParent);
		        props = ReactDOMSelect.getHostProps(this, props);
		        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
		        break;
		      case 'textarea':
		        ReactDOMTextarea.mountWrapper(this, props, hostParent);
		        props = ReactDOMTextarea.getHostProps(this, props);
		        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
		        break;
		    }
	
		    assertValidProps(this, props);
	
		    // We create tags in the namespace of their parent container, except HTML
		    // tags get no namespace.
		    var namespaceURI;
		    var parentTag;
		    if (hostParent != null) {
		      namespaceURI = hostParent._namespaceURI;
		      parentTag = hostParent._tag;
		    } else if (hostContainerInfo._tag) {
		      namespaceURI = hostContainerInfo._namespaceURI;
		      parentTag = hostContainerInfo._tag;
		    }
		    if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {
		      namespaceURI = DOMNamespaces.html;
		    }
		    if (namespaceURI === DOMNamespaces.html) {
		      if (this._tag === 'svg') {
		        namespaceURI = DOMNamespaces.svg;
		      } else if (this._tag === 'math') {
		        namespaceURI = DOMNamespaces.mathml;
		      }
		    }
		    this._namespaceURI = namespaceURI;
	
		    if (process.env.NODE_ENV !== 'production') {
		      var parentInfo;
		      if (hostParent != null) {
		        parentInfo = hostParent._ancestorInfo;
		      } else if (hostContainerInfo._tag) {
		        parentInfo = hostContainerInfo._ancestorInfo;
		      }
		      if (parentInfo) {
		        // parentInfo should always be present except for the top-level
		        // component when server rendering
		        validateDOMNesting(this._tag, null, this, parentInfo);
		      }
		      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);
		    }
	
		    var mountImage;
		    if (transaction.useCreateElement) {
		      var ownerDocument = hostContainerInfo._ownerDocument;
		      var el;
		      if (namespaceURI === DOMNamespaces.html) {
		        if (this._tag === 'script') {
		          // Create the script via .innerHTML so its "parser-inserted" flag is
		          // set to true and it does not execute
		          var div = ownerDocument.createElement('div');
		          var type = this._currentElement.type;
		          div.innerHTML = '<' + type + '></' + type + '>';
		          el = div.removeChild(div.firstChild);
		        } else if (props.is) {
		          el = ownerDocument.createElement(this._currentElement.type, props.is);
		        } else {
		          // Separate else branch instead of using `props.is || undefined` above becuase of a Firefox bug.
		          // See discussion in https://github.com/facebook/react/pull/6896
		          // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
		          el = ownerDocument.createElement(this._currentElement.type);
		        }
		      } else {
		        el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);
		      }
		      ReactDOMComponentTree.precacheNode(this, el);
		      this._flags |= Flags.hasCachedChildNodes;
		      if (!this._hostParent) {
		        DOMPropertyOperations.setAttributeForRoot(el);
		      }
		      this._updateDOMProperties(null, props, transaction);
		      var lazyTree = DOMLazyTree(el);
		      this._createInitialChildren(transaction, props, context, lazyTree);
		      mountImage = lazyTree;
		    } else {
		      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
		      var tagContent = this._createContentMarkup(transaction, props, context);
		      if (!tagContent && omittedCloseTags[this._tag]) {
		        mountImage = tagOpen + '/>';
		      } else {
		        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
		      }
		    }
	
		    switch (this._tag) {
		      case 'input':
		        transaction.getReactMountReady().enqueue(inputPostMount, this);
		        if (props.autoFocus) {
		          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
		        }
		        break;
		      case 'textarea':
		        transaction.getReactMountReady().enqueue(textareaPostMount, this);
		        if (props.autoFocus) {
		          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
		        }
		        break;
		      case 'select':
		        if (props.autoFocus) {
		          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
		        }
		        break;
		      case 'button':
		        if (props.autoFocus) {
		          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
		        }
		        break;
		      case 'option':
		        transaction.getReactMountReady().enqueue(optionPostMount, this);
		        break;
		    }
	
		    return mountImage;
		  },
	
		  /**
		   * Creates markup for the open tag and all attributes.
		   *
		   * This method has side effects because events get registered.
		   *
		   * Iterating over object properties is faster than iterating over arrays.
		   * @see http://jsperf.com/obj-vs-arr-iteration
		   *
		   * @private
		   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
		   * @param {object} props
		   * @return {string} Markup of opening tag.
		   */
		  _createOpenTagMarkupAndPutListeners: function (transaction, props) {
		    var ret = '<' + this._currentElement.type;
	
		    for (var propKey in props) {
		      if (!props.hasOwnProperty(propKey)) {
		        continue;
		      }
		      var propValue = props[propKey];
		      if (propValue == null) {
		        continue;
		      }
		      if (registrationNameModules.hasOwnProperty(propKey)) {
		        if (propValue) {
		          enqueuePutListener(this, propKey, propValue, transaction);
		        }
		      } else {
		        if (propKey === STYLE) {
		          if (propValue) {
		            if (process.env.NODE_ENV !== 'production') {
		              // See `_updateDOMProperties`. style block
		              this._previousStyle = propValue;
		            }
		            propValue = this._previousStyleCopy = _assign({}, props.style);
		          }
		          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);
		        }
		        var markup = null;
		        if (this._tag != null && isCustomComponent(this._tag, props)) {
		          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
		            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
		          }
		        } else {
		          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
		        }
		        if (markup) {
		          ret += ' ' + markup;
		        }
		      }
		    }
	
		    // For static pages, no need to put React ID and checksum. Saves lots of
		    // bytes.
		    if (transaction.renderToStaticMarkup) {
		      return ret;
		    }
	
		    if (!this._hostParent) {
		      ret += ' ' + DOMPropertyOperations.createMarkupForRoot();
		    }
		    ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);
		    return ret;
		  },
	
		  /**
		   * Creates markup for the content between the tags.
		   *
		   * @private
		   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
		   * @param {object} props
		   * @param {object} context
		   * @return {string} Content markup.
		   */
		  _createContentMarkup: function (transaction, props, context) {
		    var ret = '';
	
		    // Intentional use of != to avoid catching zero/false.
		    var innerHTML = props.dangerouslySetInnerHTML;
		    if (innerHTML != null) {
		      if (innerHTML.__html != null) {
		        ret = innerHTML.__html;
		      }
		    } else {
		      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
		      var childrenToUse = contentToUse != null ? null : props.children;
		      if (contentToUse != null) {
		        // TODO: Validate that text is allowed as a child of this node
		        ret = escapeTextContentForBrowser(contentToUse);
		        if (process.env.NODE_ENV !== 'production') {
		          setAndValidateContentChildDev.call(this, contentToUse);
		        }
		      } else if (childrenToUse != null) {
		        var mountImages = this.mountChildren(childrenToUse, transaction, context);
		        ret = mountImages.join('');
		      }
		    }
		    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
		      // text/html ignores the first character in these tags if it's a newline
		      // Prefer to break application/xml over text/html (for now) by adding
		      // a newline specifically to get eaten by the parser. (Alternately for
		      // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
		      // \r is normalized out by HTMLTextAreaElement#value.)
		      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
		      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
		      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
		      // See: Parsing of "textarea" "listing" and "pre" elements
		      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
		      return '\n' + ret;
		    } else {
		      return ret;
		    }
		  },
	
		  _createInitialChildren: function (transaction, props, context, lazyTree) {
		    // Intentional use of != to avoid catching zero/false.
		    var innerHTML = props.dangerouslySetInnerHTML;
		    if (innerHTML != null) {
		      if (innerHTML.__html != null) {
		        DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);
		      }
		    } else {
		      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
		      var childrenToUse = contentToUse != null ? null : props.children;
		      // TODO: Validate that text is allowed as a child of this node
		      if (contentToUse != null) {
		        // Avoid setting textContent when the text is empty. In IE11 setting
		        // textContent on a text area will cause the placeholder to not
		        // show within the textarea until it has been focused and blurred again.
		        // https://github.com/facebook/react/issues/6731#issuecomment-254874553
		        if (contentToUse !== '') {
		          if (process.env.NODE_ENV !== 'production') {
		            setAndValidateContentChildDev.call(this, contentToUse);
		          }
		          DOMLazyTree.queueText(lazyTree, contentToUse);
		        }
		      } else if (childrenToUse != null) {
		        var mountImages = this.mountChildren(childrenToUse, transaction, context);
		        for (var i = 0; i < mountImages.length; i++) {
		          DOMLazyTree.queueChild(lazyTree, mountImages[i]);
		        }
		      }
		    }
		  },
	
		  /**
		   * Receives a next element and updates the component.
		   *
		   * @internal
		   * @param {ReactElement} nextElement
		   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
		   * @param {object} context
		   */
		  receiveComponent: function (nextElement, transaction, context) {
		    var prevElement = this._currentElement;
		    this._currentElement = nextElement;
		    this.updateComponent(transaction, prevElement, nextElement, context);
		  },
	
		  /**
		   * Updates a DOM component after it has already been allocated and
		   * attached to the DOM. Reconciles the root DOM node, then recurses.
		   *
		   * @param {ReactReconcileTransaction} transaction
		   * @param {ReactElement} prevElement
		   * @param {ReactElement} nextElement
		   * @internal
		   * @overridable
		   */
		  updateComponent: function (transaction, prevElement, nextElement, context) {
		    var lastProps = prevElement.props;
		    var nextProps = this._currentElement.props;
	
		    switch (this._tag) {
		      case 'input':
		        lastProps = ReactDOMInput.getHostProps(this, lastProps);
		        nextProps = ReactDOMInput.getHostProps(this, nextProps);
		        break;
		      case 'option':
		        lastProps = ReactDOMOption.getHostProps(this, lastProps);
		        nextProps = ReactDOMOption.getHostProps(this, nextProps);
		        break;
		      case 'select':
		        lastProps = ReactDOMSelect.getHostProps(this, lastProps);
		        nextProps = ReactDOMSelect.getHostProps(this, nextProps);
		        break;
		      case 'textarea':
		        lastProps = ReactDOMTextarea.getHostProps(this, lastProps);
		        nextProps = ReactDOMTextarea.getHostProps(this, nextProps);
		        break;
		    }
	
		    assertValidProps(this, nextProps);
		    this._updateDOMProperties(lastProps, nextProps, transaction);
		    this._updateDOMChildren(lastProps, nextProps, transaction, context);
	
		    switch (this._tag) {
		      case 'input':
		        // Update the wrapper around inputs *after* updating props. This has to
		        // happen after `_updateDOMProperties`. Otherwise HTML5 input validations
		        // raise warnings and prevent the new value from being assigned.
		        ReactDOMInput.updateWrapper(this);
		        break;
		      case 'textarea':
		        ReactDOMTextarea.updateWrapper(this);
		        break;
		      case 'select':
		        // <select> value update needs to occur after <option> children
		        // reconciliation
		        transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
		        break;
		    }
		  },
	
		  /**
		   * Reconciles the properties by detecting differences in property values and
		   * updating the DOM as necessary. This function is probably the single most
		   * critical path for performance optimization.
		   *
		   * TODO: Benchmark whether checking for changed values in memory actually
		   *       improves performance (especially statically positioned elements).
		   * TODO: Benchmark the effects of putting this at the top since 99% of props
		   *       do not change for a given reconciliation.
		   * TODO: Benchmark areas that can be improved with caching.
		   *
		   * @private
		   * @param {object} lastProps
		   * @param {object} nextProps
		   * @param {?DOMElement} node
		   */
		  _updateDOMProperties: function (lastProps, nextProps, transaction) {
		    var propKey;
		    var styleName;
		    var styleUpdates;
		    for (propKey in lastProps) {
		      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
		        continue;
		      }
		      if (propKey === STYLE) {
		        var lastStyle = this._previousStyleCopy;
		        for (styleName in lastStyle) {
		          if (lastStyle.hasOwnProperty(styleName)) {
		            styleUpdates = styleUpdates || {};
		            styleUpdates[styleName] = '';
		          }
		        }
		        this._previousStyleCopy = null;
		      } else if (registrationNameModules.hasOwnProperty(propKey)) {
		        if (lastProps[propKey]) {
		          // Only call deleteListener if there was a listener previously or
		          // else willDeleteListener gets called when there wasn't actually a
		          // listener (e.g., onClick={null})
		          deleteListener(this, propKey);
		        }
		      } else if (isCustomComponent(this._tag, lastProps)) {
		        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
		          DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);
		        }
		      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
		        DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);
		      }
		    }
		    for (propKey in nextProps) {
		      var nextProp = nextProps[propKey];
		      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;
		      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
		        continue;
		      }
		      if (propKey === STYLE) {
		        if (nextProp) {
		          if (process.env.NODE_ENV !== 'production') {
		            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
		            this._previousStyle = nextProp;
		          }
		          nextProp = this._previousStyleCopy = _assign({}, nextProp);
		        } else {
		          this._previousStyleCopy = null;
		        }
		        if (lastProp) {
		          // Unset styles on `lastProp` but not on `nextProp`.
		          for (styleName in lastProp) {
		            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
		              styleUpdates = styleUpdates || {};
		              styleUpdates[styleName] = '';
		            }
		          }
		          // Update styles that changed since `lastProp`.
		          for (styleName in nextProp) {
		            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
		              styleUpdates = styleUpdates || {};
		              styleUpdates[styleName] = nextProp[styleName];
		            }
		          }
		        } else {
		          // Relies on `updateStylesByID` not mutating `styleUpdates`.
		          styleUpdates = nextProp;
		        }
		      } else if (registrationNameModules.hasOwnProperty(propKey)) {
		        if (nextProp) {
		          enqueuePutListener(this, propKey, nextProp, transaction);
		        } else if (lastProp) {
		          deleteListener(this, propKey);
		        }
		      } else if (isCustomComponent(this._tag, nextProps)) {
		        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
		          DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);
		        }
		      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
		        var node = getNode(this);
		        // If we're updating to null or undefined, we should remove the property
		        // from the DOM node instead of inadvertently setting to a string. This
		        // brings us in line with the same behavior we have on initial render.
		        if (nextProp != null) {
		          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
		        } else {
		          DOMPropertyOperations.deleteValueForProperty(node, propKey);
		        }
		      }
		    }
		    if (styleUpdates) {
		      CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);
		    }
		  },
	
		  /**
		   * Reconciles the children with the various properties that affect the
		   * children content.
		   *
		   * @param {object} lastProps
		   * @param {object} nextProps
		   * @param {ReactReconcileTransaction} transaction
		   * @param {object} context
		   */
		  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {
		    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
		    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;
	
		    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
		    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;
	
		    // Note the use of `!=` which checks for null or undefined.
		    var lastChildren = lastContent != null ? null : lastProps.children;
		    var nextChildren = nextContent != null ? null : nextProps.children;
	
		    // If we're switching from children to content/html or vice versa, remove
		    // the old content
		    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
		    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
		    if (lastChildren != null && nextChildren == null) {
		      this.updateChildren(null, transaction, context);
		    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
		      this.updateTextContent('');
		      if (process.env.NODE_ENV !== 'production') {
		        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
		      }
		    }
	
		    if (nextContent != null) {
		      if (lastContent !== nextContent) {
		        this.updateTextContent('' + nextContent);
		        if (process.env.NODE_ENV !== 'production') {
		          setAndValidateContentChildDev.call(this, nextContent);
		        }
		      }
		    } else if (nextHtml != null) {
		      if (lastHtml !== nextHtml) {
		        this.updateMarkup('' + nextHtml);
		      }
		      if (process.env.NODE_ENV !== 'production') {
		        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
		      }
		    } else if (nextChildren != null) {
		      if (process.env.NODE_ENV !== 'production') {
		        setAndValidateContentChildDev.call(this, null);
		      }
	
		      this.updateChildren(nextChildren, transaction, context);
		    }
		  },
	
		  getHostNode: function () {
		    return getNode(this);
		  },
	
		  /**
		   * Destroys all event registrations for this instance. Does not remove from
		   * the DOM. That must be done by the parent.
		   *
		   * @internal
		   */
		  unmountComponent: function (safely) {
		    switch (this._tag) {
		      case 'audio':
		      case 'form':
		      case 'iframe':
		      case 'img':
		      case 'link':
		      case 'object':
		      case 'source':
		      case 'video':
		        var listeners = this._wrapperState.listeners;
		        if (listeners) {
		          for (var i = 0; i < listeners.length; i++) {
		            listeners[i].remove();
		          }
		        }
		        break;
		      case 'html':
		      case 'head':
		      case 'body':
		        /**
		         * Components like <html> <head> and <body> can't be removed or added
		         * easily in a cross-browser way, however it's valuable to be able to
		         * take advantage of React's reconciliation for styling and <title>
		         * management. So we just document it and throw in dangerous cases.
		         */
		         true ? process.env.NODE_ENV !== 'production' ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.', this._tag) : _prodInvariant('66', this._tag) : void 0;
		        break;
		    }
	
		    this.unmountChildren(safely);
		    ReactDOMComponentTree.uncacheNode(this);
		    EventPluginHub.deleteAllListeners(this);
		    this._rootNodeID = 0;
		    this._domID = 0;
		    this._wrapperState = null;
	
		    if (process.env.NODE_ENV !== 'production') {
		      setAndValidateContentChildDev.call(this, null);
		    }
		  },
	
		  getPublicInstance: function () {
		    return getNode(this);
		  }
	
		};
	
		_assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);
	
		module.exports = ReactDOMComponent;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 164 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var ReactDOMComponentTree = __webpack_require__(101);
	
		var focusNode = __webpack_require__(165);
	
		var AutoFocusUtils = {
		  focusDOMComponent: function () {
		    focusNode(ReactDOMComponentTree.getNodeFromInstance(this));
		  }
		};
	
		module.exports = AutoFocusUtils;
	
	/***/ },
	/* 165 */
	/***/ function(module, exports) {
	
		/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		/**
		 * @param {DOMElement} node input/textarea to focus
		 */
	
		function focusNode(node) {
		  // IE8 can throw "Can't move focus to the control because it is invisible,
		  // not enabled, or of a type that does not accept the focus." for all kinds of
		  // reasons that are too expensive and fragile to test.
		  try {
		    node.focus();
		  } catch (e) {}
		}
	
		module.exports = focusNode;
	
	/***/ },
	/* 166 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var CSSProperty = __webpack_require__(167);
		var ExecutionEnvironment = __webpack_require__(118);
		var ReactInstrumentation = __webpack_require__(133);
	
		var camelizeStyleName = __webpack_require__(168);
		var dangerousStyleValue = __webpack_require__(170);
		var hyphenateStyleName = __webpack_require__(171);
		var memoizeStringOnly = __webpack_require__(173);
		var warning = __webpack_require__(114);
	
		var processStyleName = memoizeStringOnly(function (styleName) {
		  return hyphenateStyleName(styleName);
		});
	
		var hasShorthandPropertyBug = false;
		var styleFloatAccessor = 'cssFloat';
		if (ExecutionEnvironment.canUseDOM) {
		  var tempStyle = document.createElement('div').style;
		  try {
		    // IE8 throws "Invalid argument." if resetting shorthand style properties.
		    tempStyle.font = '';
		  } catch (e) {
		    hasShorthandPropertyBug = true;
		  }
		  // IE8 only supports accessing cssFloat (standard) as styleFloat
		  if (document.documentElement.style.cssFloat === undefined) {
		    styleFloatAccessor = 'styleFloat';
		  }
		}
	
		if (process.env.NODE_ENV !== 'production') {
		  // 'msTransform' is correct, but the other prefixes should be capitalized
		  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
	
		  // style values shouldn't contain a semicolon
		  var badStyleValueWithSemicolonPattern = /;\s*$/;
	
		  var warnedStyleNames = {};
		  var warnedStyleValues = {};
		  var warnedForNaNValue = false;
	
		  var warnHyphenatedStyleName = function (name, owner) {
		    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
		      return;
		    }
	
		    warnedStyleNames[name] = true;
		    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;
		  };
	
		  var warnBadVendoredStyleName = function (name, owner) {
		    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
		      return;
		    }
	
		    warnedStyleNames[name] = true;
		    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;
		  };
	
		  var warnStyleValueWithSemicolon = function (name, value, owner) {
		    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
		      return;
		    }
	
		    warnedStyleValues[value] = true;
		    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\'t contain a semicolon.%s ' + 'Try "%s: %s" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;
		  };
	
		  var warnStyleValueIsNaN = function (name, value, owner) {
		    if (warnedForNaNValue) {
		      return;
		    }
	
		    warnedForNaNValue = true;
		    process.env.NODE_ENV !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;
		  };
	
		  var checkRenderMessage = function (owner) {
		    if (owner) {
		      var name = owner.getName();
		      if (name) {
		        return ' Check the render method of `' + name + '`.';
		      }
		    }
		    return '';
		  };
	
		  /**
		   * @param {string} name
		   * @param {*} value
		   * @param {ReactDOMComponent} component
		   */
		  var warnValidStyle = function (name, value, component) {
		    var owner;
		    if (component) {
		      owner = component._currentElement._owner;
		    }
		    if (name.indexOf('-') > -1) {
		      warnHyphenatedStyleName(name, owner);
		    } else if (badVendoredStyleNamePattern.test(name)) {
		      warnBadVendoredStyleName(name, owner);
		    } else if (badStyleValueWithSemicolonPattern.test(value)) {
		      warnStyleValueWithSemicolon(name, value, owner);
		    }
	
		    if (typeof value === 'number' && isNaN(value)) {
		      warnStyleValueIsNaN(name, value, owner);
		    }
		  };
		}
	
		/**
		 * Operations for dealing with CSS properties.
		 */
		var CSSPropertyOperations = {
	
		  /**
		   * Serializes a mapping of style properties for use as inline styles:
		   *
		   *   > createMarkupForStyles({width: '200px', height: 0})
		   *   "width:200px;height:0;"
		   *
		   * Undefined values are ignored so that declarative programming is easier.
		   * The result should be HTML-escaped before insertion into the DOM.
		   *
		   * @param {object} styles
		   * @param {ReactDOMComponent} component
		   * @return {?string}
		   */
		  createMarkupForStyles: function (styles, component) {
		    var serialized = '';
		    for (var styleName in styles) {
		      if (!styles.hasOwnProperty(styleName)) {
		        continue;
		      }
		      var styleValue = styles[styleName];
		      if (process.env.NODE_ENV !== 'production') {
		        warnValidStyle(styleName, styleValue, component);
		      }
		      if (styleValue != null) {
		        serialized += processStyleName(styleName) + ':';
		        serialized += dangerousStyleValue(styleName, styleValue, component) + ';';
		      }
		    }
		    return serialized || null;
		  },
	
		  /**
		   * Sets the value for multiple styles on a node.  If a value is specified as
		   * '' (empty string), the corresponding style property will be unset.
		   *
		   * @param {DOMElement} node
		   * @param {object} styles
		   * @param {ReactDOMComponent} component
		   */
		  setValueForStyles: function (node, styles, component) {
		    if (process.env.NODE_ENV !== 'production') {
		      ReactInstrumentation.debugTool.onHostOperation({
		        instanceID: component._debugID,
		        type: 'update styles',
		        payload: styles
		      });
		    }
	
		    var style = node.style;
		    for (var styleName in styles) {
		      if (!styles.hasOwnProperty(styleName)) {
		        continue;
		      }
		      if (process.env.NODE_ENV !== 'production') {
		        warnValidStyle(styleName, styles[styleName], component);
		      }
		      var styleValue = dangerousStyleValue(styleName, styles[styleName], component);
		      if (styleName === 'float' || styleName === 'cssFloat') {
		        styleName = styleFloatAccessor;
		      }
		      if (styleValue) {
		        style[styleName] = styleValue;
		      } else {
		        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
		        if (expansion) {
		          // Shorthand property that IE8 won't like unsetting, so unset each
		          // component to placate it
		          for (var individualStyleName in expansion) {
		            style[individualStyleName] = '';
		          }
		        } else {
		          style[styleName] = '';
		        }
		      }
		    }
		  }
	
		};
	
		module.exports = CSSPropertyOperations;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 167 */
	/***/ function(module, exports) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		/**
		 * CSS properties which accept numbers but are not in units of "px".
		 */
	
		var isUnitlessNumber = {
		  animationIterationCount: true,
		  borderImageOutset: true,
		  borderImageSlice: true,
		  borderImageWidth: true,
		  boxFlex: true,
		  boxFlexGroup: true,
		  boxOrdinalGroup: true,
		  columnCount: true,
		  flex: true,
		  flexGrow: true,
		  flexPositive: true,
		  flexShrink: true,
		  flexNegative: true,
		  flexOrder: true,
		  gridRow: true,
		  gridColumn: true,
		  fontWeight: true,
		  lineClamp: true,
		  lineHeight: true,
		  opacity: true,
		  order: true,
		  orphans: true,
		  tabSize: true,
		  widows: true,
		  zIndex: true,
		  zoom: true,
	
		  // SVG-related properties
		  fillOpacity: true,
		  floodOpacity: true,
		  stopOpacity: true,
		  strokeDasharray: true,
		  strokeDashoffset: true,
		  strokeMiterlimit: true,
		  strokeOpacity: true,
		  strokeWidth: true
		};
	
		/**
		 * @param {string} prefix vendor-specific prefix, eg: Webkit
		 * @param {string} key style name, eg: transitionDuration
		 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
		 * WebkitTransitionDuration
		 */
		function prefixKey(prefix, key) {
		  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
		}
	
		/**
		 * Support style names that may come passed in prefixed by adding permutations
		 * of vendor prefixes.
		 */
		var prefixes = ['Webkit', 'ms', 'Moz', 'O'];
	
		// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
		// infinite loop, because it iterates over the newly added props too.
		Object.keys(isUnitlessNumber).forEach(function (prop) {
		  prefixes.forEach(function (prefix) {
		    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
		  });
		});
	
		/**
		 * Most style properties can be unset by doing .style[prop] = '' but IE8
		 * doesn't like doing that with shorthand properties so for the properties that
		 * IE8 breaks on, which are listed here, we instead unset each of the
		 * individual properties. See http://bugs.jquery.com/ticket/12385.
		 * The 4-value 'clock' properties like margin, padding, border-width seem to
		 * behave without any problems. Curiously, list-style works too without any
		 * special prodding.
		 */
		var shorthandPropertyExpansions = {
		  background: {
		    backgroundAttachment: true,
		    backgroundColor: true,
		    backgroundImage: true,
		    backgroundPositionX: true,
		    backgroundPositionY: true,
		    backgroundRepeat: true
		  },
		  backgroundPosition: {
		    backgroundPositionX: true,
		    backgroundPositionY: true
		  },
		  border: {
		    borderWidth: true,
		    borderStyle: true,
		    borderColor: true
		  },
		  borderBottom: {
		    borderBottomWidth: true,
		    borderBottomStyle: true,
		    borderBottomColor: true
		  },
		  borderLeft: {
		    borderLeftWidth: true,
		    borderLeftStyle: true,
		    borderLeftColor: true
		  },
		  borderRight: {
		    borderRightWidth: true,
		    borderRightStyle: true,
		    borderRightColor: true
		  },
		  borderTop: {
		    borderTopWidth: true,
		    borderTopStyle: true,
		    borderTopColor: true
		  },
		  font: {
		    fontStyle: true,
		    fontVariant: true,
		    fontWeight: true,
		    fontSize: true,
		    lineHeight: true,
		    fontFamily: true
		  },
		  outline: {
		    outlineWidth: true,
		    outlineStyle: true,
		    outlineColor: true
		  }
		};
	
		var CSSProperty = {
		  isUnitlessNumber: isUnitlessNumber,
		  shorthandPropertyExpansions: shorthandPropertyExpansions
		};
	
		module.exports = CSSProperty;
	
	/***/ },
	/* 168 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * @typechecks
		 */
	
		'use strict';
	
		var camelize = __webpack_require__(169);
	
		var msPattern = /^-ms-/;
	
		/**
		 * Camelcases a hyphenated CSS property name, for example:
		 *
		 *   > camelizeStyleName('background-color')
		 *   < "backgroundColor"
		 *   > camelizeStyleName('-moz-transition')
		 *   < "MozTransition"
		 *   > camelizeStyleName('-ms-transition')
		 *   < "msTransition"
		 *
		 * As Andi Smith suggests
		 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
		 * is converted to lowercase `ms`.
		 *
		 * @param {string} string
		 * @return {string}
		 */
		function camelizeStyleName(string) {
		  return camelize(string.replace(msPattern, 'ms-'));
		}
	
		module.exports = camelizeStyleName;
	
	/***/ },
	/* 169 */
	/***/ function(module, exports) {
	
		"use strict";
	
		/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * @typechecks
		 */
	
		var _hyphenPattern = /-(.)/g;
	
		/**
		 * Camelcases a hyphenated string, for example:
		 *
		 *   > camelize('background-color')
		 *   < "backgroundColor"
		 *
		 * @param {string} string
		 * @return {string}
		 */
		function camelize(string) {
		  return string.replace(_hyphenPattern, function (_, character) {
		    return character.toUpperCase();
		  });
		}
	
		module.exports = camelize;
	
	/***/ },
	/* 170 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var CSSProperty = __webpack_require__(167);
		var warning = __webpack_require__(114);
	
		var isUnitlessNumber = CSSProperty.isUnitlessNumber;
		var styleWarnings = {};
	
		/**
		 * Convert a value into the proper css writable value. The style name `name`
		 * should be logical (no hyphens), as specified
		 * in `CSSProperty.isUnitlessNumber`.
		 *
		 * @param {string} name CSS property name such as `topMargin`.
		 * @param {*} value CSS property value such as `10px`.
		 * @param {ReactDOMComponent} component
		 * @return {string} Normalized style value with dimensions applied.
		 */
		function dangerousStyleValue(name, value, component) {
		  // Note that we've removed escapeTextForBrowser() calls here since the
		  // whole string will be escaped when the attribute is injected into
		  // the markup. If you provide unsafe user data here they can inject
		  // arbitrary CSS which may be problematic (I couldn't repro this):
		  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
		  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
		  // This is not an XSS hole but instead a potential CSS injection issue
		  // which has lead to a greater discussion about how we're going to
		  // trust URLs moving forward. See #2115901
	
		  var isEmpty = value == null || typeof value === 'boolean' || value === '';
		  if (isEmpty) {
		    return '';
		  }
	
		  var isNonNumeric = isNaN(value);
		  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
		    return '' + value; // cast to string
		  }
	
		  if (typeof value === 'string') {
		    if (process.env.NODE_ENV !== 'production') {
		      // Allow '0' to pass through without warning. 0 is already special and
		      // doesn't require units, so we don't need to warn about it.
		      if (component && value !== '0') {
		        var owner = component._currentElement._owner;
		        var ownerName = owner ? owner.getName() : null;
		        if (ownerName && !styleWarnings[ownerName]) {
		          styleWarnings[ownerName] = {};
		        }
		        var warned = false;
		        if (ownerName) {
		          var warnings = styleWarnings[ownerName];
		          warned = warnings[name];
		          if (!warned) {
		            warnings[name] = true;
		          }
		        }
		        if (!warned) {
		          process.env.NODE_ENV !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;
		        }
		      }
		    }
		    value = value.trim();
		  }
		  return value + 'px';
		}
	
		module.exports = dangerousStyleValue;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 171 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * @typechecks
		 */
	
		'use strict';
	
		var hyphenate = __webpack_require__(172);
	
		var msPattern = /^ms-/;
	
		/**
		 * Hyphenates a camelcased CSS property name, for example:
		 *
		 *   > hyphenateStyleName('backgroundColor')
		 *   < "background-color"
		 *   > hyphenateStyleName('MozTransition')
		 *   < "-moz-transition"
		 *   > hyphenateStyleName('msTransition')
		 *   < "-ms-transition"
		 *
		 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
		 * is converted to `-ms-`.
		 *
		 * @param {string} string
		 * @return {string}
		 */
		function hyphenateStyleName(string) {
		  return hyphenate(string).replace(msPattern, '-ms-');
		}
	
		module.exports = hyphenateStyleName;
	
	/***/ },
	/* 172 */
	/***/ function(module, exports) {
	
		'use strict';
	
		/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * @typechecks
		 */
	
		var _uppercasePattern = /([A-Z])/g;
	
		/**
		 * Hyphenates a camelcased string, for example:
		 *
		 *   > hyphenate('backgroundColor')
		 *   < "background-color"
		 *
		 * For CSS style names, use `hyphenateStyleName` instead which works properly
		 * with all vendor prefixes, including `ms`.
		 *
		 * @param {string} string
		 * @return {string}
		 */
		function hyphenate(string) {
		  return string.replace(_uppercasePattern, '-$1').toLowerCase();
		}
	
		module.exports = hyphenate;
	
	/***/ },
	/* 173 */
	/***/ function(module, exports) {
	
		/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * 
		 * @typechecks static-only
		 */
	
		'use strict';
	
		/**
		 * Memoizes the return value of a function that accepts one string argument.
		 */
	
		function memoizeStringOnly(callback) {
		  var cache = {};
		  return function (string) {
		    if (!cache.hasOwnProperty(string)) {
		      cache[string] = callback.call(this, string);
		    }
		    return cache[string];
		  };
		}
	
		module.exports = memoizeStringOnly;
	
	/***/ },
	/* 174 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var DOMProperty = __webpack_require__(103);
		var ReactDOMComponentTree = __webpack_require__(101);
		var ReactInstrumentation = __webpack_require__(133);
	
		var quoteAttributeValueForBrowser = __webpack_require__(175);
		var warning = __webpack_require__(114);
	
		var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
		var illegalAttributeNameCache = {};
		var validatedAttributeNameCache = {};
	
		function isAttributeNameSafe(attributeName) {
		  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
		    return true;
		  }
		  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
		    return false;
		  }
		  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
		    validatedAttributeNameCache[attributeName] = true;
		    return true;
		  }
		  illegalAttributeNameCache[attributeName] = true;
		  process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;
		  return false;
		}
	
		function shouldIgnoreValue(propertyInfo, value) {
		  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
		}
	
		/**
		 * Operations for dealing with DOM properties.
		 */
		var DOMPropertyOperations = {
	
		  /**
		   * Creates markup for the ID property.
		   *
		   * @param {string} id Unescaped ID.
		   * @return {string} Markup string.
		   */
		  createMarkupForID: function (id) {
		    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
		  },
	
		  setAttributeForID: function (node, id) {
		    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
		  },
	
		  createMarkupForRoot: function () {
		    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=""';
		  },
	
		  setAttributeForRoot: function (node) {
		    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');
		  },
	
		  /**
		   * Creates markup for a property.
		   *
		   * @param {string} name
		   * @param {*} value
		   * @return {?string} Markup string, or null if the property was invalid.
		   */
		  createMarkupForProperty: function (name, value) {
		    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
		    if (propertyInfo) {
		      if (shouldIgnoreValue(propertyInfo, value)) {
		        return '';
		      }
		      var attributeName = propertyInfo.attributeName;
		      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
		        return attributeName + '=""';
		      }
		      return attributeName + '=' + quoteAttributeValueForBrowser(value);
		    } else if (DOMProperty.isCustomAttribute(name)) {
		      if (value == null) {
		        return '';
		      }
		      return name + '=' + quoteAttributeValueForBrowser(value);
		    }
		    return null;
		  },
	
		  /**
		   * Creates markup for a custom property.
		   *
		   * @param {string} name
		   * @param {*} value
		   * @return {string} Markup string, or empty string if the property was invalid.
		   */
		  createMarkupForCustomAttribute: function (name, value) {
		    if (!isAttributeNameSafe(name) || value == null) {
		      return '';
		    }
		    return name + '=' + quoteAttributeValueForBrowser(value);
		  },
	
		  /**
		   * Sets the value for a property on a node.
		   *
		   * @param {DOMElement} node
		   * @param {string} name
		   * @param {*} value
		   */
		  setValueForProperty: function (node, name, value) {
		    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
		    if (propertyInfo) {
		      var mutationMethod = propertyInfo.mutationMethod;
		      if (mutationMethod) {
		        mutationMethod(node, value);
		      } else if (shouldIgnoreValue(propertyInfo, value)) {
		        this.deleteValueForProperty(node, name);
		        return;
		      } else if (propertyInfo.mustUseProperty) {
		        // Contrary to `setAttribute`, object properties are properly
		        // `toString`ed by IE8/9.
		        node[propertyInfo.propertyName] = value;
		      } else {
		        var attributeName = propertyInfo.attributeName;
		        var namespace = propertyInfo.attributeNamespace;
		        // `setAttribute` with objects becomes only `[object]` in IE8/9,
		        // ('' + value) makes it output the correct toString()-value.
		        if (namespace) {
		          node.setAttributeNS(namespace, attributeName, '' + value);
		        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
		          node.setAttribute(attributeName, '');
		        } else {
		          node.setAttribute(attributeName, '' + value);
		        }
		      }
		    } else if (DOMProperty.isCustomAttribute(name)) {
		      DOMPropertyOperations.setValueForAttribute(node, name, value);
		      return;
		    }
	
		    if (process.env.NODE_ENV !== 'production') {
		      var payload = {};
		      payload[name] = value;
		      ReactInstrumentation.debugTool.onHostOperation({
		        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
		        type: 'update attribute',
		        payload: payload
		      });
		    }
		  },
	
		  setValueForAttribute: function (node, name, value) {
		    if (!isAttributeNameSafe(name)) {
		      return;
		    }
		    if (value == null) {
		      node.removeAttribute(name);
		    } else {
		      node.setAttribute(name, '' + value);
		    }
	
		    if (process.env.NODE_ENV !== 'production') {
		      var payload = {};
		      payload[name] = value;
		      ReactInstrumentation.debugTool.onHostOperation({
		        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
		        type: 'update attribute',
		        payload: payload
		      });
		    }
		  },
	
		  /**
		   * Deletes an attributes from a node.
		   *
		   * @param {DOMElement} node
		   * @param {string} name
		   */
		  deleteValueForAttribute: function (node, name) {
		    node.removeAttribute(name);
		    if (process.env.NODE_ENV !== 'production') {
		      ReactInstrumentation.debugTool.onHostOperation({
		        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
		        type: 'remove attribute',
		        payload: name
		      });
		    }
		  },
	
		  /**
		   * Deletes the value for a property on a node.
		   *
		   * @param {DOMElement} node
		   * @param {string} name
		   */
		  deleteValueForProperty: function (node, name) {
		    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
		    if (propertyInfo) {
		      var mutationMethod = propertyInfo.mutationMethod;
		      if (mutationMethod) {
		        mutationMethod(node, undefined);
		      } else if (propertyInfo.mustUseProperty) {
		        var propName = propertyInfo.propertyName;
		        if (propertyInfo.hasBooleanValue) {
		          node[propName] = false;
		        } else {
		          node[propName] = '';
		        }
		      } else {
		        node.removeAttribute(propertyInfo.attributeName);
		      }
		    } else if (DOMProperty.isCustomAttribute(name)) {
		      node.removeAttribute(name);
		    }
	
		    if (process.env.NODE_ENV !== 'production') {
		      ReactInstrumentation.debugTool.onHostOperation({
		        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
		        type: 'remove attribute',
		        payload: name
		      });
		    }
		  }
	
		};
	
		module.exports = DOMPropertyOperations;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 175 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var escapeTextContentForBrowser = __webpack_require__(157);
	
		/**
		 * Escapes attribute value to prevent scripting attacks.
		 *
		 * @param {*} value Value to escape.
		 * @return {string} An escaped string.
		 */
		function quoteAttributeValueForBrowser(value) {
		  return '"' + escapeTextContentForBrowser(value) + '"';
		}
	
		module.exports = quoteAttributeValueForBrowser;
	
	/***/ },
	/* 176 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var _assign = __webpack_require__(120);
	
		var EventPluginRegistry = __webpack_require__(111);
		var ReactEventEmitterMixin = __webpack_require__(177);
		var ViewportMetrics = __webpack_require__(147);
	
		var getVendorPrefixedEventName = __webpack_require__(178);
		var isEventSupported = __webpack_require__(141);
	
		/**
		 * Summary of `ReactBrowserEventEmitter` event handling:
		 *
		 *  - Top-level delegation is used to trap most native browser events. This
		 *    may only occur in the main thread and is the responsibility of
		 *    ReactEventListener, which is injected and can therefore support pluggable
		 *    event sources. This is the only work that occurs in the main thread.
		 *
		 *  - We normalize and de-duplicate events to account for browser quirks. This
		 *    may be done in the worker thread.
		 *
		 *  - Forward these native events (with the associated top-level type used to
		 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
		 *    to extract any synthetic events.
		 *
		 *  - The `EventPluginHub` will then process each event by annotating them with
		 *    "dispatches", a sequence of listeners and IDs that care about that event.
		 *
		 *  - The `EventPluginHub` then dispatches the events.
		 *
		 * Overview of React and the event system:
		 *
		 * +------------+    .
		 * |    DOM     |    .
		 * +------------+    .
		 *       |           .
		 *       v           .
		 * +------------+    .
		 * | ReactEvent |    .
		 * |  Listener  |    .
		 * +------------+    .                         +-----------+
		 *       |           .               +--------+|SimpleEvent|
		 *       |           .               |         |Plugin     |
		 * +-----|------+    .               v         +-----------+
		 * |     |      |    .    +--------------+                    +------------+
		 * |     +-----------.--->|EventPluginHub|                    |    Event   |
		 * |            |    .    |              |     +-----------+  | Propagators|
		 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
		 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
		 * |            |    .    |              |     +-----------+  |  utilities |
		 * |     +-----------.--->|              |                    +------------+
		 * |     |      |    .    +--------------+
		 * +-----|------+    .                ^        +-----------+
		 *       |           .                |        |Enter/Leave|
		 *       +           .                +-------+|Plugin     |
		 * +-------------+   .                         +-----------+
		 * | application |   .
		 * |-------------|   .
		 * |             |   .
		 * |             |   .
		 * +-------------+   .
		 *                   .
		 *    React Core     .  General Purpose Event Plugin System
		 */
	
		var hasEventPageXY;
		var alreadyListeningTo = {};
		var isMonitoringScrollValue = false;
		var reactTopListenersCounter = 0;
	
		// For events like 'submit' which don't consistently bubble (which we trap at a
		// lower node than `document`), binding at `document` would cause duplicate
		// events so we don't include them here
		var topEventMapping = {
		  topAbort: 'abort',
		  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',
		  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',
		  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',
		  topBlur: 'blur',
		  topCanPlay: 'canplay',
		  topCanPlayThrough: 'canplaythrough',
		  topChange: 'change',
		  topClick: 'click',
		  topCompositionEnd: 'compositionend',
		  topCompositionStart: 'compositionstart',
		  topCompositionUpdate: 'compositionupdate',
		  topContextMenu: 'contextmenu',
		  topCopy: 'copy',
		  topCut: 'cut',
		  topDoubleClick: 'dblclick',
		  topDrag: 'drag',
		  topDragEnd: 'dragend',
		  topDragEnter: 'dragenter',
		  topDragExit: 'dragexit',
		  topDragLeave: 'dragleave',
		  topDragOver: 'dragover',
		  topDragStart: 'dragstart',
		  topDrop: 'drop',
		  topDurationChange: 'durationchange',
		  topEmptied: 'emptied',
		  topEncrypted: 'encrypted',
		  topEnded: 'ended',
		  topError: 'error',
		  topFocus: 'focus',
		  topInput: 'input',
		  topKeyDown: 'keydown',
		  topKeyPress: 'keypress',
		  topKeyUp: 'keyup',
		  topLoadedData: 'loadeddata',
		  topLoadedMetadata: 'loadedmetadata',
		  topLoadStart: 'loadstart',
		  topMouseDown: 'mousedown',
		  topMouseMove: 'mousemove',
		  topMouseOut: 'mouseout',
		  topMouseOver: 'mouseover',
		  topMouseUp: 'mouseup',
		  topPaste: 'paste',
		  topPause: 'pause',
		  topPlay: 'play',
		  topPlaying: 'playing',
		  topProgress: 'progress',
		  topRateChange: 'ratechange',
		  topScroll: 'scroll',
		  topSeeked: 'seeked',
		  topSeeking: 'seeking',
		  topSelectionChange: 'selectionchange',
		  topStalled: 'stalled',
		  topSuspend: 'suspend',
		  topTextInput: 'textInput',
		  topTimeUpdate: 'timeupdate',
		  topTouchCancel: 'touchcancel',
		  topTouchEnd: 'touchend',
		  topTouchMove: 'touchmove',
		  topTouchStart: 'touchstart',
		  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',
		  topVolumeChange: 'volumechange',
		  topWaiting: 'waiting',
		  topWheel: 'wheel'
		};
	
		/**
		 * To ensure no conflicts with other potential React instances on the page
		 */
		var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);
	
		function getListeningForDocument(mountAt) {
		  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
		  // directly.
		  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
		    mountAt[topListenersIDKey] = reactTopListenersCounter++;
		    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
		  }
		  return alreadyListeningTo[mountAt[topListenersIDKey]];
		}
	
		/**
		 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
		 * example:
		 *
		 *   EventPluginHub.putListener('myID', 'onClick', myFunction);
		 *
		 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
		 *
		 * @internal
		 */
		var ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {
	
		  /**
		   * Injectable event backend
		   */
		  ReactEventListener: null,
	
		  injection: {
		    /**
		     * @param {object} ReactEventListener
		     */
		    injectReactEventListener: function (ReactEventListener) {
		      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
		      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
		    }
		  },
	
		  /**
		   * Sets whether or not any created callbacks should be enabled.
		   *
		   * @param {boolean} enabled True if callbacks should be enabled.
		   */
		  setEnabled: function (enabled) {
		    if (ReactBrowserEventEmitter.ReactEventListener) {
		      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
		    }
		  },
	
		  /**
		   * @return {boolean} True if callbacks are enabled.
		   */
		  isEnabled: function () {
		    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
		  },
	
		  /**
		   * We listen for bubbled touch events on the document object.
		   *
		   * Firefox v8.01 (and possibly others) exhibited strange behavior when
		   * mounting `onmousemove` events at some node that was not the document
		   * element. The symptoms were that if your mouse is not moving over something
		   * contained within that mount point (for example on the background) the
		   * top-level listeners for `onmousemove` won't be called. However, if you
		   * register the `mousemove` on the document object, then it will of course
		   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
		   * top-level listeners to the document object only, at least for these
		   * movement types of events and possibly all events.
		   *
		   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
		   *
		   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
		   * they bubble to document.
		   *
		   * @param {string} registrationName Name of listener (e.g. `onClick`).
		   * @param {object} contentDocumentHandle Document which owns the container
		   */
		  listenTo: function (registrationName, contentDocumentHandle) {
		    var mountAt = contentDocumentHandle;
		    var isListening = getListeningForDocument(mountAt);
		    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];
	
		    for (var i = 0; i < dependencies.length; i++) {
		      var dependency = dependencies[i];
		      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
		        if (dependency === 'topWheel') {
		          if (isEventSupported('wheel')) {
		            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'wheel', mountAt);
		          } else if (isEventSupported('mousewheel')) {
		            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'mousewheel', mountAt);
		          } else {
		            // Firefox needs to capture a different mouse scroll event.
		            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
		            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'DOMMouseScroll', mountAt);
		          }
		        } else if (dependency === 'topScroll') {
	
		          if (isEventSupported('scroll', true)) {
		            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topScroll', 'scroll', mountAt);
		          } else {
		            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topScroll', 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
		          }
		        } else if (dependency === 'topFocus' || dependency === 'topBlur') {
	
		          if (isEventSupported('focus', true)) {
		            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topFocus', 'focus', mountAt);
		            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topBlur', 'blur', mountAt);
		          } else if (isEventSupported('focusin')) {
		            // IE has `focusin` and `focusout` events which bubble.
		            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
		            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topFocus', 'focusin', mountAt);
		            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topBlur', 'focusout', mountAt);
		          }
	
		          // to make sure blur and focus event listeners are only attached once
		          isListening.topBlur = true;
		          isListening.topFocus = true;
		        } else if (topEventMapping.hasOwnProperty(dependency)) {
		          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
		        }
	
		        isListening[dependency] = true;
		      }
		    }
		  },
	
		  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
		    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
		  },
	
		  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
		    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
		  },
	
		  /**
		   * Protect against document.createEvent() returning null
		   * Some popup blocker extensions appear to do this:
		   * https://github.com/facebook/react/issues/6887
		   */
		  supportsEventPageXY: function () {
		    if (!document.createEvent) {
		      return false;
		    }
		    var ev = document.createEvent('MouseEvent');
		    return ev != null && 'pageX' in ev;
		  },
	
		  /**
		   * Listens to window scroll and resize events. We cache scroll values so that
		   * application code can access them without triggering reflows.
		   *
		   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when
		   * pageX/pageY isn't supported (legacy browsers).
		   *
		   * NOTE: Scroll events do not bubble.
		   *
		   * @see http://www.quirksmode.org/dom/events/scroll.html
		   */
		  ensureScrollValueMonitoring: function () {
		    if (hasEventPageXY === undefined) {
		      hasEventPageXY = ReactBrowserEventEmitter.supportsEventPageXY();
		    }
		    if (!hasEventPageXY && !isMonitoringScrollValue) {
		      var refresh = ViewportMetrics.refreshScrollValues;
		      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
		      isMonitoringScrollValue = true;
		    }
		  }
	
		});
	
		module.exports = ReactBrowserEventEmitter;
	
	/***/ },
	/* 177 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var EventPluginHub = __webpack_require__(110);
	
		function runEventQueueInBatch(events) {
		  EventPluginHub.enqueueEvents(events);
		  EventPluginHub.processEventQueue(false);
		}
	
		var ReactEventEmitterMixin = {
	
		  /**
		   * Streams a fired top-level event to `EventPluginHub` where plugins have the
		   * opportunity to create `ReactEvent`s to be dispatched.
		   */
		  handleTopLevel: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
		    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
		    runEventQueueInBatch(events);
		  }
		};
	
		module.exports = ReactEventEmitterMixin;
	
	/***/ },
	/* 178 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var ExecutionEnvironment = __webpack_require__(118);
	
		/**
		 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
		 *
		 * @param {string} styleProp
		 * @param {string} eventName
		 * @returns {object}
		 */
		function makePrefixMap(styleProp, eventName) {
		  var prefixes = {};
	
		  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
		  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
		  prefixes['Moz' + styleProp] = 'moz' + eventName;
		  prefixes['ms' + styleProp] = 'MS' + eventName;
		  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();
	
		  return prefixes;
		}
	
		/**
		 * A list of event names to a configurable list of vendor prefixes.
		 */
		var vendorPrefixes = {
		  animationend: makePrefixMap('Animation', 'AnimationEnd'),
		  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
		  animationstart: makePrefixMap('Animation', 'AnimationStart'),
		  transitionend: makePrefixMap('Transition', 'TransitionEnd')
		};
	
		/**
		 * Event names that have already been detected and prefixed (if applicable).
		 */
		var prefixedEventNames = {};
	
		/**
		 * Element to check for prefixes on.
		 */
		var style = {};
	
		/**
		 * Bootstrap if a DOM exists.
		 */
		if (ExecutionEnvironment.canUseDOM) {
		  style = document.createElement('div').style;
	
		  // On some platforms, in particular some releases of Android 4.x,
		  // the un-prefixed "animation" and "transition" properties are defined on the
		  // style object but the events that fire will still be prefixed, so we need
		  // to check if the un-prefixed events are usable, and if not remove them from the map.
		  if (!('AnimationEvent' in window)) {
		    delete vendorPrefixes.animationend.animation;
		    delete vendorPrefixes.animationiteration.animation;
		    delete vendorPrefixes.animationstart.animation;
		  }
	
		  // Same as above
		  if (!('TransitionEvent' in window)) {
		    delete vendorPrefixes.transitionend.transition;
		  }
		}
	
		/**
		 * Attempts to determine the correct vendor prefixed event name.
		 *
		 * @param {string} eventName
		 * @returns {string}
		 */
		function getVendorPrefixedEventName(eventName) {
		  if (prefixedEventNames[eventName]) {
		    return prefixedEventNames[eventName];
		  } else if (!vendorPrefixes[eventName]) {
		    return eventName;
		  }
	
		  var prefixMap = vendorPrefixes[eventName];
	
		  for (var styleProp in prefixMap) {
		    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
		      return prefixedEventNames[eventName] = prefixMap[styleProp];
		    }
		  }
	
		  return '';
		}
	
		module.exports = getVendorPrefixedEventName;
	
	/***/ },
	/* 179 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var _prodInvariant = __webpack_require__(102),
		    _assign = __webpack_require__(120);
	
		var DOMPropertyOperations = __webpack_require__(174);
		var LinkedValueUtils = __webpack_require__(180);
		var ReactDOMComponentTree = __webpack_require__(101);
		var ReactUpdates = __webpack_require__(127);
	
		var invariant = __webpack_require__(104);
		var warning = __webpack_require__(114);
	
		var didWarnValueLink = false;
		var didWarnCheckedLink = false;
		var didWarnValueDefaultValue = false;
		var didWarnCheckedDefaultChecked = false;
		var didWarnControlledToUncontrolled = false;
		var didWarnUncontrolledToControlled = false;
	
		function forceUpdateIfMounted() {
		  if (this._rootNodeID) {
		    // DOM component is still mounted; update
		    ReactDOMInput.updateWrapper(this);
		  }
		}
	
		function isControlled(props) {
		  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
		  return usesChecked ? props.checked != null : props.value != null;
		}
	
		/**
		 * Implements an <input> host component that allows setting these optional
		 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
		 *
		 * If `checked` or `value` are not supplied (or null/undefined), user actions
		 * that affect the checked state or value will trigger updates to the element.
		 *
		 * If they are supplied (and not null/undefined), the rendered element will not
		 * trigger updates to the element. Instead, the props must change in order for
		 * the rendered element to be updated.
		 *
		 * The rendered element will be initialized as unchecked (or `defaultChecked`)
		 * with an empty value (or `defaultValue`).
		 *
		 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
		 */
		var ReactDOMInput = {
		  getHostProps: function (inst, props) {
		    var value = LinkedValueUtils.getValue(props);
		    var checked = LinkedValueUtils.getChecked(props);
	
		    var hostProps = _assign({
		      // Make sure we set .type before any other properties (setting .value
		      // before .type means .value is lost in IE11 and below)
		      type: undefined,
		      // Make sure we set .step before .value (setting .value before .step
		      // means .value is rounded on mount, based upon step precision)
		      step: undefined,
		      // Make sure we set .min & .max before .value (to ensure proper order
		      // in corner cases such as min or max deriving from value, e.g. Issue #7170)
		      min: undefined,
		      max: undefined
		    }, props, {
		      defaultChecked: undefined,
		      defaultValue: undefined,
		      value: value != null ? value : inst._wrapperState.initialValue,
		      checked: checked != null ? checked : inst._wrapperState.initialChecked,
		      onChange: inst._wrapperState.onChange
		    });
	
		    return hostProps;
		  },
	
		  mountWrapper: function (inst, props) {
		    if (process.env.NODE_ENV !== 'production') {
		      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);
	
		      var owner = inst._currentElement._owner;
	
		      if (props.valueLink !== undefined && !didWarnValueLink) {
		        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
		        didWarnValueLink = true;
		      }
		      if (props.checkedLink !== undefined && !didWarnCheckedLink) {
		        process.env.NODE_ENV !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
		        didWarnCheckedLink = true;
		      }
		      if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
		        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
		        didWarnCheckedDefaultChecked = true;
		      }
		      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
		        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
		        didWarnValueDefaultValue = true;
		      }
		    }
	
		    var defaultValue = props.defaultValue;
		    inst._wrapperState = {
		      initialChecked: props.checked != null ? props.checked : props.defaultChecked,
		      initialValue: props.value != null ? props.value : defaultValue,
		      listeners: null,
		      onChange: _handleChange.bind(inst)
		    };
	
		    if (process.env.NODE_ENV !== 'production') {
		      inst._wrapperState.controlled = isControlled(props);
		    }
		  },
	
		  updateWrapper: function (inst) {
		    var props = inst._currentElement.props;
	
		    if (process.env.NODE_ENV !== 'production') {
		      var controlled = isControlled(props);
		      var owner = inst._currentElement._owner;
	
		      if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
		        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
		        didWarnUncontrolledToControlled = true;
		      }
		      if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
		        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
		        didWarnControlledToUncontrolled = true;
		      }
		    }
	
		    // TODO: Shouldn't this be getChecked(props)?
		    var checked = props.checked;
		    if (checked != null) {
		      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);
		    }
	
		    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
		    var value = LinkedValueUtils.getValue(props);
		    if (value != null) {
	
		      // Cast `value` to a string to ensure the value is set correctly. While
		      // browsers typically do this as necessary, jsdom doesn't.
		      var newValue = '' + value;
	
		      // To avoid side effects (such as losing text selection), only set value if changed
		      if (newValue !== node.value) {
		        node.value = newValue;
		      }
		    } else {
		      if (props.value == null && props.defaultValue != null) {
		        // In Chrome, assigning defaultValue to certain input types triggers input validation.
		        // For number inputs, the display value loses trailing decimal points. For email inputs,
		        // Chrome raises "The specified value <x> is not a valid email address".
		        //
		        // Here we check to see if the defaultValue has actually changed, avoiding these problems
		        // when the user is inputting text
		        //
		        // https://github.com/facebook/react/issues/7253
		        if (node.defaultValue !== '' + props.defaultValue) {
		          node.defaultValue = '' + props.defaultValue;
		        }
		      }
		      if (props.checked == null && props.defaultChecked != null) {
		        node.defaultChecked = !!props.defaultChecked;
		      }
		    }
		  },
	
		  postMountWrapper: function (inst) {
		    var props = inst._currentElement.props;
	
		    // This is in postMount because we need access to the DOM node, which is not
		    // available until after the component has mounted.
		    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	
		    // Detach value from defaultValue. We won't do anything if we're working on
		    // submit or reset inputs as those values & defaultValues are linked. They
		    // are not resetable nodes so this operation doesn't matter and actually
		    // removes browser-default values (eg "Submit Query") when no value is
		    // provided.
	
		    switch (props.type) {
		      case 'submit':
		      case 'reset':
		        break;
		      case 'color':
		      case 'date':
		      case 'datetime':
		      case 'datetime-local':
		      case 'month':
		      case 'time':
		      case 'week':
		        // This fixes the no-show issue on iOS Safari and Android Chrome:
		        // https://github.com/facebook/react/issues/7233
		        node.value = '';
		        node.value = node.defaultValue;
		        break;
		      default:
		        node.value = node.value;
		        break;
		    }
	
		    // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
		    // this is needed to work around a chrome bug where setting defaultChecked
		    // will sometimes influence the value of checked (even after detachment).
		    // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
		    // We need to temporarily unset name to avoid disrupting radio button groups.
		    var name = node.name;
		    if (name !== '') {
		      node.name = '';
		    }
		    node.defaultChecked = !node.defaultChecked;
		    node.defaultChecked = !node.defaultChecked;
		    if (name !== '') {
		      node.name = name;
		    }
		  }
		};
	
		function _handleChange(event) {
		  var props = this._currentElement.props;
	
		  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	
		  // Here we use asap to wait until all updates have propagated, which
		  // is important when using controlled components within layers:
		  // https://github.com/facebook/react/issues/1698
		  ReactUpdates.asap(forceUpdateIfMounted, this);
	
		  var name = props.name;
		  if (props.type === 'radio' && name != null) {
		    var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);
		    var queryRoot = rootNode;
	
		    while (queryRoot.parentNode) {
		      queryRoot = queryRoot.parentNode;
		    }
	
		    // If `rootNode.form` was non-null, then we could try `form.elements`,
		    // but that sometimes behaves strangely in IE8. We could also try using
		    // `form.getElementsByName`, but that will only return direct children
		    // and won't include inputs that use the HTML5 `form=` attribute. Since
		    // the input might not even be in a form, let's just use the global
		    // `querySelectorAll` to ensure we don't miss anything.
		    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');
	
		    for (var i = 0; i < group.length; i++) {
		      var otherNode = group[i];
		      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
		        continue;
		      }
		      // This will throw if radio buttons rendered by different copies of React
		      // and the same name are rendered into the same form (same as #1939).
		      // That's probably okay; we don't support it just as we don't support
		      // mixing React radio buttons with non-React ones.
		      var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);
		      !otherInstance ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : _prodInvariant('90') : void 0;
		      // If this is a controlled radio button group, forcing the input that
		      // was previously checked to update will cause it to be come re-checked
		      // as appropriate.
		      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
		    }
		  }
	
		  return returnValue;
		}
	
		module.exports = ReactDOMInput;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 180 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var _prodInvariant = __webpack_require__(102);
	
		var React = __webpack_require__(69);
		var ReactPropTypesSecret = __webpack_require__(181);
	
		var invariant = __webpack_require__(104);
		var warning = __webpack_require__(114);
	
		var hasReadOnlyValue = {
		  'button': true,
		  'checkbox': true,
		  'image': true,
		  'hidden': true,
		  'radio': true,
		  'reset': true,
		  'submit': true
		};
	
		function _assertSingleLink(inputProps) {
		  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;
		}
		function _assertValueLink(inputProps) {
		  _assertSingleLink(inputProps);
		  !(inputProps.value == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\'t want to use valueLink.') : _prodInvariant('88') : void 0;
		}
	
		function _assertCheckedLink(inputProps) {
		  _assertSingleLink(inputProps);
		  !(inputProps.checked == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\'t want to use checkedLink') : _prodInvariant('89') : void 0;
		}
	
		var propTypes = {
		  value: function (props, propName, componentName) {
		    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
		      return null;
		    }
		    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
		  },
		  checked: function (props, propName, componentName) {
		    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
		      return null;
		    }
		    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
		  },
		  onChange: React.PropTypes.func
		};
	
		var loggedTypeFailures = {};
		function getDeclarationErrorAddendum(owner) {
		  if (owner) {
		    var name = owner.getName();
		    if (name) {
		      return ' Check the render method of `' + name + '`.';
		    }
		  }
		  return '';
		}
	
		/**
		 * Provide a linked `value` attribute for controlled forms. You should not use
		 * this outside of the ReactDOM controlled form components.
		 */
		var LinkedValueUtils = {
		  checkPropTypes: function (tagName, props, owner) {
		    for (var propName in propTypes) {
		      if (propTypes.hasOwnProperty(propName)) {
		        var error = propTypes[propName](props, propName, tagName, 'prop', null, ReactPropTypesSecret);
		      }
		      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
		        // Only monitor this failure once because there tends to be a lot of the
		        // same error.
		        loggedTypeFailures[error.message] = true;
	
		        var addendum = getDeclarationErrorAddendum(owner);
		        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;
		      }
		    }
		  },
	
		  /**
		   * @param {object} inputProps Props for form component
		   * @return {*} current value of the input either from value prop or link.
		   */
		  getValue: function (inputProps) {
		    if (inputProps.valueLink) {
		      _assertValueLink(inputProps);
		      return inputProps.valueLink.value;
		    }
		    return inputProps.value;
		  },
	
		  /**
		   * @param {object} inputProps Props for form component
		   * @return {*} current checked status of the input either from checked prop
		   *             or link.
		   */
		  getChecked: function (inputProps) {
		    if (inputProps.checkedLink) {
		      _assertCheckedLink(inputProps);
		      return inputProps.checkedLink.value;
		    }
		    return inputProps.checked;
		  },
	
		  /**
		   * @param {object} inputProps Props for form component
		   * @param {SyntheticEvent} event change event to handle
		   */
		  executeOnChange: function (inputProps, event) {
		    if (inputProps.valueLink) {
		      _assertValueLink(inputProps);
		      return inputProps.valueLink.requestChange(event.target.value);
		    } else if (inputProps.checkedLink) {
		      _assertCheckedLink(inputProps);
		      return inputProps.checkedLink.requestChange(event.target.checked);
		    } else if (inputProps.onChange) {
		      return inputProps.onChange.call(undefined, event);
		    }
		  }
		};
	
		module.exports = LinkedValueUtils;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 181 */
	/***/ function(module, exports) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * 
		 */
	
		'use strict';
	
		var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
	
		module.exports = ReactPropTypesSecret;
	
	/***/ },
	/* 182 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var _assign = __webpack_require__(120);
	
		var React = __webpack_require__(69);
		var ReactDOMComponentTree = __webpack_require__(101);
		var ReactDOMSelect = __webpack_require__(183);
	
		var warning = __webpack_require__(114);
		var didWarnInvalidOptionChildren = false;
	
		function flattenChildren(children) {
		  var content = '';
	
		  // Flatten children and warn if they aren't strings or numbers;
		  // invalid types are ignored.
		  React.Children.forEach(children, function (child) {
		    if (child == null) {
		      return;
		    }
		    if (typeof child === 'string' || typeof child === 'number') {
		      content += child;
		    } else if (!didWarnInvalidOptionChildren) {
		      didWarnInvalidOptionChildren = true;
		      process.env.NODE_ENV !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;
		    }
		  });
	
		  return content;
		}
	
		/**
		 * Implements an <option> host component that warns when `selected` is set.
		 */
		var ReactDOMOption = {
		  mountWrapper: function (inst, props, hostParent) {
		    // TODO (yungsters): Remove support for `selected` in <option>.
		    if (process.env.NODE_ENV !== 'production') {
		      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;
		    }
	
		    // Look up whether this option is 'selected'
		    var selectValue = null;
		    if (hostParent != null) {
		      var selectParent = hostParent;
	
		      if (selectParent._tag === 'optgroup') {
		        selectParent = selectParent._hostParent;
		      }
	
		      if (selectParent != null && selectParent._tag === 'select') {
		        selectValue = ReactDOMSelect.getSelectValueContext(selectParent);
		      }
		    }
	
		    // If the value is null (e.g., no specified value or after initial mount)
		    // or missing (e.g., for <datalist>), we don't change props.selected
		    var selected = null;
		    if (selectValue != null) {
		      var value;
		      if (props.value != null) {
		        value = props.value + '';
		      } else {
		        value = flattenChildren(props.children);
		      }
		      selected = false;
		      if (Array.isArray(selectValue)) {
		        // multiple
		        for (var i = 0; i < selectValue.length; i++) {
		          if ('' + selectValue[i] === value) {
		            selected = true;
		            break;
		          }
		        }
		      } else {
		        selected = '' + selectValue === value;
		      }
		    }
	
		    inst._wrapperState = { selected: selected };
		  },
	
		  postMountWrapper: function (inst) {
		    // value="" should make a value attribute (#6219)
		    var props = inst._currentElement.props;
		    if (props.value != null) {
		      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
		      node.setAttribute('value', props.value);
		    }
		  },
	
		  getHostProps: function (inst, props) {
		    var hostProps = _assign({ selected: undefined, children: undefined }, props);
	
		    // Read state only from initial mount because <select> updates value
		    // manually; we need the initial state only for server rendering
		    if (inst._wrapperState.selected != null) {
		      hostProps.selected = inst._wrapperState.selected;
		    }
	
		    var content = flattenChildren(props.children);
	
		    if (content) {
		      hostProps.children = content;
		    }
	
		    return hostProps;
		  }
	
		};
	
		module.exports = ReactDOMOption;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 183 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var _assign = __webpack_require__(120);
	
		var LinkedValueUtils = __webpack_require__(180);
		var ReactDOMComponentTree = __webpack_require__(101);
		var ReactUpdates = __webpack_require__(127);
	
		var warning = __webpack_require__(114);
	
		var didWarnValueLink = false;
		var didWarnValueDefaultValue = false;
	
		function updateOptionsIfPendingUpdateAndMounted() {
		  if (this._rootNodeID && this._wrapperState.pendingUpdate) {
		    this._wrapperState.pendingUpdate = false;
	
		    var props = this._currentElement.props;
		    var value = LinkedValueUtils.getValue(props);
	
		    if (value != null) {
		      updateOptions(this, Boolean(props.multiple), value);
		    }
		  }
		}
	
		function getDeclarationErrorAddendum(owner) {
		  if (owner) {
		    var name = owner.getName();
		    if (name) {
		      return ' Check the render method of `' + name + '`.';
		    }
		  }
		  return '';
		}
	
		var valuePropNames = ['value', 'defaultValue'];
	
		/**
		 * Validation function for `value` and `defaultValue`.
		 * @private
		 */
		function checkSelectPropTypes(inst, props) {
		  var owner = inst._currentElement._owner;
		  LinkedValueUtils.checkPropTypes('select', props, owner);
	
		  if (props.valueLink !== undefined && !didWarnValueLink) {
		    process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;
		    didWarnValueLink = true;
		  }
	
		  for (var i = 0; i < valuePropNames.length; i++) {
		    var propName = valuePropNames[i];
		    if (props[propName] == null) {
		      continue;
		    }
		    var isArray = Array.isArray(props[propName]);
		    if (props.multiple && !isArray) {
		      process.env.NODE_ENV !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
		    } else if (!props.multiple && isArray) {
		      process.env.NODE_ENV !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
		    }
		  }
		}
	
		/**
		 * @param {ReactDOMComponent} inst
		 * @param {boolean} multiple
		 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
		 * @private
		 */
		function updateOptions(inst, multiple, propValue) {
		  var selectedValue, i;
		  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;
	
		  if (multiple) {
		    selectedValue = {};
		    for (i = 0; i < propValue.length; i++) {
		      selectedValue['' + propValue[i]] = true;
		    }
		    for (i = 0; i < options.length; i++) {
		      var selected = selectedValue.hasOwnProperty(options[i].value);
		      if (options[i].selected !== selected) {
		        options[i].selected = selected;
		      }
		    }
		  } else {
		    // Do not set `select.value` as exact behavior isn't consistent across all
		    // browsers for all cases.
		    selectedValue = '' + propValue;
		    for (i = 0; i < options.length; i++) {
		      if (options[i].value === selectedValue) {
		        options[i].selected = true;
		        return;
		      }
		    }
		    if (options.length) {
		      options[0].selected = true;
		    }
		  }
		}
	
		/**
		 * Implements a <select> host component that allows optionally setting the
		 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
		 * stringable. If `multiple` is true, the prop must be an array of stringables.
		 *
		 * If `value` is not supplied (or null/undefined), user actions that change the
		 * selected option will trigger updates to the rendered options.
		 *
		 * If it is supplied (and not null/undefined), the rendered options will not
		 * update in response to user actions. Instead, the `value` prop must change in
		 * order for the rendered options to update.
		 *
		 * If `defaultValue` is provided, any options with the supplied values will be
		 * selected.
		 */
		var ReactDOMSelect = {
		  getHostProps: function (inst, props) {
		    return _assign({}, props, {
		      onChange: inst._wrapperState.onChange,
		      value: undefined
		    });
		  },
	
		  mountWrapper: function (inst, props) {
		    if (process.env.NODE_ENV !== 'production') {
		      checkSelectPropTypes(inst, props);
		    }
	
		    var value = LinkedValueUtils.getValue(props);
		    inst._wrapperState = {
		      pendingUpdate: false,
		      initialValue: value != null ? value : props.defaultValue,
		      listeners: null,
		      onChange: _handleChange.bind(inst),
		      wasMultiple: Boolean(props.multiple)
		    };
	
		    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
		      process.env.NODE_ENV !== 'production' ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
		      didWarnValueDefaultValue = true;
		    }
		  },
	
		  getSelectValueContext: function (inst) {
		    // ReactDOMOption looks at this initial value so the initial generated
		    // markup has correct `selected` attributes
		    return inst._wrapperState.initialValue;
		  },
	
		  postUpdateWrapper: function (inst) {
		    var props = inst._currentElement.props;
	
		    // After the initial mount, we control selected-ness manually so don't pass
		    // this value down
		    inst._wrapperState.initialValue = undefined;
	
		    var wasMultiple = inst._wrapperState.wasMultiple;
		    inst._wrapperState.wasMultiple = Boolean(props.multiple);
	
		    var value = LinkedValueUtils.getValue(props);
		    if (value != null) {
		      inst._wrapperState.pendingUpdate = false;
		      updateOptions(inst, Boolean(props.multiple), value);
		    } else if (wasMultiple !== Boolean(props.multiple)) {
		      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
		      if (props.defaultValue != null) {
		        updateOptions(inst, Boolean(props.multiple), props.defaultValue);
		      } else {
		        // Revert the select back to its default unselected state.
		        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
		      }
		    }
		  }
		};
	
		function _handleChange(event) {
		  var props = this._currentElement.props;
		  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	
		  if (this._rootNodeID) {
		    this._wrapperState.pendingUpdate = true;
		  }
		  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
		  return returnValue;
		}
	
		module.exports = ReactDOMSelect;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 184 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var _prodInvariant = __webpack_require__(102),
		    _assign = __webpack_require__(120);
	
		var LinkedValueUtils = __webpack_require__(180);
		var ReactDOMComponentTree = __webpack_require__(101);
		var ReactUpdates = __webpack_require__(127);
	
		var invariant = __webpack_require__(104);
		var warning = __webpack_require__(114);
	
		var didWarnValueLink = false;
		var didWarnValDefaultVal = false;
	
		function forceUpdateIfMounted() {
		  if (this._rootNodeID) {
		    // DOM component is still mounted; update
		    ReactDOMTextarea.updateWrapper(this);
		  }
		}
	
		/**
		 * Implements a <textarea> host component that allows setting `value`, and
		 * `defaultValue`. This differs from the traditional DOM API because value is
		 * usually set as PCDATA children.
		 *
		 * If `value` is not supplied (or null/undefined), user actions that affect the
		 * value will trigger updates to the element.
		 *
		 * If `value` is supplied (and not null/undefined), the rendered element will
		 * not trigger updates to the element. Instead, the `value` prop must change in
		 * order for the rendered element to be updated.
		 *
		 * The rendered element will be initialized with an empty value, the prop
		 * `defaultValue` if specified, or the children content (deprecated).
		 */
		var ReactDOMTextarea = {
		  getHostProps: function (inst, props) {
		    !(props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : _prodInvariant('91') : void 0;
	
		    // Always set children to the same thing. In IE9, the selection range will
		    // get reset if `textContent` is mutated.  We could add a check in setTextContent
		    // to only set the value if/when the value differs from the node value (which would
		    // completely solve this IE9 bug), but Sebastian+Ben seemed to like this solution.
		    // The value can be a boolean or object so that's why it's forced to be a string.
		    var hostProps = _assign({}, props, {
		      value: undefined,
		      defaultValue: undefined,
		      children: '' + inst._wrapperState.initialValue,
		      onChange: inst._wrapperState.onChange
		    });
	
		    return hostProps;
		  },
	
		  mountWrapper: function (inst, props) {
		    if (process.env.NODE_ENV !== 'production') {
		      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
		      if (props.valueLink !== undefined && !didWarnValueLink) {
		        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;
		        didWarnValueLink = true;
		      }
		      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
		        process.env.NODE_ENV !== 'production' ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
		        didWarnValDefaultVal = true;
		      }
		    }
	
		    var value = LinkedValueUtils.getValue(props);
		    var initialValue = value;
	
		    // Only bother fetching default value if we're going to use it
		    if (value == null) {
		      var defaultValue = props.defaultValue;
		      // TODO (yungsters): Remove support for children content in <textarea>.
		      var children = props.children;
		      if (children != null) {
		        if (process.env.NODE_ENV !== 'production') {
		          process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;
		        }
		        !(defaultValue == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : _prodInvariant('92') : void 0;
		        if (Array.isArray(children)) {
		          !(children.length <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : _prodInvariant('93') : void 0;
		          children = children[0];
		        }
	
		        defaultValue = '' + children;
		      }
		      if (defaultValue == null) {
		        defaultValue = '';
		      }
		      initialValue = defaultValue;
		    }
	
		    inst._wrapperState = {
		      initialValue: '' + initialValue,
		      listeners: null,
		      onChange: _handleChange.bind(inst)
		    };
		  },
	
		  updateWrapper: function (inst) {
		    var props = inst._currentElement.props;
	
		    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
		    var value = LinkedValueUtils.getValue(props);
		    if (value != null) {
		      // Cast `value` to a string to ensure the value is set correctly. While
		      // browsers typically do this as necessary, jsdom doesn't.
		      var newValue = '' + value;
	
		      // To avoid side effects (such as losing text selection), only set value if changed
		      if (newValue !== node.value) {
		        node.value = newValue;
		      }
		      if (props.defaultValue == null) {
		        node.defaultValue = newValue;
		      }
		    }
		    if (props.defaultValue != null) {
		      node.defaultValue = props.defaultValue;
		    }
		  },
	
		  postMountWrapper: function (inst) {
		    // This is in postMount because we need access to the DOM node, which is not
		    // available until after the component has mounted.
		    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
		    var textContent = node.textContent;
	
		    // Only set node.value if textContent is equal to the expected
		    // initial value. In IE10/IE11 there is a bug where the placeholder attribute
		    // will populate textContent as well.
		    // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/
		    if (textContent === inst._wrapperState.initialValue) {
		      node.value = textContent;
		    }
		  }
		};
	
		function _handleChange(event) {
		  var props = this._currentElement.props;
		  var returnValue = LinkedValueUtils.executeOnChange(props, event);
		  ReactUpdates.asap(forceUpdateIfMounted, this);
		  return returnValue;
		}
	
		module.exports = ReactDOMTextarea;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 185 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var _prodInvariant = __webpack_require__(102);
	
		var ReactComponentEnvironment = __webpack_require__(186);
		var ReactInstanceMap = __webpack_require__(187);
		var ReactInstrumentation = __webpack_require__(133);
	
		var ReactCurrentOwner = __webpack_require__(77);
		var ReactReconciler = __webpack_require__(130);
		var ReactChildReconciler = __webpack_require__(188);
	
		var emptyFunction = __webpack_require__(115);
		var flattenChildren = __webpack_require__(204);
		var invariant = __webpack_require__(104);
	
		/**
		 * Make an update for markup to be rendered and inserted at a supplied index.
		 *
		 * @param {string} markup Markup that renders into an element.
		 * @param {number} toIndex Destination index.
		 * @private
		 */
		function makeInsertMarkup(markup, afterNode, toIndex) {
		  // NOTE: Null values reduce hidden classes.
		  return {
		    type: 'INSERT_MARKUP',
		    content: markup,
		    fromIndex: null,
		    fromNode: null,
		    toIndex: toIndex,
		    afterNode: afterNode
		  };
		}
	
		/**
		 * Make an update for moving an existing element to another index.
		 *
		 * @param {number} fromIndex Source index of the existing element.
		 * @param {number} toIndex Destination index of the element.
		 * @private
		 */
		function makeMove(child, afterNode, toIndex) {
		  // NOTE: Null values reduce hidden classes.
		  return {
		    type: 'MOVE_EXISTING',
		    content: null,
		    fromIndex: child._mountIndex,
		    fromNode: ReactReconciler.getHostNode(child),
		    toIndex: toIndex,
		    afterNode: afterNode
		  };
		}
	
		/**
		 * Make an update for removing an element at an index.
		 *
		 * @param {number} fromIndex Index of the element to remove.
		 * @private
		 */
		function makeRemove(child, node) {
		  // NOTE: Null values reduce hidden classes.
		  return {
		    type: 'REMOVE_NODE',
		    content: null,
		    fromIndex: child._mountIndex,
		    fromNode: node,
		    toIndex: null,
		    afterNode: null
		  };
		}
	
		/**
		 * Make an update for setting the markup of a node.
		 *
		 * @param {string} markup Markup that renders into an element.
		 * @private
		 */
		function makeSetMarkup(markup) {
		  // NOTE: Null values reduce hidden classes.
		  return {
		    type: 'SET_MARKUP',
		    content: markup,
		    fromIndex: null,
		    fromNode: null,
		    toIndex: null,
		    afterNode: null
		  };
		}
	
		/**
		 * Make an update for setting the text content.
		 *
		 * @param {string} textContent Text content to set.
		 * @private
		 */
		function makeTextContent(textContent) {
		  // NOTE: Null values reduce hidden classes.
		  return {
		    type: 'TEXT_CONTENT',
		    content: textContent,
		    fromIndex: null,
		    fromNode: null,
		    toIndex: null,
		    afterNode: null
		  };
		}
	
		/**
		 * Push an update, if any, onto the queue. Creates a new queue if none is
		 * passed and always returns the queue. Mutative.
		 */
		function enqueue(queue, update) {
		  if (update) {
		    queue = queue || [];
		    queue.push(update);
		  }
		  return queue;
		}
	
		/**
		 * Processes any enqueued updates.
		 *
		 * @private
		 */
		function processQueue(inst, updateQueue) {
		  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);
		}
	
		var setChildrenForInstrumentation = emptyFunction;
		if (process.env.NODE_ENV !== 'production') {
		  var getDebugID = function (inst) {
		    if (!inst._debugID) {
		      // Check for ART-like instances. TODO: This is silly/gross.
		      var internal;
		      if (internal = ReactInstanceMap.get(inst)) {
		        inst = internal;
		      }
		    }
		    return inst._debugID;
		  };
		  setChildrenForInstrumentation = function (children) {
		    var debugID = getDebugID(this);
		    // TODO: React Native empty components are also multichild.
		    // This means they still get into this method but don't have _debugID.
		    if (debugID !== 0) {
		      ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function (key) {
		        return children[key]._debugID;
		      }) : []);
		    }
		  };
		}
	
		/**
		 * ReactMultiChild are capable of reconciling multiple children.
		 *
		 * @class ReactMultiChild
		 * @internal
		 */
		var ReactMultiChild = {
	
		  /**
		   * Provides common functionality for components that must reconcile multiple
		   * children. This is used by `ReactDOMComponent` to mount, update, and
		   * unmount child components.
		   *
		   * @lends {ReactMultiChild.prototype}
		   */
		  Mixin: {
	
		    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {
		      if (process.env.NODE_ENV !== 'production') {
		        var selfDebugID = getDebugID(this);
		        if (this._currentElement) {
		          try {
		            ReactCurrentOwner.current = this._currentElement._owner;
		            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, selfDebugID);
		          } finally {
		            ReactCurrentOwner.current = null;
		          }
		        }
		      }
		      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
		    },
	
		    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context) {
		      var nextChildren;
		      var selfDebugID = 0;
		      if (process.env.NODE_ENV !== 'production') {
		        selfDebugID = getDebugID(this);
		        if (this._currentElement) {
		          try {
		            ReactCurrentOwner.current = this._currentElement._owner;
		            nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
		          } finally {
		            ReactCurrentOwner.current = null;
		          }
		          ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
		          return nextChildren;
		        }
		      }
		      nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
		      ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
		      return nextChildren;
		    },
	
		    /**
		     * Generates a "mount image" for each of the supplied children. In the case
		     * of `ReactDOMComponent`, a mount image is a string of markup.
		     *
		     * @param {?object} nestedChildren Nested child maps.
		     * @return {array} An array of mounted representations.
		     * @internal
		     */
		    mountChildren: function (nestedChildren, transaction, context) {
		      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
		      this._renderedChildren = children;
	
		      var mountImages = [];
		      var index = 0;
		      for (var name in children) {
		        if (children.hasOwnProperty(name)) {
		          var child = children[name];
		          var selfDebugID = 0;
		          if (process.env.NODE_ENV !== 'production') {
		            selfDebugID = getDebugID(this);
		          }
		          var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context, selfDebugID);
		          child._mountIndex = index++;
		          mountImages.push(mountImage);
		        }
		      }
	
		      if (process.env.NODE_ENV !== 'production') {
		        setChildrenForInstrumentation.call(this, children);
		      }
	
		      return mountImages;
		    },
	
		    /**
		     * Replaces any rendered children with a text content string.
		     *
		     * @param {string} nextContent String of content.
		     * @internal
		     */
		    updateTextContent: function (nextContent) {
		      var prevChildren = this._renderedChildren;
		      // Remove any rendered children.
		      ReactChildReconciler.unmountChildren(prevChildren, false);
		      for (var name in prevChildren) {
		        if (prevChildren.hasOwnProperty(name)) {
		           true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
		        }
		      }
		      // Set new text content.
		      var updates = [makeTextContent(nextContent)];
		      processQueue(this, updates);
		    },
	
		    /**
		     * Replaces any rendered children with a markup string.
		     *
		     * @param {string} nextMarkup String of markup.
		     * @internal
		     */
		    updateMarkup: function (nextMarkup) {
		      var prevChildren = this._renderedChildren;
		      // Remove any rendered children.
		      ReactChildReconciler.unmountChildren(prevChildren, false);
		      for (var name in prevChildren) {
		        if (prevChildren.hasOwnProperty(name)) {
		           true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
		        }
		      }
		      var updates = [makeSetMarkup(nextMarkup)];
		      processQueue(this, updates);
		    },
	
		    /**
		     * Updates the rendered children with new children.
		     *
		     * @param {?object} nextNestedChildrenElements Nested child element maps.
		     * @param {ReactReconcileTransaction} transaction
		     * @internal
		     */
		    updateChildren: function (nextNestedChildrenElements, transaction, context) {
		      // Hook used by React ART
		      this._updateChildren(nextNestedChildrenElements, transaction, context);
		    },
	
		    /**
		     * @param {?object} nextNestedChildrenElements Nested child element maps.
		     * @param {ReactReconcileTransaction} transaction
		     * @final
		     * @protected
		     */
		    _updateChildren: function (nextNestedChildrenElements, transaction, context) {
		      var prevChildren = this._renderedChildren;
		      var removedNodes = {};
		      var mountImages = [];
		      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context);
		      if (!nextChildren && !prevChildren) {
		        return;
		      }
		      var updates = null;
		      var name;
		      // `nextIndex` will increment for each child in `nextChildren`, but
		      // `lastIndex` will be the last index visited in `prevChildren`.
		      var nextIndex = 0;
		      var lastIndex = 0;
		      // `nextMountIndex` will increment for each newly mounted child.
		      var nextMountIndex = 0;
		      var lastPlacedNode = null;
		      for (name in nextChildren) {
		        if (!nextChildren.hasOwnProperty(name)) {
		          continue;
		        }
		        var prevChild = prevChildren && prevChildren[name];
		        var nextChild = nextChildren[name];
		        if (prevChild === nextChild) {
		          updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));
		          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
		          prevChild._mountIndex = nextIndex;
		        } else {
		          if (prevChild) {
		            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
		            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
		            // The `removedNodes` loop below will actually remove the child.
		          }
		          // The child must be instantiated before it's mounted.
		          updates = enqueue(updates, this._mountChildAtIndex(nextChild, mountImages[nextMountIndex], lastPlacedNode, nextIndex, transaction, context));
		          nextMountIndex++;
		        }
		        nextIndex++;
		        lastPlacedNode = ReactReconciler.getHostNode(nextChild);
		      }
		      // Remove children that are no longer present.
		      for (name in removedNodes) {
		        if (removedNodes.hasOwnProperty(name)) {
		          updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));
		        }
		      }
		      if (updates) {
		        processQueue(this, updates);
		      }
		      this._renderedChildren = nextChildren;
	
		      if (process.env.NODE_ENV !== 'production') {
		        setChildrenForInstrumentation.call(this, nextChildren);
		      }
		    },
	
		    /**
		     * Unmounts all rendered children. This should be used to clean up children
		     * when this component is unmounted. It does not actually perform any
		     * backend operations.
		     *
		     * @internal
		     */
		    unmountChildren: function (safely) {
		      var renderedChildren = this._renderedChildren;
		      ReactChildReconciler.unmountChildren(renderedChildren, safely);
		      this._renderedChildren = null;
		    },
	
		    /**
		     * Moves a child component to the supplied index.
		     *
		     * @param {ReactComponent} child Component to move.
		     * @param {number} toIndex Destination index of the element.
		     * @param {number} lastIndex Last index visited of the siblings of `child`.
		     * @protected
		     */
		    moveChild: function (child, afterNode, toIndex, lastIndex) {
		      // If the index of `child` is less than `lastIndex`, then it needs to
		      // be moved. Otherwise, we do not need to move it because a child will be
		      // inserted or moved before `child`.
		      if (child._mountIndex < lastIndex) {
		        return makeMove(child, afterNode, toIndex);
		      }
		    },
	
		    /**
		     * Creates a child component.
		     *
		     * @param {ReactComponent} child Component to create.
		     * @param {string} mountImage Markup to insert.
		     * @protected
		     */
		    createChild: function (child, afterNode, mountImage) {
		      return makeInsertMarkup(mountImage, afterNode, child._mountIndex);
		    },
	
		    /**
		     * Removes a child component.
		     *
		     * @param {ReactComponent} child Child to remove.
		     * @protected
		     */
		    removeChild: function (child, node) {
		      return makeRemove(child, node);
		    },
	
		    /**
		     * Mounts a child with the supplied name.
		     *
		     * NOTE: This is part of `updateChildren` and is here for readability.
		     *
		     * @param {ReactComponent} child Component to mount.
		     * @param {string} name Name of the child.
		     * @param {number} index Index at which to insert the child.
		     * @param {ReactReconcileTransaction} transaction
		     * @private
		     */
		    _mountChildAtIndex: function (child, mountImage, afterNode, index, transaction, context) {
		      child._mountIndex = index;
		      return this.createChild(child, afterNode, mountImage);
		    },
	
		    /**
		     * Unmounts a rendered child.
		     *
		     * NOTE: This is part of `updateChildren` and is here for readability.
		     *
		     * @param {ReactComponent} child Component to unmount.
		     * @private
		     */
		    _unmountChild: function (child, node) {
		      var update = this.removeChild(child, node);
		      child._mountIndex = null;
		      return update;
		    }
	
		  }
	
		};
	
		module.exports = ReactMultiChild;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 186 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2014-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * 
		 */
	
		'use strict';
	
		var _prodInvariant = __webpack_require__(102);
	
		var invariant = __webpack_require__(104);
	
		var injected = false;
	
		var ReactComponentEnvironment = {
	
		  /**
		   * Optionally injectable hook for swapping out mount images in the middle of
		   * the tree.
		   */
		  replaceNodeWithMarkup: null,
	
		  /**
		   * Optionally injectable hook for processing a queue of child updates. Will
		   * later move into MultiChildComponents.
		   */
		  processChildrenUpdates: null,
	
		  injection: {
		    injectEnvironment: function (environment) {
		      !!injected ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;
		      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;
		      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
		      injected = true;
		    }
		  }
	
		};
	
		module.exports = ReactComponentEnvironment;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 187 */
	/***/ function(module, exports) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		/**
		 * `ReactInstanceMap` maintains a mapping from a public facing stateful
		 * instance (key) and the internal representation (value). This allows public
		 * methods to accept the user facing instance as an argument and map them back
		 * to internal methods.
		 */
	
		// TODO: Replace this with ES6: var ReactInstanceMap = new Map();
	
		var ReactInstanceMap = {
	
		  /**
		   * This API should be called `delete` but we'd have to make sure to always
		   * transform these to strings for IE support. When this transform is fully
		   * supported we can rename it.
		   */
		  remove: function (key) {
		    key._reactInternalInstance = undefined;
		  },
	
		  get: function (key) {
		    return key._reactInternalInstance;
		  },
	
		  has: function (key) {
		    return key._reactInternalInstance !== undefined;
		  },
	
		  set: function (key, value) {
		    key._reactInternalInstance = value;
		  }
	
		};
	
		module.exports = ReactInstanceMap;
	
	/***/ },
	/* 188 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2014-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var ReactReconciler = __webpack_require__(130);
	
		var instantiateReactComponent = __webpack_require__(189);
		var KeyEscapeUtils = __webpack_require__(200);
		var shouldUpdateReactComponent = __webpack_require__(196);
		var traverseAllChildren = __webpack_require__(201);
		var warning = __webpack_require__(114);
	
		var ReactComponentTreeHook;
	
		if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
		  // Temporary hack.
		  // Inline requires don't work well with Jest:
		  // https://github.com/facebook/react/issues/7240
		  // Remove the inline requires when we don't need them anymore:
		  // https://github.com/facebook/react/pull/7178
		  ReactComponentTreeHook = __webpack_require__(93);
		}
	
		function instantiateChild(childInstances, child, name, selfDebugID) {
		  // We found a component instance.
		  var keyUnique = childInstances[name] === undefined;
		  if (process.env.NODE_ENV !== 'production') {
		    if (!ReactComponentTreeHook) {
		      ReactComponentTreeHook = __webpack_require__(93);
		    }
		    if (!keyUnique) {
		      process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
		    }
		  }
		  if (child != null && keyUnique) {
		    childInstances[name] = instantiateReactComponent(child, true);
		  }
		}
	
		/**
		 * ReactChildReconciler provides helpers for initializing or updating a set of
		 * children. Its output is suitable for passing it onto ReactMultiChild which
		 * does diffed reordering and insertion.
		 */
		var ReactChildReconciler = {
		  /**
		   * Generates a "mount image" for each of the supplied children. In the case
		   * of `ReactDOMComponent`, a mount image is a string of markup.
		   *
		   * @param {?object} nestedChildNodes Nested child maps.
		   * @return {?object} A set of child instances.
		   * @internal
		   */
		  instantiateChildren: function (nestedChildNodes, transaction, context, selfDebugID // 0 in production and for roots
		  ) {
		    if (nestedChildNodes == null) {
		      return null;
		    }
		    var childInstances = {};
	
		    if (process.env.NODE_ENV !== 'production') {
		      traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {
		        return instantiateChild(childInsts, child, name, selfDebugID);
		      }, childInstances);
		    } else {
		      traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
		    }
		    return childInstances;
		  },
	
		  /**
		   * Updates the rendered children and returns a new set of children.
		   *
		   * @param {?object} prevChildren Previously initialized set of children.
		   * @param {?object} nextChildren Flat child element maps.
		   * @param {ReactReconcileTransaction} transaction
		   * @param {object} context
		   * @return {?object} A new set of child instances.
		   * @internal
		   */
		  updateChildren: function (prevChildren, nextChildren, mountImages, removedNodes, transaction, hostParent, hostContainerInfo, context, selfDebugID // 0 in production and for roots
		  ) {
		    // We currently don't have a way to track moves here but if we use iterators
		    // instead of for..in we can zip the iterators and check if an item has
		    // moved.
		    // TODO: If nothing has changed, return the prevChildren object so that we
		    // can quickly bailout if nothing has changed.
		    if (!nextChildren && !prevChildren) {
		      return;
		    }
		    var name;
		    var prevChild;
		    for (name in nextChildren) {
		      if (!nextChildren.hasOwnProperty(name)) {
		        continue;
		      }
		      prevChild = prevChildren && prevChildren[name];
		      var prevElement = prevChild && prevChild._currentElement;
		      var nextElement = nextChildren[name];
		      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
		        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
		        nextChildren[name] = prevChild;
		      } else {
		        if (prevChild) {
		          removedNodes[name] = ReactReconciler.getHostNode(prevChild);
		          ReactReconciler.unmountComponent(prevChild, false);
		        }
		        // The child must be instantiated before it's mounted.
		        var nextChildInstance = instantiateReactComponent(nextElement, true);
		        nextChildren[name] = nextChildInstance;
		        // Creating mount image now ensures refs are resolved in right order
		        // (see https://github.com/facebook/react/pull/7101 for explanation).
		        var nextChildMountImage = ReactReconciler.mountComponent(nextChildInstance, transaction, hostParent, hostContainerInfo, context, selfDebugID);
		        mountImages.push(nextChildMountImage);
		      }
		    }
		    // Unmount children that are no longer present.
		    for (name in prevChildren) {
		      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
		        prevChild = prevChildren[name];
		        removedNodes[name] = ReactReconciler.getHostNode(prevChild);
		        ReactReconciler.unmountComponent(prevChild, false);
		      }
		    }
		  },
	
		  /**
		   * Unmounts all rendered children. This should be used to clean up children
		   * when this component is unmounted.
		   *
		   * @param {?object} renderedChildren Previously initialized set of children.
		   * @internal
		   */
		  unmountChildren: function (renderedChildren, safely) {
		    for (var name in renderedChildren) {
		      if (renderedChildren.hasOwnProperty(name)) {
		        var renderedChild = renderedChildren[name];
		        ReactReconciler.unmountComponent(renderedChild, safely);
		      }
		    }
		  }
	
		};
	
		module.exports = ReactChildReconciler;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 189 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var _prodInvariant = __webpack_require__(102),
		    _assign = __webpack_require__(120);
	
		var ReactCompositeComponent = __webpack_require__(190);
		var ReactEmptyComponent = __webpack_require__(197);
		var ReactHostComponent = __webpack_require__(198);
	
		var getNextDebugID = __webpack_require__(199);
		var invariant = __webpack_require__(104);
		var warning = __webpack_require__(114);
	
		// To avoid a cyclic dependency, we create the final class in this module
		var ReactCompositeComponentWrapper = function (element) {
		  this.construct(element);
		};
		_assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent, {
		  _instantiateReactComponent: instantiateReactComponent
		});
	
		function getDeclarationErrorAddendum(owner) {
		  if (owner) {
		    var name = owner.getName();
		    if (name) {
		      return ' Check the render method of `' + name + '`.';
		    }
		  }
		  return '';
		}
	
		/**
		 * Check if the type reference is a known internal type. I.e. not a user
		 * provided composite type.
		 *
		 * @param {function} type
		 * @return {boolean} Returns true if this is a valid internal type.
		 */
		function isInternalComponentType(type) {
		  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
		}
	
		/**
		 * Given a ReactNode, create an instance that will actually be mounted.
		 *
		 * @param {ReactNode} node
		 * @param {boolean} shouldHaveDebugID
		 * @return {object} A new instance of the element's constructor.
		 * @protected
		 */
		function instantiateReactComponent(node, shouldHaveDebugID) {
		  var instance;
	
		  if (node === null || node === false) {
		    instance = ReactEmptyComponent.create(instantiateReactComponent);
		  } else if (typeof node === 'object') {
		    var element = node;
		    var type = element.type;
		    if (typeof type !== 'function' && typeof type !== 'string') {
		      var info = '';
		      if (process.env.NODE_ENV !== 'production') {
		        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
		          info += ' You likely forgot to export your component from the file ' + 'it\'s defined in.';
		        }
		      }
		      info += getDeclarationErrorAddendum(element._owner);
		       true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', type == null ? type : typeof type, info) : _prodInvariant('130', type == null ? type : typeof type, info) : void 0;
		    }
	
		    // Special case string values
		    if (typeof element.type === 'string') {
		      instance = ReactHostComponent.createInternalComponent(element);
		    } else if (isInternalComponentType(element.type)) {
		      // This is temporarily available for custom components that are not string
		      // representations. I.e. ART. Once those are updated to use the string
		      // representation, we can drop this code path.
		      instance = new element.type(element);
	
		      // We renamed this. Allow the old name for compat. :(
		      if (!instance.getHostNode) {
		        instance.getHostNode = instance.getNativeNode;
		      }
		    } else {
		      instance = new ReactCompositeComponentWrapper(element);
		    }
		  } else if (typeof node === 'string' || typeof node === 'number') {
		    instance = ReactHostComponent.createInstanceForText(node);
		  } else {
		     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : _prodInvariant('131', typeof node) : void 0;
		  }
	
		  if (process.env.NODE_ENV !== 'production') {
		    process.env.NODE_ENV !== 'production' ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;
		  }
	
		  // These two fields are used by the DOM and ART diffing algorithms
		  // respectively. Instead of using expandos on components, we should be
		  // storing the state needed by the diffing algorithms elsewhere.
		  instance._mountIndex = 0;
		  instance._mountImage = null;
	
		  if (process.env.NODE_ENV !== 'production') {
		    instance._debugID = shouldHaveDebugID ? getNextDebugID() : 0;
		  }
	
		  // Internal instances should fully constructed at this point, so they should
		  // not get any new fields added to them at this point.
		  if (process.env.NODE_ENV !== 'production') {
		    if (Object.preventExtensions) {
		      Object.preventExtensions(instance);
		    }
		  }
	
		  return instance;
		}
	
		module.exports = instantiateReactComponent;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 190 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var _prodInvariant = __webpack_require__(102),
		    _assign = __webpack_require__(120);
	
		var React = __webpack_require__(69);
		var ReactComponentEnvironment = __webpack_require__(186);
		var ReactCurrentOwner = __webpack_require__(77);
		var ReactErrorUtils = __webpack_require__(113);
		var ReactInstanceMap = __webpack_require__(187);
		var ReactInstrumentation = __webpack_require__(133);
		var ReactNodeTypes = __webpack_require__(191);
		var ReactReconciler = __webpack_require__(130);
	
		if (process.env.NODE_ENV !== 'production') {
		  var checkReactTypeSpec = __webpack_require__(192);
		}
	
		var emptyObject = __webpack_require__(194);
		var invariant = __webpack_require__(104);
		var shallowEqual = __webpack_require__(195);
		var shouldUpdateReactComponent = __webpack_require__(196);
		var warning = __webpack_require__(114);
	
		var CompositeTypes = {
		  ImpureClass: 0,
		  PureClass: 1,
		  StatelessFunctional: 2
		};
	
		function StatelessComponent(Component) {}
		StatelessComponent.prototype.render = function () {
		  var Component = ReactInstanceMap.get(this)._currentElement.type;
		  var element = Component(this.props, this.context, this.updater);
		  warnIfInvalidElement(Component, element);
		  return element;
		};
	
		function warnIfInvalidElement(Component, element) {
		  if (process.env.NODE_ENV !== 'production') {
		    process.env.NODE_ENV !== 'production' ? warning(element === null || element === false || React.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;
		    process.env.NODE_ENV !== 'production' ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;
		  }
		}
	
		function shouldConstruct(Component) {
		  return !!(Component.prototype && Component.prototype.isReactComponent);
		}
	
		function isPureComponent(Component) {
		  return !!(Component.prototype && Component.prototype.isPureReactComponent);
		}
	
		// Separated into a function to contain deoptimizations caused by try/finally.
		function measureLifeCyclePerf(fn, debugID, timerType) {
		  if (debugID === 0) {
		    // Top-level wrappers (see ReactMount) and empty components (see
		    // ReactDOMEmptyComponent) are invisible to hooks and devtools.
		    // Both are implementation details that should go away in the future.
		    return fn();
		  }
	
		  ReactInstrumentation.debugTool.onBeginLifeCycleTimer(debugID, timerType);
		  try {
		    return fn();
		  } finally {
		    ReactInstrumentation.debugTool.onEndLifeCycleTimer(debugID, timerType);
		  }
		}
	
		/**
		 * ------------------ The Life-Cycle of a Composite Component ------------------
		 *
		 * - constructor: Initialization of state. The instance is now retained.
		 *   - componentWillMount
		 *   - render
		 *   - [children's constructors]
		 *     - [children's componentWillMount and render]
		 *     - [children's componentDidMount]
		 *     - componentDidMount
		 *
		 *       Update Phases:
		 *       - componentWillReceiveProps (only called if parent updated)
		 *       - shouldComponentUpdate
		 *         - componentWillUpdate
		 *           - render
		 *           - [children's constructors or receive props phases]
		 *         - componentDidUpdate
		 *
		 *     - componentWillUnmount
		 *     - [children's componentWillUnmount]
		 *   - [children destroyed]
		 * - (destroyed): The instance is now blank, released by React and ready for GC.
		 *
		 * -----------------------------------------------------------------------------
		 */
	
		/**
		 * An incrementing ID assigned to each component when it is mounted. This is
		 * used to enforce the order in which `ReactUpdates` updates dirty components.
		 *
		 * @private
		 */
		var nextMountID = 1;
	
		/**
		 * @lends {ReactCompositeComponent.prototype}
		 */
		var ReactCompositeComponent = {
	
		  /**
		   * Base constructor for all composite component.
		   *
		   * @param {ReactElement} element
		   * @final
		   * @internal
		   */
		  construct: function (element) {
		    this._currentElement = element;
		    this._rootNodeID = 0;
		    this._compositeType = null;
		    this._instance = null;
		    this._hostParent = null;
		    this._hostContainerInfo = null;
	
		    // See ReactUpdateQueue
		    this._updateBatchNumber = null;
		    this._pendingElement = null;
		    this._pendingStateQueue = null;
		    this._pendingReplaceState = false;
		    this._pendingForceUpdate = false;
	
		    this._renderedNodeType = null;
		    this._renderedComponent = null;
		    this._context = null;
		    this._mountOrder = 0;
		    this._topLevelWrapper = null;
	
		    // See ReactUpdates and ReactUpdateQueue.
		    this._pendingCallbacks = null;
	
		    // ComponentWillUnmount shall only be called once
		    this._calledComponentWillUnmount = false;
	
		    if (process.env.NODE_ENV !== 'production') {
		      this._warnedAboutRefsInRender = false;
		    }
		  },
	
		  /**
		   * Initializes the component, renders markup, and registers event listeners.
		   *
		   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
		   * @param {?object} hostParent
		   * @param {?object} hostContainerInfo
		   * @param {?object} context
		   * @return {?string} Rendered markup to be inserted into the DOM.
		   * @final
		   * @internal
		   */
		  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
		    var _this = this;
	
		    this._context = context;
		    this._mountOrder = nextMountID++;
		    this._hostParent = hostParent;
		    this._hostContainerInfo = hostContainerInfo;
	
		    var publicProps = this._currentElement.props;
		    var publicContext = this._processContext(context);
	
		    var Component = this._currentElement.type;
	
		    var updateQueue = transaction.getUpdateQueue();
	
		    // Initialize the public class
		    var doConstruct = shouldConstruct(Component);
		    var inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);
		    var renderedElement;
	
		    // Support functional components
		    if (!doConstruct && (inst == null || inst.render == null)) {
		      renderedElement = inst;
		      warnIfInvalidElement(Component, renderedElement);
		      !(inst === null || inst === false || React.isValidElement(inst)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;
		      inst = new StatelessComponent(Component);
		      this._compositeType = CompositeTypes.StatelessFunctional;
		    } else {
		      if (isPureComponent(Component)) {
		        this._compositeType = CompositeTypes.PureClass;
		      } else {
		        this._compositeType = CompositeTypes.ImpureClass;
		      }
		    }
	
		    if (process.env.NODE_ENV !== 'production') {
		      // This will throw later in _renderValidatedComponent, but add an early
		      // warning now to help debugging
		      if (inst.render == null) {
		        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;
		      }
	
		      var propsMutated = inst.props !== publicProps;
		      var componentName = Component.displayName || Component.name || 'Component';
	
		      process.env.NODE_ENV !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + 'up the same props that your component\'s constructor was passed.', componentName, componentName) : void 0;
		    }
	
		    // These should be set up in the constructor, but as a convenience for
		    // simpler class abstractions, we set them up after the fact.
		    inst.props = publicProps;
		    inst.context = publicContext;
		    inst.refs = emptyObject;
		    inst.updater = updateQueue;
	
		    this._instance = inst;
	
		    // Store a reference from the instance back to the internal representation
		    ReactInstanceMap.set(inst, this);
	
		    if (process.env.NODE_ENV !== 'production') {
		      // Since plain JS classes are defined without any special initialization
		      // logic, we can not catch common errors early. Therefore, we have to
		      // catch them here, at initialization time, instead.
		      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved || inst.state, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;
		      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;
		      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;
		      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;
		      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;
		      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;
		      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;
		    }
	
		    var initialState = inst.state;
		    if (initialState === undefined) {
		      inst.state = initialState = null;
		    }
		    !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;
	
		    this._pendingStateQueue = null;
		    this._pendingReplaceState = false;
		    this._pendingForceUpdate = false;
	
		    var markup;
		    if (inst.unstable_handleError) {
		      markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);
		    } else {
		      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
		    }
	
		    if (inst.componentDidMount) {
		      if (process.env.NODE_ENV !== 'production') {
		        transaction.getReactMountReady().enqueue(function () {
		          measureLifeCyclePerf(function () {
		            return inst.componentDidMount();
		          }, _this._debugID, 'componentDidMount');
		        });
		      } else {
		        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
		      }
		    }
	
		    return markup;
		  },
	
		  _constructComponent: function (doConstruct, publicProps, publicContext, updateQueue) {
		    if (process.env.NODE_ENV !== 'production') {
		      ReactCurrentOwner.current = this;
		      try {
		        return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
		      } finally {
		        ReactCurrentOwner.current = null;
		      }
		    } else {
		      return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
		    }
		  },
	
		  _constructComponentWithoutOwner: function (doConstruct, publicProps, publicContext, updateQueue) {
		    var Component = this._currentElement.type;
	
		    if (doConstruct) {
		      if (process.env.NODE_ENV !== 'production') {
		        return measureLifeCyclePerf(function () {
		          return new Component(publicProps, publicContext, updateQueue);
		        }, this._debugID, 'ctor');
		      } else {
		        return new Component(publicProps, publicContext, updateQueue);
		      }
		    }
	
		    // This can still be an instance in case of factory components
		    // but we'll count this as time spent rendering as the more common case.
		    if (process.env.NODE_ENV !== 'production') {
		      return measureLifeCyclePerf(function () {
		        return Component(publicProps, publicContext, updateQueue);
		      }, this._debugID, 'render');
		    } else {
		      return Component(publicProps, publicContext, updateQueue);
		    }
		  },
	
		  performInitialMountWithErrorHandling: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
		    var markup;
		    var checkpoint = transaction.checkpoint();
		    try {
		      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
		    } catch (e) {
		      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint
		      transaction.rollback(checkpoint);
		      this._instance.unstable_handleError(e);
		      if (this._pendingStateQueue) {
		        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);
		      }
		      checkpoint = transaction.checkpoint();
	
		      this._renderedComponent.unmountComponent(true);
		      transaction.rollback(checkpoint);
	
		      // Try again - we've informed the component about the error, so they can render an error message this time.
		      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).
		      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
		    }
		    return markup;
		  },
	
		  performInitialMount: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
		    var inst = this._instance;
	
		    var debugID = 0;
		    if (process.env.NODE_ENV !== 'production') {
		      debugID = this._debugID;
		    }
	
		    if (inst.componentWillMount) {
		      if (process.env.NODE_ENV !== 'production') {
		        measureLifeCyclePerf(function () {
		          return inst.componentWillMount();
		        }, debugID, 'componentWillMount');
		      } else {
		        inst.componentWillMount();
		      }
		      // When mounting, calls to `setState` by `componentWillMount` will set
		      // `this._pendingStateQueue` without triggering a re-render.
		      if (this._pendingStateQueue) {
		        inst.state = this._processPendingState(inst.props, inst.context);
		      }
		    }
	
		    // If not a stateless component, we now render
		    if (renderedElement === undefined) {
		      renderedElement = this._renderValidatedComponent();
		    }
	
		    var nodeType = ReactNodeTypes.getType(renderedElement);
		    this._renderedNodeType = nodeType;
		    var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
		    );
		    this._renderedComponent = child;
	
		    var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context), debugID);
	
		    if (process.env.NODE_ENV !== 'production') {
		      if (debugID !== 0) {
		        var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
		        ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
		      }
		    }
	
		    return markup;
		  },
	
		  getHostNode: function () {
		    return ReactReconciler.getHostNode(this._renderedComponent);
		  },
	
		  /**
		   * Releases any resources allocated by `mountComponent`.
		   *
		   * @final
		   * @internal
		   */
		  unmountComponent: function (safely) {
		    if (!this._renderedComponent) {
		      return;
		    }
	
		    var inst = this._instance;
	
		    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {
		      inst._calledComponentWillUnmount = true;
	
		      if (safely) {
		        var name = this.getName() + '.componentWillUnmount()';
		        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));
		      } else {
		        if (process.env.NODE_ENV !== 'production') {
		          measureLifeCyclePerf(function () {
		            return inst.componentWillUnmount();
		          }, this._debugID, 'componentWillUnmount');
		        } else {
		          inst.componentWillUnmount();
		        }
		      }
		    }
	
		    if (this._renderedComponent) {
		      ReactReconciler.unmountComponent(this._renderedComponent, safely);
		      this._renderedNodeType = null;
		      this._renderedComponent = null;
		      this._instance = null;
		    }
	
		    // Reset pending fields
		    // Even if this component is scheduled for another update in ReactUpdates,
		    // it would still be ignored because these fields are reset.
		    this._pendingStateQueue = null;
		    this._pendingReplaceState = false;
		    this._pendingForceUpdate = false;
		    this._pendingCallbacks = null;
		    this._pendingElement = null;
	
		    // These fields do not really need to be reset since this object is no
		    // longer accessible.
		    this._context = null;
		    this._rootNodeID = 0;
		    this._topLevelWrapper = null;
	
		    // Delete the reference from the instance to this internal representation
		    // which allow the internals to be properly cleaned up even if the user
		    // leaks a reference to the public instance.
		    ReactInstanceMap.remove(inst);
	
		    // Some existing components rely on inst.props even after they've been
		    // destroyed (in event handlers).
		    // TODO: inst.props = null;
		    // TODO: inst.state = null;
		    // TODO: inst.context = null;
		  },
	
		  /**
		   * Filters the context object to only contain keys specified in
		   * `contextTypes`
		   *
		   * @param {object} context
		   * @return {?object}
		   * @private
		   */
		  _maskContext: function (context) {
		    var Component = this._currentElement.type;
		    var contextTypes = Component.contextTypes;
		    if (!contextTypes) {
		      return emptyObject;
		    }
		    var maskedContext = {};
		    for (var contextName in contextTypes) {
		      maskedContext[contextName] = context[contextName];
		    }
		    return maskedContext;
		  },
	
		  /**
		   * Filters the context object to only contain keys specified in
		   * `contextTypes`, and asserts that they are valid.
		   *
		   * @param {object} context
		   * @return {?object}
		   * @private
		   */
		  _processContext: function (context) {
		    var maskedContext = this._maskContext(context);
		    if (process.env.NODE_ENV !== 'production') {
		      var Component = this._currentElement.type;
		      if (Component.contextTypes) {
		        this._checkContextTypes(Component.contextTypes, maskedContext, 'context');
		      }
		    }
		    return maskedContext;
		  },
	
		  /**
		   * @param {object} currentContext
		   * @return {object}
		   * @private
		   */
		  _processChildContext: function (currentContext) {
		    var Component = this._currentElement.type;
		    var inst = this._instance;
		    var childContext;
	
		    if (inst.getChildContext) {
		      if (process.env.NODE_ENV !== 'production') {
		        ReactInstrumentation.debugTool.onBeginProcessingChildContext();
		        try {
		          childContext = inst.getChildContext();
		        } finally {
		          ReactInstrumentation.debugTool.onEndProcessingChildContext();
		        }
		      } else {
		        childContext = inst.getChildContext();
		      }
		    }
	
		    if (childContext) {
		      !(typeof Component.childContextTypes === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;
		      if (process.env.NODE_ENV !== 'production') {
		        this._checkContextTypes(Component.childContextTypes, childContext, 'childContext');
		      }
		      for (var name in childContext) {
		        !(name in Component.childContextTypes) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;
		      }
		      return _assign({}, currentContext, childContext);
		    }
		    return currentContext;
		  },
	
		  /**
		   * Assert that the context types are valid
		   *
		   * @param {object} typeSpecs Map of context field to a ReactPropType
		   * @param {object} values Runtime values that need to be type-checked
		   * @param {string} location e.g. "prop", "context", "child context"
		   * @private
		   */
		  _checkContextTypes: function (typeSpecs, values, location) {
		    if (process.env.NODE_ENV !== 'production') {
		      checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);
		    }
		  },
	
		  receiveComponent: function (nextElement, transaction, nextContext) {
		    var prevElement = this._currentElement;
		    var prevContext = this._context;
	
		    this._pendingElement = null;
	
		    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
		  },
	
		  /**
		   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
		   * is set, update the component.
		   *
		   * @param {ReactReconcileTransaction} transaction
		   * @internal
		   */
		  performUpdateIfNecessary: function (transaction) {
		    if (this._pendingElement != null) {
		      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);
		    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
		      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
		    } else {
		      this._updateBatchNumber = null;
		    }
		  },
	
		  /**
		   * Perform an update to a mounted component. The componentWillReceiveProps and
		   * shouldComponentUpdate methods are called, then (assuming the update isn't
		   * skipped) the remaining update lifecycle methods are called and the DOM
		   * representation is updated.
		   *
		   * By default, this implements React's rendering and reconciliation algorithm.
		   * Sophisticated clients may wish to override this.
		   *
		   * @param {ReactReconcileTransaction} transaction
		   * @param {ReactElement} prevParentElement
		   * @param {ReactElement} nextParentElement
		   * @internal
		   * @overridable
		   */
		  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
		    var inst = this._instance;
		    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;
	
		    var willReceive = false;
		    var nextContext;
	
		    // Determine if the context has changed or not
		    if (this._context === nextUnmaskedContext) {
		      nextContext = inst.context;
		    } else {
		      nextContext = this._processContext(nextUnmaskedContext);
		      willReceive = true;
		    }
	
		    var prevProps = prevParentElement.props;
		    var nextProps = nextParentElement.props;
	
		    // Not a simple state update but a props update
		    if (prevParentElement !== nextParentElement) {
		      willReceive = true;
		    }
	
		    // An update here will schedule an update but immediately set
		    // _pendingStateQueue which will ensure that any state updates gets
		    // immediately reconciled instead of waiting for the next batch.
		    if (willReceive && inst.componentWillReceiveProps) {
		      if (process.env.NODE_ENV !== 'production') {
		        measureLifeCyclePerf(function () {
		          return inst.componentWillReceiveProps(nextProps, nextContext);
		        }, this._debugID, 'componentWillReceiveProps');
		      } else {
		        inst.componentWillReceiveProps(nextProps, nextContext);
		      }
		    }
	
		    var nextState = this._processPendingState(nextProps, nextContext);
		    var shouldUpdate = true;
	
		    if (!this._pendingForceUpdate) {
		      if (inst.shouldComponentUpdate) {
		        if (process.env.NODE_ENV !== 'production') {
		          shouldUpdate = measureLifeCyclePerf(function () {
		            return inst.shouldComponentUpdate(nextProps, nextState, nextContext);
		          }, this._debugID, 'shouldComponentUpdate');
		        } else {
		          shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);
		        }
		      } else {
		        if (this._compositeType === CompositeTypes.PureClass) {
		          shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState);
		        }
		      }
		    }
	
		    if (process.env.NODE_ENV !== 'production') {
		      process.env.NODE_ENV !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;
		    }
	
		    this._updateBatchNumber = null;
		    if (shouldUpdate) {
		      this._pendingForceUpdate = false;
		      // Will set `this.props`, `this.state` and `this.context`.
		      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
		    } else {
		      // If it's determined that a component should not update, we still want
		      // to set props and state but we shortcut the rest of the update.
		      this._currentElement = nextParentElement;
		      this._context = nextUnmaskedContext;
		      inst.props = nextProps;
		      inst.state = nextState;
		      inst.context = nextContext;
		    }
		  },
	
		  _processPendingState: function (props, context) {
		    var inst = this._instance;
		    var queue = this._pendingStateQueue;
		    var replace = this._pendingReplaceState;
		    this._pendingReplaceState = false;
		    this._pendingStateQueue = null;
	
		    if (!queue) {
		      return inst.state;
		    }
	
		    if (replace && queue.length === 1) {
		      return queue[0];
		    }
	
		    var nextState = _assign({}, replace ? queue[0] : inst.state);
		    for (var i = replace ? 1 : 0; i < queue.length; i++) {
		      var partial = queue[i];
		      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
		    }
	
		    return nextState;
		  },
	
		  /**
		   * Merges new props and state, notifies delegate methods of update and
		   * performs update.
		   *
		   * @param {ReactElement} nextElement Next element
		   * @param {object} nextProps Next public object to set as properties.
		   * @param {?object} nextState Next object to set as state.
		   * @param {?object} nextContext Next public object to set as context.
		   * @param {ReactReconcileTransaction} transaction
		   * @param {?object} unmaskedContext
		   * @private
		   */
		  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
		    var _this2 = this;
	
		    var inst = this._instance;
	
		    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
		    var prevProps;
		    var prevState;
		    var prevContext;
		    if (hasComponentDidUpdate) {
		      prevProps = inst.props;
		      prevState = inst.state;
		      prevContext = inst.context;
		    }
	
		    if (inst.componentWillUpdate) {
		      if (process.env.NODE_ENV !== 'production') {
		        measureLifeCyclePerf(function () {
		          return inst.componentWillUpdate(nextProps, nextState, nextContext);
		        }, this._debugID, 'componentWillUpdate');
		      } else {
		        inst.componentWillUpdate(nextProps, nextState, nextContext);
		      }
		    }
	
		    this._currentElement = nextElement;
		    this._context = unmaskedContext;
		    inst.props = nextProps;
		    inst.state = nextState;
		    inst.context = nextContext;
	
		    this._updateRenderedComponent(transaction, unmaskedContext);
	
		    if (hasComponentDidUpdate) {
		      if (process.env.NODE_ENV !== 'production') {
		        transaction.getReactMountReady().enqueue(function () {
		          measureLifeCyclePerf(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), _this2._debugID, 'componentDidUpdate');
		        });
		      } else {
		        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
		      }
		    }
		  },
	
		  /**
		   * Call the component's `render` method and update the DOM accordingly.
		   *
		   * @param {ReactReconcileTransaction} transaction
		   * @internal
		   */
		  _updateRenderedComponent: function (transaction, context) {
		    var prevComponentInstance = this._renderedComponent;
		    var prevRenderedElement = prevComponentInstance._currentElement;
		    var nextRenderedElement = this._renderValidatedComponent();
	
		    var debugID = 0;
		    if (process.env.NODE_ENV !== 'production') {
		      debugID = this._debugID;
		    }
	
		    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
		      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
		    } else {
		      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);
		      ReactReconciler.unmountComponent(prevComponentInstance, false);
	
		      var nodeType = ReactNodeTypes.getType(nextRenderedElement);
		      this._renderedNodeType = nodeType;
		      var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
		      );
		      this._renderedComponent = child;
	
		      var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context), debugID);
	
		      if (process.env.NODE_ENV !== 'production') {
		        if (debugID !== 0) {
		          var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
		          ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
		        }
		      }
	
		      this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);
		    }
		  },
	
		  /**
		   * Overridden in shallow rendering.
		   *
		   * @protected
		   */
		  _replaceNodeWithMarkup: function (oldHostNode, nextMarkup, prevInstance) {
		    ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);
		  },
	
		  /**
		   * @protected
		   */
		  _renderValidatedComponentWithoutOwnerOrContext: function () {
		    var inst = this._instance;
		    var renderedElement;
	
		    if (process.env.NODE_ENV !== 'production') {
		      renderedElement = measureLifeCyclePerf(function () {
		        return inst.render();
		      }, this._debugID, 'render');
		    } else {
		      renderedElement = inst.render();
		    }
	
		    if (process.env.NODE_ENV !== 'production') {
		      // We allow auto-mocks to proceed as if they're returning null.
		      if (renderedElement === undefined && inst.render._isMockFunction) {
		        // This is probably bad practice. Consider warning here and
		        // deprecating this convenience.
		        renderedElement = null;
		      }
		    }
	
		    return renderedElement;
		  },
	
		  /**
		   * @private
		   */
		  _renderValidatedComponent: function () {
		    var renderedElement;
		    if (process.env.NODE_ENV !== 'production' || this._compositeType !== CompositeTypes.StatelessFunctional) {
		      ReactCurrentOwner.current = this;
		      try {
		        renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
		      } finally {
		        ReactCurrentOwner.current = null;
		      }
		    } else {
		      renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
		    }
		    !(
		    // TODO: An `isValidNode` function would probably be more appropriate
		    renderedElement === null || renderedElement === false || React.isValidElement(renderedElement)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;
	
		    return renderedElement;
		  },
	
		  /**
		   * Lazily allocates the refs object and stores `component` as `ref`.
		   *
		   * @param {string} ref Reference name.
		   * @param {component} component Component to store as `ref`.
		   * @final
		   * @private
		   */
		  attachRef: function (ref, component) {
		    var inst = this.getPublicInstance();
		    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;
		    var publicComponentInstance = component.getPublicInstance();
		    if (process.env.NODE_ENV !== 'production') {
		      var componentName = component && component.getName ? component.getName() : 'a component';
		      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null || component._compositeType !== CompositeTypes.StatelessFunctional, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;
		    }
		    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
		    refs[ref] = publicComponentInstance;
		  },
	
		  /**
		   * Detaches a reference name.
		   *
		   * @param {string} ref Name to dereference.
		   * @final
		   * @private
		   */
		  detachRef: function (ref) {
		    var refs = this.getPublicInstance().refs;
		    delete refs[ref];
		  },
	
		  /**
		   * Get a text description of the component that can be used to identify it
		   * in error messages.
		   * @return {string} The name or null.
		   * @internal
		   */
		  getName: function () {
		    var type = this._currentElement.type;
		    var constructor = this._instance && this._instance.constructor;
		    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
		  },
	
		  /**
		   * Get the publicly accessible representation of this component - i.e. what
		   * is exposed by refs and returned by render. Can be null for stateless
		   * components.
		   *
		   * @return {ReactComponent} the public component instance.
		   * @internal
		   */
		  getPublicInstance: function () {
		    var inst = this._instance;
		    if (this._compositeType === CompositeTypes.StatelessFunctional) {
		      return null;
		    }
		    return inst;
		  },
	
		  // Stub
		  _instantiateReactComponent: null
	
		};
	
		module.exports = ReactCompositeComponent;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 191 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * 
		 */
	
		'use strict';
	
		var _prodInvariant = __webpack_require__(102);
	
		var React = __webpack_require__(69);
	
		var invariant = __webpack_require__(104);
	
		var ReactNodeTypes = {
		  HOST: 0,
		  COMPOSITE: 1,
		  EMPTY: 2,
	
		  getType: function (node) {
		    if (node === null || node === false) {
		      return ReactNodeTypes.EMPTY;
		    } else if (React.isValidElement(node)) {
		      if (typeof node.type === 'function') {
		        return ReactNodeTypes.COMPOSITE;
		      } else {
		        return ReactNodeTypes.HOST;
		      }
		    }
		     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unexpected node: %s', node) : _prodInvariant('26', node) : void 0;
		  }
		};
	
		module.exports = ReactNodeTypes;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 192 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var _prodInvariant = __webpack_require__(102);
	
		var ReactPropTypeLocationNames = __webpack_require__(193);
		var ReactPropTypesSecret = __webpack_require__(181);
	
		var invariant = __webpack_require__(104);
		var warning = __webpack_require__(114);
	
		var ReactComponentTreeHook;
	
		if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
		  // Temporary hack.
		  // Inline requires don't work well with Jest:
		  // https://github.com/facebook/react/issues/7240
		  // Remove the inline requires when we don't need them anymore:
		  // https://github.com/facebook/react/pull/7178
		  ReactComponentTreeHook = __webpack_require__(93);
		}
	
		var loggedTypeFailures = {};
	
		/**
		 * Assert that the values match with the type specs.
		 * Error messages are memorized and will only be shown once.
		 *
		 * @param {object} typeSpecs Map of name to a ReactPropType
		 * @param {object} values Runtime values that need to be type-checked
		 * @param {string} location e.g. "prop", "context", "child context"
		 * @param {string} componentName Name of the component for error messages.
		 * @param {?object} element The React element that is being type-checked
		 * @param {?number} debugID The React component instance that is being type-checked
		 * @private
		 */
		function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
		  for (var typeSpecName in typeSpecs) {
		    if (typeSpecs.hasOwnProperty(typeSpecName)) {
		      var error;
		      // Prop type validation may throw. In case they do, we don't want to
		      // fail the render phase where it didn't fail before. So we log it.
		      // After these have been cleaned up, we'll let them throw.
		      try {
		        // This is intentionally an invariant that gets caught. It's the same
		        // behavior as without this statement except with a better message.
		        !(typeof typeSpecs[typeSpecName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
		        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
		      } catch (ex) {
		        error = ex;
		      }
		      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
		      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
		        // Only monitor this failure once because there tends to be a lot of the
		        // same error.
		        loggedTypeFailures[error.message] = true;
	
		        var componentStackInfo = '';
	
		        if (process.env.NODE_ENV !== 'production') {
		          if (!ReactComponentTreeHook) {
		            ReactComponentTreeHook = __webpack_require__(93);
		          }
		          if (debugID !== null) {
		            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
		          } else if (element !== null) {
		            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
		          }
		        }
	
		        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
		      }
		    }
		  }
		}
	
		module.exports = checkReactTypeSpec;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 193 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * 
		 */
	
		'use strict';
	
		var ReactPropTypeLocationNames = {};
	
		if (process.env.NODE_ENV !== 'production') {
		  ReactPropTypeLocationNames = {
		    prop: 'prop',
		    context: 'context',
		    childContext: 'child context'
		  };
		}
	
		module.exports = ReactPropTypeLocationNames;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 194 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var emptyObject = {};
	
		if (process.env.NODE_ENV !== 'production') {
		  Object.freeze(emptyObject);
		}
	
		module.exports = emptyObject;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 195 */
	/***/ function(module, exports) {
	
		/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * @typechecks
		 * 
		 */
	
		/*eslint-disable no-self-compare */
	
		'use strict';
	
		var hasOwnProperty = Object.prototype.hasOwnProperty;
	
		/**
		 * inlined Object.is polyfill to avoid requiring consumers ship their own
		 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
		 */
		function is(x, y) {
		  // SameValue algorithm
		  if (x === y) {
		    // Steps 1-5, 7-10
		    // Steps 6.b-6.e: +0 != -0
		    // Added the nonzero y check to make Flow happy, but it is redundant
		    return x !== 0 || y !== 0 || 1 / x === 1 / y;
		  } else {
		    // Step 6.a: NaN == NaN
		    return x !== x && y !== y;
		  }
		}
	
		/**
		 * Performs equality by iterating through keys on an object and returning false
		 * when any key has values which are not strictly equal between the arguments.
		 * Returns true when the values of all keys are strictly equal.
		 */
		function shallowEqual(objA, objB) {
		  if (is(objA, objB)) {
		    return true;
		  }
	
		  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
		    return false;
		  }
	
		  var keysA = Object.keys(objA);
		  var keysB = Object.keys(objB);
	
		  if (keysA.length !== keysB.length) {
		    return false;
		  }
	
		  // Test for A's keys different from B.
		  for (var i = 0; i < keysA.length; i++) {
		    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
		      return false;
		    }
		  }
	
		  return true;
		}
	
		module.exports = shallowEqual;
	
	/***/ },
	/* 196 */
	/***/ function(module, exports) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		/**
		 * Given a `prevElement` and `nextElement`, determines if the existing
		 * instance should be updated as opposed to being destroyed or replaced by a new
		 * instance. Both arguments are elements. This ensures that this logic can
		 * operate on stateless trees without any backing instance.
		 *
		 * @param {?object} prevElement
		 * @param {?object} nextElement
		 * @return {boolean} True if the existing instance should be updated.
		 * @protected
		 */
	
		function shouldUpdateReactComponent(prevElement, nextElement) {
		  var prevEmpty = prevElement === null || prevElement === false;
		  var nextEmpty = nextElement === null || nextElement === false;
		  if (prevEmpty || nextEmpty) {
		    return prevEmpty === nextEmpty;
		  }
	
		  var prevType = typeof prevElement;
		  var nextType = typeof nextElement;
		  if (prevType === 'string' || prevType === 'number') {
		    return nextType === 'string' || nextType === 'number';
		  } else {
		    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
		  }
		}
	
		module.exports = shouldUpdateReactComponent;
	
	/***/ },
	/* 197 */
	/***/ function(module, exports) {
	
		/**
		 * Copyright 2014-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var emptyComponentFactory;
	
		var ReactEmptyComponentInjection = {
		  injectEmptyComponentFactory: function (factory) {
		    emptyComponentFactory = factory;
		  }
		};
	
		var ReactEmptyComponent = {
		  create: function (instantiate) {
		    return emptyComponentFactory(instantiate);
		  }
		};
	
		ReactEmptyComponent.injection = ReactEmptyComponentInjection;
	
		module.exports = ReactEmptyComponent;
	
	/***/ },
	/* 198 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2014-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var _prodInvariant = __webpack_require__(102);
	
		var invariant = __webpack_require__(104);
	
		var genericComponentClass = null;
		var textComponentClass = null;
	
		var ReactHostComponentInjection = {
		  // This accepts a class that receives the tag string. This is a catch all
		  // that can render any kind of tag.
		  injectGenericComponentClass: function (componentClass) {
		    genericComponentClass = componentClass;
		  },
		  // This accepts a text component class that takes the text string to be
		  // rendered as props.
		  injectTextComponentClass: function (componentClass) {
		    textComponentClass = componentClass;
		  }
		};
	
		/**
		 * Get a host internal component class for a specific tag.
		 *
		 * @param {ReactElement} element The element to create.
		 * @return {function} The internal class constructor function.
		 */
		function createInternalComponent(element) {
		  !genericComponentClass ? process.env.NODE_ENV !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;
		  return new genericComponentClass(element);
		}
	
		/**
		 * @param {ReactText} text
		 * @return {ReactComponent}
		 */
		function createInstanceForText(text) {
		  return new textComponentClass(text);
		}
	
		/**
		 * @param {ReactComponent} component
		 * @return {boolean}
		 */
		function isTextComponent(component) {
		  return component instanceof textComponentClass;
		}
	
		var ReactHostComponent = {
		  createInternalComponent: createInternalComponent,
		  createInstanceForText: createInstanceForText,
		  isTextComponent: isTextComponent,
		  injection: ReactHostComponentInjection
		};
	
		module.exports = ReactHostComponent;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 199 */
	/***/ function(module, exports) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * 
		 */
	
		'use strict';
	
		var nextDebugID = 1;
	
		function getNextDebugID() {
		  return nextDebugID++;
		}
	
		module.exports = getNextDebugID;
	
	/***/ },
	/* 200 */
	/***/ function(module, exports) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * 
		 */
	
		'use strict';
	
		/**
		 * Escape and wrap key so it is safe to use as a reactid
		 *
		 * @param {string} key to be escaped.
		 * @return {string} the escaped key.
		 */
	
		function escape(key) {
		  var escapeRegex = /[=:]/g;
		  var escaperLookup = {
		    '=': '=0',
		    ':': '=2'
		  };
		  var escapedString = ('' + key).replace(escapeRegex, function (match) {
		    return escaperLookup[match];
		  });
	
		  return '$' + escapedString;
		}
	
		/**
		 * Unescape and unwrap key for human-readable display
		 *
		 * @param {string} key to unescape.
		 * @return {string} the unescaped key.
		 */
		function unescape(key) {
		  var unescapeRegex = /(=0|=2)/g;
		  var unescaperLookup = {
		    '=0': '=',
		    '=2': ':'
		  };
		  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);
	
		  return ('' + keySubstring).replace(unescapeRegex, function (match) {
		    return unescaperLookup[match];
		  });
		}
	
		var KeyEscapeUtils = {
		  escape: escape,
		  unescape: unescape
		};
	
		module.exports = KeyEscapeUtils;
	
	/***/ },
	/* 201 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var _prodInvariant = __webpack_require__(102);
	
		var ReactCurrentOwner = __webpack_require__(77);
		var REACT_ELEMENT_TYPE = __webpack_require__(202);
	
		var getIteratorFn = __webpack_require__(203);
		var invariant = __webpack_require__(104);
		var KeyEscapeUtils = __webpack_require__(200);
		var warning = __webpack_require__(114);
	
		var SEPARATOR = '.';
		var SUBSEPARATOR = ':';
	
		/**
		 * This is inlined from ReactElement since this file is shared between
		 * isomorphic and renderers. We could extract this to a
		 *
		 */
	
		/**
		 * TODO: Test that a single child and an array with one item have the same key
		 * pattern.
		 */
	
		var didWarnAboutMaps = false;
	
		/**
		 * Generate a key string that identifies a component within a set.
		 *
		 * @param {*} component A component that could contain a manual key.
		 * @param {number} index Index that is used if a manual key is not provided.
		 * @return {string}
		 */
		function getComponentKey(component, index) {
		  // Do some typechecking here since we call this blindly. We want to ensure
		  // that we don't block potential future ES APIs.
		  if (component && typeof component === 'object' && component.key != null) {
		    // Explicit key
		    return KeyEscapeUtils.escape(component.key);
		  }
		  // Implicit key determined by the index in the set
		  return index.toString(36);
		}
	
		/**
		 * @param {?*} children Children tree container.
		 * @param {!string} nameSoFar Name of the key path so far.
		 * @param {!function} callback Callback to invoke with each child found.
		 * @param {?*} traverseContext Used to pass information throughout the traversal
		 * process.
		 * @return {!number} The number of children in this subtree.
		 */
		function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
		  var type = typeof children;
	
		  if (type === 'undefined' || type === 'boolean') {
		    // All of the above are perceived as null.
		    children = null;
		  }
	
		  if (children === null || type === 'string' || type === 'number' ||
		  // The following is inlined from ReactElement. This means we can optimize
		  // some checks. React Fiber also inlines this logic for similar purposes.
		  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
		    callback(traverseContext, children,
		    // If it's the only child, treat the name as if it was wrapped in an array
		    // so that it's consistent if the number of children grows.
		    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
		    return 1;
		  }
	
		  var child;
		  var nextName;
		  var subtreeCount = 0; // Count of children found in the current subtree.
		  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;
	
		  if (Array.isArray(children)) {
		    for (var i = 0; i < children.length; i++) {
		      child = children[i];
		      nextName = nextNamePrefix + getComponentKey(child, i);
		      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
		    }
		  } else {
		    var iteratorFn = getIteratorFn(children);
		    if (iteratorFn) {
		      var iterator = iteratorFn.call(children);
		      var step;
		      if (iteratorFn !== children.entries) {
		        var ii = 0;
		        while (!(step = iterator.next()).done) {
		          child = step.value;
		          nextName = nextNamePrefix + getComponentKey(child, ii++);
		          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
		        }
		      } else {
		        if (process.env.NODE_ENV !== 'production') {
		          var mapsAsChildrenAddendum = '';
		          if (ReactCurrentOwner.current) {
		            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
		            if (mapsAsChildrenOwnerName) {
		              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
		            }
		          }
		          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
		          didWarnAboutMaps = true;
		        }
		        // Iterator will provide entry [k,v] tuples rather than values.
		        while (!(step = iterator.next()).done) {
		          var entry = step.value;
		          if (entry) {
		            child = entry[1];
		            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
		            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
		          }
		        }
		      }
		    } else if (type === 'object') {
		      var addendum = '';
		      if (process.env.NODE_ENV !== 'production') {
		        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
		        if (children._isReactElement) {
		          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
		        }
		        if (ReactCurrentOwner.current) {
		          var name = ReactCurrentOwner.current.getName();
		          if (name) {
		            addendum += ' Check the render method of `' + name + '`.';
		          }
		        }
		      }
		      var childrenString = String(children);
		       true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
		    }
		  }
	
		  return subtreeCount;
		}
	
		/**
		 * Traverses children that are typically specified as `props.children`, but
		 * might also be specified through attributes:
		 *
		 * - `traverseAllChildren(this.props.children, ...)`
		 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
		 *
		 * The `traverseContext` is an optional argument that is passed through the
		 * entire traversal. It can be used to store accumulations or anything else that
		 * the callback might find relevant.
		 *
		 * @param {?*} children Children tree object.
		 * @param {!function} callback To invoke upon traversing each child.
		 * @param {?*} traverseContext Context for traversal.
		 * @return {!number} The number of children in this subtree.
		 */
		function traverseAllChildren(children, callback, traverseContext) {
		  if (children == null) {
		    return 0;
		  }
	
		  return traverseAllChildrenImpl(children, '', callback, traverseContext);
		}
	
		module.exports = traverseAllChildren;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 202 */
	/***/ function(module, exports) {
	
		/**
		 * Copyright 2014-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * 
		 */
	
		'use strict';
	
		// The Symbol used to tag the ReactElement type. If there is no native Symbol
		// nor polyfill, then a plain number is used for performance.
	
		var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;
	
		module.exports = REACT_ELEMENT_TYPE;
	
	/***/ },
	/* 203 */
	/***/ function(module, exports) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * 
		 */
	
		'use strict';
	
		/* global Symbol */
	
		var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
		var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.
	
		/**
		 * Returns the iterator method function contained on the iterable object.
		 *
		 * Be sure to invoke the function with the iterable as context:
		 *
		 *     var iteratorFn = getIteratorFn(myIterable);
		 *     if (iteratorFn) {
		 *       var iterator = iteratorFn.call(myIterable);
		 *       ...
		 *     }
		 *
		 * @param {?object} maybeIterable
		 * @return {?function}
		 */
		function getIteratorFn(maybeIterable) {
		  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
		  if (typeof iteratorFn === 'function') {
		    return iteratorFn;
		  }
		}
	
		module.exports = getIteratorFn;
	
	/***/ },
	/* 204 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * 
		 */
	
		'use strict';
	
		var KeyEscapeUtils = __webpack_require__(200);
		var traverseAllChildren = __webpack_require__(201);
		var warning = __webpack_require__(114);
	
		var ReactComponentTreeHook;
	
		if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
		  // Temporary hack.
		  // Inline requires don't work well with Jest:
		  // https://github.com/facebook/react/issues/7240
		  // Remove the inline requires when we don't need them anymore:
		  // https://github.com/facebook/react/pull/7178
		  ReactComponentTreeHook = __webpack_require__(93);
		}
	
		/**
		 * @param {function} traverseContext Context passed through traversal.
		 * @param {?ReactComponent} child React child component.
		 * @param {!string} name String name of key path to child.
		 * @param {number=} selfDebugID Optional debugID of the current internal instance.
		 */
		function flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {
		  // We found a component instance.
		  if (traverseContext && typeof traverseContext === 'object') {
		    var result = traverseContext;
		    var keyUnique = result[name] === undefined;
		    if (process.env.NODE_ENV !== 'production') {
		      if (!ReactComponentTreeHook) {
		        ReactComponentTreeHook = __webpack_require__(93);
		      }
		      if (!keyUnique) {
		        process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
		      }
		    }
		    if (keyUnique && child != null) {
		      result[name] = child;
		    }
		  }
		}
	
		/**
		 * Flattens children that are typically specified as `props.children`. Any null
		 * children will not be included in the resulting object.
		 * @return {!object} flattened children keyed by name.
		 */
		function flattenChildren(children, selfDebugID) {
		  if (children == null) {
		    return children;
		  }
		  var result = {};
	
		  if (process.env.NODE_ENV !== 'production') {
		    traverseAllChildren(children, function (traverseContext, child, name) {
		      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);
		    }, result);
		  } else {
		    traverseAllChildren(children, flattenSingleChildIntoContext, result);
		  }
		  return result;
		}
	
		module.exports = flattenChildren;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 205 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2014-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var _assign = __webpack_require__(120);
	
		var PooledClass = __webpack_require__(121);
		var Transaction = __webpack_require__(139);
		var ReactInstrumentation = __webpack_require__(133);
		var ReactServerUpdateQueue = __webpack_require__(206);
	
		/**
		 * Executed within the scope of the `Transaction` instance. Consider these as
		 * being member methods, but with an implied ordering while being isolated from
		 * each other.
		 */
		var TRANSACTION_WRAPPERS = [];
	
		if (process.env.NODE_ENV !== 'production') {
		  TRANSACTION_WRAPPERS.push({
		    initialize: ReactInstrumentation.debugTool.onBeginFlush,
		    close: ReactInstrumentation.debugTool.onEndFlush
		  });
		}
	
		var noopCallbackQueue = {
		  enqueue: function () {}
		};
	
		/**
		 * @class ReactServerRenderingTransaction
		 * @param {boolean} renderToStaticMarkup
		 */
		function ReactServerRenderingTransaction(renderToStaticMarkup) {
		  this.reinitializeTransaction();
		  this.renderToStaticMarkup = renderToStaticMarkup;
		  this.useCreateElement = false;
		  this.updateQueue = new ReactServerUpdateQueue(this);
		}
	
		var Mixin = {
		  /**
		   * @see Transaction
		   * @abstract
		   * @final
		   * @return {array} Empty list of operation wrap procedures.
		   */
		  getTransactionWrappers: function () {
		    return TRANSACTION_WRAPPERS;
		  },
	
		  /**
		   * @return {object} The queue to collect `onDOMReady` callbacks with.
		   */
		  getReactMountReady: function () {
		    return noopCallbackQueue;
		  },
	
		  /**
		   * @return {object} The queue to collect React async events.
		   */
		  getUpdateQueue: function () {
		    return this.updateQueue;
		  },
	
		  /**
		   * `PooledClass` looks for this, and will invoke this before allowing this
		   * instance to be reused.
		   */
		  destructor: function () {},
	
		  checkpoint: function () {},
	
		  rollback: function () {}
		};
	
		_assign(ReactServerRenderingTransaction.prototype, Transaction, Mixin);
	
		PooledClass.addPoolingTo(ReactServerRenderingTransaction);
	
		module.exports = ReactServerRenderingTransaction;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 206 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2015-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * 
		 */
	
		'use strict';
	
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
		var ReactUpdateQueue = __webpack_require__(207);
	
		var warning = __webpack_require__(114);
	
		function warnNoop(publicInstance, callerName) {
		  if (process.env.NODE_ENV !== 'production') {
		    var constructor = publicInstance.constructor;
		    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
		  }
		}
	
		/**
		 * This is the update queue used for server rendering.
		 * It delegates to ReactUpdateQueue while server rendering is in progress and
		 * switches to ReactNoopUpdateQueue after the transaction has completed.
		 * @class ReactServerUpdateQueue
		 * @param {Transaction} transaction
		 */
	
		var ReactServerUpdateQueue = function () {
		  function ReactServerUpdateQueue(transaction) {
		    _classCallCheck(this, ReactServerUpdateQueue);
	
		    this.transaction = transaction;
		  }
	
		  /**
		   * Checks whether or not this composite component is mounted.
		   * @param {ReactClass} publicInstance The instance we want to test.
		   * @return {boolean} True if mounted, false otherwise.
		   * @protected
		   * @final
		   */
	
	
		  ReactServerUpdateQueue.prototype.isMounted = function isMounted(publicInstance) {
		    return false;
		  };
	
		  /**
		   * Enqueue a callback that will be executed after all the pending updates
		   * have processed.
		   *
		   * @param {ReactClass} publicInstance The instance to use as `this` context.
		   * @param {?function} callback Called after state is updated.
		   * @internal
		   */
	
	
		  ReactServerUpdateQueue.prototype.enqueueCallback = function enqueueCallback(publicInstance, callback, callerName) {
		    if (this.transaction.isInTransaction()) {
		      ReactUpdateQueue.enqueueCallback(publicInstance, callback, callerName);
		    }
		  };
	
		  /**
		   * Forces an update. This should only be invoked when it is known with
		   * certainty that we are **not** in a DOM transaction.
		   *
		   * You may want to call this when you know that some deeper aspect of the
		   * component's state has changed but `setState` was not called.
		   *
		   * This will not invoke `shouldComponentUpdate`, but it will invoke
		   * `componentWillUpdate` and `componentDidUpdate`.
		   *
		   * @param {ReactClass} publicInstance The instance that should rerender.
		   * @internal
		   */
	
	
		  ReactServerUpdateQueue.prototype.enqueueForceUpdate = function enqueueForceUpdate(publicInstance) {
		    if (this.transaction.isInTransaction()) {
		      ReactUpdateQueue.enqueueForceUpdate(publicInstance);
		    } else {
		      warnNoop(publicInstance, 'forceUpdate');
		    }
		  };
	
		  /**
		   * Replaces all of the state. Always use this or `setState` to mutate state.
		   * You should treat `this.state` as immutable.
		   *
		   * There is no guarantee that `this.state` will be immediately updated, so
		   * accessing `this.state` after calling this method may return the old value.
		   *
		   * @param {ReactClass} publicInstance The instance that should rerender.
		   * @param {object|function} completeState Next state.
		   * @internal
		   */
	
	
		  ReactServerUpdateQueue.prototype.enqueueReplaceState = function enqueueReplaceState(publicInstance, completeState) {
		    if (this.transaction.isInTransaction()) {
		      ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState);
		    } else {
		      warnNoop(publicInstance, 'replaceState');
		    }
		  };
	
		  /**
		   * Sets a subset of the state. This only exists because _pendingState is
		   * internal. This provides a merging strategy that is not available to deep
		   * properties which is confusing. TODO: Expose pendingState or don't use it
		   * during the merge.
		   *
		   * @param {ReactClass} publicInstance The instance that should rerender.
		   * @param {object|function} partialState Next partial state to be merged with state.
		   * @internal
		   */
	
	
		  ReactServerUpdateQueue.prototype.enqueueSetState = function enqueueSetState(publicInstance, partialState) {
		    if (this.transaction.isInTransaction()) {
		      ReactUpdateQueue.enqueueSetState(publicInstance, partialState);
		    } else {
		      warnNoop(publicInstance, 'setState');
		    }
		  };
	
		  return ReactServerUpdateQueue;
		}();
	
		module.exports = ReactServerUpdateQueue;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 207 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2015-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var _prodInvariant = __webpack_require__(102);
	
		var ReactCurrentOwner = __webpack_require__(77);
		var ReactInstanceMap = __webpack_require__(187);
		var ReactInstrumentation = __webpack_require__(133);
		var ReactUpdates = __webpack_require__(127);
	
		var invariant = __webpack_require__(104);
		var warning = __webpack_require__(114);
	
		function enqueueUpdate(internalInstance) {
		  ReactUpdates.enqueueUpdate(internalInstance);
		}
	
		function formatUnexpectedArgument(arg) {
		  var type = typeof arg;
		  if (type !== 'object') {
		    return type;
		  }
		  var displayName = arg.constructor && arg.constructor.name || type;
		  var keys = Object.keys(arg);
		  if (keys.length > 0 && keys.length < 20) {
		    return displayName + ' (keys: ' + keys.join(', ') + ')';
		  }
		  return displayName;
		}
	
		function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
		  var internalInstance = ReactInstanceMap.get(publicInstance);
		  if (!internalInstance) {
		    if (process.env.NODE_ENV !== 'production') {
		      var ctor = publicInstance.constructor;
		      // Only warn when we have a callerName. Otherwise we should be silent.
		      // We're probably calling from enqueueCallback. We don't want to warn
		      // there because we already warned for the corresponding lifecycle method.
		      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, ctor && (ctor.displayName || ctor.name) || 'ReactClass') : void 0;
		    }
		    return null;
		  }
	
		  if (process.env.NODE_ENV !== 'production') {
		    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + 'within `render` or another component\'s constructor). Render methods ' + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;
		  }
	
		  return internalInstance;
		}
	
		/**
		 * ReactUpdateQueue allows for state updates to be scheduled into a later
		 * reconciliation step.
		 */
		var ReactUpdateQueue = {
	
		  /**
		   * Checks whether or not this composite component is mounted.
		   * @param {ReactClass} publicInstance The instance we want to test.
		   * @return {boolean} True if mounted, false otherwise.
		   * @protected
		   * @final
		   */
		  isMounted: function (publicInstance) {
		    if (process.env.NODE_ENV !== 'production') {
		      var owner = ReactCurrentOwner.current;
		      if (owner !== null) {
		        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
		        owner._warnedAboutRefsInRender = true;
		      }
		    }
		    var internalInstance = ReactInstanceMap.get(publicInstance);
		    if (internalInstance) {
		      // During componentWillMount and render this will still be null but after
		      // that will always render to something. At least for now. So we can use
		      // this hack.
		      return !!internalInstance._renderedComponent;
		    } else {
		      return false;
		    }
		  },
	
		  /**
		   * Enqueue a callback that will be executed after all the pending updates
		   * have processed.
		   *
		   * @param {ReactClass} publicInstance The instance to use as `this` context.
		   * @param {?function} callback Called after state is updated.
		   * @param {string} callerName Name of the calling function in the public API.
		   * @internal
		   */
		  enqueueCallback: function (publicInstance, callback, callerName) {
		    ReactUpdateQueue.validateCallback(callback, callerName);
		    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);
	
		    // Previously we would throw an error if we didn't have an internal
		    // instance. Since we want to make it a no-op instead, we mirror the same
		    // behavior we have in other enqueue* methods.
		    // We also need to ignore callbacks in componentWillMount. See
		    // enqueueUpdates.
		    if (!internalInstance) {
		      return null;
		    }
	
		    if (internalInstance._pendingCallbacks) {
		      internalInstance._pendingCallbacks.push(callback);
		    } else {
		      internalInstance._pendingCallbacks = [callback];
		    }
		    // TODO: The callback here is ignored when setState is called from
		    // componentWillMount. Either fix it or disallow doing so completely in
		    // favor of getInitialState. Alternatively, we can disallow
		    // componentWillMount during server-side rendering.
		    enqueueUpdate(internalInstance);
		  },
	
		  enqueueCallbackInternal: function (internalInstance, callback) {
		    if (internalInstance._pendingCallbacks) {
		      internalInstance._pendingCallbacks.push(callback);
		    } else {
		      internalInstance._pendingCallbacks = [callback];
		    }
		    enqueueUpdate(internalInstance);
		  },
	
		  /**
		   * Forces an update. This should only be invoked when it is known with
		   * certainty that we are **not** in a DOM transaction.
		   *
		   * You may want to call this when you know that some deeper aspect of the
		   * component's state has changed but `setState` was not called.
		   *
		   * This will not invoke `shouldComponentUpdate`, but it will invoke
		   * `componentWillUpdate` and `componentDidUpdate`.
		   *
		   * @param {ReactClass} publicInstance The instance that should rerender.
		   * @internal
		   */
		  enqueueForceUpdate: function (publicInstance) {
		    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');
	
		    if (!internalInstance) {
		      return;
		    }
	
		    internalInstance._pendingForceUpdate = true;
	
		    enqueueUpdate(internalInstance);
		  },
	
		  /**
		   * Replaces all of the state. Always use this or `setState` to mutate state.
		   * You should treat `this.state` as immutable.
		   *
		   * There is no guarantee that `this.state` will be immediately updated, so
		   * accessing `this.state` after calling this method may return the old value.
		   *
		   * @param {ReactClass} publicInstance The instance that should rerender.
		   * @param {object} completeState Next state.
		   * @internal
		   */
		  enqueueReplaceState: function (publicInstance, completeState) {
		    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');
	
		    if (!internalInstance) {
		      return;
		    }
	
		    internalInstance._pendingStateQueue = [completeState];
		    internalInstance._pendingReplaceState = true;
	
		    enqueueUpdate(internalInstance);
		  },
	
		  /**
		   * Sets a subset of the state. This only exists because _pendingState is
		   * internal. This provides a merging strategy that is not available to deep
		   * properties which is confusing. TODO: Expose pendingState or don't use it
		   * during the merge.
		   *
		   * @param {ReactClass} publicInstance The instance that should rerender.
		   * @param {object} partialState Next partial state to be merged with state.
		   * @internal
		   */
		  enqueueSetState: function (publicInstance, partialState) {
		    if (process.env.NODE_ENV !== 'production') {
		      ReactInstrumentation.debugTool.onSetState();
		      process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;
		    }
	
		    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');
	
		    if (!internalInstance) {
		      return;
		    }
	
		    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
		    queue.push(partialState);
	
		    enqueueUpdate(internalInstance);
		  },
	
		  enqueueElementInternal: function (internalInstance, nextElement, nextContext) {
		    internalInstance._pendingElement = nextElement;
		    // TODO: introduce _pendingContext instead of setting it directly.
		    internalInstance._context = nextContext;
		    enqueueUpdate(internalInstance);
		  },
	
		  validateCallback: function (callback, callerName) {
		    !(!callback || typeof callback === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : _prodInvariant('122', callerName, formatUnexpectedArgument(callback)) : void 0;
		  }
	
		};
	
		module.exports = ReactUpdateQueue;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 208 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2015-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var _assign = __webpack_require__(120);
	
		var emptyFunction = __webpack_require__(115);
		var warning = __webpack_require__(114);
	
		var validateDOMNesting = emptyFunction;
	
		if (process.env.NODE_ENV !== 'production') {
		  // This validation code was written based on the HTML5 parsing spec:
		  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
		  //
		  // Note: this does not catch all invalid nesting, nor does it try to (as it's
		  // not clear what practical benefit doing so provides); instead, we warn only
		  // for cases where the parser will give a parse tree differing from what React
		  // intended. For example, <b><div></div></b> is invalid but we don't warn
		  // because it still parses correctly; we do warn for other cases like nested
		  // <p> tags where the beginning of the second element implicitly closes the
		  // first, causing a confusing mess.
	
		  // https://html.spec.whatwg.org/multipage/syntax.html#special
		  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];
	
		  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
		  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',
	
		  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
		  // TODO: Distinguish by namespace here -- for <title>, including it here
		  // errs on the side of fewer warnings
		  'foreignObject', 'desc', 'title'];
	
		  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
		  var buttonScopeTags = inScopeTags.concat(['button']);
	
		  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
		  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];
	
		  var emptyAncestorInfo = {
		    current: null,
	
		    formTag: null,
		    aTagInScope: null,
		    buttonTagInScope: null,
		    nobrTagInScope: null,
		    pTagInButtonScope: null,
	
		    listItemTagAutoclosing: null,
		    dlItemTagAutoclosing: null
		  };
	
		  var updatedAncestorInfo = function (oldInfo, tag, instance) {
		    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
		    var info = { tag: tag, instance: instance };
	
		    if (inScopeTags.indexOf(tag) !== -1) {
		      ancestorInfo.aTagInScope = null;
		      ancestorInfo.buttonTagInScope = null;
		      ancestorInfo.nobrTagInScope = null;
		    }
		    if (buttonScopeTags.indexOf(tag) !== -1) {
		      ancestorInfo.pTagInButtonScope = null;
		    }
	
		    // See rules for 'li', 'dd', 'dt' start tags in
		    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
		    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
		      ancestorInfo.listItemTagAutoclosing = null;
		      ancestorInfo.dlItemTagAutoclosing = null;
		    }
	
		    ancestorInfo.current = info;
	
		    if (tag === 'form') {
		      ancestorInfo.formTag = info;
		    }
		    if (tag === 'a') {
		      ancestorInfo.aTagInScope = info;
		    }
		    if (tag === 'button') {
		      ancestorInfo.buttonTagInScope = info;
		    }
		    if (tag === 'nobr') {
		      ancestorInfo.nobrTagInScope = info;
		    }
		    if (tag === 'p') {
		      ancestorInfo.pTagInButtonScope = info;
		    }
		    if (tag === 'li') {
		      ancestorInfo.listItemTagAutoclosing = info;
		    }
		    if (tag === 'dd' || tag === 'dt') {
		      ancestorInfo.dlItemTagAutoclosing = info;
		    }
	
		    return ancestorInfo;
		  };
	
		  /**
		   * Returns whether
		   */
		  var isTagValidWithParent = function (tag, parentTag) {
		    // First, let's check if we're in an unusual parsing mode...
		    switch (parentTag) {
		      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
		      case 'select':
		        return tag === 'option' || tag === 'optgroup' || tag === '#text';
		      case 'optgroup':
		        return tag === 'option' || tag === '#text';
		      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
		      // but
		      case 'option':
		        return tag === '#text';
	
		      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
		      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
		      // No special behavior since these rules fall back to "in body" mode for
		      // all except special table nodes which cause bad parsing behavior anyway.
	
		      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
		      case 'tr':
		        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
	
		      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
		      case 'tbody':
		      case 'thead':
		      case 'tfoot':
		        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
	
		      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
		      case 'colgroup':
		        return tag === 'col' || tag === 'template';
	
		      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
		      case 'table':
		        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
	
		      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
		      case 'head':
		        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
	
		      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
		      case 'html':
		        return tag === 'head' || tag === 'body';
		      case '#document':
		        return tag === 'html';
		    }
	
		    // Probably in the "in body" parsing mode, so we outlaw only tag combos
		    // where the parsing rules cause implicit opens or closes to be added.
		    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
		    switch (tag) {
		      case 'h1':
		      case 'h2':
		      case 'h3':
		      case 'h4':
		      case 'h5':
		      case 'h6':
		        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';
	
		      case 'rp':
		      case 'rt':
		        return impliedEndTags.indexOf(parentTag) === -1;
	
		      case 'body':
		      case 'caption':
		      case 'col':
		      case 'colgroup':
		      case 'frame':
		      case 'head':
		      case 'html':
		      case 'tbody':
		      case 'td':
		      case 'tfoot':
		      case 'th':
		      case 'thead':
		      case 'tr':
		        // These tags are only valid with a few parents that have special child
		        // parsing rules -- if we're down here, then none of those matched and
		        // so we allow it only if we don't know what the parent is, as all other
		        // cases are invalid.
		        return parentTag == null;
		    }
	
		    return true;
		  };
	
		  /**
		   * Returns whether
		   */
		  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
		    switch (tag) {
		      case 'address':
		      case 'article':
		      case 'aside':
		      case 'blockquote':
		      case 'center':
		      case 'details':
		      case 'dialog':
		      case 'dir':
		      case 'div':
		      case 'dl':
		      case 'fieldset':
		      case 'figcaption':
		      case 'figure':
		      case 'footer':
		      case 'header':
		      case 'hgroup':
		      case 'main':
		      case 'menu':
		      case 'nav':
		      case 'ol':
		      case 'p':
		      case 'section':
		      case 'summary':
		      case 'ul':
	
		      case 'pre':
		      case 'listing':
	
		      case 'table':
	
		      case 'hr':
	
		      case 'xmp':
	
		      case 'h1':
		      case 'h2':
		      case 'h3':
		      case 'h4':
		      case 'h5':
		      case 'h6':
		        return ancestorInfo.pTagInButtonScope;
	
		      case 'form':
		        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;
	
		      case 'li':
		        return ancestorInfo.listItemTagAutoclosing;
	
		      case 'dd':
		      case 'dt':
		        return ancestorInfo.dlItemTagAutoclosing;
	
		      case 'button':
		        return ancestorInfo.buttonTagInScope;
	
		      case 'a':
		        // Spec says something about storing a list of markers, but it sounds
		        // equivalent to this check.
		        return ancestorInfo.aTagInScope;
	
		      case 'nobr':
		        return ancestorInfo.nobrTagInScope;
		    }
	
		    return null;
		  };
	
		  /**
		   * Given a ReactCompositeComponent instance, return a list of its recursive
		   * owners, starting at the root and ending with the instance itself.
		   */
		  var findOwnerStack = function (instance) {
		    if (!instance) {
		      return [];
		    }
	
		    var stack = [];
		    do {
		      stack.push(instance);
		    } while (instance = instance._currentElement._owner);
		    stack.reverse();
		    return stack;
		  };
	
		  var didWarn = {};
	
		  validateDOMNesting = function (childTag, childText, childInstance, ancestorInfo) {
		    ancestorInfo = ancestorInfo || emptyAncestorInfo;
		    var parentInfo = ancestorInfo.current;
		    var parentTag = parentInfo && parentInfo.tag;
	
		    if (childText != null) {
		      process.env.NODE_ENV !== 'production' ? warning(childTag == null, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;
		      childTag = '#text';
		    }
	
		    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
		    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
		    var problematic = invalidParent || invalidAncestor;
	
		    if (problematic) {
		      var ancestorTag = problematic.tag;
		      var ancestorInstance = problematic.instance;
	
		      var childOwner = childInstance && childInstance._currentElement._owner;
		      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;
	
		      var childOwners = findOwnerStack(childOwner);
		      var ancestorOwners = findOwnerStack(ancestorOwner);
	
		      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
		      var i;
	
		      var deepestCommon = -1;
		      for (i = 0; i < minStackLen; i++) {
		        if (childOwners[i] === ancestorOwners[i]) {
		          deepestCommon = i;
		        } else {
		          break;
		        }
		      }
	
		      var UNKNOWN = '(unknown)';
		      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
		        return inst.getName() || UNKNOWN;
		      });
		      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
		        return inst.getName() || UNKNOWN;
		      });
		      var ownerInfo = [].concat(
		      // If the parent and child instances have a common owner ancestor, start
		      // with that -- otherwise we just start with the parent's owners.
		      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,
		      // If we're warning about an invalid (non-parent) ancestry, add '...'
		      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');
	
		      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
		      if (didWarn[warnKey]) {
		        return;
		      }
		      didWarn[warnKey] = true;
	
		      var tagDisplayName = childTag;
		      var whitespaceInfo = '';
		      if (childTag === '#text') {
		        if (/\S/.test(childText)) {
		          tagDisplayName = 'Text nodes';
		        } else {
		          tagDisplayName = 'Whitespace text nodes';
		          whitespaceInfo = ' Make sure you don\'t have any extra whitespace between tags on ' + 'each line of your source code.';
		        }
		      } else {
		        tagDisplayName = '<' + childTag + '>';
		      }
	
		      if (invalidParent) {
		        var info = '';
		        if (ancestorTag === 'table' && childTag === 'tr') {
		          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
		        }
		        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s ' + 'See %s.%s', tagDisplayName, ancestorTag, whitespaceInfo, ownerInfo, info) : void 0;
		      } else {
		        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;
		      }
		    }
		  };
	
		  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;
	
		  // For testing
		  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
		    ancestorInfo = ancestorInfo || emptyAncestorInfo;
		    var parentInfo = ancestorInfo.current;
		    var parentTag = parentInfo && parentInfo.tag;
		    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
		  };
		}
	
		module.exports = validateDOMNesting;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 209 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright 2014-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var _assign = __webpack_require__(120);
	
		var DOMLazyTree = __webpack_require__(152);
		var ReactDOMComponentTree = __webpack_require__(101);
	
		var ReactDOMEmptyComponent = function (instantiate) {
		  // ReactCompositeComponent uses this:
		  this._currentElement = null;
		  // ReactDOMComponentTree uses these:
		  this._hostNode = null;
		  this._hostParent = null;
		  this._hostContainerInfo = null;
		  this._domID = 0;
		};
		_assign(ReactDOMEmptyComponent.prototype, {
		  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
		    var domID = hostContainerInfo._idCounter++;
		    this._domID = domID;
		    this._hostParent = hostParent;
		    this._hostContainerInfo = hostContainerInfo;
	
		    var nodeValue = ' react-empty: ' + this._domID + ' ';
		    if (transaction.useCreateElement) {
		      var ownerDocument = hostContainerInfo._ownerDocument;
		      var node = ownerDocument.createComment(nodeValue);
		      ReactDOMComponentTree.precacheNode(this, node);
		      return DOMLazyTree(node);
		    } else {
		      if (transaction.renderToStaticMarkup) {
		        // Normally we'd insert a comment node, but since this is a situation
		        // where React won't take over (static pages), we can simply return
		        // nothing.
		        return '';
		      }
		      return '<!--' + nodeValue + '-->';
		    }
		  },
		  receiveComponent: function () {},
		  getHostNode: function () {
		    return ReactDOMComponentTree.getNodeFromInstance(this);
		  },
		  unmountComponent: function () {
		    ReactDOMComponentTree.uncacheNode(this);
		  }
		});
	
		module.exports = ReactDOMEmptyComponent;
	
	/***/ },
	/* 210 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2015-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var _prodInvariant = __webpack_require__(102);
	
		var invariant = __webpack_require__(104);
	
		/**
		 * Return the lowest common ancestor of A and B, or null if they are in
		 * different trees.
		 */
		function getLowestCommonAncestor(instA, instB) {
		  !('_hostNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
		  !('_hostNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
	
		  var depthA = 0;
		  for (var tempA = instA; tempA; tempA = tempA._hostParent) {
		    depthA++;
		  }
		  var depthB = 0;
		  for (var tempB = instB; tempB; tempB = tempB._hostParent) {
		    depthB++;
		  }
	
		  // If A is deeper, crawl up.
		  while (depthA - depthB > 0) {
		    instA = instA._hostParent;
		    depthA--;
		  }
	
		  // If B is deeper, crawl up.
		  while (depthB - depthA > 0) {
		    instB = instB._hostParent;
		    depthB--;
		  }
	
		  // Walk in lockstep until we find a match.
		  var depth = depthA;
		  while (depth--) {
		    if (instA === instB) {
		      return instA;
		    }
		    instA = instA._hostParent;
		    instB = instB._hostParent;
		  }
		  return null;
		}
	
		/**
		 * Return if A is an ancestor of B.
		 */
		function isAncestor(instA, instB) {
		  !('_hostNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
		  !('_hostNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
	
		  while (instB) {
		    if (instB === instA) {
		      return true;
		    }
		    instB = instB._hostParent;
		  }
		  return false;
		}
	
		/**
		 * Return the parent instance of the passed-in instance.
		 */
		function getParentInstance(inst) {
		  !('_hostNode' in inst) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getParentInstance: Invalid argument.') : _prodInvariant('36') : void 0;
	
		  return inst._hostParent;
		}
	
		/**
		 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
		 */
		function traverseTwoPhase(inst, fn, arg) {
		  var path = [];
		  while (inst) {
		    path.push(inst);
		    inst = inst._hostParent;
		  }
		  var i;
		  for (i = path.length; i-- > 0;) {
		    fn(path[i], 'captured', arg);
		  }
		  for (i = 0; i < path.length; i++) {
		    fn(path[i], 'bubbled', arg);
		  }
		}
	
		/**
		 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
		 * should would receive a `mouseEnter` or `mouseLeave` event.
		 *
		 * Does not invoke the callback on the nearest common ancestor because nothing
		 * "entered" or "left" that element.
		 */
		function traverseEnterLeave(from, to, fn, argFrom, argTo) {
		  var common = from && to ? getLowestCommonAncestor(from, to) : null;
		  var pathFrom = [];
		  while (from && from !== common) {
		    pathFrom.push(from);
		    from = from._hostParent;
		  }
		  var pathTo = [];
		  while (to && to !== common) {
		    pathTo.push(to);
		    to = to._hostParent;
		  }
		  var i;
		  for (i = 0; i < pathFrom.length; i++) {
		    fn(pathFrom[i], 'bubbled', argFrom);
		  }
		  for (i = pathTo.length; i-- > 0;) {
		    fn(pathTo[i], 'captured', argTo);
		  }
		}
	
		module.exports = {
		  isAncestor: isAncestor,
		  getLowestCommonAncestor: getLowestCommonAncestor,
		  getParentInstance: getParentInstance,
		  traverseTwoPhase: traverseTwoPhase,
		  traverseEnterLeave: traverseEnterLeave
		};
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 211 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var _prodInvariant = __webpack_require__(102),
		    _assign = __webpack_require__(120);
	
		var DOMChildrenOperations = __webpack_require__(151);
		var DOMLazyTree = __webpack_require__(152);
		var ReactDOMComponentTree = __webpack_require__(101);
	
		var escapeTextContentForBrowser = __webpack_require__(157);
		var invariant = __webpack_require__(104);
		var validateDOMNesting = __webpack_require__(208);
	
		/**
		 * Text nodes violate a couple assumptions that React makes about components:
		 *
		 *  - When mounting text into the DOM, adjacent text nodes are merged.
		 *  - Text nodes cannot be assigned a React root ID.
		 *
		 * This component is used to wrap strings between comment nodes so that they
		 * can undergo the same reconciliation that is applied to elements.
		 *
		 * TODO: Investigate representing React components in the DOM with text nodes.
		 *
		 * @class ReactDOMTextComponent
		 * @extends ReactComponent
		 * @internal
		 */
		var ReactDOMTextComponent = function (text) {
		  // TODO: This is really a ReactText (ReactNode), not a ReactElement
		  this._currentElement = text;
		  this._stringText = '' + text;
		  // ReactDOMComponentTree uses these:
		  this._hostNode = null;
		  this._hostParent = null;
	
		  // Properties
		  this._domID = 0;
		  this._mountIndex = 0;
		  this._closingComment = null;
		  this._commentNodes = null;
		};
	
		_assign(ReactDOMTextComponent.prototype, {
	
		  /**
		   * Creates the markup for this text node. This node is not intended to have
		   * any features besides containing text content.
		   *
		   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
		   * @return {string} Markup for this text node.
		   * @internal
		   */
		  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
		    if (process.env.NODE_ENV !== 'production') {
		      var parentInfo;
		      if (hostParent != null) {
		        parentInfo = hostParent._ancestorInfo;
		      } else if (hostContainerInfo != null) {
		        parentInfo = hostContainerInfo._ancestorInfo;
		      }
		      if (parentInfo) {
		        // parentInfo should always be present except for the top-level
		        // component when server rendering
		        validateDOMNesting(null, this._stringText, this, parentInfo);
		      }
		    }
	
		    var domID = hostContainerInfo._idCounter++;
		    var openingValue = ' react-text: ' + domID + ' ';
		    var closingValue = ' /react-text ';
		    this._domID = domID;
		    this._hostParent = hostParent;
		    if (transaction.useCreateElement) {
		      var ownerDocument = hostContainerInfo._ownerDocument;
		      var openingComment = ownerDocument.createComment(openingValue);
		      var closingComment = ownerDocument.createComment(closingValue);
		      var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());
		      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));
		      if (this._stringText) {
		        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));
		      }
		      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));
		      ReactDOMComponentTree.precacheNode(this, openingComment);
		      this._closingComment = closingComment;
		      return lazyTree;
		    } else {
		      var escapedText = escapeTextContentForBrowser(this._stringText);
	
		      if (transaction.renderToStaticMarkup) {
		        // Normally we'd wrap this between comment nodes for the reasons stated
		        // above, but since this is a situation where React won't take over
		        // (static pages), we can simply return the text as it is.
		        return escapedText;
		      }
	
		      return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';
		    }
		  },
	
		  /**
		   * Updates this component by updating the text content.
		   *
		   * @param {ReactText} nextText The next text content
		   * @param {ReactReconcileTransaction} transaction
		   * @internal
		   */
		  receiveComponent: function (nextText, transaction) {
		    if (nextText !== this._currentElement) {
		      this._currentElement = nextText;
		      var nextStringText = '' + nextText;
		      if (nextStringText !== this._stringText) {
		        // TODO: Save this as pending props and use performUpdateIfNecessary
		        // and/or updateComponent to do the actual update for consistency with
		        // other component types?
		        this._stringText = nextStringText;
		        var commentNodes = this.getHostNode();
		        DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);
		      }
		    }
		  },
	
		  getHostNode: function () {
		    var hostNode = this._commentNodes;
		    if (hostNode) {
		      return hostNode;
		    }
		    if (!this._closingComment) {
		      var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);
		      var node = openingComment.nextSibling;
		      while (true) {
		        !(node != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing closing comment for text component %s', this._domID) : _prodInvariant('67', this._domID) : void 0;
		        if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {
		          this._closingComment = node;
		          break;
		        }
		        node = node.nextSibling;
		      }
		    }
		    hostNode = [this._hostNode, this._closingComment];
		    this._commentNodes = hostNode;
		    return hostNode;
		  },
	
		  unmountComponent: function () {
		    this._closingComment = null;
		    this._commentNodes = null;
		    ReactDOMComponentTree.uncacheNode(this);
		  }
	
		});
	
		module.exports = ReactDOMTextComponent;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 212 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var _assign = __webpack_require__(120);
	
		var ReactUpdates = __webpack_require__(127);
		var Transaction = __webpack_require__(139);
	
		var emptyFunction = __webpack_require__(115);
	
		var RESET_BATCHED_UPDATES = {
		  initialize: emptyFunction,
		  close: function () {
		    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
		  }
		};
	
		var FLUSH_BATCHED_UPDATES = {
		  initialize: emptyFunction,
		  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
		};
	
		var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];
	
		function ReactDefaultBatchingStrategyTransaction() {
		  this.reinitializeTransaction();
		}
	
		_assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction, {
		  getTransactionWrappers: function () {
		    return TRANSACTION_WRAPPERS;
		  }
		});
	
		var transaction = new ReactDefaultBatchingStrategyTransaction();
	
		var ReactDefaultBatchingStrategy = {
		  isBatchingUpdates: false,
	
		  /**
		   * Call the provided function in a context within which calls to `setState`
		   * and friends are batched such that components aren't updated unnecessarily.
		   */
		  batchedUpdates: function (callback, a, b, c, d, e) {
		    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;
	
		    ReactDefaultBatchingStrategy.isBatchingUpdates = true;
	
		    // The code is written this way to avoid extra allocations
		    if (alreadyBatchingUpdates) {
		      return callback(a, b, c, d, e);
		    } else {
		      return transaction.perform(callback, null, a, b, c, d, e);
		    }
		  }
		};
	
		module.exports = ReactDefaultBatchingStrategy;
	
	/***/ },
	/* 213 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var _assign = __webpack_require__(120);
	
		var EventListener = __webpack_require__(214);
		var ExecutionEnvironment = __webpack_require__(118);
		var PooledClass = __webpack_require__(121);
		var ReactDOMComponentTree = __webpack_require__(101);
		var ReactUpdates = __webpack_require__(127);
	
		var getEventTarget = __webpack_require__(140);
		var getUnboundedScrollPosition = __webpack_require__(215);
	
		/**
		 * Find the deepest React component completely containing the root of the
		 * passed-in instance (for use when entire React trees are nested within each
		 * other). If React trees are not nested, returns null.
		 */
		function findParent(inst) {
		  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
		  // traversal, but caching is difficult to do correctly without using a
		  // mutation observer to listen for all DOM changes.
		  while (inst._hostParent) {
		    inst = inst._hostParent;
		  }
		  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);
		  var container = rootNode.parentNode;
		  return ReactDOMComponentTree.getClosestInstanceFromNode(container);
		}
	
		// Used to store ancestor hierarchy in top level callback
		function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
		  this.topLevelType = topLevelType;
		  this.nativeEvent = nativeEvent;
		  this.ancestors = [];
		}
		_assign(TopLevelCallbackBookKeeping.prototype, {
		  destructor: function () {
		    this.topLevelType = null;
		    this.nativeEvent = null;
		    this.ancestors.length = 0;
		  }
		});
		PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);
	
		function handleTopLevelImpl(bookKeeping) {
		  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);
		  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);
	
		  // Loop through the hierarchy, in case there's any nested components.
		  // It's important that we build the array of ancestors before calling any
		  // event handlers, because event handlers can modify the DOM, leading to
		  // inconsistencies with ReactMount's node cache. See #1105.
		  var ancestor = targetInst;
		  do {
		    bookKeeping.ancestors.push(ancestor);
		    ancestor = ancestor && findParent(ancestor);
		  } while (ancestor);
	
		  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
		    targetInst = bookKeeping.ancestors[i];
		    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
		  }
		}
	
		function scrollValueMonitor(cb) {
		  var scrollPosition = getUnboundedScrollPosition(window);
		  cb(scrollPosition);
		}
	
		var ReactEventListener = {
		  _enabled: true,
		  _handleTopLevel: null,
	
		  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,
	
		  setHandleTopLevel: function (handleTopLevel) {
		    ReactEventListener._handleTopLevel = handleTopLevel;
		  },
	
		  setEnabled: function (enabled) {
		    ReactEventListener._enabled = !!enabled;
		  },
	
		  isEnabled: function () {
		    return ReactEventListener._enabled;
		  },
	
		  /**
		   * Traps top-level events by using event bubbling.
		   *
		   * @param {string} topLevelType Record from `EventConstants`.
		   * @param {string} handlerBaseName Event name (e.g. "click").
		   * @param {object} element Element on which to attach listener.
		   * @return {?object} An object with a remove function which will forcefully
		   *                  remove the listener.
		   * @internal
		   */
		  trapBubbledEvent: function (topLevelType, handlerBaseName, element) {
		    if (!element) {
		      return null;
		    }
		    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
		  },
	
		  /**
		   * Traps a top-level event by using event capturing.
		   *
		   * @param {string} topLevelType Record from `EventConstants`.
		   * @param {string} handlerBaseName Event name (e.g. "click").
		   * @param {object} element Element on which to attach listener.
		   * @return {?object} An object with a remove function which will forcefully
		   *                  remove the listener.
		   * @internal
		   */
		  trapCapturedEvent: function (topLevelType, handlerBaseName, element) {
		    if (!element) {
		      return null;
		    }
		    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
		  },
	
		  monitorScrollValue: function (refresh) {
		    var callback = scrollValueMonitor.bind(null, refresh);
		    EventListener.listen(window, 'scroll', callback);
		  },
	
		  dispatchEvent: function (topLevelType, nativeEvent) {
		    if (!ReactEventListener._enabled) {
		      return;
		    }
	
		    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
		    try {
		      // Event queue being processed in the same cycle allows
		      // `preventDefault`.
		      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
		    } finally {
		      TopLevelCallbackBookKeeping.release(bookKeeping);
		    }
		  }
		};
	
		module.exports = ReactEventListener;
	
	/***/ },
	/* 214 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
		/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * @typechecks
		 */
	
		var emptyFunction = __webpack_require__(115);
	
		/**
		 * Upstream version of event listener. Does not take into account specific
		 * nature of platform.
		 */
		var EventListener = {
		  /**
		   * Listen to DOM events during the bubble phase.
		   *
		   * @param {DOMEventTarget} target DOM element to register listener on.
		   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
		   * @param {function} callback Callback function.
		   * @return {object} Object with a `remove` method.
		   */
		  listen: function listen(target, eventType, callback) {
		    if (target.addEventListener) {
		      target.addEventListener(eventType, callback, false);
		      return {
		        remove: function remove() {
		          target.removeEventListener(eventType, callback, false);
		        }
		      };
		    } else if (target.attachEvent) {
		      target.attachEvent('on' + eventType, callback);
		      return {
		        remove: function remove() {
		          target.detachEvent('on' + eventType, callback);
		        }
		      };
		    }
		  },
	
		  /**
		   * Listen to DOM events during the capture phase.
		   *
		   * @param {DOMEventTarget} target DOM element to register listener on.
		   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
		   * @param {function} callback Callback function.
		   * @return {object} Object with a `remove` method.
		   */
		  capture: function capture(target, eventType, callback) {
		    if (target.addEventListener) {
		      target.addEventListener(eventType, callback, true);
		      return {
		        remove: function remove() {
		          target.removeEventListener(eventType, callback, true);
		        }
		      };
		    } else {
		      if (process.env.NODE_ENV !== 'production') {
		        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
		      }
		      return {
		        remove: emptyFunction
		      };
		    }
		  },
	
		  registerDefault: function registerDefault() {}
		};
	
		module.exports = EventListener;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 215 */
	/***/ function(module, exports) {
	
		/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * @typechecks
		 */
	
		'use strict';
	
		/**
		 * Gets the scroll position of the supplied element or window.
		 *
		 * The return values are unbounded, unlike `getScrollPosition`. This means they
		 * may be negative or exceed the element boundaries (which is possible using
		 * inertial scrolling).
		 *
		 * @param {DOMWindow|DOMElement} scrollable
		 * @return {object} Map with `x` and `y` keys.
		 */
	
		function getUnboundedScrollPosition(scrollable) {
		  if (scrollable.Window && scrollable instanceof scrollable.Window) {
		    return {
		      x: scrollable.pageXOffset || scrollable.document.documentElement.scrollLeft,
		      y: scrollable.pageYOffset || scrollable.document.documentElement.scrollTop
		    };
		  }
		  return {
		    x: scrollable.scrollLeft,
		    y: scrollable.scrollTop
		  };
		}
	
		module.exports = getUnboundedScrollPosition;
	
	/***/ },
	/* 216 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var DOMProperty = __webpack_require__(103);
		var EventPluginHub = __webpack_require__(110);
		var EventPluginUtils = __webpack_require__(112);
		var ReactComponentEnvironment = __webpack_require__(186);
		var ReactEmptyComponent = __webpack_require__(197);
		var ReactBrowserEventEmitter = __webpack_require__(176);
		var ReactHostComponent = __webpack_require__(198);
		var ReactUpdates = __webpack_require__(127);
	
		var ReactInjection = {
		  Component: ReactComponentEnvironment.injection,
		  DOMProperty: DOMProperty.injection,
		  EmptyComponent: ReactEmptyComponent.injection,
		  EventPluginHub: EventPluginHub.injection,
		  EventPluginUtils: EventPluginUtils.injection,
		  EventEmitter: ReactBrowserEventEmitter.injection,
		  HostComponent: ReactHostComponent.injection,
		  Updates: ReactUpdates.injection
		};
	
		module.exports = ReactInjection;
	
	/***/ },
	/* 217 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var _assign = __webpack_require__(120);
	
		var CallbackQueue = __webpack_require__(128);
		var PooledClass = __webpack_require__(121);
		var ReactBrowserEventEmitter = __webpack_require__(176);
		var ReactInputSelection = __webpack_require__(218);
		var ReactInstrumentation = __webpack_require__(133);
		var Transaction = __webpack_require__(139);
		var ReactUpdateQueue = __webpack_require__(207);
	
		/**
		 * Ensures that, when possible, the selection range (currently selected text
		 * input) is not disturbed by performing the transaction.
		 */
		var SELECTION_RESTORATION = {
		  /**
		   * @return {Selection} Selection information.
		   */
		  initialize: ReactInputSelection.getSelectionInformation,
		  /**
		   * @param {Selection} sel Selection information returned from `initialize`.
		   */
		  close: ReactInputSelection.restoreSelection
		};
	
		/**
		 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
		 * high level DOM manipulations (like temporarily removing a text input from the
		 * DOM).
		 */
		var EVENT_SUPPRESSION = {
		  /**
		   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
		   * the reconciliation.
		   */
		  initialize: function () {
		    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
		    ReactBrowserEventEmitter.setEnabled(false);
		    return currentlyEnabled;
		  },
	
		  /**
		   * @param {boolean} previouslyEnabled Enabled status of
		   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
		   *   restores the previous value.
		   */
		  close: function (previouslyEnabled) {
		    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
		  }
		};
	
		/**
		 * Provides a queue for collecting `componentDidMount` and
		 * `componentDidUpdate` callbacks during the transaction.
		 */
		var ON_DOM_READY_QUEUEING = {
		  /**
		   * Initializes the internal `onDOMReady` queue.
		   */
		  initialize: function () {
		    this.reactMountReady.reset();
		  },
	
		  /**
		   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
		   */
		  close: function () {
		    this.reactMountReady.notifyAll();
		  }
		};
	
		/**
		 * Executed within the scope of the `Transaction` instance. Consider these as
		 * being member methods, but with an implied ordering while being isolated from
		 * each other.
		 */
		var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];
	
		if (process.env.NODE_ENV !== 'production') {
		  TRANSACTION_WRAPPERS.push({
		    initialize: ReactInstrumentation.debugTool.onBeginFlush,
		    close: ReactInstrumentation.debugTool.onEndFlush
		  });
		}
	
		/**
		 * Currently:
		 * - The order that these are listed in the transaction is critical:
		 * - Suppresses events.
		 * - Restores selection range.
		 *
		 * Future:
		 * - Restore document/overflow scroll positions that were unintentionally
		 *   modified via DOM insertions above the top viewport boundary.
		 * - Implement/integrate with customized constraint based layout system and keep
		 *   track of which dimensions must be remeasured.
		 *
		 * @class ReactReconcileTransaction
		 */
		function ReactReconcileTransaction(useCreateElement) {
		  this.reinitializeTransaction();
		  // Only server-side rendering really needs this option (see
		  // `ReactServerRendering`), but server-side uses
		  // `ReactServerRenderingTransaction` instead. This option is here so that it's
		  // accessible and defaults to false when `ReactDOMComponent` and
		  // `ReactDOMTextComponent` checks it in `mountComponent`.`
		  this.renderToStaticMarkup = false;
		  this.reactMountReady = CallbackQueue.getPooled(null);
		  this.useCreateElement = useCreateElement;
		}
	
		var Mixin = {
		  /**
		   * @see Transaction
		   * @abstract
		   * @final
		   * @return {array<object>} List of operation wrap procedures.
		   *   TODO: convert to array<TransactionWrapper>
		   */
		  getTransactionWrappers: function () {
		    return TRANSACTION_WRAPPERS;
		  },
	
		  /**
		   * @return {object} The queue to collect `onDOMReady` callbacks with.
		   */
		  getReactMountReady: function () {
		    return this.reactMountReady;
		  },
	
		  /**
		   * @return {object} The queue to collect React async events.
		   */
		  getUpdateQueue: function () {
		    return ReactUpdateQueue;
		  },
	
		  /**
		   * Save current transaction state -- if the return value from this method is
		   * passed to `rollback`, the transaction will be reset to that state.
		   */
		  checkpoint: function () {
		    // reactMountReady is the our only stateful wrapper
		    return this.reactMountReady.checkpoint();
		  },
	
		  rollback: function (checkpoint) {
		    this.reactMountReady.rollback(checkpoint);
		  },
	
		  /**
		   * `PooledClass` looks for this, and will invoke this before allowing this
		   * instance to be reused.
		   */
		  destructor: function () {
		    CallbackQueue.release(this.reactMountReady);
		    this.reactMountReady = null;
		  }
		};
	
		_assign(ReactReconcileTransaction.prototype, Transaction, Mixin);
	
		PooledClass.addPoolingTo(ReactReconcileTransaction);
	
		module.exports = ReactReconcileTransaction;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 218 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var ReactDOMSelection = __webpack_require__(219);
	
		var containsNode = __webpack_require__(221);
		var focusNode = __webpack_require__(165);
		var getActiveElement = __webpack_require__(224);
	
		function isInDocument(node) {
		  return containsNode(document.documentElement, node);
		}
	
		/**
		 * @ReactInputSelection: React input selection module. Based on Selection.js,
		 * but modified to be suitable for react and has a couple of bug fixes (doesn't
		 * assume buttons have range selections allowed).
		 * Input selection module for React.
		 */
		var ReactInputSelection = {
	
		  hasSelectionCapabilities: function (elem) {
		    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
		    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
		  },
	
		  getSelectionInformation: function () {
		    var focusedElem = getActiveElement();
		    return {
		      focusedElem: focusedElem,
		      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
		    };
		  },
	
		  /**
		   * @restoreSelection: If any selection information was potentially lost,
		   * restore it. This is useful when performing operations that could remove dom
		   * nodes and place them back in, resulting in focus being lost.
		   */
		  restoreSelection: function (priorSelectionInformation) {
		    var curFocusedElem = getActiveElement();
		    var priorFocusedElem = priorSelectionInformation.focusedElem;
		    var priorSelectionRange = priorSelectionInformation.selectionRange;
		    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
		      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
		        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
		      }
		      focusNode(priorFocusedElem);
		    }
		  },
	
		  /**
		   * @getSelection: Gets the selection bounds of a focused textarea, input or
		   * contentEditable node.
		   * -@input: Look up selection bounds of this input
		   * -@return {start: selectionStart, end: selectionEnd}
		   */
		  getSelection: function (input) {
		    var selection;
	
		    if ('selectionStart' in input) {
		      // Modern browser with input or textarea.
		      selection = {
		        start: input.selectionStart,
		        end: input.selectionEnd
		      };
		    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
		      // IE8 input.
		      var range = document.selection.createRange();
		      // There can only be one selection per document in IE, so it must
		      // be in our element.
		      if (range.parentElement() === input) {
		        selection = {
		          start: -range.moveStart('character', -input.value.length),
		          end: -range.moveEnd('character', -input.value.length)
		        };
		      }
		    } else {
		      // Content editable or old IE textarea.
		      selection = ReactDOMSelection.getOffsets(input);
		    }
	
		    return selection || { start: 0, end: 0 };
		  },
	
		  /**
		   * @setSelection: Sets the selection bounds of a textarea or input and focuses
		   * the input.
		   * -@input     Set selection bounds of this input or textarea
		   * -@offsets   Object of same form that is returned from get*
		   */
		  setSelection: function (input, offsets) {
		    var start = offsets.start;
		    var end = offsets.end;
		    if (end === undefined) {
		      end = start;
		    }
	
		    if ('selectionStart' in input) {
		      input.selectionStart = start;
		      input.selectionEnd = Math.min(end, input.value.length);
		    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
		      var range = input.createTextRange();
		      range.collapse(true);
		      range.moveStart('character', start);
		      range.moveEnd('character', end - start);
		      range.select();
		    } else {
		      ReactDOMSelection.setOffsets(input, offsets);
		    }
		  }
		};
	
		module.exports = ReactInputSelection;
	
	/***/ },
	/* 219 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var ExecutionEnvironment = __webpack_require__(118);
	
		var getNodeForCharacterOffset = __webpack_require__(220);
		var getTextContentAccessor = __webpack_require__(122);
	
		/**
		 * While `isCollapsed` is available on the Selection object and `collapsed`
		 * is available on the Range object, IE11 sometimes gets them wrong.
		 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
		 */
		function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
		  return anchorNode === focusNode && anchorOffset === focusOffset;
		}
	
		/**
		 * Get the appropriate anchor and focus node/offset pairs for IE.
		 *
		 * The catch here is that IE's selection API doesn't provide information
		 * about whether the selection is forward or backward, so we have to
		 * behave as though it's always forward.
		 *
		 * IE text differs from modern selection in that it behaves as though
		 * block elements end with a new line. This means character offsets will
		 * differ between the two APIs.
		 *
		 * @param {DOMElement} node
		 * @return {object}
		 */
		function getIEOffsets(node) {
		  var selection = document.selection;
		  var selectedRange = selection.createRange();
		  var selectedLength = selectedRange.text.length;
	
		  // Duplicate selection so we can move range without breaking user selection.
		  var fromStart = selectedRange.duplicate();
		  fromStart.moveToElementText(node);
		  fromStart.setEndPoint('EndToStart', selectedRange);
	
		  var startOffset = fromStart.text.length;
		  var endOffset = startOffset + selectedLength;
	
		  return {
		    start: startOffset,
		    end: endOffset
		  };
		}
	
		/**
		 * @param {DOMElement} node
		 * @return {?object}
		 */
		function getModernOffsets(node) {
		  var selection = window.getSelection && window.getSelection();
	
		  if (!selection || selection.rangeCount === 0) {
		    return null;
		  }
	
		  var anchorNode = selection.anchorNode;
		  var anchorOffset = selection.anchorOffset;
		  var focusNode = selection.focusNode;
		  var focusOffset = selection.focusOffset;
	
		  var currentRange = selection.getRangeAt(0);
	
		  // In Firefox, range.startContainer and range.endContainer can be "anonymous
		  // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
		  // divs do not seem to expose properties, triggering a "Permission denied
		  // error" if any of its properties are accessed. The only seemingly possible
		  // way to avoid erroring is to access a property that typically works for
		  // non-anonymous divs and catch any error that may otherwise arise. See
		  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
		  try {
		    /* eslint-disable no-unused-expressions */
		    currentRange.startContainer.nodeType;
		    currentRange.endContainer.nodeType;
		    /* eslint-enable no-unused-expressions */
		  } catch (e) {
		    return null;
		  }
	
		  // If the node and offset values are the same, the selection is collapsed.
		  // `Selection.isCollapsed` is available natively, but IE sometimes gets
		  // this value wrong.
		  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);
	
		  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;
	
		  var tempRange = currentRange.cloneRange();
		  tempRange.selectNodeContents(node);
		  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);
	
		  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);
	
		  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
		  var end = start + rangeLength;
	
		  // Detect whether the selection is backward.
		  var detectionRange = document.createRange();
		  detectionRange.setStart(anchorNode, anchorOffset);
		  detectionRange.setEnd(focusNode, focusOffset);
		  var isBackward = detectionRange.collapsed;
	
		  return {
		    start: isBackward ? end : start,
		    end: isBackward ? start : end
		  };
		}
	
		/**
		 * @param {DOMElement|DOMTextNode} node
		 * @param {object} offsets
		 */
		function setIEOffsets(node, offsets) {
		  var range = document.selection.createRange().duplicate();
		  var start, end;
	
		  if (offsets.end === undefined) {
		    start = offsets.start;
		    end = start;
		  } else if (offsets.start > offsets.end) {
		    start = offsets.end;
		    end = offsets.start;
		  } else {
		    start = offsets.start;
		    end = offsets.end;
		  }
	
		  range.moveToElementText(node);
		  range.moveStart('character', start);
		  range.setEndPoint('EndToStart', range);
		  range.moveEnd('character', end - start);
		  range.select();
		}
	
		/**
		 * In modern non-IE browsers, we can support both forward and backward
		 * selections.
		 *
		 * Note: IE10+ supports the Selection object, but it does not support
		 * the `extend` method, which means that even in modern IE, it's not possible
		 * to programmatically create a backward selection. Thus, for all IE
		 * versions, we use the old IE API to create our selections.
		 *
		 * @param {DOMElement|DOMTextNode} node
		 * @param {object} offsets
		 */
		function setModernOffsets(node, offsets) {
		  if (!window.getSelection) {
		    return;
		  }
	
		  var selection = window.getSelection();
		  var length = node[getTextContentAccessor()].length;
		  var start = Math.min(offsets.start, length);
		  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);
	
		  // IE 11 uses modern selection, but doesn't support the extend method.
		  // Flip backward selections, so we can set with a single range.
		  if (!selection.extend && start > end) {
		    var temp = end;
		    end = start;
		    start = temp;
		  }
	
		  var startMarker = getNodeForCharacterOffset(node, start);
		  var endMarker = getNodeForCharacterOffset(node, end);
	
		  if (startMarker && endMarker) {
		    var range = document.createRange();
		    range.setStart(startMarker.node, startMarker.offset);
		    selection.removeAllRanges();
	
		    if (start > end) {
		      selection.addRange(range);
		      selection.extend(endMarker.node, endMarker.offset);
		    } else {
		      range.setEnd(endMarker.node, endMarker.offset);
		      selection.addRange(range);
		    }
		  }
		}
	
		var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);
	
		var ReactDOMSelection = {
		  /**
		   * @param {DOMElement} node
		   */
		  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,
	
		  /**
		   * @param {DOMElement|DOMTextNode} node
		   * @param {object} offsets
		   */
		  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
		};
	
		module.exports = ReactDOMSelection;
	
	/***/ },
	/* 220 */
	/***/ function(module, exports) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		/**
		 * Given any node return the first leaf node without children.
		 *
		 * @param {DOMElement|DOMTextNode} node
		 * @return {DOMElement|DOMTextNode}
		 */
	
		function getLeafNode(node) {
		  while (node && node.firstChild) {
		    node = node.firstChild;
		  }
		  return node;
		}
	
		/**
		 * Get the next sibling within a container. This will walk up the
		 * DOM if a node's siblings have been exhausted.
		 *
		 * @param {DOMElement|DOMTextNode} node
		 * @return {?DOMElement|DOMTextNode}
		 */
		function getSiblingNode(node) {
		  while (node) {
		    if (node.nextSibling) {
		      return node.nextSibling;
		    }
		    node = node.parentNode;
		  }
		}
	
		/**
		 * Get object describing the nodes which contain characters at offset.
		 *
		 * @param {DOMElement|DOMTextNode} root
		 * @param {number} offset
		 * @return {?object}
		 */
		function getNodeForCharacterOffset(root, offset) {
		  var node = getLeafNode(root);
		  var nodeStart = 0;
		  var nodeEnd = 0;
	
		  while (node) {
		    if (node.nodeType === 3) {
		      nodeEnd = nodeStart + node.textContent.length;
	
		      if (nodeStart <= offset && nodeEnd >= offset) {
		        return {
		          node: node,
		          offset: offset - nodeStart
		        };
		      }
	
		      nodeStart = nodeEnd;
		    }
	
		    node = getLeafNode(getSiblingNode(node));
		  }
		}
	
		module.exports = getNodeForCharacterOffset;
	
	/***/ },
	/* 221 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * 
		 */
	
		var isTextNode = __webpack_require__(222);
	
		/*eslint-disable no-bitwise */
	
		/**
		 * Checks if a given DOM node contains or is another DOM node.
		 */
		function containsNode(outerNode, innerNode) {
		  if (!outerNode || !innerNode) {
		    return false;
		  } else if (outerNode === innerNode) {
		    return true;
		  } else if (isTextNode(outerNode)) {
		    return false;
		  } else if (isTextNode(innerNode)) {
		    return containsNode(outerNode, innerNode.parentNode);
		  } else if ('contains' in outerNode) {
		    return outerNode.contains(innerNode);
		  } else if (outerNode.compareDocumentPosition) {
		    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
		  } else {
		    return false;
		  }
		}
	
		module.exports = containsNode;
	
	/***/ },
	/* 222 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * @typechecks
		 */
	
		var isNode = __webpack_require__(223);
	
		/**
		 * @param {*} object The object to check.
		 * @return {boolean} Whether or not the object is a DOM text node.
		 */
		function isTextNode(object) {
		  return isNode(object) && object.nodeType == 3;
		}
	
		module.exports = isTextNode;
	
	/***/ },
	/* 223 */
	/***/ function(module, exports) {
	
		'use strict';
	
		/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * @typechecks
		 */
	
		/**
		 * @param {*} object The object to check.
		 * @return {boolean} Whether or not the object is a DOM node.
		 */
		function isNode(object) {
		  var doc = object ? object.ownerDocument || object : document;
		  var defaultView = doc.defaultView || window;
		  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
		}
	
		module.exports = isNode;
	
	/***/ },
	/* 224 */
	/***/ function(module, exports) {
	
		'use strict';
	
		/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * @typechecks
		 */
	
		/* eslint-disable fb-www/typeof-undefined */
	
		/**
		 * Same as document.activeElement but wraps in a try-catch block. In IE it is
		 * not safe to call document.activeElement if there is nothing focused.
		 *
		 * The activeElement will be null only if the document or document body is not
		 * yet defined.
		 *
		 * @param {?DOMDocument} doc Defaults to current document.
		 * @return {?DOMElement}
		 */
		function getActiveElement(doc) /*?DOMElement*/{
		  doc = doc || (typeof document !== 'undefined' ? document : undefined);
		  if (typeof doc === 'undefined') {
		    return null;
		  }
		  try {
		    return doc.activeElement || doc.body;
		  } catch (e) {
		    return doc.body;
		  }
		}
	
		module.exports = getActiveElement;
	
	/***/ },
	/* 225 */
	/***/ function(module, exports) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var NS = {
		  xlink: 'http://www.w3.org/1999/xlink',
		  xml: 'http://www.w3.org/XML/1998/namespace'
		};
	
		// We use attributes for everything SVG so let's avoid some duplication and run
		// code instead.
		// The following are all specified in the HTML config already so we exclude here.
		// - class (as className)
		// - color
		// - height
		// - id
		// - lang
		// - max
		// - media
		// - method
		// - min
		// - name
		// - style
		// - target
		// - type
		// - width
		var ATTRS = {
		  accentHeight: 'accent-height',
		  accumulate: 0,
		  additive: 0,
		  alignmentBaseline: 'alignment-baseline',
		  allowReorder: 'allowReorder',
		  alphabetic: 0,
		  amplitude: 0,
		  arabicForm: 'arabic-form',
		  ascent: 0,
		  attributeName: 'attributeName',
		  attributeType: 'attributeType',
		  autoReverse: 'autoReverse',
		  azimuth: 0,
		  baseFrequency: 'baseFrequency',
		  baseProfile: 'baseProfile',
		  baselineShift: 'baseline-shift',
		  bbox: 0,
		  begin: 0,
		  bias: 0,
		  by: 0,
		  calcMode: 'calcMode',
		  capHeight: 'cap-height',
		  clip: 0,
		  clipPath: 'clip-path',
		  clipRule: 'clip-rule',
		  clipPathUnits: 'clipPathUnits',
		  colorInterpolation: 'color-interpolation',
		  colorInterpolationFilters: 'color-interpolation-filters',
		  colorProfile: 'color-profile',
		  colorRendering: 'color-rendering',
		  contentScriptType: 'contentScriptType',
		  contentStyleType: 'contentStyleType',
		  cursor: 0,
		  cx: 0,
		  cy: 0,
		  d: 0,
		  decelerate: 0,
		  descent: 0,
		  diffuseConstant: 'diffuseConstant',
		  direction: 0,
		  display: 0,
		  divisor: 0,
		  dominantBaseline: 'dominant-baseline',
		  dur: 0,
		  dx: 0,
		  dy: 0,
		  edgeMode: 'edgeMode',
		  elevation: 0,
		  enableBackground: 'enable-background',
		  end: 0,
		  exponent: 0,
		  externalResourcesRequired: 'externalResourcesRequired',
		  fill: 0,
		  fillOpacity: 'fill-opacity',
		  fillRule: 'fill-rule',
		  filter: 0,
		  filterRes: 'filterRes',
		  filterUnits: 'filterUnits',
		  floodColor: 'flood-color',
		  floodOpacity: 'flood-opacity',
		  focusable: 0,
		  fontFamily: 'font-family',
		  fontSize: 'font-size',
		  fontSizeAdjust: 'font-size-adjust',
		  fontStretch: 'font-stretch',
		  fontStyle: 'font-style',
		  fontVariant: 'font-variant',
		  fontWeight: 'font-weight',
		  format: 0,
		  from: 0,
		  fx: 0,
		  fy: 0,
		  g1: 0,
		  g2: 0,
		  glyphName: 'glyph-name',
		  glyphOrientationHorizontal: 'glyph-orientation-horizontal',
		  glyphOrientationVertical: 'glyph-orientation-vertical',
		  glyphRef: 'glyphRef',
		  gradientTransform: 'gradientTransform',
		  gradientUnits: 'gradientUnits',
		  hanging: 0,
		  horizAdvX: 'horiz-adv-x',
		  horizOriginX: 'horiz-origin-x',
		  ideographic: 0,
		  imageRendering: 'image-rendering',
		  'in': 0,
		  in2: 0,
		  intercept: 0,
		  k: 0,
		  k1: 0,
		  k2: 0,
		  k3: 0,
		  k4: 0,
		  kernelMatrix: 'kernelMatrix',
		  kernelUnitLength: 'kernelUnitLength',
		  kerning: 0,
		  keyPoints: 'keyPoints',
		  keySplines: 'keySplines',
		  keyTimes: 'keyTimes',
		  lengthAdjust: 'lengthAdjust',
		  letterSpacing: 'letter-spacing',
		  lightingColor: 'lighting-color',
		  limitingConeAngle: 'limitingConeAngle',
		  local: 0,
		  markerEnd: 'marker-end',
		  markerMid: 'marker-mid',
		  markerStart: 'marker-start',
		  markerHeight: 'markerHeight',
		  markerUnits: 'markerUnits',
		  markerWidth: 'markerWidth',
		  mask: 0,
		  maskContentUnits: 'maskContentUnits',
		  maskUnits: 'maskUnits',
		  mathematical: 0,
		  mode: 0,
		  numOctaves: 'numOctaves',
		  offset: 0,
		  opacity: 0,
		  operator: 0,
		  order: 0,
		  orient: 0,
		  orientation: 0,
		  origin: 0,
		  overflow: 0,
		  overlinePosition: 'overline-position',
		  overlineThickness: 'overline-thickness',
		  paintOrder: 'paint-order',
		  panose1: 'panose-1',
		  pathLength: 'pathLength',
		  patternContentUnits: 'patternContentUnits',
		  patternTransform: 'patternTransform',
		  patternUnits: 'patternUnits',
		  pointerEvents: 'pointer-events',
		  points: 0,
		  pointsAtX: 'pointsAtX',
		  pointsAtY: 'pointsAtY',
		  pointsAtZ: 'pointsAtZ',
		  preserveAlpha: 'preserveAlpha',
		  preserveAspectRatio: 'preserveAspectRatio',
		  primitiveUnits: 'primitiveUnits',
		  r: 0,
		  radius: 0,
		  refX: 'refX',
		  refY: 'refY',
		  renderingIntent: 'rendering-intent',
		  repeatCount: 'repeatCount',
		  repeatDur: 'repeatDur',
		  requiredExtensions: 'requiredExtensions',
		  requiredFeatures: 'requiredFeatures',
		  restart: 0,
		  result: 0,
		  rotate: 0,
		  rx: 0,
		  ry: 0,
		  scale: 0,
		  seed: 0,
		  shapeRendering: 'shape-rendering',
		  slope: 0,
		  spacing: 0,
		  specularConstant: 'specularConstant',
		  specularExponent: 'specularExponent',
		  speed: 0,
		  spreadMethod: 'spreadMethod',
		  startOffset: 'startOffset',
		  stdDeviation: 'stdDeviation',
		  stemh: 0,
		  stemv: 0,
		  stitchTiles: 'stitchTiles',
		  stopColor: 'stop-color',
		  stopOpacity: 'stop-opacity',
		  strikethroughPosition: 'strikethrough-position',
		  strikethroughThickness: 'strikethrough-thickness',
		  string: 0,
		  stroke: 0,
		  strokeDasharray: 'stroke-dasharray',
		  strokeDashoffset: 'stroke-dashoffset',
		  strokeLinecap: 'stroke-linecap',
		  strokeLinejoin: 'stroke-linejoin',
		  strokeMiterlimit: 'stroke-miterlimit',
		  strokeOpacity: 'stroke-opacity',
		  strokeWidth: 'stroke-width',
		  surfaceScale: 'surfaceScale',
		  systemLanguage: 'systemLanguage',
		  tableValues: 'tableValues',
		  targetX: 'targetX',
		  targetY: 'targetY',
		  textAnchor: 'text-anchor',
		  textDecoration: 'text-decoration',
		  textRendering: 'text-rendering',
		  textLength: 'textLength',
		  to: 0,
		  transform: 0,
		  u1: 0,
		  u2: 0,
		  underlinePosition: 'underline-position',
		  underlineThickness: 'underline-thickness',
		  unicode: 0,
		  unicodeBidi: 'unicode-bidi',
		  unicodeRange: 'unicode-range',
		  unitsPerEm: 'units-per-em',
		  vAlphabetic: 'v-alphabetic',
		  vHanging: 'v-hanging',
		  vIdeographic: 'v-ideographic',
		  vMathematical: 'v-mathematical',
		  values: 0,
		  vectorEffect: 'vector-effect',
		  version: 0,
		  vertAdvY: 'vert-adv-y',
		  vertOriginX: 'vert-origin-x',
		  vertOriginY: 'vert-origin-y',
		  viewBox: 'viewBox',
		  viewTarget: 'viewTarget',
		  visibility: 0,
		  widths: 0,
		  wordSpacing: 'word-spacing',
		  writingMode: 'writing-mode',
		  x: 0,
		  xHeight: 'x-height',
		  x1: 0,
		  x2: 0,
		  xChannelSelector: 'xChannelSelector',
		  xlinkActuate: 'xlink:actuate',
		  xlinkArcrole: 'xlink:arcrole',
		  xlinkHref: 'xlink:href',
		  xlinkRole: 'xlink:role',
		  xlinkShow: 'xlink:show',
		  xlinkTitle: 'xlink:title',
		  xlinkType: 'xlink:type',
		  xmlBase: 'xml:base',
		  xmlns: 0,
		  xmlnsXlink: 'xmlns:xlink',
		  xmlLang: 'xml:lang',
		  xmlSpace: 'xml:space',
		  y: 0,
		  y1: 0,
		  y2: 0,
		  yChannelSelector: 'yChannelSelector',
		  z: 0,
		  zoomAndPan: 'zoomAndPan'
		};
	
		var SVGDOMPropertyConfig = {
		  Properties: {},
		  DOMAttributeNamespaces: {
		    xlinkActuate: NS.xlink,
		    xlinkArcrole: NS.xlink,
		    xlinkHref: NS.xlink,
		    xlinkRole: NS.xlink,
		    xlinkShow: NS.xlink,
		    xlinkTitle: NS.xlink,
		    xlinkType: NS.xlink,
		    xmlBase: NS.xml,
		    xmlLang: NS.xml,
		    xmlSpace: NS.xml
		  },
		  DOMAttributeNames: {}
		};
	
		Object.keys(ATTRS).forEach(function (key) {
		  SVGDOMPropertyConfig.Properties[key] = 0;
		  if (ATTRS[key]) {
		    SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];
		  }
		});
	
		module.exports = SVGDOMPropertyConfig;
	
	/***/ },
	/* 226 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var EventPropagators = __webpack_require__(109);
		var ExecutionEnvironment = __webpack_require__(118);
		var ReactDOMComponentTree = __webpack_require__(101);
		var ReactInputSelection = __webpack_require__(218);
		var SyntheticEvent = __webpack_require__(124);
	
		var getActiveElement = __webpack_require__(224);
		var isTextInputElement = __webpack_require__(142);
		var shallowEqual = __webpack_require__(195);
	
		var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;
	
		var eventTypes = {
		  select: {
		    phasedRegistrationNames: {
		      bubbled: 'onSelect',
		      captured: 'onSelectCapture'
		    },
		    dependencies: ['topBlur', 'topContextMenu', 'topFocus', 'topKeyDown', 'topKeyUp', 'topMouseDown', 'topMouseUp', 'topSelectionChange']
		  }
		};
	
		var activeElement = null;
		var activeElementInst = null;
		var lastSelection = null;
		var mouseDown = false;
	
		// Track whether a listener exists for this plugin. If none exist, we do
		// not extract events. See #3639.
		var hasListener = false;
	
		/**
		 * Get an object which is a unique representation of the current selection.
		 *
		 * The return value will not be consistent across nodes or browsers, but
		 * two identical selections on the same node will return identical objects.
		 *
		 * @param {DOMElement} node
		 * @return {object}
		 */
		function getSelection(node) {
		  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
		    return {
		      start: node.selectionStart,
		      end: node.selectionEnd
		    };
		  } else if (window.getSelection) {
		    var selection = window.getSelection();
		    return {
		      anchorNode: selection.anchorNode,
		      anchorOffset: selection.anchorOffset,
		      focusNode: selection.focusNode,
		      focusOffset: selection.focusOffset
		    };
		  } else if (document.selection) {
		    var range = document.selection.createRange();
		    return {
		      parentElement: range.parentElement(),
		      text: range.text,
		      top: range.boundingTop,
		      left: range.boundingLeft
		    };
		  }
		}
	
		/**
		 * Poll selection to see whether it's changed.
		 *
		 * @param {object} nativeEvent
		 * @return {?SyntheticEvent}
		 */
		function constructSelectEvent(nativeEvent, nativeEventTarget) {
		  // Ensure we have the right element, and that the user is not dragging a
		  // selection (this matches native `select` event behavior). In HTML5, select
		  // fires only on input and textarea thus if there's no focused element we
		  // won't dispatch.
		  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
		    return null;
		  }
	
		  // Only fire when selection has actually changed.
		  var currentSelection = getSelection(activeElement);
		  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
		    lastSelection = currentSelection;
	
		    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);
	
		    syntheticEvent.type = 'select';
		    syntheticEvent.target = activeElement;
	
		    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);
	
		    return syntheticEvent;
		  }
	
		  return null;
		}
	
		/**
		 * This plugin creates an `onSelect` event that normalizes select events
		 * across form elements.
		 *
		 * Supported elements are:
		 * - input (see `isTextInputElement`)
		 * - textarea
		 * - contentEditable
		 *
		 * This differs from native browser implementations in the following ways:
		 * - Fires on contentEditable fields as well as inputs.
		 * - Fires for collapsed selection.
		 * - Fires after user input.
		 */
		var SelectEventPlugin = {
	
		  eventTypes: eventTypes,
	
		  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
		    if (!hasListener) {
		      return null;
		    }
	
		    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;
	
		    switch (topLevelType) {
		      // Track the input node that has focus.
		      case 'topFocus':
		        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
		          activeElement = targetNode;
		          activeElementInst = targetInst;
		          lastSelection = null;
		        }
		        break;
		      case 'topBlur':
		        activeElement = null;
		        activeElementInst = null;
		        lastSelection = null;
		        break;
	
		      // Don't fire the event while the user is dragging. This matches the
		      // semantics of the native select event.
		      case 'topMouseDown':
		        mouseDown = true;
		        break;
		      case 'topContextMenu':
		      case 'topMouseUp':
		        mouseDown = false;
		        return constructSelectEvent(nativeEvent, nativeEventTarget);
	
		      // Chrome and IE fire non-standard event when selection is changed (and
		      // sometimes when it hasn't). IE's event fires out of order with respect
		      // to key and input events on deletion, so we discard it.
		      //
		      // Firefox doesn't support selectionchange, so check selection status
		      // after each key entry. The selection changes after keydown and before
		      // keyup, but we check on keydown as well in the case of holding down a
		      // key, when multiple keydown events are fired but only one keyup is.
		      // This is also our approach for IE handling, for the reason above.
		      case 'topSelectionChange':
		        if (skipSelectionChangeEvent) {
		          break;
		        }
		      // falls through
		      case 'topKeyDown':
		      case 'topKeyUp':
		        return constructSelectEvent(nativeEvent, nativeEventTarget);
		    }
	
		    return null;
		  },
	
		  didPutListener: function (inst, registrationName, listener) {
		    if (registrationName === 'onSelect') {
		      hasListener = true;
		    }
		  }
		};
	
		module.exports = SelectEventPlugin;
	
	/***/ },
	/* 227 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * 
		 */
	
		'use strict';
	
		var _prodInvariant = __webpack_require__(102);
	
		var EventListener = __webpack_require__(214);
		var EventPropagators = __webpack_require__(109);
		var ReactDOMComponentTree = __webpack_require__(101);
		var SyntheticAnimationEvent = __webpack_require__(228);
		var SyntheticClipboardEvent = __webpack_require__(229);
		var SyntheticEvent = __webpack_require__(124);
		var SyntheticFocusEvent = __webpack_require__(230);
		var SyntheticKeyboardEvent = __webpack_require__(231);
		var SyntheticMouseEvent = __webpack_require__(145);
		var SyntheticDragEvent = __webpack_require__(234);
		var SyntheticTouchEvent = __webpack_require__(235);
		var SyntheticTransitionEvent = __webpack_require__(236);
		var SyntheticUIEvent = __webpack_require__(146);
		var SyntheticWheelEvent = __webpack_require__(237);
	
		var emptyFunction = __webpack_require__(115);
		var getEventCharCode = __webpack_require__(232);
		var invariant = __webpack_require__(104);
	
		/**
		 * Turns
		 * ['abort', ...]
		 * into
		 * eventTypes = {
		 *   'abort': {
		 *     phasedRegistrationNames: {
		 *       bubbled: 'onAbort',
		 *       captured: 'onAbortCapture',
		 *     },
		 *     dependencies: ['topAbort'],
		 *   },
		 *   ...
		 * };
		 * topLevelEventsToDispatchConfig = {
		 *   'topAbort': { sameConfig }
		 * };
		 */
		var eventTypes = {};
		var topLevelEventsToDispatchConfig = {};
		['abort', 'animationEnd', 'animationIteration', 'animationStart', 'blur', 'canPlay', 'canPlayThrough', 'click', 'contextMenu', 'copy', 'cut', 'doubleClick', 'drag', 'dragEnd', 'dragEnter', 'dragExit', 'dragLeave', 'dragOver', 'dragStart', 'drop', 'durationChange', 'emptied', 'encrypted', 'ended', 'error', 'focus', 'input', 'invalid', 'keyDown', 'keyPress', 'keyUp', 'load', 'loadedData', 'loadedMetadata', 'loadStart', 'mouseDown', 'mouseMove', 'mouseOut', 'mouseOver', 'mouseUp', 'paste', 'pause', 'play', 'playing', 'progress', 'rateChange', 'reset', 'scroll', 'seeked', 'seeking', 'stalled', 'submit', 'suspend', 'timeUpdate', 'touchCancel', 'touchEnd', 'touchMove', 'touchStart', 'transitionEnd', 'volumeChange', 'waiting', 'wheel'].forEach(function (event) {
		  var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
		  var onEvent = 'on' + capitalizedEvent;
		  var topEvent = 'top' + capitalizedEvent;
	
		  var type = {
		    phasedRegistrationNames: {
		      bubbled: onEvent,
		      captured: onEvent + 'Capture'
		    },
		    dependencies: [topEvent]
		  };
		  eventTypes[event] = type;
		  topLevelEventsToDispatchConfig[topEvent] = type;
		});
	
		var onClickListeners = {};
	
		function getDictionaryKey(inst) {
		  // Prevents V8 performance issue:
		  // https://github.com/facebook/react/pull/7232
		  return '.' + inst._rootNodeID;
		}
	
		function isInteractive(tag) {
		  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
		}
	
		var SimpleEventPlugin = {
	
		  eventTypes: eventTypes,
	
		  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
		    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
		    if (!dispatchConfig) {
		      return null;
		    }
		    var EventConstructor;
		    switch (topLevelType) {
		      case 'topAbort':
		      case 'topCanPlay':
		      case 'topCanPlayThrough':
		      case 'topDurationChange':
		      case 'topEmptied':
		      case 'topEncrypted':
		      case 'topEnded':
		      case 'topError':
		      case 'topInput':
		      case 'topInvalid':
		      case 'topLoad':
		      case 'topLoadedData':
		      case 'topLoadedMetadata':
		      case 'topLoadStart':
		      case 'topPause':
		      case 'topPlay':
		      case 'topPlaying':
		      case 'topProgress':
		      case 'topRateChange':
		      case 'topReset':
		      case 'topSeeked':
		      case 'topSeeking':
		      case 'topStalled':
		      case 'topSubmit':
		      case 'topSuspend':
		      case 'topTimeUpdate':
		      case 'topVolumeChange':
		      case 'topWaiting':
		        // HTML Events
		        // @see http://www.w3.org/TR/html5/index.html#events-0
		        EventConstructor = SyntheticEvent;
		        break;
		      case 'topKeyPress':
		        // Firefox creates a keypress event for function keys too. This removes
		        // the unwanted keypress events. Enter is however both printable and
		        // non-printable. One would expect Tab to be as well (but it isn't).
		        if (getEventCharCode(nativeEvent) === 0) {
		          return null;
		        }
		      /* falls through */
		      case 'topKeyDown':
		      case 'topKeyUp':
		        EventConstructor = SyntheticKeyboardEvent;
		        break;
		      case 'topBlur':
		      case 'topFocus':
		        EventConstructor = SyntheticFocusEvent;
		        break;
		      case 'topClick':
		        // Firefox creates a click event on right mouse clicks. This removes the
		        // unwanted click events.
		        if (nativeEvent.button === 2) {
		          return null;
		        }
		      /* falls through */
		      case 'topDoubleClick':
		      case 'topMouseDown':
		      case 'topMouseMove':
		      case 'topMouseUp':
		      // TODO: Disabled elements should not respond to mouse events
		      /* falls through */
		      case 'topMouseOut':
		      case 'topMouseOver':
		      case 'topContextMenu':
		        EventConstructor = SyntheticMouseEvent;
		        break;
		      case 'topDrag':
		      case 'topDragEnd':
		      case 'topDragEnter':
		      case 'topDragExit':
		      case 'topDragLeave':
		      case 'topDragOver':
		      case 'topDragStart':
		      case 'topDrop':
		        EventConstructor = SyntheticDragEvent;
		        break;
		      case 'topTouchCancel':
		      case 'topTouchEnd':
		      case 'topTouchMove':
		      case 'topTouchStart':
		        EventConstructor = SyntheticTouchEvent;
		        break;
		      case 'topAnimationEnd':
		      case 'topAnimationIteration':
		      case 'topAnimationStart':
		        EventConstructor = SyntheticAnimationEvent;
		        break;
		      case 'topTransitionEnd':
		        EventConstructor = SyntheticTransitionEvent;
		        break;
		      case 'topScroll':
		        EventConstructor = SyntheticUIEvent;
		        break;
		      case 'topWheel':
		        EventConstructor = SyntheticWheelEvent;
		        break;
		      case 'topCopy':
		      case 'topCut':
		      case 'topPaste':
		        EventConstructor = SyntheticClipboardEvent;
		        break;
		    }
		    !EventConstructor ? process.env.NODE_ENV !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;
		    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
		    EventPropagators.accumulateTwoPhaseDispatches(event);
		    return event;
		  },
	
		  didPutListener: function (inst, registrationName, listener) {
		    // Mobile Safari does not fire properly bubble click events on
		    // non-interactive elements, which means delegated click listeners do not
		    // fire. The workaround for this bug involves attaching an empty click
		    // listener on the target node.
		    // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
		    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {
		      var key = getDictionaryKey(inst);
		      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
		      if (!onClickListeners[key]) {
		        onClickListeners[key] = EventListener.listen(node, 'click', emptyFunction);
		      }
		    }
		  },
	
		  willDeleteListener: function (inst, registrationName) {
		    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {
		      var key = getDictionaryKey(inst);
		      onClickListeners[key].remove();
		      delete onClickListeners[key];
		    }
		  }
	
		};
	
		module.exports = SimpleEventPlugin;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 228 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var SyntheticEvent = __webpack_require__(124);
	
		/**
		 * @interface Event
		 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
		 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
		 */
		var AnimationEventInterface = {
		  animationName: null,
		  elapsedTime: null,
		  pseudoElement: null
		};
	
		/**
		 * @param {object} dispatchConfig Configuration used to dispatch this event.
		 * @param {string} dispatchMarker Marker identifying the event target.
		 * @param {object} nativeEvent Native browser event.
		 * @extends {SyntheticEvent}
		 */
		function SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
		  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
		}
	
		SyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);
	
		module.exports = SyntheticAnimationEvent;
	
	/***/ },
	/* 229 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var SyntheticEvent = __webpack_require__(124);
	
		/**
		 * @interface Event
		 * @see http://www.w3.org/TR/clipboard-apis/
		 */
		var ClipboardEventInterface = {
		  clipboardData: function (event) {
		    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
		  }
		};
	
		/**
		 * @param {object} dispatchConfig Configuration used to dispatch this event.
		 * @param {string} dispatchMarker Marker identifying the event target.
		 * @param {object} nativeEvent Native browser event.
		 * @extends {SyntheticUIEvent}
		 */
		function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
		  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
		}
	
		SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);
	
		module.exports = SyntheticClipboardEvent;
	
	/***/ },
	/* 230 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var SyntheticUIEvent = __webpack_require__(146);
	
		/**
		 * @interface FocusEvent
		 * @see http://www.w3.org/TR/DOM-Level-3-Events/
		 */
		var FocusEventInterface = {
		  relatedTarget: null
		};
	
		/**
		 * @param {object} dispatchConfig Configuration used to dispatch this event.
		 * @param {string} dispatchMarker Marker identifying the event target.
		 * @param {object} nativeEvent Native browser event.
		 * @extends {SyntheticUIEvent}
		 */
		function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
		  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
		}
	
		SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);
	
		module.exports = SyntheticFocusEvent;
	
	/***/ },
	/* 231 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var SyntheticUIEvent = __webpack_require__(146);
	
		var getEventCharCode = __webpack_require__(232);
		var getEventKey = __webpack_require__(233);
		var getEventModifierState = __webpack_require__(148);
	
		/**
		 * @interface KeyboardEvent
		 * @see http://www.w3.org/TR/DOM-Level-3-Events/
		 */
		var KeyboardEventInterface = {
		  key: getEventKey,
		  location: null,
		  ctrlKey: null,
		  shiftKey: null,
		  altKey: null,
		  metaKey: null,
		  repeat: null,
		  locale: null,
		  getModifierState: getEventModifierState,
		  // Legacy Interface
		  charCode: function (event) {
		    // `charCode` is the result of a KeyPress event and represents the value of
		    // the actual printable character.
	
		    // KeyPress is deprecated, but its replacement is not yet final and not
		    // implemented in any major browser. Only KeyPress has charCode.
		    if (event.type === 'keypress') {
		      return getEventCharCode(event);
		    }
		    return 0;
		  },
		  keyCode: function (event) {
		    // `keyCode` is the result of a KeyDown/Up event and represents the value of
		    // physical keyboard key.
	
		    // The actual meaning of the value depends on the users' keyboard layout
		    // which cannot be detected. Assuming that it is a US keyboard layout
		    // provides a surprisingly accurate mapping for US and European users.
		    // Due to this, it is left to the user to implement at this time.
		    if (event.type === 'keydown' || event.type === 'keyup') {
		      return event.keyCode;
		    }
		    return 0;
		  },
		  which: function (event) {
		    // `which` is an alias for either `keyCode` or `charCode` depending on the
		    // type of the event.
		    if (event.type === 'keypress') {
		      return getEventCharCode(event);
		    }
		    if (event.type === 'keydown' || event.type === 'keyup') {
		      return event.keyCode;
		    }
		    return 0;
		  }
		};
	
		/**
		 * @param {object} dispatchConfig Configuration used to dispatch this event.
		 * @param {string} dispatchMarker Marker identifying the event target.
		 * @param {object} nativeEvent Native browser event.
		 * @extends {SyntheticUIEvent}
		 */
		function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
		  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
		}
	
		SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);
	
		module.exports = SyntheticKeyboardEvent;
	
	/***/ },
	/* 232 */
	/***/ function(module, exports) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		/**
		 * `charCode` represents the actual "character code" and is safe to use with
		 * `String.fromCharCode`. As such, only keys that correspond to printable
		 * characters produce a valid `charCode`, the only exception to this is Enter.
		 * The Tab-key is considered non-printable and does not have a `charCode`,
		 * presumably because it does not produce a tab-character in browsers.
		 *
		 * @param {object} nativeEvent Native browser event.
		 * @return {number} Normalized `charCode` property.
		 */
	
		function getEventCharCode(nativeEvent) {
		  var charCode;
		  var keyCode = nativeEvent.keyCode;
	
		  if ('charCode' in nativeEvent) {
		    charCode = nativeEvent.charCode;
	
		    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
		    if (charCode === 0 && keyCode === 13) {
		      charCode = 13;
		    }
		  } else {
		    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
		    charCode = keyCode;
		  }
	
		  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
		  // Must not discard the (non-)printable Enter-key.
		  if (charCode >= 32 || charCode === 13) {
		    return charCode;
		  }
	
		  return 0;
		}
	
		module.exports = getEventCharCode;
	
	/***/ },
	/* 233 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var getEventCharCode = __webpack_require__(232);
	
		/**
		 * Normalization of deprecated HTML5 `key` values
		 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
		 */
		var normalizeKey = {
		  'Esc': 'Escape',
		  'Spacebar': ' ',
		  'Left': 'ArrowLeft',
		  'Up': 'ArrowUp',
		  'Right': 'ArrowRight',
		  'Down': 'ArrowDown',
		  'Del': 'Delete',
		  'Win': 'OS',
		  'Menu': 'ContextMenu',
		  'Apps': 'ContextMenu',
		  'Scroll': 'ScrollLock',
		  'MozPrintableKey': 'Unidentified'
		};
	
		/**
		 * Translation from legacy `keyCode` to HTML5 `key`
		 * Only special keys supported, all others depend on keyboard layout or browser
		 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
		 */
		var translateToKey = {
		  8: 'Backspace',
		  9: 'Tab',
		  12: 'Clear',
		  13: 'Enter',
		  16: 'Shift',
		  17: 'Control',
		  18: 'Alt',
		  19: 'Pause',
		  20: 'CapsLock',
		  27: 'Escape',
		  32: ' ',
		  33: 'PageUp',
		  34: 'PageDown',
		  35: 'End',
		  36: 'Home',
		  37: 'ArrowLeft',
		  38: 'ArrowUp',
		  39: 'ArrowRight',
		  40: 'ArrowDown',
		  45: 'Insert',
		  46: 'Delete',
		  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
		  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
		  144: 'NumLock',
		  145: 'ScrollLock',
		  224: 'Meta'
		};
	
		/**
		 * @param {object} nativeEvent Native browser event.
		 * @return {string} Normalized `key` property.
		 */
		function getEventKey(nativeEvent) {
		  if (nativeEvent.key) {
		    // Normalize inconsistent values reported by browsers due to
		    // implementations of a working draft specification.
	
		    // FireFox implements `key` but returns `MozPrintableKey` for all
		    // printable characters (normalized to `Unidentified`), ignore it.
		    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
		    if (key !== 'Unidentified') {
		      return key;
		    }
		  }
	
		  // Browser does not implement `key`, polyfill as much of it as we can.
		  if (nativeEvent.type === 'keypress') {
		    var charCode = getEventCharCode(nativeEvent);
	
		    // The enter-key is technically both printable and non-printable and can
		    // thus be captured by `keypress`, no other non-printable key should.
		    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
		  }
		  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
		    // While user keyboard layout determines the actual meaning of each
		    // `keyCode` value, almost all function keys have a universal value.
		    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
		  }
		  return '';
		}
	
		module.exports = getEventKey;
	
	/***/ },
	/* 234 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var SyntheticMouseEvent = __webpack_require__(145);
	
		/**
		 * @interface DragEvent
		 * @see http://www.w3.org/TR/DOM-Level-3-Events/
		 */
		var DragEventInterface = {
		  dataTransfer: null
		};
	
		/**
		 * @param {object} dispatchConfig Configuration used to dispatch this event.
		 * @param {string} dispatchMarker Marker identifying the event target.
		 * @param {object} nativeEvent Native browser event.
		 * @extends {SyntheticUIEvent}
		 */
		function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
		  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
		}
	
		SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);
	
		module.exports = SyntheticDragEvent;
	
	/***/ },
	/* 235 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var SyntheticUIEvent = __webpack_require__(146);
	
		var getEventModifierState = __webpack_require__(148);
	
		/**
		 * @interface TouchEvent
		 * @see http://www.w3.org/TR/touch-events/
		 */
		var TouchEventInterface = {
		  touches: null,
		  targetTouches: null,
		  changedTouches: null,
		  altKey: null,
		  metaKey: null,
		  ctrlKey: null,
		  shiftKey: null,
		  getModifierState: getEventModifierState
		};
	
		/**
		 * @param {object} dispatchConfig Configuration used to dispatch this event.
		 * @param {string} dispatchMarker Marker identifying the event target.
		 * @param {object} nativeEvent Native browser event.
		 * @extends {SyntheticUIEvent}
		 */
		function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
		  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
		}
	
		SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);
	
		module.exports = SyntheticTouchEvent;
	
	/***/ },
	/* 236 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var SyntheticEvent = __webpack_require__(124);
	
		/**
		 * @interface Event
		 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
		 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
		 */
		var TransitionEventInterface = {
		  propertyName: null,
		  elapsedTime: null,
		  pseudoElement: null
		};
	
		/**
		 * @param {object} dispatchConfig Configuration used to dispatch this event.
		 * @param {string} dispatchMarker Marker identifying the event target.
		 * @param {object} nativeEvent Native browser event.
		 * @extends {SyntheticEvent}
		 */
		function SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
		  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
		}
	
		SyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);
	
		module.exports = SyntheticTransitionEvent;
	
	/***/ },
	/* 237 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var SyntheticMouseEvent = __webpack_require__(145);
	
		/**
		 * @interface WheelEvent
		 * @see http://www.w3.org/TR/DOM-Level-3-Events/
		 */
		var WheelEventInterface = {
		  deltaX: function (event) {
		    return 'deltaX' in event ? event.deltaX :
		    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
		    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
		  },
		  deltaY: function (event) {
		    return 'deltaY' in event ? event.deltaY :
		    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
		    'wheelDeltaY' in event ? -event.wheelDeltaY :
		    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
		    'wheelDelta' in event ? -event.wheelDelta : 0;
		  },
		  deltaZ: null,
	
		  // Browsers without "deltaMode" is reporting in raw wheel delta where one
		  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
		  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
		  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
		  deltaMode: null
		};
	
		/**
		 * @param {object} dispatchConfig Configuration used to dispatch this event.
		 * @param {string} dispatchMarker Marker identifying the event target.
		 * @param {object} nativeEvent Native browser event.
		 * @extends {SyntheticMouseEvent}
		 */
		function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
		  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
		}
	
		SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);
	
		module.exports = SyntheticWheelEvent;
	
	/***/ },
	/* 238 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var _prodInvariant = __webpack_require__(102);
	
		var DOMLazyTree = __webpack_require__(152);
		var DOMProperty = __webpack_require__(103);
		var React = __webpack_require__(69);
		var ReactBrowserEventEmitter = __webpack_require__(176);
		var ReactCurrentOwner = __webpack_require__(77);
		var ReactDOMComponentTree = __webpack_require__(101);
		var ReactDOMContainerInfo = __webpack_require__(239);
		var ReactDOMFeatureFlags = __webpack_require__(240);
		var ReactFeatureFlags = __webpack_require__(129);
		var ReactInstanceMap = __webpack_require__(187);
		var ReactInstrumentation = __webpack_require__(133);
		var ReactMarkupChecksum = __webpack_require__(241);
		var ReactReconciler = __webpack_require__(130);
		var ReactUpdateQueue = __webpack_require__(207);
		var ReactUpdates = __webpack_require__(127);
	
		var emptyObject = __webpack_require__(194);
		var instantiateReactComponent = __webpack_require__(189);
		var invariant = __webpack_require__(104);
		var setInnerHTML = __webpack_require__(154);
		var shouldUpdateReactComponent = __webpack_require__(196);
		var warning = __webpack_require__(114);
	
		var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
		var ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;
	
		var ELEMENT_NODE_TYPE = 1;
		var DOC_NODE_TYPE = 9;
		var DOCUMENT_FRAGMENT_NODE_TYPE = 11;
	
		var instancesByReactRootID = {};
	
		/**
		 * Finds the index of the first character
		 * that's not common between the two given strings.
		 *
		 * @return {number} the index of the character where the strings diverge
		 */
		function firstDifferenceIndex(string1, string2) {
		  var minLen = Math.min(string1.length, string2.length);
		  for (var i = 0; i < minLen; i++) {
		    if (string1.charAt(i) !== string2.charAt(i)) {
		      return i;
		    }
		  }
		  return string1.length === string2.length ? -1 : minLen;
		}
	
		/**
		 * @param {DOMElement|DOMDocument} container DOM element that may contain
		 * a React component
		 * @return {?*} DOM element that may have the reactRoot ID, or null.
		 */
		function getReactRootElementInContainer(container) {
		  if (!container) {
		    return null;
		  }
	
		  if (container.nodeType === DOC_NODE_TYPE) {
		    return container.documentElement;
		  } else {
		    return container.firstChild;
		  }
		}
	
		function internalGetID(node) {
		  // If node is something like a window, document, or text node, none of
		  // which support attributes or a .getAttribute method, gracefully return
		  // the empty string, as if the attribute were missing.
		  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';
		}
	
		/**
		 * Mounts this component and inserts it into the DOM.
		 *
		 * @param {ReactComponent} componentInstance The instance to mount.
		 * @param {DOMElement} container DOM element to mount into.
		 * @param {ReactReconcileTransaction} transaction
		 * @param {boolean} shouldReuseMarkup If true, do not insert markup
		 */
		function mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {
		  var markerName;
		  if (ReactFeatureFlags.logTopLevelRenders) {
		    var wrappedElement = wrapperInstance._currentElement.props.child;
		    var type = wrappedElement.type;
		    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);
		    console.time(markerName);
		  }
	
		  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context, 0 /* parentDebugID */
		  );
	
		  if (markerName) {
		    console.timeEnd(markerName);
		  }
	
		  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;
		  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);
		}
	
		/**
		 * Batched mount.
		 *
		 * @param {ReactComponent} componentInstance The instance to mount.
		 * @param {DOMElement} container DOM element to mount into.
		 * @param {boolean} shouldReuseMarkup If true, do not insert markup
		 */
		function batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {
		  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
		  /* useCreateElement */
		  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);
		  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);
		  ReactUpdates.ReactReconcileTransaction.release(transaction);
		}
	
		/**
		 * Unmounts a component and removes it from the DOM.
		 *
		 * @param {ReactComponent} instance React component instance.
		 * @param {DOMElement} container DOM element to unmount from.
		 * @final
		 * @internal
		 * @see {ReactMount.unmountComponentAtNode}
		 */
		function unmountComponentFromNode(instance, container, safely) {
		  if (process.env.NODE_ENV !== 'production') {
		    ReactInstrumentation.debugTool.onBeginFlush();
		  }
		  ReactReconciler.unmountComponent(instance, safely);
		  if (process.env.NODE_ENV !== 'production') {
		    ReactInstrumentation.debugTool.onEndFlush();
		  }
	
		  if (container.nodeType === DOC_NODE_TYPE) {
		    container = container.documentElement;
		  }
	
		  // http://jsperf.com/emptying-a-node
		  while (container.lastChild) {
		    container.removeChild(container.lastChild);
		  }
		}
	
		/**
		 * True if the supplied DOM node has a direct React-rendered child that is
		 * not a React root element. Useful for warning in `render`,
		 * `unmountComponentAtNode`, etc.
		 *
		 * @param {?DOMElement} node The candidate DOM node.
		 * @return {boolean} True if the DOM element contains a direct child that was
		 * rendered by React but is not a root element.
		 * @internal
		 */
		function hasNonRootReactChild(container) {
		  var rootEl = getReactRootElementInContainer(container);
		  if (rootEl) {
		    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);
		    return !!(inst && inst._hostParent);
		  }
		}
	
		/**
		 * True if the supplied DOM node is a React DOM element and
		 * it has been rendered by another copy of React.
		 *
		 * @param {?DOMElement} node The candidate DOM node.
		 * @return {boolean} True if the DOM has been rendered by another copy of React
		 * @internal
		 */
		function nodeIsRenderedByOtherInstance(container) {
		  var rootEl = getReactRootElementInContainer(container);
		  return !!(rootEl && isReactNode(rootEl) && !ReactDOMComponentTree.getInstanceFromNode(rootEl));
		}
	
		/**
		 * True if the supplied DOM node is a valid node element.
		 *
		 * @param {?DOMElement} node The candidate DOM node.
		 * @return {boolean} True if the DOM is a valid DOM node.
		 * @internal
		 */
		function isValidContainer(node) {
		  return !!(node && (node.nodeType === ELEMENT_NODE_TYPE || node.nodeType === DOC_NODE_TYPE || node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE));
		}
	
		/**
		 * True if the supplied DOM node is a valid React node element.
		 *
		 * @param {?DOMElement} node The candidate DOM node.
		 * @return {boolean} True if the DOM is a valid React DOM node.
		 * @internal
		 */
		function isReactNode(node) {
		  return isValidContainer(node) && (node.hasAttribute(ROOT_ATTR_NAME) || node.hasAttribute(ATTR_NAME));
		}
	
		function getHostRootInstanceInContainer(container) {
		  var rootEl = getReactRootElementInContainer(container);
		  var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);
		  return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;
		}
	
		function getTopLevelWrapperInContainer(container) {
		  var root = getHostRootInstanceInContainer(container);
		  return root ? root._hostContainerInfo._topLevelWrapper : null;
		}
	
		/**
		 * Temporary (?) hack so that we can store all top-level pending updates on
		 * composites instead of having to worry about different types of components
		 * here.
		 */
		var topLevelRootCounter = 1;
		var TopLevelWrapper = function () {
		  this.rootID = topLevelRootCounter++;
		};
		TopLevelWrapper.prototype.isReactComponent = {};
		if (process.env.NODE_ENV !== 'production') {
		  TopLevelWrapper.displayName = 'TopLevelWrapper';
		}
		TopLevelWrapper.prototype.render = function () {
		  return this.props.child;
		};
		TopLevelWrapper.isReactTopLevelWrapper = true;
	
		/**
		 * Mounting is the process of initializing a React component by creating its
		 * representative DOM elements and inserting them into a supplied `container`.
		 * Any prior content inside `container` is destroyed in the process.
		 *
		 *   ReactMount.render(
		 *     component,
		 *     document.getElementById('container')
		 *   );
		 *
		 *   <div id="container">                   <-- Supplied `container`.
		 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
		 *       // ...                                 component.
		 *     </div>
		 *   </div>
		 *
		 * Inside of `container`, the first element rendered is the "reactRoot".
		 */
		var ReactMount = {
	
		  TopLevelWrapper: TopLevelWrapper,
	
		  /**
		   * Used by devtools. The keys are not important.
		   */
		  _instancesByReactRootID: instancesByReactRootID,
	
		  /**
		   * This is a hook provided to support rendering React components while
		   * ensuring that the apparent scroll position of its `container` does not
		   * change.
		   *
		   * @param {DOMElement} container The `container` being rendered into.
		   * @param {function} renderCallback This must be called once to do the render.
		   */
		  scrollMonitor: function (container, renderCallback) {
		    renderCallback();
		  },
	
		  /**
		   * Take a component that's already mounted into the DOM and replace its props
		   * @param {ReactComponent} prevComponent component instance already in the DOM
		   * @param {ReactElement} nextElement component instance to render
		   * @param {DOMElement} container container to render into
		   * @param {?function} callback function triggered on completion
		   */
		  _updateRootComponent: function (prevComponent, nextElement, nextContext, container, callback) {
		    ReactMount.scrollMonitor(container, function () {
		      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);
		      if (callback) {
		        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
		      }
		    });
	
		    return prevComponent;
		  },
	
		  /**
		   * Render a new component into the DOM. Hooked by hooks!
		   *
		   * @param {ReactElement} nextElement element to render
		   * @param {DOMElement} container container to render into
		   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
		   * @return {ReactComponent} nextComponent
		   */
		  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {
		    // Various parts of our code (such as ReactCompositeComponent's
		    // _renderValidatedComponent) assume that calls to render aren't nested;
		    // verify that that's the case.
		    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;
	
		    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;
	
		    ReactBrowserEventEmitter.ensureScrollValueMonitoring();
		    var componentInstance = instantiateReactComponent(nextElement, false);
	
		    // The initial render is synchronous but any updates that happen during
		    // rendering, in componentWillMount or componentDidMount, will be batched
		    // according to the current batching strategy.
	
		    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);
	
		    var wrapperID = componentInstance._instance.rootID;
		    instancesByReactRootID[wrapperID] = componentInstance;
	
		    return componentInstance;
		  },
	
		  /**
		   * Renders a React component into the DOM in the supplied `container`.
		   *
		   * If the React component was previously rendered into `container`, this will
		   * perform an update on it and only mutate the DOM as necessary to reflect the
		   * latest React component.
		   *
		   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
		   * @param {ReactElement} nextElement Component element to render.
		   * @param {DOMElement} container DOM element to render into.
		   * @param {?function} callback function triggered on completion
		   * @return {ReactComponent} Component instance rendered in `container`.
		   */
		  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
		    !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;
		    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
		  },
	
		  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
		    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');
		    !React.isValidElement(nextElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' :
		    // Check if it quacks like an element
		    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;
	
		    process.env.NODE_ENV !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;
	
		    var nextWrappedElement = React.createElement(TopLevelWrapper, { child: nextElement });
	
		    var nextContext;
		    if (parentComponent) {
		      var parentInst = ReactInstanceMap.get(parentComponent);
		      nextContext = parentInst._processChildContext(parentInst._context);
		    } else {
		      nextContext = emptyObject;
		    }
	
		    var prevComponent = getTopLevelWrapperInContainer(container);
	
		    if (prevComponent) {
		      var prevWrappedElement = prevComponent._currentElement;
		      var prevElement = prevWrappedElement.props.child;
		      if (shouldUpdateReactComponent(prevElement, nextElement)) {
		        var publicInst = prevComponent._renderedComponent.getPublicInstance();
		        var updatedCallback = callback && function () {
		          callback.call(publicInst);
		        };
		        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);
		        return publicInst;
		      } else {
		        ReactMount.unmountComponentAtNode(container);
		      }
		    }
	
		    var reactRootElement = getReactRootElementInContainer(container);
		    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
		    var containerHasNonRootReactChild = hasNonRootReactChild(container);
	
		    if (process.env.NODE_ENV !== 'production') {
		      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;
	
		      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
		        var rootElementSibling = reactRootElement;
		        while (rootElementSibling) {
		          if (internalGetID(rootElementSibling)) {
		            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;
		            break;
		          }
		          rootElementSibling = rootElementSibling.nextSibling;
		        }
		      }
		    }
	
		    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
		    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();
		    if (callback) {
		      callback.call(component);
		    }
		    return component;
		  },
	
		  /**
		   * Renders a React component into the DOM in the supplied `container`.
		   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render
		   *
		   * If the React component was previously rendered into `container`, this will
		   * perform an update on it and only mutate the DOM as necessary to reflect the
		   * latest React component.
		   *
		   * @param {ReactElement} nextElement Component element to render.
		   * @param {DOMElement} container DOM element to render into.
		   * @param {?function} callback function triggered on completion
		   * @return {ReactComponent} Component instance rendered in `container`.
		   */
		  render: function (nextElement, container, callback) {
		    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
		  },
	
		  /**
		   * Unmounts and destroys the React component rendered in the `container`.
		   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode
		   *
		   * @param {DOMElement} container DOM element containing a React component.
		   * @return {boolean} True if a component was found in and unmounted from
		   *                   `container`
		   */
		  unmountComponentAtNode: function (container) {
		    // Various parts of our code (such as ReactCompositeComponent's
		    // _renderValidatedComponent) assume that calls to render aren't nested;
		    // verify that that's the case. (Strictly speaking, unmounting won't cause a
		    // render but we still don't expect to be in a render call here.)
		    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;
	
		    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;
	
		    if (process.env.NODE_ENV !== 'production') {
		      process.env.NODE_ENV !== 'production' ? warning(!nodeIsRenderedByOtherInstance(container), 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by another copy of React.') : void 0;
		    }
	
		    var prevComponent = getTopLevelWrapperInContainer(container);
		    if (!prevComponent) {
		      // Check if the node being unmounted was rendered by React, but isn't a
		      // root node.
		      var containerHasNonRootReactChild = hasNonRootReactChild(container);
	
		      // Check if the container itself is a React root node.
		      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);
	
		      if (process.env.NODE_ENV !== 'production') {
		        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
		      }
	
		      return false;
		    }
		    delete instancesByReactRootID[prevComponent._instance.rootID];
		    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);
		    return true;
		  },
	
		  _mountImageIntoNode: function (markup, container, instance, shouldReuseMarkup, transaction) {
		    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;
	
		    if (shouldReuseMarkup) {
		      var rootElement = getReactRootElementInContainer(container);
		      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
		        ReactDOMComponentTree.precacheNode(instance, rootElement);
		        return;
		      } else {
		        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
		        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	
		        var rootMarkup = rootElement.outerHTML;
		        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);
	
		        var normalizedMarkup = markup;
		        if (process.env.NODE_ENV !== 'production') {
		          // because rootMarkup is retrieved from the DOM, various normalizations
		          // will have occurred which will not be present in `markup`. Here,
		          // insert markup into a <div> or <iframe> depending on the container
		          // type to perform the same normalizations before comparing.
		          var normalizer;
		          if (container.nodeType === ELEMENT_NODE_TYPE) {
		            normalizer = document.createElement('div');
		            normalizer.innerHTML = markup;
		            normalizedMarkup = normalizer.innerHTML;
		          } else {
		            normalizer = document.createElement('iframe');
		            document.body.appendChild(normalizer);
		            normalizer.contentDocument.write(markup);
		            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
		            document.body.removeChild(normalizer);
		          }
		        }
	
		        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
		        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);
	
		        !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\n%s', difference) : _prodInvariant('42', difference) : void 0;
	
		        if (process.env.NODE_ENV !== 'production') {
		          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : void 0;
		        }
		      }
		    }
	
		    !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document but you didn\'t use server rendering. We can\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;
	
		    if (transaction.useCreateElement) {
		      while (container.lastChild) {
		        container.removeChild(container.lastChild);
		      }
		      DOMLazyTree.insertTreeBefore(container, markup, null);
		    } else {
		      setInnerHTML(container, markup);
		      ReactDOMComponentTree.precacheNode(instance, container.firstChild);
		    }
	
		    if (process.env.NODE_ENV !== 'production') {
		      var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);
		      if (hostNode._debugID !== 0) {
		        ReactInstrumentation.debugTool.onHostOperation({
		          instanceID: hostNode._debugID,
		          type: 'mount',
		          payload: markup.toString()
		        });
		      }
		    }
		  }
		};
	
		module.exports = ReactMount;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 239 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var validateDOMNesting = __webpack_require__(208);
	
		var DOC_NODE_TYPE = 9;
	
		function ReactDOMContainerInfo(topLevelWrapper, node) {
		  var info = {
		    _topLevelWrapper: topLevelWrapper,
		    _idCounter: 1,
		    _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,
		    _node: node,
		    _tag: node ? node.nodeName.toLowerCase() : null,
		    _namespaceURI: node ? node.namespaceURI : null
		  };
		  if (process.env.NODE_ENV !== 'production') {
		    info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;
		  }
		  return info;
		}
	
		module.exports = ReactDOMContainerInfo;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 240 */
	/***/ function(module, exports) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var ReactDOMFeatureFlags = {
		  useCreateElement: true,
		  useFiber: false
		};
	
		module.exports = ReactDOMFeatureFlags;
	
	/***/ },
	/* 241 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var adler32 = __webpack_require__(242);
	
		var TAG_END = /\/?>/;
		var COMMENT_START = /^<\!\-\-/;
	
		var ReactMarkupChecksum = {
		  CHECKSUM_ATTR_NAME: 'data-react-checksum',
	
		  /**
		   * @param {string} markup Markup string
		   * @return {string} Markup string with checksum attribute attached
		   */
		  addChecksumToMarkup: function (markup) {
		    var checksum = adler32(markup);
	
		    // Add checksum (handle both parent tags, comments and self-closing tags)
		    if (COMMENT_START.test(markup)) {
		      return markup;
		    } else {
		      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
		    }
		  },
	
		  /**
		   * @param {string} markup to use
		   * @param {DOMElement} element root React element
		   * @returns {boolean} whether or not the markup is the same
		   */
		  canReuseMarkup: function (markup, element) {
		    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
		    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
		    var markupChecksum = adler32(markup);
		    return markupChecksum === existingChecksum;
		  }
		};
	
		module.exports = ReactMarkupChecksum;
	
	/***/ },
	/* 242 */
	/***/ function(module, exports) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * 
		 */
	
		'use strict';
	
		var MOD = 65521;
	
		// adler32 is not cryptographically strong, and is only used to sanity check that
		// markup generated on the server matches the markup generated on the client.
		// This implementation (a modified version of the SheetJS version) has been optimized
		// for our use case, at the expense of conforming to the adler32 specification
		// for non-ascii inputs.
		function adler32(data) {
		  var a = 1;
		  var b = 0;
		  var i = 0;
		  var l = data.length;
		  var m = l & ~0x3;
		  while (i < m) {
		    var n = Math.min(i + 4096, m);
		    for (; i < n; i += 4) {
		      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
		    }
		    a %= MOD;
		    b %= MOD;
		  }
		  for (; i < l; i++) {
		    b += a += data.charCodeAt(i);
		  }
		  a %= MOD;
		  b %= MOD;
		  return a | b << 16;
		}
	
		module.exports = adler32;
	
	/***/ },
	/* 243 */
	/***/ function(module, exports) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		module.exports = '15.4.2';
	
	/***/ },
	/* 244 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var _prodInvariant = __webpack_require__(102);
	
		var ReactCurrentOwner = __webpack_require__(77);
		var ReactDOMComponentTree = __webpack_require__(101);
		var ReactInstanceMap = __webpack_require__(187);
	
		var getHostComponentFromComposite = __webpack_require__(245);
		var invariant = __webpack_require__(104);
		var warning = __webpack_require__(114);
	
		/**
		 * Returns the DOM node rendered by this element.
		 *
		 * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode
		 *
		 * @param {ReactComponent|DOMElement} componentOrElement
		 * @return {?DOMElement} The root node of this element.
		 */
		function findDOMNode(componentOrElement) {
		  if (process.env.NODE_ENV !== 'production') {
		    var owner = ReactCurrentOwner.current;
		    if (owner !== null) {
		      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
		      owner._warnedAboutRefsInRender = true;
		    }
		  }
		  if (componentOrElement == null) {
		    return null;
		  }
		  if (componentOrElement.nodeType === 1) {
		    return componentOrElement;
		  }
	
		  var inst = ReactInstanceMap.get(componentOrElement);
		  if (inst) {
		    inst = getHostComponentFromComposite(inst);
		    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;
		  }
	
		  if (typeof componentOrElement.render === 'function') {
		     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;
		  } else {
		     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;
		  }
		}
	
		module.exports = findDOMNode;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 245 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var ReactNodeTypes = __webpack_require__(191);
	
		function getHostComponentFromComposite(inst) {
		  var type;
	
		  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {
		    inst = inst._renderedComponent;
		  }
	
		  if (type === ReactNodeTypes.HOST) {
		    return inst._renderedComponent;
		  } else if (type === ReactNodeTypes.EMPTY) {
		    return null;
		  }
		}
	
		module.exports = getHostComponentFromComposite;
	
	/***/ },
	/* 246 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var ReactMount = __webpack_require__(238);
	
		module.exports = ReactMount.renderSubtreeIntoContainer;
	
	/***/ },
	/* 247 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var DOMProperty = __webpack_require__(103);
		var EventPluginRegistry = __webpack_require__(111);
		var ReactComponentTreeHook = __webpack_require__(93);
	
		var warning = __webpack_require__(114);
	
		if (process.env.NODE_ENV !== 'production') {
		  var reactProps = {
		    children: true,
		    dangerouslySetInnerHTML: true,
		    key: true,
		    ref: true,
	
		    autoFocus: true,
		    defaultValue: true,
		    valueLink: true,
		    defaultChecked: true,
		    checkedLink: true,
		    innerHTML: true,
		    suppressContentEditableWarning: true,
		    onFocusIn: true,
		    onFocusOut: true
		  };
		  var warnedProperties = {};
	
		  var validateProperty = function (tagName, name, debugID) {
		    if (DOMProperty.properties.hasOwnProperty(name) || DOMProperty.isCustomAttribute(name)) {
		      return true;
		    }
		    if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
		      return true;
		    }
		    if (EventPluginRegistry.registrationNameModules.hasOwnProperty(name)) {
		      return true;
		    }
		    warnedProperties[name] = true;
		    var lowerCasedName = name.toLowerCase();
	
		    // data-* attributes should be lowercase; suggest the lowercase version
		    var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;
	
		    var registrationName = EventPluginRegistry.possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? EventPluginRegistry.possibleRegistrationNames[lowerCasedName] : null;
	
		    if (standardName != null) {
		      process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown DOM property %s. Did you mean %s?%s', name, standardName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
		      return true;
		    } else if (registrationName != null) {
		      process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown event handler property %s. Did you mean `%s`?%s', name, registrationName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
		      return true;
		    } else {
		      // We were unable to guess which prop the user intended.
		      // It is likely that the user was just blindly spreading/forwarding props
		      // Components should be careful to only render valid props/attributes.
		      // Warning will be invoked in warnUnknownProperties to allow grouping.
		      return false;
		    }
		  };
		}
	
		var warnUnknownProperties = function (debugID, element) {
		  var unknownProps = [];
		  for (var key in element.props) {
		    var isValid = validateProperty(element.type, key, debugID);
		    if (!isValid) {
		      unknownProps.push(key);
		    }
		  }
	
		  var unknownPropString = unknownProps.map(function (prop) {
		    return '`' + prop + '`';
		  }).join(', ');
	
		  if (unknownProps.length === 1) {
		    process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown prop %s on <%s> tag. Remove this prop from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
		  } else if (unknownProps.length > 1) {
		    process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown props %s on <%s> tag. Remove these props from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
		  }
		};
	
		function handleElement(debugID, element) {
		  if (element == null || typeof element.type !== 'string') {
		    return;
		  }
		  if (element.type.indexOf('-') >= 0 || element.props.is) {
		    return;
		  }
		  warnUnknownProperties(debugID, element);
		}
	
		var ReactDOMUnknownPropertyHook = {
		  onBeforeMountComponent: function (debugID, element) {
		    handleElement(debugID, element);
		  },
		  onBeforeUpdateComponent: function (debugID, element) {
		    handleElement(debugID, element);
		  }
		};
	
		module.exports = ReactDOMUnknownPropertyHook;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 248 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var ReactComponentTreeHook = __webpack_require__(93);
	
		var warning = __webpack_require__(114);
	
		var didWarnValueNull = false;
	
		function handleElement(debugID, element) {
		  if (element == null) {
		    return;
		  }
		  if (element.type !== 'input' && element.type !== 'textarea' && element.type !== 'select') {
		    return;
		  }
		  if (element.props != null && element.props.value === null && !didWarnValueNull) {
		    process.env.NODE_ENV !== 'production' ? warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.%s', element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	
		    didWarnValueNull = true;
		  }
		}
	
		var ReactDOMNullInputValuePropHook = {
		  onBeforeMountComponent: function (debugID, element) {
		    handleElement(debugID, element);
		  },
		  onBeforeUpdateComponent: function (debugID, element) {
		    handleElement(debugID, element);
		  }
		};
	
		module.exports = ReactDOMNullInputValuePropHook;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 249 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var DOMProperty = __webpack_require__(103);
		var ReactComponentTreeHook = __webpack_require__(93);
	
		var warning = __webpack_require__(114);
	
		var warnedProperties = {};
		var rARIA = new RegExp('^(aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
	
		function validateProperty(tagName, name, debugID) {
		  if (warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
		    return true;
		  }
	
		  if (rARIA.test(name)) {
		    var lowerCasedName = name.toLowerCase();
		    var standardName = DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;
	
		    // If this is an aria-* attribute, but is not listed in the known DOM
		    // DOM properties, then it is an invalid aria-* attribute.
		    if (standardName == null) {
		      warnedProperties[name] = true;
		      return false;
		    }
		    // aria-* attributes should be lowercase; suggest the lowercase version.
		    if (name !== standardName) {
		      process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown ARIA attribute %s. Did you mean %s?%s', name, standardName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
		      warnedProperties[name] = true;
		      return true;
		    }
		  }
	
		  return true;
		}
	
		function warnInvalidARIAProps(debugID, element) {
		  var invalidProps = [];
	
		  for (var key in element.props) {
		    var isValid = validateProperty(element.type, key, debugID);
		    if (!isValid) {
		      invalidProps.push(key);
		    }
		  }
	
		  var unknownPropString = invalidProps.map(function (prop) {
		    return '`' + prop + '`';
		  }).join(', ');
	
		  if (invalidProps.length === 1) {
		    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid aria prop %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
		  } else if (invalidProps.length > 1) {
		    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid aria props %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
		  }
		}
	
		function handleElement(debugID, element) {
		  if (element == null || typeof element.type !== 'string') {
		    return;
		  }
		  if (element.type.indexOf('-') >= 0 || element.props.is) {
		    return;
		  }
	
		  warnInvalidARIAProps(debugID, element);
		}
	
		var ReactDOMInvalidARIAHook = {
		  onBeforeMountComponent: function (debugID, element) {
		    if (process.env.NODE_ENV !== 'production') {
		      handleElement(debugID, element);
		    }
		  },
		  onBeforeUpdateComponent: function (debugID, element) {
		    if (process.env.NODE_ENV !== 'production') {
		      handleElement(debugID, element);
		    }
		  }
		};
	
		module.exports = ReactDOMInvalidARIAHook;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 250 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var _react = __webpack_require__(68);
	
		var _react2 = _interopRequireDefault(_react);
	
		var _PreLoader = __webpack_require__(251);
	
		var _PreLoader2 = _interopRequireDefault(_PreLoader);
	
		var _reactInfiniteScroller = __webpack_require__(252);
	
		var _reactInfiniteScroller2 = _interopRequireDefault(_reactInfiniteScroller);
	
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
		var ArticleResult = _react2.default.createClass({
			displayName: 'ArticleResult',
			render: function render() {
				var _this = this;
	
				var content = this.props.items;
				var loader = _react2.default.createElement(_PreLoader2.default, null);
	
				if (!this.props.isLoading) {
					content.length <= 0 ? content = this.props.noResultsLang : '';
				}
	
				return _react2.default.createElement(
					'div',
					{ className: 'mod-article-list__wrapper' },
					_react2.default.createElement(
						_reactInfiniteScroller2.default,
						{
							pageStart: 1,
							loadMore: function loadMore(e) {
								if (_this.props.showNextResults) _this.props.loadNextResults(e);
							},
							hasMore: this.props.totalResults > this.props.results.length && this.props.showNextResults,
							loader: _react2.default.createElement(_PreLoader2.default, null)
						},
						content,
						this.props.isLoading && loader
					),
					!this.props.isLoading && this.props.totalResults > this.props.itemsPerPage && !this.props.showNextResults && _react2.default.createElement(
						'button',
						{ type: 'button', onClick: this.props.handleMoreResultsForShowing, className: 'btn btn--secondary btn--block text-center' },
						_react2.default.createElement('span', { className: 'icon icon--loop', 'aria-hidden': 'true' }),
						this.props.loadMoreLang
					)
				);
			}
		});
	
		module.exports = ArticleResult;
	
	/***/ },
	/* 251 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
	
		var _react = __webpack_require__(68);
	
		var _react2 = _interopRequireDefault(_react);
	
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
		var PreLoader = _react2.default.createClass({
		    displayName: "PreLoader",
	
	
		    render: function render() {
	
		        return _react2.default.createElement(
		            "div",
		            { className: "preloader-container" },
		            _react2.default.createElement("div", { className: "loader loader--pulse" })
		        );
		    }
		});
	
		module.exports = PreLoader;
	
	/***/ },
	/* 252 */
	/***/ function(module, exports, __webpack_require__) {
	
		module.exports = __webpack_require__(253)
	
	
	/***/ },
	/* 253 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
	
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
		var _react = __webpack_require__(68);
	
		var _react2 = _interopRequireDefault(_react);
	
		var _propTypes = __webpack_require__(254);
	
		var _propTypes2 = _interopRequireDefault(_propTypes);
	
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
		function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
		var InfiniteScroll = function (_Component) {
		  _inherits(InfiniteScroll, _Component);
	
		  function InfiniteScroll(props) {
		    _classCallCheck(this, InfiniteScroll);
	
		    var _this = _possibleConstructorReturn(this, (InfiniteScroll.__proto__ || Object.getPrototypeOf(InfiniteScroll)).call(this, props));
	
		    _this.scrollListener = _this.scrollListener.bind(_this);
		    return _this;
		  }
	
		  _createClass(InfiniteScroll, [{
		    key: 'componentDidMount',
		    value: function componentDidMount() {
		      this.pageLoaded = this.props.pageStart;
		      this.attachScrollListener();
		    }
		  }, {
		    key: 'componentDidUpdate',
		    value: function componentDidUpdate() {
		      this.attachScrollListener();
		    }
		  }, {
		    key: 'componentWillUnmount',
		    value: function componentWillUnmount() {
		      this.detachScrollListener();
		    }
	
		    // Set a defaut loader for all your `InfiniteScroll` components
	
		  }, {
		    key: 'setDefaultLoader',
		    value: function setDefaultLoader(loader) {
		      this.defaultLoader = loader;
		    }
		  }, {
		    key: 'detachScrollListener',
		    value: function detachScrollListener() {
		      var scrollEl = window;
		      if (this.props.useWindow === false) {
		        scrollEl = this.scrollComponent.parentNode;
		      }
	
		      scrollEl.removeEventListener('scroll', this.scrollListener, this.props.useCapture);
		      scrollEl.removeEventListener('resize', this.scrollListener, this.props.useCapture);
		    }
		  }, {
		    key: 'attachScrollListener',
		    value: function attachScrollListener() {
		      if (!this.props.hasMore) {
		        return;
		      }
	
		      var scrollEl = window;
		      if (this.props.useWindow === false) {
		        scrollEl = this.scrollComponent.parentNode;
		      }
	
		      scrollEl.addEventListener('scroll', this.scrollListener, this.props.useCapture);
		      scrollEl.addEventListener('resize', this.scrollListener, this.props.useCapture);
	
		      if (this.props.initialLoad) {
		        this.scrollListener();
		      }
		    }
		  }, {
		    key: 'scrollListener',
		    value: function scrollListener() {
		      var el = this.scrollComponent;
		      var scrollEl = window;
	
		      var offset = void 0;
		      if (this.props.useWindow) {
		        var scrollTop = scrollEl.pageYOffset !== undefined ? scrollEl.pageYOffset : (document.documentElement || document.body.parentNode || document.body).scrollTop;
		        if (this.props.isReverse) {
		          offset = scrollTop;
		        } else {
		          offset = this.calculateTopPosition(el) + (el.offsetHeight - scrollTop - window.innerHeight);
		        }
		      } else if (this.props.isReverse) {
		        offset = el.parentNode.scrollTop;
		      } else {
		        offset = el.scrollHeight - el.parentNode.scrollTop - el.parentNode.clientHeight;
		      }
	
		      if (offset < Number(this.props.threshold)) {
		        this.detachScrollListener();
		        // Call loadMore after detachScrollListener to allow for non-async loadMore functions
		        if (typeof this.props.loadMore === 'function') {
		          this.props.loadMore(this.pageLoaded += 1);
		        }
		      }
		    }
		  }, {
		    key: 'calculateTopPosition',
		    value: function calculateTopPosition(el) {
		      if (!el) {
		        return 0;
		      }
		      return el.offsetTop + this.calculateTopPosition(el.offsetParent);
		    }
		  }, {
		    key: 'render',
		    value: function render() {
		      var _this2 = this;
	
		      var _props = this.props,
		          children = _props.children,
		          element = _props.element,
		          hasMore = _props.hasMore,
		          initialLoad = _props.initialLoad,
		          isReverse = _props.isReverse,
		          loader = _props.loader,
		          loadMore = _props.loadMore,
		          pageStart = _props.pageStart,
		          ref = _props.ref,
		          threshold = _props.threshold,
		          useCapture = _props.useCapture,
		          useWindow = _props.useWindow,
		          props = _objectWithoutProperties(_props, ['children', 'element', 'hasMore', 'initialLoad', 'isReverse', 'loader', 'loadMore', 'pageStart', 'ref', 'threshold', 'useCapture', 'useWindow']);
	
		      props.ref = function (node) {
		        _this2.scrollComponent = node;
		        if (ref) {
		          ref(node);
		        }
		      };
	
		      var childrenArray = [children];
		      if (hasMore) {
		        if (loader) {
		          isReverse ? childrenArray.unshift(loader) : childrenArray.push(loader);
		        } else if (this.defaultLoader) {
		          isReverse ? childrenArray.unshift(this.defaultLoader) : childrenArray.push(this.defaultLoader);
		        }
		      }
		      return _react2.default.createElement.apply(_react2.default, [element, props].concat(childrenArray));
		    }
		  }]);
	
		  return InfiniteScroll;
		}(_react.Component);
	
		InfiniteScroll.propTypes = {
		  element: _propTypes2.default.string,
		  hasMore: _propTypes2.default.bool,
		  initialLoad: _propTypes2.default.bool,
		  isReverse: _propTypes2.default.bool,
		  loadMore: _propTypes2.default.func.isRequired,
		  pageStart: _propTypes2.default.number,
		  ref: _propTypes2.default.func,
		  threshold: _propTypes2.default.number,
		  useCapture: _propTypes2.default.bool,
		  useWindow: _propTypes2.default.bool,
		  children: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.array]).isRequired,
		  loader: _propTypes2.default.object
		};
		InfiniteScroll.defaultProps = {
		  element: 'div',
		  hasMore: false,
		  initialLoad: true,
		  pageStart: 0,
		  threshold: 250,
		  useWindow: true,
		  isReverse: false,
		  useCapture: false,
		  loader: null
		};
		exports.default = InfiniteScroll;
		module.exports = exports['default'];
	
	
	/***/ },
	/* 254 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 */
	
		if (process.env.NODE_ENV !== 'production') {
		  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&
		    Symbol.for &&
		    Symbol.for('react.element')) ||
		    0xeac7;
	
		  var isValidElement = function(object) {
		    return typeof object === 'object' &&
		      object !== null &&
		      object.$$typeof === REACT_ELEMENT_TYPE;
		  };
	
		  // By explicitly using `prop-types` you are opting into new development behavior.
		  // http://fb.me/prop-types-in-prod
		  var throwOnDirectAccess = true;
		  module.exports = __webpack_require__(255)(isValidElement, throwOnDirectAccess);
		} else {
		  // By explicitly using `prop-types` you are opting into new production behavior.
		  // http://fb.me/prop-types-in-prod
		  module.exports = __webpack_require__(261)();
		}
	
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 255 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 */
	
		'use strict';
	
		var emptyFunction = __webpack_require__(256);
		var invariant = __webpack_require__(257);
		var warning = __webpack_require__(258);
	
		var ReactPropTypesSecret = __webpack_require__(259);
		var checkPropTypes = __webpack_require__(260);
	
		module.exports = function(isValidElement, throwOnDirectAccess) {
		  /* global Symbol */
		  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
		  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.
	
		  /**
		   * Returns the iterator method function contained on the iterable object.
		   *
		   * Be sure to invoke the function with the iterable as context:
		   *
		   *     var iteratorFn = getIteratorFn(myIterable);
		   *     if (iteratorFn) {
		   *       var iterator = iteratorFn.call(myIterable);
		   *       ...
		   *     }
		   *
		   * @param {?object} maybeIterable
		   * @return {?function}
		   */
		  function getIteratorFn(maybeIterable) {
		    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
		    if (typeof iteratorFn === 'function') {
		      return iteratorFn;
		    }
		  }
	
		  /**
		   * Collection of methods that allow declaration and validation of props that are
		   * supplied to React components. Example usage:
		   *
		   *   var Props = require('ReactPropTypes');
		   *   var MyArticle = React.createClass({
		   *     propTypes: {
		   *       // An optional string prop named "description".
		   *       description: Props.string,
		   *
		   *       // A required enum prop named "category".
		   *       category: Props.oneOf(['News','Photos']).isRequired,
		   *
		   *       // A prop named "dialog" that requires an instance of Dialog.
		   *       dialog: Props.instanceOf(Dialog).isRequired
		   *     },
		   *     render: function() { ... }
		   *   });
		   *
		   * A more formal specification of how these methods are used:
		   *
		   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
		   *   decl := ReactPropTypes.{type}(.isRequired)?
		   *
		   * Each and every declaration produces a function with the same signature. This
		   * allows the creation of custom validation functions. For example:
		   *
		   *  var MyLink = React.createClass({
		   *    propTypes: {
		   *      // An optional string or URI prop named "href".
		   *      href: function(props, propName, componentName) {
		   *        var propValue = props[propName];
		   *        if (propValue != null && typeof propValue !== 'string' &&
		   *            !(propValue instanceof URI)) {
		   *          return new Error(
		   *            'Expected a string or an URI for ' + propName + ' in ' +
		   *            componentName
		   *          );
		   *        }
		   *      }
		   *    },
		   *    render: function() {...}
		   *  });
		   *
		   * @internal
		   */
	
		  var ANONYMOUS = '<<anonymous>>';
	
		  // Important!
		  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
		  var ReactPropTypes = {
		    array: createPrimitiveTypeChecker('array'),
		    bool: createPrimitiveTypeChecker('boolean'),
		    func: createPrimitiveTypeChecker('function'),
		    number: createPrimitiveTypeChecker('number'),
		    object: createPrimitiveTypeChecker('object'),
		    string: createPrimitiveTypeChecker('string'),
		    symbol: createPrimitiveTypeChecker('symbol'),
	
		    any: createAnyTypeChecker(),
		    arrayOf: createArrayOfTypeChecker,
		    element: createElementTypeChecker(),
		    instanceOf: createInstanceTypeChecker,
		    node: createNodeChecker(),
		    objectOf: createObjectOfTypeChecker,
		    oneOf: createEnumTypeChecker,
		    oneOfType: createUnionTypeChecker,
		    shape: createShapeTypeChecker
		  };
	
		  /**
		   * inlined Object.is polyfill to avoid requiring consumers ship their own
		   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
		   */
		  /*eslint-disable no-self-compare*/
		  function is(x, y) {
		    // SameValue algorithm
		    if (x === y) {
		      // Steps 1-5, 7-10
		      // Steps 6.b-6.e: +0 != -0
		      return x !== 0 || 1 / x === 1 / y;
		    } else {
		      // Step 6.a: NaN == NaN
		      return x !== x && y !== y;
		    }
		  }
		  /*eslint-enable no-self-compare*/
	
		  /**
		   * We use an Error-like object for backward compatibility as people may call
		   * PropTypes directly and inspect their output. However, we don't use real
		   * Errors anymore. We don't inspect their stack anyway, and creating them
		   * is prohibitively expensive if they are created too often, such as what
		   * happens in oneOfType() for any type before the one that matched.
		   */
		  function PropTypeError(message) {
		    this.message = message;
		    this.stack = '';
		  }
		  // Make `instanceof Error` still work for returned errors.
		  PropTypeError.prototype = Error.prototype;
	
		  function createChainableTypeChecker(validate) {
		    if (process.env.NODE_ENV !== 'production') {
		      var manualPropTypeCallCache = {};
		      var manualPropTypeWarningCount = 0;
		    }
		    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
		      componentName = componentName || ANONYMOUS;
		      propFullName = propFullName || propName;
	
		      if (secret !== ReactPropTypesSecret) {
		        if (throwOnDirectAccess) {
		          // New behavior only for users of `prop-types` package
		          invariant(
		            false,
		            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
		            'Use `PropTypes.checkPropTypes()` to call them. ' +
		            'Read more at http://fb.me/use-check-prop-types'
		          );
		        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
		          // Old behavior for people using React.PropTypes
		          var cacheKey = componentName + ':' + propName;
		          if (
		            !manualPropTypeCallCache[cacheKey] &&
		            // Avoid spamming the console because they are often not actionable except for lib authors
		            manualPropTypeWarningCount < 3
		          ) {
		            warning(
		              false,
		              'You are manually calling a React.PropTypes validation ' +
		              'function for the `%s` prop on `%s`. This is deprecated ' +
		              'and will throw in the standalone `prop-types` package. ' +
		              'You may be seeing this warning due to a third-party PropTypes ' +
		              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.',
		              propFullName,
		              componentName
		            );
		            manualPropTypeCallCache[cacheKey] = true;
		            manualPropTypeWarningCount++;
		          }
		        }
		      }
		      if (props[propName] == null) {
		        if (isRequired) {
		          if (props[propName] === null) {
		            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
		          }
		          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
		        }
		        return null;
		      } else {
		        return validate(props, propName, componentName, location, propFullName);
		      }
		    }
	
		    var chainedCheckType = checkType.bind(null, false);
		    chainedCheckType.isRequired = checkType.bind(null, true);
	
		    return chainedCheckType;
		  }
	
		  function createPrimitiveTypeChecker(expectedType) {
		    function validate(props, propName, componentName, location, propFullName, secret) {
		      var propValue = props[propName];
		      var propType = getPropType(propValue);
		      if (propType !== expectedType) {
		        // `propValue` being instance of, say, date/regexp, pass the 'object'
		        // check, but we can offer a more precise error message here rather than
		        // 'of type `object`'.
		        var preciseType = getPreciseType(propValue);
	
		        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
		      }
		      return null;
		    }
		    return createChainableTypeChecker(validate);
		  }
	
		  function createAnyTypeChecker() {
		    return createChainableTypeChecker(emptyFunction.thatReturnsNull);
		  }
	
		  function createArrayOfTypeChecker(typeChecker) {
		    function validate(props, propName, componentName, location, propFullName) {
		      if (typeof typeChecker !== 'function') {
		        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
		      }
		      var propValue = props[propName];
		      if (!Array.isArray(propValue)) {
		        var propType = getPropType(propValue);
		        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
		      }
		      for (var i = 0; i < propValue.length; i++) {
		        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
		        if (error instanceof Error) {
		          return error;
		        }
		      }
		      return null;
		    }
		    return createChainableTypeChecker(validate);
		  }
	
		  function createElementTypeChecker() {
		    function validate(props, propName, componentName, location, propFullName) {
		      var propValue = props[propName];
		      if (!isValidElement(propValue)) {
		        var propType = getPropType(propValue);
		        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
		      }
		      return null;
		    }
		    return createChainableTypeChecker(validate);
		  }
	
		  function createInstanceTypeChecker(expectedClass) {
		    function validate(props, propName, componentName, location, propFullName) {
		      if (!(props[propName] instanceof expectedClass)) {
		        var expectedClassName = expectedClass.name || ANONYMOUS;
		        var actualClassName = getClassName(props[propName]);
		        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
		      }
		      return null;
		    }
		    return createChainableTypeChecker(validate);
		  }
	
		  function createEnumTypeChecker(expectedValues) {
		    if (!Array.isArray(expectedValues)) {
		      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
		      return emptyFunction.thatReturnsNull;
		    }
	
		    function validate(props, propName, componentName, location, propFullName) {
		      var propValue = props[propName];
		      for (var i = 0; i < expectedValues.length; i++) {
		        if (is(propValue, expectedValues[i])) {
		          return null;
		        }
		      }
	
		      var valuesString = JSON.stringify(expectedValues);
		      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
		    }
		    return createChainableTypeChecker(validate);
		  }
	
		  function createObjectOfTypeChecker(typeChecker) {
		    function validate(props, propName, componentName, location, propFullName) {
		      if (typeof typeChecker !== 'function') {
		        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
		      }
		      var propValue = props[propName];
		      var propType = getPropType(propValue);
		      if (propType !== 'object') {
		        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
		      }
		      for (var key in propValue) {
		        if (propValue.hasOwnProperty(key)) {
		          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
		          if (error instanceof Error) {
		            return error;
		          }
		        }
		      }
		      return null;
		    }
		    return createChainableTypeChecker(validate);
		  }
	
		  function createUnionTypeChecker(arrayOfTypeCheckers) {
		    if (!Array.isArray(arrayOfTypeCheckers)) {
		      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
		      return emptyFunction.thatReturnsNull;
		    }
	
		    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
		      var checker = arrayOfTypeCheckers[i];
		      if (typeof checker !== 'function') {
		        warning(
		          false,
		          'Invalid argument supplid to oneOfType. Expected an array of check functions, but ' +
		          'received %s at index %s.',
		          getPostfixForTypeWarning(checker),
		          i
		        );
		        return emptyFunction.thatReturnsNull;
		      }
		    }
	
		    function validate(props, propName, componentName, location, propFullName) {
		      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
		        var checker = arrayOfTypeCheckers[i];
		        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
		          return null;
		        }
		      }
	
		      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
		    }
		    return createChainableTypeChecker(validate);
		  }
	
		  function createNodeChecker() {
		    function validate(props, propName, componentName, location, propFullName) {
		      if (!isNode(props[propName])) {
		        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
		      }
		      return null;
		    }
		    return createChainableTypeChecker(validate);
		  }
	
		  function createShapeTypeChecker(shapeTypes) {
		    function validate(props, propName, componentName, location, propFullName) {
		      var propValue = props[propName];
		      var propType = getPropType(propValue);
		      if (propType !== 'object') {
		        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
		      }
		      for (var key in shapeTypes) {
		        var checker = shapeTypes[key];
		        if (!checker) {
		          continue;
		        }
		        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
		        if (error) {
		          return error;
		        }
		      }
		      return null;
		    }
		    return createChainableTypeChecker(validate);
		  }
	
		  function isNode(propValue) {
		    switch (typeof propValue) {
		      case 'number':
		      case 'string':
		      case 'undefined':
		        return true;
		      case 'boolean':
		        return !propValue;
		      case 'object':
		        if (Array.isArray(propValue)) {
		          return propValue.every(isNode);
		        }
		        if (propValue === null || isValidElement(propValue)) {
		          return true;
		        }
	
		        var iteratorFn = getIteratorFn(propValue);
		        if (iteratorFn) {
		          var iterator = iteratorFn.call(propValue);
		          var step;
		          if (iteratorFn !== propValue.entries) {
		            while (!(step = iterator.next()).done) {
		              if (!isNode(step.value)) {
		                return false;
		              }
		            }
		          } else {
		            // Iterator will provide entry [k,v] tuples rather than values.
		            while (!(step = iterator.next()).done) {
		              var entry = step.value;
		              if (entry) {
		                if (!isNode(entry[1])) {
		                  return false;
		                }
		              }
		            }
		          }
		        } else {
		          return false;
		        }
	
		        return true;
		      default:
		        return false;
		    }
		  }
	
		  function isSymbol(propType, propValue) {
		    // Native Symbol.
		    if (propType === 'symbol') {
		      return true;
		    }
	
		    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
		    if (propValue['@@toStringTag'] === 'Symbol') {
		      return true;
		    }
	
		    // Fallback for non-spec compliant Symbols which are polyfilled.
		    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
		      return true;
		    }
	
		    return false;
		  }
	
		  // Equivalent of `typeof` but with special handling for array and regexp.
		  function getPropType(propValue) {
		    var propType = typeof propValue;
		    if (Array.isArray(propValue)) {
		      return 'array';
		    }
		    if (propValue instanceof RegExp) {
		      // Old webkits (at least until Android 4.0) return 'function' rather than
		      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
		      // passes PropTypes.object.
		      return 'object';
		    }
		    if (isSymbol(propType, propValue)) {
		      return 'symbol';
		    }
		    return propType;
		  }
	
		  // This handles more types than `getPropType`. Only used for error messages.
		  // See `createPrimitiveTypeChecker`.
		  function getPreciseType(propValue) {
		    if (typeof propValue === 'undefined' || propValue === null) {
		      return '' + propValue;
		    }
		    var propType = getPropType(propValue);
		    if (propType === 'object') {
		      if (propValue instanceof Date) {
		        return 'date';
		      } else if (propValue instanceof RegExp) {
		        return 'regexp';
		      }
		    }
		    return propType;
		  }
	
		  // Returns a string that is postfixed to a warning about an invalid type.
		  // For example, "undefined" or "of type array"
		  function getPostfixForTypeWarning(value) {
		    var type = getPreciseType(value);
		    switch (type) {
		      case 'array':
		      case 'object':
		        return 'an ' + type;
		      case 'boolean':
		      case 'date':
		      case 'regexp':
		        return 'a ' + type;
		      default:
		        return type;
		    }
		  }
	
		  // Returns class name of the object, if any.
		  function getClassName(propValue) {
		    if (!propValue.constructor || !propValue.constructor.name) {
		      return ANONYMOUS;
		    }
		    return propValue.constructor.name;
		  }
	
		  ReactPropTypes.checkPropTypes = checkPropTypes;
		  ReactPropTypes.PropTypes = ReactPropTypes;
	
		  return ReactPropTypes;
		};
	
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 256 */
	/***/ function(module, exports) {
	
		"use strict";
	
		/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * 
		 */
	
		function makeEmptyFunction(arg) {
		  return function () {
		    return arg;
		  };
		}
	
		/**
		 * This function accepts and discards inputs; it has no side effects. This is
		 * primarily useful idiomatically for overridable function endpoints which
		 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
		 */
		var emptyFunction = function emptyFunction() {};
	
		emptyFunction.thatReturns = makeEmptyFunction;
		emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
		emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
		emptyFunction.thatReturnsNull = makeEmptyFunction(null);
		emptyFunction.thatReturnsThis = function () {
		  return this;
		};
		emptyFunction.thatReturnsArgument = function (arg) {
		  return arg;
		};
	
		module.exports = emptyFunction;
	
	/***/ },
	/* 257 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		/**
		 * Use invariant() to assert state which your program assumes to be true.
		 *
		 * Provide sprintf-style format (only %s is supported) and arguments
		 * to provide information about what broke and what you were
		 * expecting.
		 *
		 * The invariant message will be stripped in production, but the invariant
		 * will remain to ensure logic does not differ in production.
		 */
	
		var validateFormat = function validateFormat(format) {};
	
		if (process.env.NODE_ENV !== 'production') {
		  validateFormat = function validateFormat(format) {
		    if (format === undefined) {
		      throw new Error('invariant requires an error message argument');
		    }
		  };
		}
	
		function invariant(condition, format, a, b, c, d, e, f) {
		  validateFormat(format);
	
		  if (!condition) {
		    var error;
		    if (format === undefined) {
		      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
		    } else {
		      var args = [a, b, c, d, e, f];
		      var argIndex = 0;
		      error = new Error(format.replace(/%s/g, function () {
		        return args[argIndex++];
		      }));
		      error.name = 'Invariant Violation';
		    }
	
		    error.framesToPop = 1; // we don't care about invariant's own frame
		    throw error;
		  }
		}
	
		module.exports = invariant;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 258 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2014-2015, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var emptyFunction = __webpack_require__(256);
	
		/**
		 * Similar to invariant but only logs a warning if the condition is not met.
		 * This can be used to log issues in development environments in critical
		 * paths. Removing the logging code for production environments will keep the
		 * same logic and follow the same code paths.
		 */
	
		var warning = emptyFunction;
	
		if (process.env.NODE_ENV !== 'production') {
		  var printWarning = function printWarning(format) {
		    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
		      args[_key - 1] = arguments[_key];
		    }
	
		    var argIndex = 0;
		    var message = 'Warning: ' + format.replace(/%s/g, function () {
		      return args[argIndex++];
		    });
		    if (typeof console !== 'undefined') {
		      console.error(message);
		    }
		    try {
		      // --- Welcome to debugging React ---
		      // This error was thrown as a convenience so that you can use this stack
		      // to find the callsite that caused this warning to fire.
		      throw new Error(message);
		    } catch (x) {}
		  };
	
		  warning = function warning(condition, format) {
		    if (format === undefined) {
		      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
		    }
	
		    if (format.indexOf('Failed Composite propType: ') === 0) {
		      return; // Ignore CompositeComponent proptype check.
		    }
	
		    if (!condition) {
		      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
		        args[_key2 - 2] = arguments[_key2];
		      }
	
		      printWarning.apply(undefined, [format].concat(args));
		    }
		  };
		}
	
		module.exports = warning;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 259 */
	/***/ function(module, exports) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 */
	
		'use strict';
	
		var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
	
		module.exports = ReactPropTypesSecret;
	
	
	/***/ },
	/* 260 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 */
	
		'use strict';
	
		if (process.env.NODE_ENV !== 'production') {
		  var invariant = __webpack_require__(257);
		  var warning = __webpack_require__(258);
		  var ReactPropTypesSecret = __webpack_require__(259);
		  var loggedTypeFailures = {};
		}
	
		/**
		 * Assert that the values match with the type specs.
		 * Error messages are memorized and will only be shown once.
		 *
		 * @param {object} typeSpecs Map of name to a ReactPropType
		 * @param {object} values Runtime values that need to be type-checked
		 * @param {string} location e.g. "prop", "context", "child context"
		 * @param {string} componentName Name of the component for error messages.
		 * @param {?Function} getStack Returns the component stack.
		 * @private
		 */
		function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
		  if (process.env.NODE_ENV !== 'production') {
		    for (var typeSpecName in typeSpecs) {
		      if (typeSpecs.hasOwnProperty(typeSpecName)) {
		        var error;
		        // Prop type validation may throw. In case they do, we don't want to
		        // fail the render phase where it didn't fail before. So we log it.
		        // After these have been cleaned up, we'll let them throw.
		        try {
		          // This is intentionally an invariant that gets caught. It's the same
		          // behavior as without this statement except with a better message.
		          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', componentName || 'React class', location, typeSpecName);
		          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
		        } catch (ex) {
		          error = ex;
		        }
		        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);
		        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
		          // Only monitor this failure once because there tends to be a lot of the
		          // same error.
		          loggedTypeFailures[error.message] = true;
	
		          var stack = getStack ? getStack() : '';
	
		          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');
		        }
		      }
		    }
		  }
		}
	
		module.exports = checkPropTypes;
	
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 261 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 */
	
		'use strict';
	
		var emptyFunction = __webpack_require__(256);
		var invariant = __webpack_require__(257);
		var ReactPropTypesSecret = __webpack_require__(259);
	
		module.exports = function() {
		  function shim(props, propName, componentName, location, propFullName, secret) {
		    if (secret === ReactPropTypesSecret) {
		      // It is still safe when called from React.
		      return;
		    }
		    invariant(
		      false,
		      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
		      'Use PropTypes.checkPropTypes() to call them. ' +
		      'Read more at http://fb.me/use-check-prop-types'
		    );
		  };
		  shim.isRequired = shim;
		  function getShim() {
		    return shim;
		  };
		  // Important!
		  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
		  var ReactPropTypes = {
		    array: shim,
		    bool: shim,
		    func: shim,
		    number: shim,
		    object: shim,
		    string: shim,
		    symbol: shim,
	
		    any: shim,
		    arrayOf: getShim,
		    element: shim,
		    instanceOf: getShim,
		    node: shim,
		    objectOf: getShim,
		    oneOf: getShim,
		    oneOfType: getShim,
		    shape: getShim
		  };
	
		  ReactPropTypes.checkPropTypes = emptyFunction;
		  ReactPropTypes.PropTypes = ReactPropTypes;
	
		  return ReactPropTypes;
		};
	
	
	/***/ },
	/* 262 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
	
		var _react = __webpack_require__(68);
	
		var _react2 = _interopRequireDefault(_react);
	
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
		var ArticleListItem = _react2.default.createClass({
			displayName: "ArticleListItem",
			handleImage: function handleImage() {
				return _react2.default.createElement(
					"a",
					{ href: this.props.url, className: "mod-teaser__media" },
					_react2.default.createElement(
						"figure",
						null,
						_react2.default.createElement(
							"div",
							{ className: "flexembed flexembed--2by1" },
							_react2.default.createElement("img", { src: this.props.host + this.props.imageUrl, alt: this.props.imageAlt, className: "img-responsive" })
						)
					)
				);
			},
			render: function render() {
				return _react2.default.createElement(
					"div",
					{ className: "mod mod-teaser mod-teaser--article-list mod-teaser--img-left", "data-t-name": "Teaser" },
					_react2.default.createElement(
						"div",
						{ className: "mod__body mod-teaser__body" },
						this.props.imageUrl && this.handleImage(),
						_react2.default.createElement(
							"div",
							{ className: "mod-teaser__content" },
							_react2.default.createElement(
								"p",
								{ className: "mod-teaser__date" },
								_react2.default.createElement(
									"time",
									null,
									this.props.date
								),
								this.props.type ? " | " + this.props.type + " " : '',
								this.props.topStory ? _react2.default.createElement(
									"span",
									{ className: "label label--default" },
									"Top Story"
								) : ''
							),
							_react2.default.createElement(
								"a",
								{ href: this.props.url, className: "link link--primary" },
								this.props.label
							),
							_react2.default.createElement(
								"p",
								null,
								this.props.summary
							)
						)
					)
				);
			}
		});
	
		module.exports = ArticleListItem;
	
	/***/ },
	/* 263 */
	/***/ function(module, exports) {
	
		'use strict';
	
		Object.defineProperty(exports, "__esModule", {
			value: true
		});
	
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
		var ArticleListRepository = function () {
			function ArticleListRepository() {
				_classCallCheck(this, ArticleListRepository);
			}
	
			_createClass(ArticleListRepository, [{
				key: 'getContent',
				value: function getContent(filterOptions) {
					/*
		    return axios.post("https://sit.zurich.com/zwpapi/knowledgehubsearch/KnowledgeHub/Search/", filterOptions ? JSON.stringify({ Facets: filterOptions.Facets, PageNumber: filterOptions.PageNumber, SearchValue: filterOptions.SearchValue, SortBy: filterOptions.SortBy }) : undefined);
		    */
					//note: only for test using with jQuery
					return $.ajax({
						type: "POST",
						url: document.getElementById('app-article-list').dataset.urlSearch,
						data: filterOptions ? $.param(filterOptions) : undefined,
						dataType: 'json',
						cache: false,
						success: function success(data) {},
						error: function error(xhr, status, err) {}
					});
				}
			}]);
	
			return ArticleListRepository;
		}();
	
		exports.default = ArticleListRepository;
		;
	
	/***/ },
	/* 264 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
	
		if(document.getElementById('app-calendar')) {
			var CalendarApp = __webpack_require__(265);
		}
	
	/***/ },
	/* 265 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		Object.defineProperty(exports, "__esModule", {
			value: true
		});
	
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
		__webpack_require__(266);
	
		var _react = __webpack_require__(68);
	
		var _react2 = _interopRequireDefault(_react);
	
		var _reactDom = __webpack_require__(99);
	
		var _reactDom2 = _interopRequireDefault(_reactDom);
	
		var _ResultList = __webpack_require__(591);
	
		var _ResultList2 = _interopRequireDefault(_ResultList);
	
		var _CalendarListItem = __webpack_require__(593);
	
		var _CalendarListItem2 = _interopRequireDefault(_CalendarListItem);
	
		var _SortSection = __webpack_require__(594);
	
		var _SortSection2 = _interopRequireDefault(_SortSection);
	
		var _GlobalFilter = __webpack_require__(605);
	
		var _GlobalFilter2 = _interopRequireDefault(_GlobalFilter);
	
		var _filterOptionsRepository = __webpack_require__(610);
	
		var _filterOptionsRepository2 = _interopRequireDefault(_filterOptionsRepository);
	
		var _calendarRepository = __webpack_require__(611);
	
		var _calendarRepository2 = _interopRequireDefault(_calendarRepository);
	
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
		var filterOptionsRepository = new _filterOptionsRepository2.default();
		var calendarRepository = new _calendarRepository2.default();
		var itemsPerPage = 25;
	
		var CalendarList = function (_React$Component) {
			_inherits(CalendarList, _React$Component);
	
			function CalendarList() {
				_classCallCheck(this, CalendarList);
	
				var _this = _possibleConstructorReturn(this, (CalendarList.__proto__ || Object.getPrototypeOf(CalendarList)).call(this));
	
				_this.state = {
					year: [],
					facets: [],
					results: [],
					allEvents: [],
					addAllEvents: [],
					categories: [],
					searchValue: '',
					isLoading: true,
					selectedFilters: [],
					refreshScrolling: true,
					showNextResults: false,
					i18n: JSON.parse($("#i18n").html()),
					pageId: document.getElementById('app-calendar').dataset.pageid,
					initCallSuccessfull: false
				};
				return _this;
			}
	
			_createClass(CalendarList, [{
				key: 'componentDidMount',
				value: function componentDidMount() {
					this.setInitialContentState();
				}
			}, {
				key: 'setInitialContentState',
				value: function setInitialContentState() {
					var parameter = {
						"Facets": null,
						"PageNumber": 1,
						"SearchValue": "",
						"SortBy": 0,
						"PageId": this.state.pageId
					};
	
					calendarRepository.getContent(parameter).then(function (data) {
						var currTime = new Date();
						var currYear = currTime.getFullYear().toString();
	
						this.setState({
							year: currYear,
							categories: data.Type,
							totalResults: data.TotalResults,
							currentPage: data.CurrentPageIndex,
							addAllEvents: data.AddAllEvents,
							refreshScrolling: true,
							showNextResults: false,
							isLoading: false,
							pageId: this.state.pageId,
							initCallSuccessfull: true
						});
	
						this.collectEvents(data.UpcomingEvents, data.PastEvents);
						this.loadNextEvents();
					}.bind(this));
				}
			}, {
				key: 'collectEvents',
				value: function collectEvents(upcoming, past) {
					var upcomingEvents = upcoming ? upcoming : [];
					var pastEvents = past ? past : [];
					var eventsContainer = [];
	
					var _iteratorNormalCompletion = true;
					var _didIteratorError = false;
					var _iteratorError = undefined;
	
					try {
						for (var _iterator = upcomingEvents[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
							var event = _step.value;
	
							event.isDeparted = false;
							eventsContainer.push(event);
						}
					} catch (err) {
						_didIteratorError = true;
						_iteratorError = err;
					} finally {
						try {
							if (!_iteratorNormalCompletion && _iterator.return) {
								_iterator.return();
							}
						} finally {
							if (_didIteratorError) {
								throw _iteratorError;
							}
						}
					}
	
					var _iteratorNormalCompletion2 = true;
					var _didIteratorError2 = false;
					var _iteratorError2 = undefined;
	
					try {
						for (var _iterator2 = pastEvents[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
							var _event = _step2.value;
	
							_event.isDeparted = true;
							eventsContainer.push(_event);
						}
					} catch (err) {
						_didIteratorError2 = true;
						_iteratorError2 = err;
					} finally {
						try {
							if (!_iteratorNormalCompletion2 && _iterator2.return) {
								_iterator2.return();
							}
						} finally {
							if (_didIteratorError2) {
								throw _iteratorError2;
							}
						}
					}
	
					this.setState({
						allEvents: eventsContainer
					});
				}
			}, {
				key: 'loadNextEvents',
				value: function loadNextEvents() {
					if (this.state.totalResults <= this.state.results.length) return;
	
					var countedEvents = this.state.results;
	
					for (var i = itemsPerPage * (this.state.currentPage - 1); i < itemsPerPage * this.state.currentPage; i++) {
	
						if (typeof this.state.allEvents[i] !== "undefined") {
							countedEvents.push(this.state.allEvents[i]);
						}
					}
	
					this.setState({
						results: countedEvents,
						currentPage: this.state.currentPage + 1,
						isLoading: false
					});
				}
			}, {
				key: 'filterResult',
				value: function filterResult(categories, selectedFilters) {
					if (this.state.isLoading) {
						return;
					}
	
					var hasFilterSet = selectedFilters.length > 0;
					var facetsSearchList = [];
	
					var _iteratorNormalCompletion3 = true;
					var _didIteratorError3 = false;
					var _iteratorError3 = undefined;
	
					try {
						for (var _iterator3 = selectedFilters[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
							var filter = _step3.value;
	
							facetsSearchList.push({ Type: filter.categoryType, Value: filter.key });
						}
					} catch (err) {
						_didIteratorError3 = true;
						_iteratorError3 = err;
					} finally {
						try {
							if (!_iteratorNormalCompletion3 && _iterator3.return) {
								_iterator3.return();
							}
						} finally {
							if (_didIteratorError3) {
								throw _iteratorError3;
							}
						}
					}
	
					if (!hasFilterSet) {
						this.handleUnselectFilter();
					} else {
						this.setState({ isLoading: true });
	
						calendarRepository.getContent({
							"Facets": facetsSearchList,
							"PageNumber": 1,
							"SearchValue": this.state.searchValue,
							"Year": this.state.year,
							"PageId": this.state.pageId
	
						}).then(function (data) {
							this.setState({
								results: [],
								categories: data.Type,
								totalResults: data.TotalResults,
								currentPage: data.CurrentPageIndex,
								addAllEvents: data.AddAllEvents,
								facets: facetsSearchList,
								refreshScrolling: true,
								showNextResults: false,
								isLoading: false
							});
	
							this.collectEvents(data.UpcomingEvents, data.PastEvents);
							this.loadNextEvents();
						}.bind(this));
	
						this.setState({ isLoading: true });
					}
				}
			}, {
				key: 'filterOptionsChanged',
				value: function filterOptionsChanged(e) {
					var parameter = {
						"Facets": null,
						"PageNumber": 1,
						"SearchValue": this.state.searchValue,
						"PageId": this.state.pageId,
						"Year": e.target.value
					};
	
					if (!this.state.isLoading) {
						calendarRepository.getContent(parameter).then(function (data) {
	
							this.setState({
								results: [],
								categories: data.Type,
								totalResults: data.TotalResults,
								currentPage: data.CurrentPageIndex,
								showNextResults: false,
								addAllEvents: data.AddAllEvents,
								isLoading: false,
								year: parameter.Year
							});
	
							this.collectEvents(data.UpcomingEvents, data.PastEvents);
							this.loadNextEvents();
						}.bind(this));
	
						this.setState({
							selectedSortOption: e.target.value,
							isLoading: true
						});
					}
				}
			}, {
				key: 'handleClearFilter',
				value: function handleClearFilter() {
					var currTime = new Date();
					var currYear = currTime.getFullYear().toString();
	
					this.setState({
						isLoading: true,
						selectedSortOption: 0,
						selectedFilters: [],
						year: currYear,
						searchValue: ""
					});
	
					var parameter = {
						"Facets": null,
						"PageNumber": 1,
						"SearchValue": this.state.searchValue,
						"Year": currYear,
						"PageId": this.state.pageId
					};
	
					calendarRepository.getContent(parameter).then(function (data) {
						this.setState({
							results: [],
							categories: data.Type,
							totalResults: data.TotalResults,
							currentPage: data.CurrentPageIndex,
							addAllEvents: data.AddAllEvents,
							facets: null,
							showNextResults: false,
							isLoading: false
						});
	
						this.collectEvents(data.UpcomingEvents, data.PastEvents);
						this.loadNextEvents();
					}.bind(this));
	
					this.setState({ isLoading: true });
				}
			}, {
				key: 'handleUnselectFilter',
				value: function handleUnselectFilter() {
	
					this.setState({
						isLoading: false,
						selectedSortOption: 0,
						selectedFilters: [],
						searchValue: this.state.searchValue
					});
	
					var parameter = {
						"Facets": null,
						"PageNumber": 1,
						"SearchValue": this.state.searchValue,
						"Year": this.state.year,
						"PageId": this.state.pageId
					};
	
					calendarRepository.getContent(parameter).then(function (data) {
	
						this.setState({
							results: [],
							categories: data.Type,
							totalResults: data.TotalResults,
							currentPage: data.CurrentPageIndex,
							addAllEvents: data.AddAllEvents,
							facets: null,
							showNextResults: false,
							isLoading: false
						});
	
						this.collectEvents(data.UpcomingEvents, data.PastEvents);
						this.loadNextEvents();
					}.bind(this));
				}
			}, {
				key: 'handleMoreArticlesForShowing',
				value: function handleMoreArticlesForShowing(e) {
					e.preventDefault();
					this.setState({ showNextResults: true });
				}
			}, {
				key: 'findUpcomingEvent',
				value: function findUpcomingEvent(event) {
					return event.isDeparted === false;
				}
			}, {
				key: 'findPastEvent',
				value: function findPastEvent(event) {
					return event.isDeparted === true;
				}
			}, {
				key: 'upcomingHeadline',
				value: function upcomingHeadline() {
					if (isNaN(this.state.year)) {
						return this.state.i18n.UpcomingEventsHeadline;
					} else {
						return this.state.i18n.UpcomingEventsHeadline + ' ' + this.state.year;
					}
				}
			}, {
				key: 'pastHeadline',
				value: function pastHeadline() {
					if (isNaN(this.state.year)) {
						return this.state.i18n.PastEventsHeadline;
					} else {
						return this.state.i18n.PastEventsHeadline + ' ' + this.state.year;
					}
				}
			}, {
				key: 'render',
				value: function render() {
					var _this2 = this;
	
					return _react2.default.createElement(
						'div',
						{ className: 'row' },
						_react2.default.createElement(
							'div',
							{ className: 'col-sm-6 col-md-4' },
							_react2.default.createElement(
								'div',
								{ className: 'mod mod-navigation-drawer right', 'data-t-name': 'NavigationDrawer' },
								_react2.default.createElement(
									'div',
									{ className: 'mod-navigation-drawer__inlay' },
									_react2.default.createElement(
										'div',
										{ className: 'mod-navigation-drawer--sticky' },
										_react2.default.createElement(
											'a',
											{ href: '#', className: 'mod-navigation-drawer__close hidden-sm-up' },
											_react2.default.createElement('span', { className: 'icon icon--arrow-slider-left', 'aria-hidden': 'true' }),
											'Back'
										)
									),
									_react2.default.createElement(
										'div',
										{ className: 'mod-navigation-drawer--scroll-content' },
										_react2.default.createElement(_GlobalFilter2.default, { categories: this.state.categories ? this.state.categories : [],
											filterResult: this.filterResult.bind(this),
											handleClearFilter: this.handleClearFilter.bind(this),
											handleUnselectFilter: this.handleUnselectFilter.bind(this),
											isLoading: this.state.isLoading,
											i18n: this.state.i18n,
											switchYear: this.state.selectedSortOption,
											hasSearch: this.state.searchValue ? true : false,
											hasSorted: this.state.selectedSortOption ? true : false,
											reactAppName: 'calendar'
										})
									)
								)
							)
						),
						_react2.default.createElement(
							'div',
							{ className: 'col-sm-6 col-md-8 mod-result-list' },
							_react2.default.createElement(_SortSection2.default, {
								filterOptions: filterOptionsRepository.getSelectOptionsForCalendar({ "pageid": this.state.pageId }),
								filterOptionsChanged: function filterOptionsChanged(e) {
									return _this2.filterOptionsChanged(e);
								},
								selectedValue: this.state.selectedSortOption,
								searchValue: this.state.searchValue,
								i18n: this.state.i18n,
								handlerAddEvents: this.state.addAllEvents,
								currentYear: this.state.year,
								categories: this.state.categories,
								reactAppName: 'calendar'
							}),
							_react2.default.createElement(
								_ResultList2.default,
								{
									itemsPerPage: itemsPerPage,
									results: this.state.results ? this.state.results : [],
									totalResults: this.state.totalResults,
									currentPage: this.state.currentPage,
									handleMoreResultsForShowing: function handleMoreResultsForShowing(e) {
										return _this2.handleMoreArticlesForShowing(e);
									},
									loadNextResults: function loadNextResults() {
										return _this2.loadNextEvents();
									},
									showNextResults: this.state.showNextResults,
									isLoading: this.state.isLoading,
									year: this.state.year,
									i18n: this.state.i18n
								},
								this.state.results.find(this.findUpcomingEvent) && _react2.default.createElement(
									'h3',
									{ className: 'mod-result-list__heading' },
									this.upcomingHeadline()
								),
								this.state.results && this.state.results.length > 0 ? this.state.results.map(function (key, idx) {
									if (!key.isDeparted) {
										return _react2.default.createElement(_CalendarListItem2.default, {
											key: idx,
											date: key.Date,
											eventId: key.ID,
											location: key.Location,
											isDeparted: key.isDeparted,
											linkUrl: key.Link,
											linkTarget: key.LinkTarget,
											linkTitle: key.LinkTitle,
											headline: key.Title,
											summary: key.Summary,
											typeName: key.TypeName,
											linkText: _this2.state.i18n.AddThisEventToCalendar,
											addEvent: key.DownloadEventCalendar
										});
									}
								}) : '',
								this.state.results.find(this.findPastEvent) && _react2.default.createElement(
									'h3',
									{ className: 'mod-result-list__heading' },
									this.pastHeadline()
								),
								this.state.results && this.state.results.length > 0 ? this.state.results.map(function (key, idx) {
									if (key.isDeparted) {
										return _react2.default.createElement(_CalendarListItem2.default, {
											key: idx,
											date: key.Date,
											eventId: key.ID,
											location: key.Location,
											isDeparted: key.isDeparted,
											linkUrl: key.Link,
											linkTarget: key.LinkTarget,
											linkTitle: key.LinkTitle,
											headline: key.Title,
											summary: key.Summary,
											typeName: key.TypeName,
											linkText: _this2.state.i18n.AddThisEventToCalendar
										});
									}
								}) : ''
							)
						)
					);
				}
			}]);
	
			return CalendarList;
		}(_react2.default.Component);
	
		exports.default = CalendarList;
	
	
		_reactDom2.default.render(_react2.default.createElement(CalendarList, null), document.getElementById('app-calendar'));
	
	/***/ },
	/* 266 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(global) {"use strict";
	
		__webpack_require__(267);
	
		__webpack_require__(587);
	
		__webpack_require__(588);
	
		if (global._babelPolyfill) {
		  throw new Error("only one instance of babel-polyfill is allowed");
		}
		global._babelPolyfill = true;
	
		var DEFINE_PROPERTY = "defineProperty";
		function define(O, key, value) {
		  O[key] || Object[DEFINE_PROPERTY](O, key, {
		    writable: true,
		    configurable: true,
		    value: value
		  });
		}
	
		define(String.prototype, "padLeft", "".padStart);
		define(String.prototype, "padRight", "".padEnd);
	
		"pop,reverse,shift,keys,values,entries,indexOf,every,some,forEach,map,filter,find,findIndex,includes,join,slice,concat,push,splice,unshift,sort,lastIndexOf,reduce,reduceRight,copyWithin,fill".split(",").forEach(function (key) {
		  [][key] && define(Array, key, Function.call.bind([][key]));
		});
		/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))
	
	/***/ },
	/* 267 */
	/***/ function(module, exports, __webpack_require__) {
	
		__webpack_require__(268);
		__webpack_require__(316);
		__webpack_require__(317);
		__webpack_require__(318);
		__webpack_require__(319);
		__webpack_require__(321);
		__webpack_require__(324);
		__webpack_require__(325);
		__webpack_require__(326);
		__webpack_require__(327);
		__webpack_require__(328);
		__webpack_require__(329);
		__webpack_require__(330);
		__webpack_require__(331);
		__webpack_require__(332);
		__webpack_require__(334);
		__webpack_require__(336);
		__webpack_require__(338);
		__webpack_require__(340);
		__webpack_require__(343);
		__webpack_require__(344);
		__webpack_require__(345);
		__webpack_require__(349);
		__webpack_require__(351);
		__webpack_require__(353);
		__webpack_require__(356);
		__webpack_require__(357);
		__webpack_require__(358);
		__webpack_require__(359);
		__webpack_require__(361);
		__webpack_require__(362);
		__webpack_require__(363);
		__webpack_require__(364);
		__webpack_require__(365);
		__webpack_require__(366);
		__webpack_require__(367);
		__webpack_require__(369);
		__webpack_require__(370);
		__webpack_require__(371);
		__webpack_require__(373);
		__webpack_require__(374);
		__webpack_require__(375);
		__webpack_require__(377);
		__webpack_require__(379);
		__webpack_require__(380);
		__webpack_require__(381);
		__webpack_require__(382);
		__webpack_require__(383);
		__webpack_require__(384);
		__webpack_require__(385);
		__webpack_require__(386);
		__webpack_require__(387);
		__webpack_require__(388);
		__webpack_require__(389);
		__webpack_require__(390);
		__webpack_require__(391);
		__webpack_require__(396);
		__webpack_require__(397);
		__webpack_require__(401);
		__webpack_require__(402);
		__webpack_require__(403);
		__webpack_require__(404);
		__webpack_require__(406);
		__webpack_require__(407);
		__webpack_require__(408);
		__webpack_require__(409);
		__webpack_require__(410);
		__webpack_require__(411);
		__webpack_require__(412);
		__webpack_require__(413);
		__webpack_require__(414);
		__webpack_require__(415);
		__webpack_require__(416);
		__webpack_require__(417);
		__webpack_require__(418);
		__webpack_require__(419);
		__webpack_require__(420);
		__webpack_require__(422);
		__webpack_require__(423);
		__webpack_require__(425);
		__webpack_require__(426);
		__webpack_require__(432);
		__webpack_require__(433);
		__webpack_require__(435);
		__webpack_require__(436);
		__webpack_require__(437);
		__webpack_require__(441);
		__webpack_require__(442);
		__webpack_require__(443);
		__webpack_require__(444);
		__webpack_require__(445);
		__webpack_require__(447);
		__webpack_require__(448);
		__webpack_require__(449);
		__webpack_require__(450);
		__webpack_require__(453);
		__webpack_require__(455);
		__webpack_require__(456);
		__webpack_require__(457);
		__webpack_require__(459);
		__webpack_require__(461);
		__webpack_require__(463);
		__webpack_require__(464);
		__webpack_require__(465);
		__webpack_require__(467);
		__webpack_require__(468);
		__webpack_require__(469);
		__webpack_require__(470);
		__webpack_require__(480);
		__webpack_require__(484);
		__webpack_require__(485);
		__webpack_require__(487);
		__webpack_require__(488);
		__webpack_require__(492);
		__webpack_require__(493);
		__webpack_require__(495);
		__webpack_require__(496);
		__webpack_require__(497);
		__webpack_require__(498);
		__webpack_require__(499);
		__webpack_require__(500);
		__webpack_require__(501);
		__webpack_require__(502);
		__webpack_require__(503);
		__webpack_require__(504);
		__webpack_require__(505);
		__webpack_require__(506);
		__webpack_require__(507);
		__webpack_require__(508);
		__webpack_require__(509);
		__webpack_require__(510);
		__webpack_require__(511);
		__webpack_require__(512);
		__webpack_require__(513);
		__webpack_require__(515);
		__webpack_require__(516);
		__webpack_require__(517);
		__webpack_require__(518);
		__webpack_require__(519);
		__webpack_require__(521);
		__webpack_require__(522);
		__webpack_require__(523);
		__webpack_require__(525);
		__webpack_require__(526);
		__webpack_require__(527);
		__webpack_require__(528);
		__webpack_require__(529);
		__webpack_require__(530);
		__webpack_require__(531);
		__webpack_require__(532);
		__webpack_require__(534);
		__webpack_require__(535);
		__webpack_require__(537);
		__webpack_require__(538);
		__webpack_require__(539);
		__webpack_require__(540);
		__webpack_require__(543);
		__webpack_require__(544);
		__webpack_require__(546);
		__webpack_require__(547);
		__webpack_require__(548);
		__webpack_require__(549);
		__webpack_require__(551);
		__webpack_require__(552);
		__webpack_require__(553);
		__webpack_require__(554);
		__webpack_require__(555);
		__webpack_require__(556);
		__webpack_require__(557);
		__webpack_require__(558);
		__webpack_require__(559);
		__webpack_require__(560);
		__webpack_require__(562);
		__webpack_require__(563);
		__webpack_require__(564);
		__webpack_require__(565);
		__webpack_require__(566);
		__webpack_require__(567);
		__webpack_require__(568);
		__webpack_require__(569);
		__webpack_require__(570);
		__webpack_require__(571);
		__webpack_require__(572);
		__webpack_require__(574);
		__webpack_require__(575);
		__webpack_require__(576);
		__webpack_require__(577);
		__webpack_require__(578);
		__webpack_require__(579);
		__webpack_require__(580);
		__webpack_require__(581);
		__webpack_require__(582);
		__webpack_require__(583);
		__webpack_require__(584);
		__webpack_require__(585);
		__webpack_require__(586);
		module.exports = __webpack_require__(274);
	
	
	/***/ },
	/* 268 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		// ECMAScript 6 symbols shim
		var global = __webpack_require__(269);
		var has = __webpack_require__(270);
		var DESCRIPTORS = __webpack_require__(271);
		var $export = __webpack_require__(273);
		var redefine = __webpack_require__(283);
		var META = __webpack_require__(287).KEY;
		var $fails = __webpack_require__(272);
		var shared = __webpack_require__(288);
		var setToStringTag = __webpack_require__(289);
		var uid = __webpack_require__(284);
		var wks = __webpack_require__(290);
		var wksExt = __webpack_require__(291);
		var wksDefine = __webpack_require__(292);
		var enumKeys = __webpack_require__(294);
		var isArray = __webpack_require__(309);
		var anObject = __webpack_require__(277);
		var toIObject = __webpack_require__(297);
		var toPrimitive = __webpack_require__(281);
		var createDesc = __webpack_require__(282);
		var _create = __webpack_require__(310);
		var gOPNExt = __webpack_require__(313);
		var $GOPD = __webpack_require__(315);
		var $DP = __webpack_require__(276);
		var $keys = __webpack_require__(295);
		var gOPD = $GOPD.f;
		var dP = $DP.f;
		var gOPN = gOPNExt.f;
		var $Symbol = global.Symbol;
		var $JSON = global.JSON;
		var _stringify = $JSON && $JSON.stringify;
		var PROTOTYPE = 'prototype';
		var HIDDEN = wks('_hidden');
		var TO_PRIMITIVE = wks('toPrimitive');
		var isEnum = {}.propertyIsEnumerable;
		var SymbolRegistry = shared('symbol-registry');
		var AllSymbols = shared('symbols');
		var OPSymbols = shared('op-symbols');
		var ObjectProto = Object[PROTOTYPE];
		var USE_NATIVE = typeof $Symbol == 'function';
		var QObject = global.QObject;
		// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
		var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;
	
		// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
		var setSymbolDesc = DESCRIPTORS && $fails(function () {
		  return _create(dP({}, 'a', {
		    get: function () { return dP(this, 'a', { value: 7 }).a; }
		  })).a != 7;
		}) ? function (it, key, D) {
		  var protoDesc = gOPD(ObjectProto, key);
		  if (protoDesc) delete ObjectProto[key];
		  dP(it, key, D);
		  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
		} : dP;
	
		var wrap = function (tag) {
		  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
		  sym._k = tag;
		  return sym;
		};
	
		var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
		  return typeof it == 'symbol';
		} : function (it) {
		  return it instanceof $Symbol;
		};
	
		var $defineProperty = function defineProperty(it, key, D) {
		  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
		  anObject(it);
		  key = toPrimitive(key, true);
		  anObject(D);
		  if (has(AllSymbols, key)) {
		    if (!D.enumerable) {
		      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
		      it[HIDDEN][key] = true;
		    } else {
		      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
		      D = _create(D, { enumerable: createDesc(0, false) });
		    } return setSymbolDesc(it, key, D);
		  } return dP(it, key, D);
		};
		var $defineProperties = function defineProperties(it, P) {
		  anObject(it);
		  var keys = enumKeys(P = toIObject(P));
		  var i = 0;
		  var l = keys.length;
		  var key;
		  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
		  return it;
		};
		var $create = function create(it, P) {
		  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
		};
		var $propertyIsEnumerable = function propertyIsEnumerable(key) {
		  var E = isEnum.call(this, key = toPrimitive(key, true));
		  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
		  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
		};
		var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
		  it = toIObject(it);
		  key = toPrimitive(key, true);
		  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
		  var D = gOPD(it, key);
		  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
		  return D;
		};
		var $getOwnPropertyNames = function getOwnPropertyNames(it) {
		  var names = gOPN(toIObject(it));
		  var result = [];
		  var i = 0;
		  var key;
		  while (names.length > i) {
		    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
		  } return result;
		};
		var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
		  var IS_OP = it === ObjectProto;
		  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
		  var result = [];
		  var i = 0;
		  var key;
		  while (names.length > i) {
		    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
		  } return result;
		};
	
		// 19.4.1.1 Symbol([description])
		if (!USE_NATIVE) {
		  $Symbol = function Symbol() {
		    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
		    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
		    var $set = function (value) {
		      if (this === ObjectProto) $set.call(OPSymbols, value);
		      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
		      setSymbolDesc(this, tag, createDesc(1, value));
		    };
		    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
		    return wrap(tag);
		  };
		  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
		    return this._k;
		  });
	
		  $GOPD.f = $getOwnPropertyDescriptor;
		  $DP.f = $defineProperty;
		  __webpack_require__(314).f = gOPNExt.f = $getOwnPropertyNames;
		  __webpack_require__(308).f = $propertyIsEnumerable;
		  __webpack_require__(307).f = $getOwnPropertySymbols;
	
		  if (DESCRIPTORS && !__webpack_require__(293)) {
		    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
		  }
	
		  wksExt.f = function (name) {
		    return wrap(wks(name));
		  };
		}
	
		$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });
	
		for (var es6Symbols = (
		  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
		  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
		).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);
	
		for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);
	
		$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
		  // 19.4.2.1 Symbol.for(key)
		  'for': function (key) {
		    return has(SymbolRegistry, key += '')
		      ? SymbolRegistry[key]
		      : SymbolRegistry[key] = $Symbol(key);
		  },
		  // 19.4.2.5 Symbol.keyFor(sym)
		  keyFor: function keyFor(sym) {
		    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
		    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
		  },
		  useSetter: function () { setter = true; },
		  useSimple: function () { setter = false; }
		});
	
		$export($export.S + $export.F * !USE_NATIVE, 'Object', {
		  // 19.1.2.2 Object.create(O [, Properties])
		  create: $create,
		  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
		  defineProperty: $defineProperty,
		  // 19.1.2.3 Object.defineProperties(O, Properties)
		  defineProperties: $defineProperties,
		  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
		  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
		  // 19.1.2.7 Object.getOwnPropertyNames(O)
		  getOwnPropertyNames: $getOwnPropertyNames,
		  // 19.1.2.8 Object.getOwnPropertySymbols(O)
		  getOwnPropertySymbols: $getOwnPropertySymbols
		});
	
		// 24.3.2 JSON.stringify(value [, replacer [, space]])
		$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
		  var S = $Symbol();
		  // MS Edge converts symbol values to JSON as {}
		  // WebKit converts symbol values to JSON as null
		  // V8 throws on boxed symbols
		  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
		})), 'JSON', {
		  stringify: function stringify(it) {
		    if (it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
		    var args = [it];
		    var i = 1;
		    var replacer, $replacer;
		    while (arguments.length > i) args.push(arguments[i++]);
		    replacer = args[1];
		    if (typeof replacer == 'function') $replacer = replacer;
		    if ($replacer || !isArray(replacer)) replacer = function (key, value) {
		      if ($replacer) value = $replacer.call(this, key, value);
		      if (!isSymbol(value)) return value;
		    };
		    args[1] = replacer;
		    return _stringify.apply($JSON, args);
		  }
		});
	
		// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
		$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(275)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
		// 19.4.3.5 Symbol.prototype[@@toStringTag]
		setToStringTag($Symbol, 'Symbol');
		// 20.2.1.9 Math[@@toStringTag]
		setToStringTag(Math, 'Math', true);
		// 24.3.3 JSON[@@toStringTag]
		setToStringTag(global.JSON, 'JSON', true);
	
	
	/***/ },
	/* 269 */
	/***/ function(module, exports) {
	
		// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
		var global = module.exports = typeof window != 'undefined' && window.Math == Math
		  ? window : typeof self != 'undefined' && self.Math == Math ? self
		  // eslint-disable-next-line no-new-func
		  : Function('return this')();
		if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef
	
	
	/***/ },
	/* 270 */
	/***/ function(module, exports) {
	
		var hasOwnProperty = {}.hasOwnProperty;
		module.exports = function (it, key) {
		  return hasOwnProperty.call(it, key);
		};
	
	
	/***/ },
	/* 271 */
	/***/ function(module, exports, __webpack_require__) {
	
		// Thank's IE8 for his funny defineProperty
		module.exports = !__webpack_require__(272)(function () {
		  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
		});
	
	
	/***/ },
	/* 272 */
	/***/ function(module, exports) {
	
		module.exports = function (exec) {
		  try {
		    return !!exec();
		  } catch (e) {
		    return true;
		  }
		};
	
	
	/***/ },
	/* 273 */
	/***/ function(module, exports, __webpack_require__) {
	
		var global = __webpack_require__(269);
		var core = __webpack_require__(274);
		var hide = __webpack_require__(275);
		var redefine = __webpack_require__(283);
		var ctx = __webpack_require__(285);
		var PROTOTYPE = 'prototype';
	
		var $export = function (type, name, source) {
		  var IS_FORCED = type & $export.F;
		  var IS_GLOBAL = type & $export.G;
		  var IS_STATIC = type & $export.S;
		  var IS_PROTO = type & $export.P;
		  var IS_BIND = type & $export.B;
		  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];
		  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
		  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});
		  var key, own, out, exp;
		  if (IS_GLOBAL) source = name;
		  for (key in source) {
		    // contains in native
		    own = !IS_FORCED && target && target[key] !== undefined;
		    // export native or passed
		    out = (own ? target : source)[key];
		    // bind timers to global for call from export context
		    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
		    // extend global
		    if (target) redefine(target, key, out, type & $export.U);
		    // export
		    if (exports[key] != out) hide(exports, key, exp);
		    if (IS_PROTO && expProto[key] != out) expProto[key] = out;
		  }
		};
		global.core = core;
		// type bitmap
		$export.F = 1;   // forced
		$export.G = 2;   // global
		$export.S = 4;   // static
		$export.P = 8;   // proto
		$export.B = 16;  // bind
		$export.W = 32;  // wrap
		$export.U = 64;  // safe
		$export.R = 128; // real proto method for `library`
		module.exports = $export;
	
	
	/***/ },
	/* 274 */
	/***/ function(module, exports) {
	
		var core = module.exports = { version: '2.5.1' };
		if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef
	
	
	/***/ },
	/* 275 */
	/***/ function(module, exports, __webpack_require__) {
	
		var dP = __webpack_require__(276);
		var createDesc = __webpack_require__(282);
		module.exports = __webpack_require__(271) ? function (object, key, value) {
		  return dP.f(object, key, createDesc(1, value));
		} : function (object, key, value) {
		  object[key] = value;
		  return object;
		};
	
	
	/***/ },
	/* 276 */
	/***/ function(module, exports, __webpack_require__) {
	
		var anObject = __webpack_require__(277);
		var IE8_DOM_DEFINE = __webpack_require__(279);
		var toPrimitive = __webpack_require__(281);
		var dP = Object.defineProperty;
	
		exports.f = __webpack_require__(271) ? Object.defineProperty : function defineProperty(O, P, Attributes) {
		  anObject(O);
		  P = toPrimitive(P, true);
		  anObject(Attributes);
		  if (IE8_DOM_DEFINE) try {
		    return dP(O, P, Attributes);
		  } catch (e) { /* empty */ }
		  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
		  if ('value' in Attributes) O[P] = Attributes.value;
		  return O;
		};
	
	
	/***/ },
	/* 277 */
	/***/ function(module, exports, __webpack_require__) {
	
		var isObject = __webpack_require__(278);
		module.exports = function (it) {
		  if (!isObject(it)) throw TypeError(it + ' is not an object!');
		  return it;
		};
	
	
	/***/ },
	/* 278 */
	/***/ function(module, exports) {
	
		module.exports = function (it) {
		  return typeof it === 'object' ? it !== null : typeof it === 'function';
		};
	
	
	/***/ },
	/* 279 */
	/***/ function(module, exports, __webpack_require__) {
	
		module.exports = !__webpack_require__(271) && !__webpack_require__(272)(function () {
		  return Object.defineProperty(__webpack_require__(280)('div'), 'a', { get: function () { return 7; } }).a != 7;
		});
	
	
	/***/ },
	/* 280 */
	/***/ function(module, exports, __webpack_require__) {
	
		var isObject = __webpack_require__(278);
		var document = __webpack_require__(269).document;
		// typeof document.createElement is 'object' in old IE
		var is = isObject(document) && isObject(document.createElement);
		module.exports = function (it) {
		  return is ? document.createElement(it) : {};
		};
	
	
	/***/ },
	/* 281 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 7.1.1 ToPrimitive(input [, PreferredType])
		var isObject = __webpack_require__(278);
		// instead of the ES6 spec version, we didn't implement @@toPrimitive case
		// and the second argument - flag - preferred type is a string
		module.exports = function (it, S) {
		  if (!isObject(it)) return it;
		  var fn, val;
		  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
		  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
		  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
		  throw TypeError("Can't convert object to primitive value");
		};
	
	
	/***/ },
	/* 282 */
	/***/ function(module, exports) {
	
		module.exports = function (bitmap, value) {
		  return {
		    enumerable: !(bitmap & 1),
		    configurable: !(bitmap & 2),
		    writable: !(bitmap & 4),
		    value: value
		  };
		};
	
	
	/***/ },
	/* 283 */
	/***/ function(module, exports, __webpack_require__) {
	
		var global = __webpack_require__(269);
		var hide = __webpack_require__(275);
		var has = __webpack_require__(270);
		var SRC = __webpack_require__(284)('src');
		var TO_STRING = 'toString';
		var $toString = Function[TO_STRING];
		var TPL = ('' + $toString).split(TO_STRING);
	
		__webpack_require__(274).inspectSource = function (it) {
		  return $toString.call(it);
		};
	
		(module.exports = function (O, key, val, safe) {
		  var isFunction = typeof val == 'function';
		  if (isFunction) has(val, 'name') || hide(val, 'name', key);
		  if (O[key] === val) return;
		  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
		  if (O === global) {
		    O[key] = val;
		  } else if (!safe) {
		    delete O[key];
		    hide(O, key, val);
		  } else if (O[key]) {
		    O[key] = val;
		  } else {
		    hide(O, key, val);
		  }
		// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
		})(Function.prototype, TO_STRING, function toString() {
		  return typeof this == 'function' && this[SRC] || $toString.call(this);
		});
	
	
	/***/ },
	/* 284 */
	/***/ function(module, exports) {
	
		var id = 0;
		var px = Math.random();
		module.exports = function (key) {
		  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
		};
	
	
	/***/ },
	/* 285 */
	/***/ function(module, exports, __webpack_require__) {
	
		// optional / simple context binding
		var aFunction = __webpack_require__(286);
		module.exports = function (fn, that, length) {
		  aFunction(fn);
		  if (that === undefined) return fn;
		  switch (length) {
		    case 1: return function (a) {
		      return fn.call(that, a);
		    };
		    case 2: return function (a, b) {
		      return fn.call(that, a, b);
		    };
		    case 3: return function (a, b, c) {
		      return fn.call(that, a, b, c);
		    };
		  }
		  return function (/* ...args */) {
		    return fn.apply(that, arguments);
		  };
		};
	
	
	/***/ },
	/* 286 */
	/***/ function(module, exports) {
	
		module.exports = function (it) {
		  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
		  return it;
		};
	
	
	/***/ },
	/* 287 */
	/***/ function(module, exports, __webpack_require__) {
	
		var META = __webpack_require__(284)('meta');
		var isObject = __webpack_require__(278);
		var has = __webpack_require__(270);
		var setDesc = __webpack_require__(276).f;
		var id = 0;
		var isExtensible = Object.isExtensible || function () {
		  return true;
		};
		var FREEZE = !__webpack_require__(272)(function () {
		  return isExtensible(Object.preventExtensions({}));
		});
		var setMeta = function (it) {
		  setDesc(it, META, { value: {
		    i: 'O' + ++id, // object ID
		    w: {}          // weak collections IDs
		  } });
		};
		var fastKey = function (it, create) {
		  // return primitive with prefix
		  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
		  if (!has(it, META)) {
		    // can't set metadata to uncaught frozen object
		    if (!isExtensible(it)) return 'F';
		    // not necessary to add metadata
		    if (!create) return 'E';
		    // add missing metadata
		    setMeta(it);
		  // return object ID
		  } return it[META].i;
		};
		var getWeak = function (it, create) {
		  if (!has(it, META)) {
		    // can't set metadata to uncaught frozen object
		    if (!isExtensible(it)) return true;
		    // not necessary to add metadata
		    if (!create) return false;
		    // add missing metadata
		    setMeta(it);
		  // return hash weak collections IDs
		  } return it[META].w;
		};
		// add metadata on freeze-family methods calling
		var onFreeze = function (it) {
		  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
		  return it;
		};
		var meta = module.exports = {
		  KEY: META,
		  NEED: false,
		  fastKey: fastKey,
		  getWeak: getWeak,
		  onFreeze: onFreeze
		};
	
	
	/***/ },
	/* 288 */
	/***/ function(module, exports, __webpack_require__) {
	
		var global = __webpack_require__(269);
		var SHARED = '__core-js_shared__';
		var store = global[SHARED] || (global[SHARED] = {});
		module.exports = function (key) {
		  return store[key] || (store[key] = {});
		};
	
	
	/***/ },
	/* 289 */
	/***/ function(module, exports, __webpack_require__) {
	
		var def = __webpack_require__(276).f;
		var has = __webpack_require__(270);
		var TAG = __webpack_require__(290)('toStringTag');
	
		module.exports = function (it, tag, stat) {
		  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
		};
	
	
	/***/ },
	/* 290 */
	/***/ function(module, exports, __webpack_require__) {
	
		var store = __webpack_require__(288)('wks');
		var uid = __webpack_require__(284);
		var Symbol = __webpack_require__(269).Symbol;
		var USE_SYMBOL = typeof Symbol == 'function';
	
		var $exports = module.exports = function (name) {
		  return store[name] || (store[name] =
		    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
		};
	
		$exports.store = store;
	
	
	/***/ },
	/* 291 */
	/***/ function(module, exports, __webpack_require__) {
	
		exports.f = __webpack_require__(290);
	
	
	/***/ },
	/* 292 */
	/***/ function(module, exports, __webpack_require__) {
	
		var global = __webpack_require__(269);
		var core = __webpack_require__(274);
		var LIBRARY = __webpack_require__(293);
		var wksExt = __webpack_require__(291);
		var defineProperty = __webpack_require__(276).f;
		module.exports = function (name) {
		  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
		  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
		};
	
	
	/***/ },
	/* 293 */
	/***/ function(module, exports) {
	
		module.exports = false;
	
	
	/***/ },
	/* 294 */
	/***/ function(module, exports, __webpack_require__) {
	
		// all enumerable object keys, includes symbols
		var getKeys = __webpack_require__(295);
		var gOPS = __webpack_require__(307);
		var pIE = __webpack_require__(308);
		module.exports = function (it) {
		  var result = getKeys(it);
		  var getSymbols = gOPS.f;
		  if (getSymbols) {
		    var symbols = getSymbols(it);
		    var isEnum = pIE.f;
		    var i = 0;
		    var key;
		    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
		  } return result;
		};
	
	
	/***/ },
	/* 295 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 19.1.2.14 / 15.2.3.14 Object.keys(O)
		var $keys = __webpack_require__(296);
		var enumBugKeys = __webpack_require__(306);
	
		module.exports = Object.keys || function keys(O) {
		  return $keys(O, enumBugKeys);
		};
	
	
	/***/ },
	/* 296 */
	/***/ function(module, exports, __webpack_require__) {
	
		var has = __webpack_require__(270);
		var toIObject = __webpack_require__(297);
		var arrayIndexOf = __webpack_require__(301)(false);
		var IE_PROTO = __webpack_require__(305)('IE_PROTO');
	
		module.exports = function (object, names) {
		  var O = toIObject(object);
		  var i = 0;
		  var result = [];
		  var key;
		  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
		  // Don't enum bug & hidden keys
		  while (names.length > i) if (has(O, key = names[i++])) {
		    ~arrayIndexOf(result, key) || result.push(key);
		  }
		  return result;
		};
	
	
	/***/ },
	/* 297 */
	/***/ function(module, exports, __webpack_require__) {
	
		// to indexed object, toObject with fallback for non-array-like ES3 strings
		var IObject = __webpack_require__(298);
		var defined = __webpack_require__(300);
		module.exports = function (it) {
		  return IObject(defined(it));
		};
	
	
	/***/ },
	/* 298 */
	/***/ function(module, exports, __webpack_require__) {
	
		// fallback for non-array-like ES3 and non-enumerable old V8 strings
		var cof = __webpack_require__(299);
		// eslint-disable-next-line no-prototype-builtins
		module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
		  return cof(it) == 'String' ? it.split('') : Object(it);
		};
	
	
	/***/ },
	/* 299 */
	/***/ function(module, exports) {
	
		var toString = {}.toString;
	
		module.exports = function (it) {
		  return toString.call(it).slice(8, -1);
		};
	
	
	/***/ },
	/* 300 */
	/***/ function(module, exports) {
	
		// 7.2.1 RequireObjectCoercible(argument)
		module.exports = function (it) {
		  if (it == undefined) throw TypeError("Can't call method on  " + it);
		  return it;
		};
	
	
	/***/ },
	/* 301 */
	/***/ function(module, exports, __webpack_require__) {
	
		// false -> Array#indexOf
		// true  -> Array#includes
		var toIObject = __webpack_require__(297);
		var toLength = __webpack_require__(302);
		var toAbsoluteIndex = __webpack_require__(304);
		module.exports = function (IS_INCLUDES) {
		  return function ($this, el, fromIndex) {
		    var O = toIObject($this);
		    var length = toLength(O.length);
		    var index = toAbsoluteIndex(fromIndex, length);
		    var value;
		    // Array#includes uses SameValueZero equality algorithm
		    // eslint-disable-next-line no-self-compare
		    if (IS_INCLUDES && el != el) while (length > index) {
		      value = O[index++];
		      // eslint-disable-next-line no-self-compare
		      if (value != value) return true;
		    // Array#indexOf ignores holes, Array#includes - not
		    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
		      if (O[index] === el) return IS_INCLUDES || index || 0;
		    } return !IS_INCLUDES && -1;
		  };
		};
	
	
	/***/ },
	/* 302 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 7.1.15 ToLength
		var toInteger = __webpack_require__(303);
		var min = Math.min;
		module.exports = function (it) {
		  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
		};
	
	
	/***/ },
	/* 303 */
	/***/ function(module, exports) {
	
		// 7.1.4 ToInteger
		var ceil = Math.ceil;
		var floor = Math.floor;
		module.exports = function (it) {
		  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
		};
	
	
	/***/ },
	/* 304 */
	/***/ function(module, exports, __webpack_require__) {
	
		var toInteger = __webpack_require__(303);
		var max = Math.max;
		var min = Math.min;
		module.exports = function (index, length) {
		  index = toInteger(index);
		  return index < 0 ? max(index + length, 0) : min(index, length);
		};
	
	
	/***/ },
	/* 305 */
	/***/ function(module, exports, __webpack_require__) {
	
		var shared = __webpack_require__(288)('keys');
		var uid = __webpack_require__(284);
		module.exports = function (key) {
		  return shared[key] || (shared[key] = uid(key));
		};
	
	
	/***/ },
	/* 306 */
	/***/ function(module, exports) {
	
		// IE 8- don't enum bug keys
		module.exports = (
		  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
		).split(',');
	
	
	/***/ },
	/* 307 */
	/***/ function(module, exports) {
	
		exports.f = Object.getOwnPropertySymbols;
	
	
	/***/ },
	/* 308 */
	/***/ function(module, exports) {
	
		exports.f = {}.propertyIsEnumerable;
	
	
	/***/ },
	/* 309 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 7.2.2 IsArray(argument)
		var cof = __webpack_require__(299);
		module.exports = Array.isArray || function isArray(arg) {
		  return cof(arg) == 'Array';
		};
	
	
	/***/ },
	/* 310 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
		var anObject = __webpack_require__(277);
		var dPs = __webpack_require__(311);
		var enumBugKeys = __webpack_require__(306);
		var IE_PROTO = __webpack_require__(305)('IE_PROTO');
		var Empty = function () { /* empty */ };
		var PROTOTYPE = 'prototype';
	
		// Create object with fake `null` prototype: use iframe Object with cleared prototype
		var createDict = function () {
		  // Thrash, waste and sodomy: IE GC bug
		  var iframe = __webpack_require__(280)('iframe');
		  var i = enumBugKeys.length;
		  var lt = '<';
		  var gt = '>';
		  var iframeDocument;
		  iframe.style.display = 'none';
		  __webpack_require__(312).appendChild(iframe);
		  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
		  // createDict = iframe.contentWindow.Object;
		  // html.removeChild(iframe);
		  iframeDocument = iframe.contentWindow.document;
		  iframeDocument.open();
		  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
		  iframeDocument.close();
		  createDict = iframeDocument.F;
		  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
		  return createDict();
		};
	
		module.exports = Object.create || function create(O, Properties) {
		  var result;
		  if (O !== null) {
		    Empty[PROTOTYPE] = anObject(O);
		    result = new Empty();
		    Empty[PROTOTYPE] = null;
		    // add "__proto__" for Object.getPrototypeOf polyfill
		    result[IE_PROTO] = O;
		  } else result = createDict();
		  return Properties === undefined ? result : dPs(result, Properties);
		};
	
	
	/***/ },
	/* 311 */
	/***/ function(module, exports, __webpack_require__) {
	
		var dP = __webpack_require__(276);
		var anObject = __webpack_require__(277);
		var getKeys = __webpack_require__(295);
	
		module.exports = __webpack_require__(271) ? Object.defineProperties : function defineProperties(O, Properties) {
		  anObject(O);
		  var keys = getKeys(Properties);
		  var length = keys.length;
		  var i = 0;
		  var P;
		  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
		  return O;
		};
	
	
	/***/ },
	/* 312 */
	/***/ function(module, exports, __webpack_require__) {
	
		var document = __webpack_require__(269).document;
		module.exports = document && document.documentElement;
	
	
	/***/ },
	/* 313 */
	/***/ function(module, exports, __webpack_require__) {
	
		// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
		var toIObject = __webpack_require__(297);
		var gOPN = __webpack_require__(314).f;
		var toString = {}.toString;
	
		var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
		  ? Object.getOwnPropertyNames(window) : [];
	
		var getWindowNames = function (it) {
		  try {
		    return gOPN(it);
		  } catch (e) {
		    return windowNames.slice();
		  }
		};
	
		module.exports.f = function getOwnPropertyNames(it) {
		  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
		};
	
	
	/***/ },
	/* 314 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
		var $keys = __webpack_require__(296);
		var hiddenKeys = __webpack_require__(306).concat('length', 'prototype');
	
		exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
		  return $keys(O, hiddenKeys);
		};
	
	
	/***/ },
	/* 315 */
	/***/ function(module, exports, __webpack_require__) {
	
		var pIE = __webpack_require__(308);
		var createDesc = __webpack_require__(282);
		var toIObject = __webpack_require__(297);
		var toPrimitive = __webpack_require__(281);
		var has = __webpack_require__(270);
		var IE8_DOM_DEFINE = __webpack_require__(279);
		var gOPD = Object.getOwnPropertyDescriptor;
	
		exports.f = __webpack_require__(271) ? gOPD : function getOwnPropertyDescriptor(O, P) {
		  O = toIObject(O);
		  P = toPrimitive(P, true);
		  if (IE8_DOM_DEFINE) try {
		    return gOPD(O, P);
		  } catch (e) { /* empty */ }
		  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
		};
	
	
	/***/ },
	/* 316 */
	/***/ function(module, exports, __webpack_require__) {
	
		var $export = __webpack_require__(273);
		// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
		$export($export.S, 'Object', { create: __webpack_require__(310) });
	
	
	/***/ },
	/* 317 */
	/***/ function(module, exports, __webpack_require__) {
	
		var $export = __webpack_require__(273);
		// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
		$export($export.S + $export.F * !__webpack_require__(271), 'Object', { defineProperty: __webpack_require__(276).f });
	
	
	/***/ },
	/* 318 */
	/***/ function(module, exports, __webpack_require__) {
	
		var $export = __webpack_require__(273);
		// 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)
		$export($export.S + $export.F * !__webpack_require__(271), 'Object', { defineProperties: __webpack_require__(311) });
	
	
	/***/ },
	/* 319 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
		var toIObject = __webpack_require__(297);
		var $getOwnPropertyDescriptor = __webpack_require__(315).f;
	
		__webpack_require__(320)('getOwnPropertyDescriptor', function () {
		  return function getOwnPropertyDescriptor(it, key) {
		    return $getOwnPropertyDescriptor(toIObject(it), key);
		  };
		});
	
	
	/***/ },
	/* 320 */
	/***/ function(module, exports, __webpack_require__) {
	
		// most Object methods by ES6 should accept primitives
		var $export = __webpack_require__(273);
		var core = __webpack_require__(274);
		var fails = __webpack_require__(272);
		module.exports = function (KEY, exec) {
		  var fn = (core.Object || {})[KEY] || Object[KEY];
		  var exp = {};
		  exp[KEY] = exec(fn);
		  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);
		};
	
	
	/***/ },
	/* 321 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 19.1.2.9 Object.getPrototypeOf(O)
		var toObject = __webpack_require__(322);
		var $getPrototypeOf = __webpack_require__(323);
	
		__webpack_require__(320)('getPrototypeOf', function () {
		  return function getPrototypeOf(it) {
		    return $getPrototypeOf(toObject(it));
		  };
		});
	
	
	/***/ },
	/* 322 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 7.1.13 ToObject(argument)
		var defined = __webpack_require__(300);
		module.exports = function (it) {
		  return Object(defined(it));
		};
	
	
	/***/ },
	/* 323 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
		var has = __webpack_require__(270);
		var toObject = __webpack_require__(322);
		var IE_PROTO = __webpack_require__(305)('IE_PROTO');
		var ObjectProto = Object.prototype;
	
		module.exports = Object.getPrototypeOf || function (O) {
		  O = toObject(O);
		  if (has(O, IE_PROTO)) return O[IE_PROTO];
		  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
		    return O.constructor.prototype;
		  } return O instanceof Object ? ObjectProto : null;
		};
	
	
	/***/ },
	/* 324 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 19.1.2.14 Object.keys(O)
		var toObject = __webpack_require__(322);
		var $keys = __webpack_require__(295);
	
		__webpack_require__(320)('keys', function () {
		  return function keys(it) {
		    return $keys(toObject(it));
		  };
		});
	
	
	/***/ },
	/* 325 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 19.1.2.7 Object.getOwnPropertyNames(O)
		__webpack_require__(320)('getOwnPropertyNames', function () {
		  return __webpack_require__(313).f;
		});
	
	
	/***/ },
	/* 326 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 19.1.2.5 Object.freeze(O)
		var isObject = __webpack_require__(278);
		var meta = __webpack_require__(287).onFreeze;
	
		__webpack_require__(320)('freeze', function ($freeze) {
		  return function freeze(it) {
		    return $freeze && isObject(it) ? $freeze(meta(it)) : it;
		  };
		});
	
	
	/***/ },
	/* 327 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 19.1.2.17 Object.seal(O)
		var isObject = __webpack_require__(278);
		var meta = __webpack_require__(287).onFreeze;
	
		__webpack_require__(320)('seal', function ($seal) {
		  return function seal(it) {
		    return $seal && isObject(it) ? $seal(meta(it)) : it;
		  };
		});
	
	
	/***/ },
	/* 328 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 19.1.2.15 Object.preventExtensions(O)
		var isObject = __webpack_require__(278);
		var meta = __webpack_require__(287).onFreeze;
	
		__webpack_require__(320)('preventExtensions', function ($preventExtensions) {
		  return function preventExtensions(it) {
		    return $preventExtensions && isObject(it) ? $preventExtensions(meta(it)) : it;
		  };
		});
	
	
	/***/ },
	/* 329 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 19.1.2.12 Object.isFrozen(O)
		var isObject = __webpack_require__(278);
	
		__webpack_require__(320)('isFrozen', function ($isFrozen) {
		  return function isFrozen(it) {
		    return isObject(it) ? $isFrozen ? $isFrozen(it) : false : true;
		  };
		});
	
	
	/***/ },
	/* 330 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 19.1.2.13 Object.isSealed(O)
		var isObject = __webpack_require__(278);
	
		__webpack_require__(320)('isSealed', function ($isSealed) {
		  return function isSealed(it) {
		    return isObject(it) ? $isSealed ? $isSealed(it) : false : true;
		  };
		});
	
	
	/***/ },
	/* 331 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 19.1.2.11 Object.isExtensible(O)
		var isObject = __webpack_require__(278);
	
		__webpack_require__(320)('isExtensible', function ($isExtensible) {
		  return function isExtensible(it) {
		    return isObject(it) ? $isExtensible ? $isExtensible(it) : true : false;
		  };
		});
	
	
	/***/ },
	/* 332 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 19.1.3.1 Object.assign(target, source)
		var $export = __webpack_require__(273);
	
		$export($export.S + $export.F, 'Object', { assign: __webpack_require__(333) });
	
	
	/***/ },
	/* 333 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		// 19.1.2.1 Object.assign(target, source, ...)
		var getKeys = __webpack_require__(295);
		var gOPS = __webpack_require__(307);
		var pIE = __webpack_require__(308);
		var toObject = __webpack_require__(322);
		var IObject = __webpack_require__(298);
		var $assign = Object.assign;
	
		// should work with symbols and should have deterministic property order (V8 bug)
		module.exports = !$assign || __webpack_require__(272)(function () {
		  var A = {};
		  var B = {};
		  // eslint-disable-next-line no-undef
		  var S = Symbol();
		  var K = 'abcdefghijklmnopqrst';
		  A[S] = 7;
		  K.split('').forEach(function (k) { B[k] = k; });
		  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
		}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
		  var T = toObject(target);
		  var aLen = arguments.length;
		  var index = 1;
		  var getSymbols = gOPS.f;
		  var isEnum = pIE.f;
		  while (aLen > index) {
		    var S = IObject(arguments[index++]);
		    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
		    var length = keys.length;
		    var j = 0;
		    var key;
		    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];
		  } return T;
		} : $assign;
	
	
	/***/ },
	/* 334 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 19.1.3.10 Object.is(value1, value2)
		var $export = __webpack_require__(273);
		$export($export.S, 'Object', { is: __webpack_require__(335) });
	
	
	/***/ },
	/* 335 */
	/***/ function(module, exports) {
	
		// 7.2.9 SameValue(x, y)
		module.exports = Object.is || function is(x, y) {
		  // eslint-disable-next-line no-self-compare
		  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
		};
	
	
	/***/ },
	/* 336 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 19.1.3.19 Object.setPrototypeOf(O, proto)
		var $export = __webpack_require__(273);
		$export($export.S, 'Object', { setPrototypeOf: __webpack_require__(337).set });
	
	
	/***/ },
	/* 337 */
	/***/ function(module, exports, __webpack_require__) {
	
		// Works with __proto__ only. Old v8 can't work with null proto objects.
		/* eslint-disable no-proto */
		var isObject = __webpack_require__(278);
		var anObject = __webpack_require__(277);
		var check = function (O, proto) {
		  anObject(O);
		  if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
		};
		module.exports = {
		  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
		    function (test, buggy, set) {
		      try {
		        set = __webpack_require__(285)(Function.call, __webpack_require__(315).f(Object.prototype, '__proto__').set, 2);
		        set(test, []);
		        buggy = !(test instanceof Array);
		      } catch (e) { buggy = true; }
		      return function setPrototypeOf(O, proto) {
		        check(O, proto);
		        if (buggy) O.__proto__ = proto;
		        else set(O, proto);
		        return O;
		      };
		    }({}, false) : undefined),
		  check: check
		};
	
	
	/***/ },
	/* 338 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		// 19.1.3.6 Object.prototype.toString()
		var classof = __webpack_require__(339);
		var test = {};
		test[__webpack_require__(290)('toStringTag')] = 'z';
		if (test + '' != '[object z]') {
		  __webpack_require__(283)(Object.prototype, 'toString', function toString() {
		    return '[object ' + classof(this) + ']';
		  }, true);
		}
	
	
	/***/ },
	/* 339 */
	/***/ function(module, exports, __webpack_require__) {
	
		// getting tag from 19.1.3.6 Object.prototype.toString()
		var cof = __webpack_require__(299);
		var TAG = __webpack_require__(290)('toStringTag');
		// ES3 wrong here
		var ARG = cof(function () { return arguments; }()) == 'Arguments';
	
		// fallback for IE11 Script Access Denied error
		var tryGet = function (it, key) {
		  try {
		    return it[key];
		  } catch (e) { /* empty */ }
		};
	
		module.exports = function (it) {
		  var O, T, B;
		  return it === undefined ? 'Undefined' : it === null ? 'Null'
		    // @@toStringTag case
		    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
		    // builtinTag case
		    : ARG ? cof(O)
		    // ES3 arguments fallback
		    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
		};
	
	
	/***/ },
	/* 340 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 19.2.3.2 / 15.3.4.5 Function.prototype.bind(thisArg, args...)
		var $export = __webpack_require__(273);
	
		$export($export.P, 'Function', { bind: __webpack_require__(341) });
	
	
	/***/ },
	/* 341 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		var aFunction = __webpack_require__(286);
		var isObject = __webpack_require__(278);
		var invoke = __webpack_require__(342);
		var arraySlice = [].slice;
		var factories = {};
	
		var construct = function (F, len, args) {
		  if (!(len in factories)) {
		    for (var n = [], i = 0; i < len; i++) n[i] = 'a[' + i + ']';
		    // eslint-disable-next-line no-new-func
		    factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');
		  } return factories[len](F, args);
		};
	
		module.exports = Function.bind || function bind(that /* , ...args */) {
		  var fn = aFunction(this);
		  var partArgs = arraySlice.call(arguments, 1);
		  var bound = function (/* args... */) {
		    var args = partArgs.concat(arraySlice.call(arguments));
		    return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);
		  };
		  if (isObject(fn.prototype)) bound.prototype = fn.prototype;
		  return bound;
		};
	
	
	/***/ },
	/* 342 */
	/***/ function(module, exports) {
	
		// fast apply, http://jsperf.lnkit.com/fast-apply/5
		module.exports = function (fn, args, that) {
		  var un = that === undefined;
		  switch (args.length) {
		    case 0: return un ? fn()
		                      : fn.call(that);
		    case 1: return un ? fn(args[0])
		                      : fn.call(that, args[0]);
		    case 2: return un ? fn(args[0], args[1])
		                      : fn.call(that, args[0], args[1]);
		    case 3: return un ? fn(args[0], args[1], args[2])
		                      : fn.call(that, args[0], args[1], args[2]);
		    case 4: return un ? fn(args[0], args[1], args[2], args[3])
		                      : fn.call(that, args[0], args[1], args[2], args[3]);
		  } return fn.apply(that, args);
		};
	
	
	/***/ },
	/* 343 */
	/***/ function(module, exports, __webpack_require__) {
	
		var dP = __webpack_require__(276).f;
		var FProto = Function.prototype;
		var nameRE = /^\s*function ([^ (]*)/;
		var NAME = 'name';
	
		// 19.2.4.2 name
		NAME in FProto || __webpack_require__(271) && dP(FProto, NAME, {
		  configurable: true,
		  get: function () {
		    try {
		      return ('' + this).match(nameRE)[1];
		    } catch (e) {
		      return '';
		    }
		  }
		});
	
	
	/***/ },
	/* 344 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		var isObject = __webpack_require__(278);
		var getPrototypeOf = __webpack_require__(323);
		var HAS_INSTANCE = __webpack_require__(290)('hasInstance');
		var FunctionProto = Function.prototype;
		// 19.2.3.6 Function.prototype[@@hasInstance](V)
		if (!(HAS_INSTANCE in FunctionProto)) __webpack_require__(276).f(FunctionProto, HAS_INSTANCE, { value: function (O) {
		  if (typeof this != 'function' || !isObject(O)) return false;
		  if (!isObject(this.prototype)) return O instanceof this;
		  // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:
		  while (O = getPrototypeOf(O)) if (this.prototype === O) return true;
		  return false;
		} });
	
	
	/***/ },
	/* 345 */
	/***/ function(module, exports, __webpack_require__) {
	
		var $export = __webpack_require__(273);
		var $parseInt = __webpack_require__(346);
		// 18.2.5 parseInt(string, radix)
		$export($export.G + $export.F * (parseInt != $parseInt), { parseInt: $parseInt });
	
	
	/***/ },
	/* 346 */
	/***/ function(module, exports, __webpack_require__) {
	
		var $parseInt = __webpack_require__(269).parseInt;
		var $trim = __webpack_require__(347).trim;
		var ws = __webpack_require__(348);
		var hex = /^[-+]?0[xX]/;
	
		module.exports = $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22 ? function parseInt(str, radix) {
		  var string = $trim(String(str), 3);
		  return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));
		} : $parseInt;
	
	
	/***/ },
	/* 347 */
	/***/ function(module, exports, __webpack_require__) {
	
		var $export = __webpack_require__(273);
		var defined = __webpack_require__(300);
		var fails = __webpack_require__(272);
		var spaces = __webpack_require__(348);
		var space = '[' + spaces + ']';
		var non = '\u200b\u0085';
		var ltrim = RegExp('^' + space + space + '*');
		var rtrim = RegExp(space + space + '*$');
	
		var exporter = function (KEY, exec, ALIAS) {
		  var exp = {};
		  var FORCE = fails(function () {
		    return !!spaces[KEY]() || non[KEY]() != non;
		  });
		  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];
		  if (ALIAS) exp[ALIAS] = fn;
		  $export($export.P + $export.F * FORCE, 'String', exp);
		};
	
		// 1 -> String#trimLeft
		// 2 -> String#trimRight
		// 3 -> String#trim
		var trim = exporter.trim = function (string, TYPE) {
		  string = String(defined(string));
		  if (TYPE & 1) string = string.replace(ltrim, '');
		  if (TYPE & 2) string = string.replace(rtrim, '');
		  return string;
		};
	
		module.exports = exporter;
	
	
	/***/ },
	/* 348 */
	/***/ function(module, exports) {
	
		module.exports = '\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003' +
		  '\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';
	
	
	/***/ },
	/* 349 */
	/***/ function(module, exports, __webpack_require__) {
	
		var $export = __webpack_require__(273);
		var $parseFloat = __webpack_require__(350);
		// 18.2.4 parseFloat(string)
		$export($export.G + $export.F * (parseFloat != $parseFloat), { parseFloat: $parseFloat });
	
	
	/***/ },
	/* 350 */
	/***/ function(module, exports, __webpack_require__) {
	
		var $parseFloat = __webpack_require__(269).parseFloat;
		var $trim = __webpack_require__(347).trim;
	
		module.exports = 1 / $parseFloat(__webpack_require__(348) + '-0') !== -Infinity ? function parseFloat(str) {
		  var string = $trim(String(str), 3);
		  var result = $parseFloat(string);
		  return result === 0 && string.charAt(0) == '-' ? -0 : result;
		} : $parseFloat;
	
	
	/***/ },
	/* 351 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		var global = __webpack_require__(269);
		var has = __webpack_require__(270);
		var cof = __webpack_require__(299);
		var inheritIfRequired = __webpack_require__(352);
		var toPrimitive = __webpack_require__(281);
		var fails = __webpack_require__(272);
		var gOPN = __webpack_require__(314).f;
		var gOPD = __webpack_require__(315).f;
		var dP = __webpack_require__(276).f;
		var $trim = __webpack_require__(347).trim;
		var NUMBER = 'Number';
		var $Number = global[NUMBER];
		var Base = $Number;
		var proto = $Number.prototype;
		// Opera ~12 has broken Object#toString
		var BROKEN_COF = cof(__webpack_require__(310)(proto)) == NUMBER;
		var TRIM = 'trim' in String.prototype;
	
		// 7.1.3 ToNumber(argument)
		var toNumber = function (argument) {
		  var it = toPrimitive(argument, false);
		  if (typeof it == 'string' && it.length > 2) {
		    it = TRIM ? it.trim() : $trim(it, 3);
		    var first = it.charCodeAt(0);
		    var third, radix, maxCode;
		    if (first === 43 || first === 45) {
		      third = it.charCodeAt(2);
		      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix
		    } else if (first === 48) {
		      switch (it.charCodeAt(1)) {
		        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i
		        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i
		        default: return +it;
		      }
		      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {
		        code = digits.charCodeAt(i);
		        // parseInt parses a string to a first unavailable symbol
		        // but ToNumber should return NaN if a string contains unavailable symbols
		        if (code < 48 || code > maxCode) return NaN;
		      } return parseInt(digits, radix);
		    }
		  } return +it;
		};
	
		if (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {
		  $Number = function Number(value) {
		    var it = arguments.length < 1 ? 0 : value;
		    var that = this;
		    return that instanceof $Number
		      // check on 1..constructor(foo) case
		      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)
		        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);
		  };
		  for (var keys = __webpack_require__(271) ? gOPN(Base) : (
		    // ES3:
		    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +
		    // ES6 (in case, if modules with ES6 Number statics required before):
		    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +
		    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'
		  ).split(','), j = 0, key; keys.length > j; j++) {
		    if (has(Base, key = keys[j]) && !has($Number, key)) {
		      dP($Number, key, gOPD(Base, key));
		    }
		  }
		  $Number.prototype = proto;
		  proto.constructor = $Number;
		  __webpack_require__(283)(global, NUMBER, $Number);
		}
	
	
	/***/ },
	/* 352 */
	/***/ function(module, exports, __webpack_require__) {
	
		var isObject = __webpack_require__(278);
		var setPrototypeOf = __webpack_require__(337).set;
		module.exports = function (that, target, C) {
		  var S = target.constructor;
		  var P;
		  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {
		    setPrototypeOf(that, P);
		  } return that;
		};
	
	
	/***/ },
	/* 353 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		var $export = __webpack_require__(273);
		var toInteger = __webpack_require__(303);
		var aNumberValue = __webpack_require__(354);
		var repeat = __webpack_require__(355);
		var $toFixed = 1.0.toFixed;
		var floor = Math.floor;
		var data = [0, 0, 0, 0, 0, 0];
		var ERROR = 'Number.toFixed: incorrect invocation!';
		var ZERO = '0';
	
		var multiply = function (n, c) {
		  var i = -1;
		  var c2 = c;
		  while (++i < 6) {
		    c2 += n * data[i];
		    data[i] = c2 % 1e7;
		    c2 = floor(c2 / 1e7);
		  }
		};
		var divide = function (n) {
		  var i = 6;
		  var c = 0;
		  while (--i >= 0) {
		    c += data[i];
		    data[i] = floor(c / n);
		    c = (c % n) * 1e7;
		  }
		};
		var numToString = function () {
		  var i = 6;
		  var s = '';
		  while (--i >= 0) {
		    if (s !== '' || i === 0 || data[i] !== 0) {
		      var t = String(data[i]);
		      s = s === '' ? t : s + repeat.call(ZERO, 7 - t.length) + t;
		    }
		  } return s;
		};
		var pow = function (x, n, acc) {
		  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);
		};
		var log = function (x) {
		  var n = 0;
		  var x2 = x;
		  while (x2 >= 4096) {
		    n += 12;
		    x2 /= 4096;
		  }
		  while (x2 >= 2) {
		    n += 1;
		    x2 /= 2;
		  } return n;
		};
	
		$export($export.P + $export.F * (!!$toFixed && (
		  0.00008.toFixed(3) !== '0.000' ||
		  0.9.toFixed(0) !== '1' ||
		  1.255.toFixed(2) !== '1.25' ||
		  1000000000000000128.0.toFixed(0) !== '1000000000000000128'
		) || !__webpack_require__(272)(function () {
		  // V8 ~ Android 4.3-
		  $toFixed.call({});
		})), 'Number', {
		  toFixed: function toFixed(fractionDigits) {
		    var x = aNumberValue(this, ERROR);
		    var f = toInteger(fractionDigits);
		    var s = '';
		    var m = ZERO;
		    var e, z, j, k;
		    if (f < 0 || f > 20) throw RangeError(ERROR);
		    // eslint-disable-next-line no-self-compare
		    if (x != x) return 'NaN';
		    if (x <= -1e21 || x >= 1e21) return String(x);
		    if (x < 0) {
		      s = '-';
		      x = -x;
		    }
		    if (x > 1e-21) {
		      e = log(x * pow(2, 69, 1)) - 69;
		      z = e < 0 ? x * pow(2, -e, 1) : x / pow(2, e, 1);
		      z *= 0x10000000000000;
		      e = 52 - e;
		      if (e > 0) {
		        multiply(0, z);
		        j = f;
		        while (j >= 7) {
		          multiply(1e7, 0);
		          j -= 7;
		        }
		        multiply(pow(10, j, 1), 0);
		        j = e - 1;
		        while (j >= 23) {
		          divide(1 << 23);
		          j -= 23;
		        }
		        divide(1 << j);
		        multiply(1, 1);
		        divide(2);
		        m = numToString();
		      } else {
		        multiply(0, z);
		        multiply(1 << -e, 0);
		        m = numToString() + repeat.call(ZERO, f);
		      }
		    }
		    if (f > 0) {
		      k = m.length;
		      m = s + (k <= f ? '0.' + repeat.call(ZERO, f - k) + m : m.slice(0, k - f) + '.' + m.slice(k - f));
		    } else {
		      m = s + m;
		    } return m;
		  }
		});
	
	
	/***/ },
	/* 354 */
	/***/ function(module, exports, __webpack_require__) {
	
		var cof = __webpack_require__(299);
		module.exports = function (it, msg) {
		  if (typeof it != 'number' && cof(it) != 'Number') throw TypeError(msg);
		  return +it;
		};
	
	
	/***/ },
	/* 355 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		var toInteger = __webpack_require__(303);
		var defined = __webpack_require__(300);
	
		module.exports = function repeat(count) {
		  var str = String(defined(this));
		  var res = '';
		  var n = toInteger(count);
		  if (n < 0 || n == Infinity) throw RangeError("Count can't be negative");
		  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;
		  return res;
		};
	
	
	/***/ },
	/* 356 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		var $export = __webpack_require__(273);
		var $fails = __webpack_require__(272);
		var aNumberValue = __webpack_require__(354);
		var $toPrecision = 1.0.toPrecision;
	
		$export($export.P + $export.F * ($fails(function () {
		  // IE7-
		  return $toPrecision.call(1, undefined) !== '1';
		}) || !$fails(function () {
		  // V8 ~ Android 4.3-
		  $toPrecision.call({});
		})), 'Number', {
		  toPrecision: function toPrecision(precision) {
		    var that = aNumberValue(this, 'Number#toPrecision: incorrect invocation!');
		    return precision === undefined ? $toPrecision.call(that) : $toPrecision.call(that, precision);
		  }
		});
	
	
	/***/ },
	/* 357 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 20.1.2.1 Number.EPSILON
		var $export = __webpack_require__(273);
	
		$export($export.S, 'Number', { EPSILON: Math.pow(2, -52) });
	
	
	/***/ },
	/* 358 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 20.1.2.2 Number.isFinite(number)
		var $export = __webpack_require__(273);
		var _isFinite = __webpack_require__(269).isFinite;
	
		$export($export.S, 'Number', {
		  isFinite: function isFinite(it) {
		    return typeof it == 'number' && _isFinite(it);
		  }
		});
	
	
	/***/ },
	/* 359 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 20.1.2.3 Number.isInteger(number)
		var $export = __webpack_require__(273);
	
		$export($export.S, 'Number', { isInteger: __webpack_require__(360) });
	
	
	/***/ },
	/* 360 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 20.1.2.3 Number.isInteger(number)
		var isObject = __webpack_require__(278);
		var floor = Math.floor;
		module.exports = function isInteger(it) {
		  return !isObject(it) && isFinite(it) && floor(it) === it;
		};
	
	
	/***/ },
	/* 361 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 20.1.2.4 Number.isNaN(number)
		var $export = __webpack_require__(273);
	
		$export($export.S, 'Number', {
		  isNaN: function isNaN(number) {
		    // eslint-disable-next-line no-self-compare
		    return number != number;
		  }
		});
	
	
	/***/ },
	/* 362 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 20.1.2.5 Number.isSafeInteger(number)
		var $export = __webpack_require__(273);
		var isInteger = __webpack_require__(360);
		var abs = Math.abs;
	
		$export($export.S, 'Number', {
		  isSafeInteger: function isSafeInteger(number) {
		    return isInteger(number) && abs(number) <= 0x1fffffffffffff;
		  }
		});
	
	
	/***/ },
	/* 363 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 20.1.2.6 Number.MAX_SAFE_INTEGER
		var $export = __webpack_require__(273);
	
		$export($export.S, 'Number', { MAX_SAFE_INTEGER: 0x1fffffffffffff });
	
	
	/***/ },
	/* 364 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 20.1.2.10 Number.MIN_SAFE_INTEGER
		var $export = __webpack_require__(273);
	
		$export($export.S, 'Number', { MIN_SAFE_INTEGER: -0x1fffffffffffff });
	
	
	/***/ },
	/* 365 */
	/***/ function(module, exports, __webpack_require__) {
	
		var $export = __webpack_require__(273);
		var $parseFloat = __webpack_require__(350);
		// 20.1.2.12 Number.parseFloat(string)
		$export($export.S + $export.F * (Number.parseFloat != $parseFloat), 'Number', { parseFloat: $parseFloat });
	
	
	/***/ },
	/* 366 */
	/***/ function(module, exports, __webpack_require__) {
	
		var $export = __webpack_require__(273);
		var $parseInt = __webpack_require__(346);
		// 20.1.2.13 Number.parseInt(string, radix)
		$export($export.S + $export.F * (Number.parseInt != $parseInt), 'Number', { parseInt: $parseInt });
	
	
	/***/ },
	/* 367 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 20.2.2.3 Math.acosh(x)
		var $export = __webpack_require__(273);
		var log1p = __webpack_require__(368);
		var sqrt = Math.sqrt;
		var $acosh = Math.acosh;
	
		$export($export.S + $export.F * !($acosh
		  // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509
		  && Math.floor($acosh(Number.MAX_VALUE)) == 710
		  // Tor Browser bug: Math.acosh(Infinity) -> NaN
		  && $acosh(Infinity) == Infinity
		), 'Math', {
		  acosh: function acosh(x) {
		    return (x = +x) < 1 ? NaN : x > 94906265.62425156
		      ? Math.log(x) + Math.LN2
		      : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));
		  }
		});
	
	
	/***/ },
	/* 368 */
	/***/ function(module, exports) {
	
		// 20.2.2.20 Math.log1p(x)
		module.exports = Math.log1p || function log1p(x) {
		  return (x = +x) > -1e-8 && x < 1e-8 ? x - x * x / 2 : Math.log(1 + x);
		};
	
	
	/***/ },
	/* 369 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 20.2.2.5 Math.asinh(x)
		var $export = __webpack_require__(273);
		var $asinh = Math.asinh;
	
		function asinh(x) {
		  return !isFinite(x = +x) || x == 0 ? x : x < 0 ? -asinh(-x) : Math.log(x + Math.sqrt(x * x + 1));
		}
	
		// Tor Browser bug: Math.asinh(0) -> -0
		$export($export.S + $export.F * !($asinh && 1 / $asinh(0) > 0), 'Math', { asinh: asinh });
	
	
	/***/ },
	/* 370 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 20.2.2.7 Math.atanh(x)
		var $export = __webpack_require__(273);
		var $atanh = Math.atanh;
	
		// Tor Browser bug: Math.atanh(-0) -> 0
		$export($export.S + $export.F * !($atanh && 1 / $atanh(-0) < 0), 'Math', {
		  atanh: function atanh(x) {
		    return (x = +x) == 0 ? x : Math.log((1 + x) / (1 - x)) / 2;
		  }
		});
	
	
	/***/ },
	/* 371 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 20.2.2.9 Math.cbrt(x)
		var $export = __webpack_require__(273);
		var sign = __webpack_require__(372);
	
		$export($export.S, 'Math', {
		  cbrt: function cbrt(x) {
		    return sign(x = +x) * Math.pow(Math.abs(x), 1 / 3);
		  }
		});
	
	
	/***/ },
	/* 372 */
	/***/ function(module, exports) {
	
		// 20.2.2.28 Math.sign(x)
		module.exports = Math.sign || function sign(x) {
		  // eslint-disable-next-line no-self-compare
		  return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;
		};
	
	
	/***/ },
	/* 373 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 20.2.2.11 Math.clz32(x)
		var $export = __webpack_require__(273);
	
		$export($export.S, 'Math', {
		  clz32: function clz32(x) {
		    return (x >>>= 0) ? 31 - Math.floor(Math.log(x + 0.5) * Math.LOG2E) : 32;
		  }
		});
	
	
	/***/ },
	/* 374 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 20.2.2.12 Math.cosh(x)
		var $export = __webpack_require__(273);
		var exp = Math.exp;
	
		$export($export.S, 'Math', {
		  cosh: function cosh(x) {
		    return (exp(x = +x) + exp(-x)) / 2;
		  }
		});
	
	
	/***/ },
	/* 375 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 20.2.2.14 Math.expm1(x)
		var $export = __webpack_require__(273);
		var $expm1 = __webpack_require__(376);
	
		$export($export.S + $export.F * ($expm1 != Math.expm1), 'Math', { expm1: $expm1 });
	
	
	/***/ },
	/* 376 */
	/***/ function(module, exports) {
	
		// 20.2.2.14 Math.expm1(x)
		var $expm1 = Math.expm1;
		module.exports = (!$expm1
		  // Old FF bug
		  || $expm1(10) > 22025.465794806719 || $expm1(10) < 22025.4657948067165168
		  // Tor Browser bug
		  || $expm1(-2e-17) != -2e-17
		) ? function expm1(x) {
		  return (x = +x) == 0 ? x : x > -1e-6 && x < 1e-6 ? x + x * x / 2 : Math.exp(x) - 1;
		} : $expm1;
	
	
	/***/ },
	/* 377 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 20.2.2.16 Math.fround(x)
		var $export = __webpack_require__(273);
	
		$export($export.S, 'Math', { fround: __webpack_require__(378) });
	
	
	/***/ },
	/* 378 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 20.2.2.16 Math.fround(x)
		var sign = __webpack_require__(372);
		var pow = Math.pow;
		var EPSILON = pow(2, -52);
		var EPSILON32 = pow(2, -23);
		var MAX32 = pow(2, 127) * (2 - EPSILON32);
		var MIN32 = pow(2, -126);
	
		var roundTiesToEven = function (n) {
		  return n + 1 / EPSILON - 1 / EPSILON;
		};
	
		module.exports = Math.fround || function fround(x) {
		  var $abs = Math.abs(x);
		  var $sign = sign(x);
		  var a, result;
		  if ($abs < MIN32) return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;
		  a = (1 + EPSILON32 / EPSILON) * $abs;
		  result = a - (a - $abs);
		  // eslint-disable-next-line no-self-compare
		  if (result > MAX32 || result != result) return $sign * Infinity;
		  return $sign * result;
		};
	
	
	/***/ },
	/* 379 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 20.2.2.17 Math.hypot([value1[, value2[, … ]]])
		var $export = __webpack_require__(273);
		var abs = Math.abs;
	
		$export($export.S, 'Math', {
		  hypot: function hypot(value1, value2) { // eslint-disable-line no-unused-vars
		    var sum = 0;
		    var i = 0;
		    var aLen = arguments.length;
		    var larg = 0;
		    var arg, div;
		    while (i < aLen) {
		      arg = abs(arguments[i++]);
		      if (larg < arg) {
		        div = larg / arg;
		        sum = sum * div * div + 1;
		        larg = arg;
		      } else if (arg > 0) {
		        div = arg / larg;
		        sum += div * div;
		      } else sum += arg;
		    }
		    return larg === Infinity ? Infinity : larg * Math.sqrt(sum);
		  }
		});
	
	
	/***/ },
	/* 380 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 20.2.2.18 Math.imul(x, y)
		var $export = __webpack_require__(273);
		var $imul = Math.imul;
	
		// some WebKit versions fails with big numbers, some has wrong arity
		$export($export.S + $export.F * __webpack_require__(272)(function () {
		  return $imul(0xffffffff, 5) != -5 || $imul.length != 2;
		}), 'Math', {
		  imul: function imul(x, y) {
		    var UINT16 = 0xffff;
		    var xn = +x;
		    var yn = +y;
		    var xl = UINT16 & xn;
		    var yl = UINT16 & yn;
		    return 0 | xl * yl + ((UINT16 & xn >>> 16) * yl + xl * (UINT16 & yn >>> 16) << 16 >>> 0);
		  }
		});
	
	
	/***/ },
	/* 381 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 20.2.2.21 Math.log10(x)
		var $export = __webpack_require__(273);
	
		$export($export.S, 'Math', {
		  log10: function log10(x) {
		    return Math.log(x) * Math.LOG10E;
		  }
		});
	
	
	/***/ },
	/* 382 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 20.2.2.20 Math.log1p(x)
		var $export = __webpack_require__(273);
	
		$export($export.S, 'Math', { log1p: __webpack_require__(368) });
	
	
	/***/ },
	/* 383 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 20.2.2.22 Math.log2(x)
		var $export = __webpack_require__(273);
	
		$export($export.S, 'Math', {
		  log2: function log2(x) {
		    return Math.log(x) / Math.LN2;
		  }
		});
	
	
	/***/ },
	/* 384 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 20.2.2.28 Math.sign(x)
		var $export = __webpack_require__(273);
	
		$export($export.S, 'Math', { sign: __webpack_require__(372) });
	
	
	/***/ },
	/* 385 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 20.2.2.30 Math.sinh(x)
		var $export = __webpack_require__(273);
		var expm1 = __webpack_require__(376);
		var exp = Math.exp;
	
		// V8 near Chromium 38 has a problem with very small numbers
		$export($export.S + $export.F * __webpack_require__(272)(function () {
		  return !Math.sinh(-2e-17) != -2e-17;
		}), 'Math', {
		  sinh: function sinh(x) {
		    return Math.abs(x = +x) < 1
		      ? (expm1(x) - expm1(-x)) / 2
		      : (exp(x - 1) - exp(-x - 1)) * (Math.E / 2);
		  }
		});
	
	
	/***/ },
	/* 386 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 20.2.2.33 Math.tanh(x)
		var $export = __webpack_require__(273);
		var expm1 = __webpack_require__(376);
		var exp = Math.exp;
	
		$export($export.S, 'Math', {
		  tanh: function tanh(x) {
		    var a = expm1(x = +x);
		    var b = expm1(-x);
		    return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) / (exp(x) + exp(-x));
		  }
		});
	
	
	/***/ },
	/* 387 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 20.2.2.34 Math.trunc(x)
		var $export = __webpack_require__(273);
	
		$export($export.S, 'Math', {
		  trunc: function trunc(it) {
		    return (it > 0 ? Math.floor : Math.ceil)(it);
		  }
		});
	
	
	/***/ },
	/* 388 */
	/***/ function(module, exports, __webpack_require__) {
	
		var $export = __webpack_require__(273);
		var toAbsoluteIndex = __webpack_require__(304);
		var fromCharCode = String.fromCharCode;
		var $fromCodePoint = String.fromCodePoint;
	
		// length should be 1, old FF problem
		$export($export.S + $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {
		  // 21.1.2.2 String.fromCodePoint(...codePoints)
		  fromCodePoint: function fromCodePoint(x) { // eslint-disable-line no-unused-vars
		    var res = [];
		    var aLen = arguments.length;
		    var i = 0;
		    var code;
		    while (aLen > i) {
		      code = +arguments[i++];
		      if (toAbsoluteIndex(code, 0x10ffff) !== code) throw RangeError(code + ' is not a valid code point');
		      res.push(code < 0x10000
		        ? fromCharCode(code)
		        : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00)
		      );
		    } return res.join('');
		  }
		});
	
	
	/***/ },
	/* 389 */
	/***/ function(module, exports, __webpack_require__) {
	
		var $export = __webpack_require__(273);
		var toIObject = __webpack_require__(297);
		var toLength = __webpack_require__(302);
	
		$export($export.S, 'String', {
		  // 21.1.2.4 String.raw(callSite, ...substitutions)
		  raw: function raw(callSite) {
		    var tpl = toIObject(callSite.raw);
		    var len = toLength(tpl.length);
		    var aLen = arguments.length;
		    var res = [];
		    var i = 0;
		    while (len > i) {
		      res.push(String(tpl[i++]));
		      if (i < aLen) res.push(String(arguments[i]));
		    } return res.join('');
		  }
		});
	
	
	/***/ },
	/* 390 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		// 21.1.3.25 String.prototype.trim()
		__webpack_require__(347)('trim', function ($trim) {
		  return function trim() {
		    return $trim(this, 3);
		  };
		});
	
	
	/***/ },
	/* 391 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		var $at = __webpack_require__(392)(true);
	
		// 21.1.3.27 String.prototype[@@iterator]()
		__webpack_require__(393)(String, 'String', function (iterated) {
		  this._t = String(iterated); // target
		  this._i = 0;                // next index
		// 21.1.5.2.1 %StringIteratorPrototype%.next()
		}, function () {
		  var O = this._t;
		  var index = this._i;
		  var point;
		  if (index >= O.length) return { value: undefined, done: true };
		  point = $at(O, index);
		  this._i += point.length;
		  return { value: point, done: false };
		});
	
	
	/***/ },
	/* 392 */
	/***/ function(module, exports, __webpack_require__) {
	
		var toInteger = __webpack_require__(303);
		var defined = __webpack_require__(300);
		// true  -> String#at
		// false -> String#codePointAt
		module.exports = function (TO_STRING) {
		  return function (that, pos) {
		    var s = String(defined(that));
		    var i = toInteger(pos);
		    var l = s.length;
		    var a, b;
		    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
		    a = s.charCodeAt(i);
		    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
		      ? TO_STRING ? s.charAt(i) : a
		      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
		  };
		};
	
	
	/***/ },
	/* 393 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		var LIBRARY = __webpack_require__(293);
		var $export = __webpack_require__(273);
		var redefine = __webpack_require__(283);
		var hide = __webpack_require__(275);
		var has = __webpack_require__(270);
		var Iterators = __webpack_require__(394);
		var $iterCreate = __webpack_require__(395);
		var setToStringTag = __webpack_require__(289);
		var getPrototypeOf = __webpack_require__(323);
		var ITERATOR = __webpack_require__(290)('iterator');
		var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
		var FF_ITERATOR = '@@iterator';
		var KEYS = 'keys';
		var VALUES = 'values';
	
		var returnThis = function () { return this; };
	
		module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
		  $iterCreate(Constructor, NAME, next);
		  var getMethod = function (kind) {
		    if (!BUGGY && kind in proto) return proto[kind];
		    switch (kind) {
		      case KEYS: return function keys() { return new Constructor(this, kind); };
		      case VALUES: return function values() { return new Constructor(this, kind); };
		    } return function entries() { return new Constructor(this, kind); };
		  };
		  var TAG = NAME + ' Iterator';
		  var DEF_VALUES = DEFAULT == VALUES;
		  var VALUES_BUG = false;
		  var proto = Base.prototype;
		  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
		  var $default = $native || getMethod(DEFAULT);
		  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
		  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
		  var methods, key, IteratorPrototype;
		  // Fix native
		  if ($anyNative) {
		    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
		    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
		      // Set @@toStringTag to native iterators
		      setToStringTag(IteratorPrototype, TAG, true);
		      // fix for some old engines
		      if (!LIBRARY && !has(IteratorPrototype, ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);
		    }
		  }
		  // fix Array#{values, @@iterator}.name in V8 / FF
		  if (DEF_VALUES && $native && $native.name !== VALUES) {
		    VALUES_BUG = true;
		    $default = function values() { return $native.call(this); };
		  }
		  // Define iterator
		  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
		    hide(proto, ITERATOR, $default);
		  }
		  // Plug for library
		  Iterators[NAME] = $default;
		  Iterators[TAG] = returnThis;
		  if (DEFAULT) {
		    methods = {
		      values: DEF_VALUES ? $default : getMethod(VALUES),
		      keys: IS_SET ? $default : getMethod(KEYS),
		      entries: $entries
		    };
		    if (FORCED) for (key in methods) {
		      if (!(key in proto)) redefine(proto, key, methods[key]);
		    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
		  }
		  return methods;
		};
	
	
	/***/ },
	/* 394 */
	/***/ function(module, exports) {
	
		module.exports = {};
	
	
	/***/ },
	/* 395 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		var create = __webpack_require__(310);
		var descriptor = __webpack_require__(282);
		var setToStringTag = __webpack_require__(289);
		var IteratorPrototype = {};
	
		// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
		__webpack_require__(275)(IteratorPrototype, __webpack_require__(290)('iterator'), function () { return this; });
	
		module.exports = function (Constructor, NAME, next) {
		  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
		  setToStringTag(Constructor, NAME + ' Iterator');
		};
	
	
	/***/ },
	/* 396 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		var $export = __webpack_require__(273);
		var $at = __webpack_require__(392)(false);
		$export($export.P, 'String', {
		  // 21.1.3.3 String.prototype.codePointAt(pos)
		  codePointAt: function codePointAt(pos) {
		    return $at(this, pos);
		  }
		});
	
	
	/***/ },
	/* 397 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])
		'use strict';
		var $export = __webpack_require__(273);
		var toLength = __webpack_require__(302);
		var context = __webpack_require__(398);
		var ENDS_WITH = 'endsWith';
		var $endsWith = ''[ENDS_WITH];
	
		$export($export.P + $export.F * __webpack_require__(400)(ENDS_WITH), 'String', {
		  endsWith: function endsWith(searchString /* , endPosition = @length */) {
		    var that = context(this, searchString, ENDS_WITH);
		    var endPosition = arguments.length > 1 ? arguments[1] : undefined;
		    var len = toLength(that.length);
		    var end = endPosition === undefined ? len : Math.min(toLength(endPosition), len);
		    var search = String(searchString);
		    return $endsWith
		      ? $endsWith.call(that, search, end)
		      : that.slice(end - search.length, end) === search;
		  }
		});
	
	
	/***/ },
	/* 398 */
	/***/ function(module, exports, __webpack_require__) {
	
		// helper for String#{startsWith, endsWith, includes}
		var isRegExp = __webpack_require__(399);
		var defined = __webpack_require__(300);
	
		module.exports = function (that, searchString, NAME) {
		  if (isRegExp(searchString)) throw TypeError('String#' + NAME + " doesn't accept regex!");
		  return String(defined(that));
		};
	
	
	/***/ },
	/* 399 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 7.2.8 IsRegExp(argument)
		var isObject = __webpack_require__(278);
		var cof = __webpack_require__(299);
		var MATCH = __webpack_require__(290)('match');
		module.exports = function (it) {
		  var isRegExp;
		  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');
		};
	
	
	/***/ },
	/* 400 */
	/***/ function(module, exports, __webpack_require__) {
	
		var MATCH = __webpack_require__(290)('match');
		module.exports = function (KEY) {
		  var re = /./;
		  try {
		    '/./'[KEY](re);
		  } catch (e) {
		    try {
		      re[MATCH] = false;
		      return !'/./'[KEY](re);
		    } catch (f) { /* empty */ }
		  } return true;
		};
	
	
	/***/ },
	/* 401 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 21.1.3.7 String.prototype.includes(searchString, position = 0)
		'use strict';
		var $export = __webpack_require__(273);
		var context = __webpack_require__(398);
		var INCLUDES = 'includes';
	
		$export($export.P + $export.F * __webpack_require__(400)(INCLUDES), 'String', {
		  includes: function includes(searchString /* , position = 0 */) {
		    return !!~context(this, searchString, INCLUDES)
		      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);
		  }
		});
	
	
	/***/ },
	/* 402 */
	/***/ function(module, exports, __webpack_require__) {
	
		var $export = __webpack_require__(273);
	
		$export($export.P, 'String', {
		  // 21.1.3.13 String.prototype.repeat(count)
		  repeat: __webpack_require__(355)
		});
	
	
	/***/ },
	/* 403 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 21.1.3.18 String.prototype.startsWith(searchString [, position ])
		'use strict';
		var $export = __webpack_require__(273);
		var toLength = __webpack_require__(302);
		var context = __webpack_require__(398);
		var STARTS_WITH = 'startsWith';
		var $startsWith = ''[STARTS_WITH];
	
		$export($export.P + $export.F * __webpack_require__(400)(STARTS_WITH), 'String', {
		  startsWith: function startsWith(searchString /* , position = 0 */) {
		    var that = context(this, searchString, STARTS_WITH);
		    var index = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));
		    var search = String(searchString);
		    return $startsWith
		      ? $startsWith.call(that, search, index)
		      : that.slice(index, index + search.length) === search;
		  }
		});
	
	
	/***/ },
	/* 404 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		// B.2.3.2 String.prototype.anchor(name)
		__webpack_require__(405)('anchor', function (createHTML) {
		  return function anchor(name) {
		    return createHTML(this, 'a', 'name', name);
		  };
		});
	
	
	/***/ },
	/* 405 */
	/***/ function(module, exports, __webpack_require__) {
	
		var $export = __webpack_require__(273);
		var fails = __webpack_require__(272);
		var defined = __webpack_require__(300);
		var quot = /"/g;
		// B.2.3.2.1 CreateHTML(string, tag, attribute, value)
		var createHTML = function (string, tag, attribute, value) {
		  var S = String(defined(string));
		  var p1 = '<' + tag;
		  if (attribute !== '') p1 += ' ' + attribute + '="' + String(value).replace(quot, '&quot;') + '"';
		  return p1 + '>' + S + '</' + tag + '>';
		};
		module.exports = function (NAME, exec) {
		  var O = {};
		  O[NAME] = exec(createHTML);
		  $export($export.P + $export.F * fails(function () {
		    var test = ''[NAME]('"');
		    return test !== test.toLowerCase() || test.split('"').length > 3;
		  }), 'String', O);
		};
	
	
	/***/ },
	/* 406 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		// B.2.3.3 String.prototype.big()
		__webpack_require__(405)('big', function (createHTML) {
		  return function big() {
		    return createHTML(this, 'big', '', '');
		  };
		});
	
	
	/***/ },
	/* 407 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		// B.2.3.4 String.prototype.blink()
		__webpack_require__(405)('blink', function (createHTML) {
		  return function blink() {
		    return createHTML(this, 'blink', '', '');
		  };
		});
	
	
	/***/ },
	/* 408 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		// B.2.3.5 String.prototype.bold()
		__webpack_require__(405)('bold', function (createHTML) {
		  return function bold() {
		    return createHTML(this, 'b', '', '');
		  };
		});
	
	
	/***/ },
	/* 409 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		// B.2.3.6 String.prototype.fixed()
		__webpack_require__(405)('fixed', function (createHTML) {
		  return function fixed() {
		    return createHTML(this, 'tt', '', '');
		  };
		});
	
	
	/***/ },
	/* 410 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		// B.2.3.7 String.prototype.fontcolor(color)
		__webpack_require__(405)('fontcolor', function (createHTML) {
		  return function fontcolor(color) {
		    return createHTML(this, 'font', 'color', color);
		  };
		});
	
	
	/***/ },
	/* 411 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		// B.2.3.8 String.prototype.fontsize(size)
		__webpack_require__(405)('fontsize', function (createHTML) {
		  return function fontsize(size) {
		    return createHTML(this, 'font', 'size', size);
		  };
		});
	
	
	/***/ },
	/* 412 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		// B.2.3.9 String.prototype.italics()
		__webpack_require__(405)('italics', function (createHTML) {
		  return function italics() {
		    return createHTML(this, 'i', '', '');
		  };
		});
	
	
	/***/ },
	/* 413 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		// B.2.3.10 String.prototype.link(url)
		__webpack_require__(405)('link', function (createHTML) {
		  return function link(url) {
		    return createHTML(this, 'a', 'href', url);
		  };
		});
	
	
	/***/ },
	/* 414 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		// B.2.3.11 String.prototype.small()
		__webpack_require__(405)('small', function (createHTML) {
		  return function small() {
		    return createHTML(this, 'small', '', '');
		  };
		});
	
	
	/***/ },
	/* 415 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		// B.2.3.12 String.prototype.strike()
		__webpack_require__(405)('strike', function (createHTML) {
		  return function strike() {
		    return createHTML(this, 'strike', '', '');
		  };
		});
	
	
	/***/ },
	/* 416 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		// B.2.3.13 String.prototype.sub()
		__webpack_require__(405)('sub', function (createHTML) {
		  return function sub() {
		    return createHTML(this, 'sub', '', '');
		  };
		});
	
	
	/***/ },
	/* 417 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		// B.2.3.14 String.prototype.sup()
		__webpack_require__(405)('sup', function (createHTML) {
		  return function sup() {
		    return createHTML(this, 'sup', '', '');
		  };
		});
	
	
	/***/ },
	/* 418 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 20.3.3.1 / 15.9.4.4 Date.now()
		var $export = __webpack_require__(273);
	
		$export($export.S, 'Date', { now: function () { return new Date().getTime(); } });
	
	
	/***/ },
	/* 419 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		var $export = __webpack_require__(273);
		var toObject = __webpack_require__(322);
		var toPrimitive = __webpack_require__(281);
	
		$export($export.P + $export.F * __webpack_require__(272)(function () {
		  return new Date(NaN).toJSON() !== null
		    || Date.prototype.toJSON.call({ toISOString: function () { return 1; } }) !== 1;
		}), 'Date', {
		  // eslint-disable-next-line no-unused-vars
		  toJSON: function toJSON(key) {
		    var O = toObject(this);
		    var pv = toPrimitive(O);
		    return typeof pv == 'number' && !isFinite(pv) ? null : O.toISOString();
		  }
		});
	
	
	/***/ },
	/* 420 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()
		var $export = __webpack_require__(273);
		var toISOString = __webpack_require__(421);
	
		// PhantomJS / old WebKit has a broken implementations
		$export($export.P + $export.F * (Date.prototype.toISOString !== toISOString), 'Date', {
		  toISOString: toISOString
		});
	
	
	/***/ },
	/* 421 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()
		var fails = __webpack_require__(272);
		var getTime = Date.prototype.getTime;
		var $toISOString = Date.prototype.toISOString;
	
		var lz = function (num) {
		  return num > 9 ? num : '0' + num;
		};
	
		// PhantomJS / old WebKit has a broken implementations
		module.exports = (fails(function () {
		  return $toISOString.call(new Date(-5e13 - 1)) != '0385-07-25T07:06:39.999Z';
		}) || !fails(function () {
		  $toISOString.call(new Date(NaN));
		})) ? function toISOString() {
		  if (!isFinite(getTime.call(this))) throw RangeError('Invalid time value');
		  var d = this;
		  var y = d.getUTCFullYear();
		  var m = d.getUTCMilliseconds();
		  var s = y < 0 ? '-' : y > 9999 ? '+' : '';
		  return s + ('00000' + Math.abs(y)).slice(s ? -6 : -4) +
		    '-' + lz(d.getUTCMonth() + 1) + '-' + lz(d.getUTCDate()) +
		    'T' + lz(d.getUTCHours()) + ':' + lz(d.getUTCMinutes()) +
		    ':' + lz(d.getUTCSeconds()) + '.' + (m > 99 ? m : '0' + lz(m)) + 'Z';
		} : $toISOString;
	
	
	/***/ },
	/* 422 */
	/***/ function(module, exports, __webpack_require__) {
	
		var DateProto = Date.prototype;
		var INVALID_DATE = 'Invalid Date';
		var TO_STRING = 'toString';
		var $toString = DateProto[TO_STRING];
		var getTime = DateProto.getTime;
		if (new Date(NaN) + '' != INVALID_DATE) {
		  __webpack_require__(283)(DateProto, TO_STRING, function toString() {
		    var value = getTime.call(this);
		    // eslint-disable-next-line no-self-compare
		    return value === value ? $toString.call(this) : INVALID_DATE;
		  });
		}
	
	
	/***/ },
	/* 423 */
	/***/ function(module, exports, __webpack_require__) {
	
		var TO_PRIMITIVE = __webpack_require__(290)('toPrimitive');
		var proto = Date.prototype;
	
		if (!(TO_PRIMITIVE in proto)) __webpack_require__(275)(proto, TO_PRIMITIVE, __webpack_require__(424));
	
	
	/***/ },
	/* 424 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		var anObject = __webpack_require__(277);
		var toPrimitive = __webpack_require__(281);
		var NUMBER = 'number';
	
		module.exports = function (hint) {
		  if (hint !== 'string' && hint !== NUMBER && hint !== 'default') throw TypeError('Incorrect hint');
		  return toPrimitive(anObject(this), hint != NUMBER);
		};
	
	
	/***/ },
	/* 425 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)
		var $export = __webpack_require__(273);
	
		$export($export.S, 'Array', { isArray: __webpack_require__(309) });
	
	
	/***/ },
	/* 426 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		var ctx = __webpack_require__(285);
		var $export = __webpack_require__(273);
		var toObject = __webpack_require__(322);
		var call = __webpack_require__(427);
		var isArrayIter = __webpack_require__(428);
		var toLength = __webpack_require__(302);
		var createProperty = __webpack_require__(429);
		var getIterFn = __webpack_require__(430);
	
		$export($export.S + $export.F * !__webpack_require__(431)(function (iter) { Array.from(iter); }), 'Array', {
		  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
		  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
		    var O = toObject(arrayLike);
		    var C = typeof this == 'function' ? this : Array;
		    var aLen = arguments.length;
		    var mapfn = aLen > 1 ? arguments[1] : undefined;
		    var mapping = mapfn !== undefined;
		    var index = 0;
		    var iterFn = getIterFn(O);
		    var length, result, step, iterator;
		    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
		    // if object isn't iterable or it's array with default iterator - use simple case
		    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {
		      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {
		        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
		      }
		    } else {
		      length = toLength(O.length);
		      for (result = new C(length); length > index; index++) {
		        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
		      }
		    }
		    result.length = index;
		    return result;
		  }
		});
	
	
	/***/ },
	/* 427 */
	/***/ function(module, exports, __webpack_require__) {
	
		// call something on iterator step with safe closing on error
		var anObject = __webpack_require__(277);
		module.exports = function (iterator, fn, value, entries) {
		  try {
		    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
		  // 7.4.6 IteratorClose(iterator, completion)
		  } catch (e) {
		    var ret = iterator['return'];
		    if (ret !== undefined) anObject(ret.call(iterator));
		    throw e;
		  }
		};
	
	
	/***/ },
	/* 428 */
	/***/ function(module, exports, __webpack_require__) {
	
		// check on default Array iterator
		var Iterators = __webpack_require__(394);
		var ITERATOR = __webpack_require__(290)('iterator');
		var ArrayProto = Array.prototype;
	
		module.exports = function (it) {
		  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
		};
	
	
	/***/ },
	/* 429 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		var $defineProperty = __webpack_require__(276);
		var createDesc = __webpack_require__(282);
	
		module.exports = function (object, index, value) {
		  if (index in object) $defineProperty.f(object, index, createDesc(0, value));
		  else object[index] = value;
		};
	
	
	/***/ },
	/* 430 */
	/***/ function(module, exports, __webpack_require__) {
	
		var classof = __webpack_require__(339);
		var ITERATOR = __webpack_require__(290)('iterator');
		var Iterators = __webpack_require__(394);
		module.exports = __webpack_require__(274).getIteratorMethod = function (it) {
		  if (it != undefined) return it[ITERATOR]
		    || it['@@iterator']
		    || Iterators[classof(it)];
		};
	
	
	/***/ },
	/* 431 */
	/***/ function(module, exports, __webpack_require__) {
	
		var ITERATOR = __webpack_require__(290)('iterator');
		var SAFE_CLOSING = false;
	
		try {
		  var riter = [7][ITERATOR]();
		  riter['return'] = function () { SAFE_CLOSING = true; };
		  // eslint-disable-next-line no-throw-literal
		  Array.from(riter, function () { throw 2; });
		} catch (e) { /* empty */ }
	
		module.exports = function (exec, skipClosing) {
		  if (!skipClosing && !SAFE_CLOSING) return false;
		  var safe = false;
		  try {
		    var arr = [7];
		    var iter = arr[ITERATOR]();
		    iter.next = function () { return { done: safe = true }; };
		    arr[ITERATOR] = function () { return iter; };
		    exec(arr);
		  } catch (e) { /* empty */ }
		  return safe;
		};
	
	
	/***/ },
	/* 432 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		var $export = __webpack_require__(273);
		var createProperty = __webpack_require__(429);
	
		// WebKit Array.of isn't generic
		$export($export.S + $export.F * __webpack_require__(272)(function () {
		  function F() { /* empty */ }
		  return !(Array.of.call(F) instanceof F);
		}), 'Array', {
		  // 22.1.2.3 Array.of( ...items)
		  of: function of(/* ...args */) {
		    var index = 0;
		    var aLen = arguments.length;
		    var result = new (typeof this == 'function' ? this : Array)(aLen);
		    while (aLen > index) createProperty(result, index, arguments[index++]);
		    result.length = aLen;
		    return result;
		  }
		});
	
	
	/***/ },
	/* 433 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		// 22.1.3.13 Array.prototype.join(separator)
		var $export = __webpack_require__(273);
		var toIObject = __webpack_require__(297);
		var arrayJoin = [].join;
	
		// fallback for not array-like strings
		$export($export.P + $export.F * (__webpack_require__(298) != Object || !__webpack_require__(434)(arrayJoin)), 'Array', {
		  join: function join(separator) {
		    return arrayJoin.call(toIObject(this), separator === undefined ? ',' : separator);
		  }
		});
	
	
	/***/ },
	/* 434 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		var fails = __webpack_require__(272);
	
		module.exports = function (method, arg) {
		  return !!method && fails(function () {
		    // eslint-disable-next-line no-useless-call
		    arg ? method.call(null, function () { /* empty */ }, 1) : method.call(null);
		  });
		};
	
	
	/***/ },
	/* 435 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		var $export = __webpack_require__(273);
		var html = __webpack_require__(312);
		var cof = __webpack_require__(299);
		var toAbsoluteIndex = __webpack_require__(304);
		var toLength = __webpack_require__(302);
		var arraySlice = [].slice;
	
		// fallback for not array-like ES3 strings and DOM objects
		$export($export.P + $export.F * __webpack_require__(272)(function () {
		  if (html) arraySlice.call(html);
		}), 'Array', {
		  slice: function slice(begin, end) {
		    var len = toLength(this.length);
		    var klass = cof(this);
		    end = end === undefined ? len : end;
		    if (klass == 'Array') return arraySlice.call(this, begin, end);
		    var start = toAbsoluteIndex(begin, len);
		    var upTo = toAbsoluteIndex(end, len);
		    var size = toLength(upTo - start);
		    var cloned = Array(size);
		    var i = 0;
		    for (; i < size; i++) cloned[i] = klass == 'String'
		      ? this.charAt(start + i)
		      : this[start + i];
		    return cloned;
		  }
		});
	
	
	/***/ },
	/* 436 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		var $export = __webpack_require__(273);
		var aFunction = __webpack_require__(286);
		var toObject = __webpack_require__(322);
		var fails = __webpack_require__(272);
		var $sort = [].sort;
		var test = [1, 2, 3];
	
		$export($export.P + $export.F * (fails(function () {
		  // IE8-
		  test.sort(undefined);
		}) || !fails(function () {
		  // V8 bug
		  test.sort(null);
		  // Old WebKit
		}) || !__webpack_require__(434)($sort)), 'Array', {
		  // 22.1.3.25 Array.prototype.sort(comparefn)
		  sort: function sort(comparefn) {
		    return comparefn === undefined
		      ? $sort.call(toObject(this))
		      : $sort.call(toObject(this), aFunction(comparefn));
		  }
		});
	
	
	/***/ },
	/* 437 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		var $export = __webpack_require__(273);
		var $forEach = __webpack_require__(438)(0);
		var STRICT = __webpack_require__(434)([].forEach, true);
	
		$export($export.P + $export.F * !STRICT, 'Array', {
		  // 22.1.3.10 / 15.4.4.18 Array.prototype.forEach(callbackfn [, thisArg])
		  forEach: function forEach(callbackfn /* , thisArg */) {
		    return $forEach(this, callbackfn, arguments[1]);
		  }
		});
	
	
	/***/ },
	/* 438 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 0 -> Array#forEach
		// 1 -> Array#map
		// 2 -> Array#filter
		// 3 -> Array#some
		// 4 -> Array#every
		// 5 -> Array#find
		// 6 -> Array#findIndex
		var ctx = __webpack_require__(285);
		var IObject = __webpack_require__(298);
		var toObject = __webpack_require__(322);
		var toLength = __webpack_require__(302);
		var asc = __webpack_require__(439);
		module.exports = function (TYPE, $create) {
		  var IS_MAP = TYPE == 1;
		  var IS_FILTER = TYPE == 2;
		  var IS_SOME = TYPE == 3;
		  var IS_EVERY = TYPE == 4;
		  var IS_FIND_INDEX = TYPE == 6;
		  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
		  var create = $create || asc;
		  return function ($this, callbackfn, that) {
		    var O = toObject($this);
		    var self = IObject(O);
		    var f = ctx(callbackfn, that, 3);
		    var length = toLength(self.length);
		    var index = 0;
		    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;
		    var val, res;
		    for (;length > index; index++) if (NO_HOLES || index in self) {
		      val = self[index];
		      res = f(val, index, O);
		      if (TYPE) {
		        if (IS_MAP) result[index] = res;   // map
		        else if (res) switch (TYPE) {
		          case 3: return true;             // some
		          case 5: return val;              // find
		          case 6: return index;            // findIndex
		          case 2: result.push(val);        // filter
		        } else if (IS_EVERY) return false; // every
		      }
		    }
		    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
		  };
		};
	
	
	/***/ },
	/* 439 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 9.4.2.3 ArraySpeciesCreate(originalArray, length)
		var speciesConstructor = __webpack_require__(440);
	
		module.exports = function (original, length) {
		  return new (speciesConstructor(original))(length);
		};
	
	
	/***/ },
	/* 440 */
	/***/ function(module, exports, __webpack_require__) {
	
		var isObject = __webpack_require__(278);
		var isArray = __webpack_require__(309);
		var SPECIES = __webpack_require__(290)('species');
	
		module.exports = function (original) {
		  var C;
		  if (isArray(original)) {
		    C = original.constructor;
		    // cross-realm fallback
		    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
		    if (isObject(C)) {
		      C = C[SPECIES];
		      if (C === null) C = undefined;
		    }
		  } return C === undefined ? Array : C;
		};
	
	
	/***/ },
	/* 441 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		var $export = __webpack_require__(273);
		var $map = __webpack_require__(438)(1);
	
		$export($export.P + $export.F * !__webpack_require__(434)([].map, true), 'Array', {
		  // 22.1.3.15 / 15.4.4.19 Array.prototype.map(callbackfn [, thisArg])
		  map: function map(callbackfn /* , thisArg */) {
		    return $map(this, callbackfn, arguments[1]);
		  }
		});
	
	
	/***/ },
	/* 442 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		var $export = __webpack_require__(273);
		var $filter = __webpack_require__(438)(2);
	
		$export($export.P + $export.F * !__webpack_require__(434)([].filter, true), 'Array', {
		  // 22.1.3.7 / 15.4.4.20 Array.prototype.filter(callbackfn [, thisArg])
		  filter: function filter(callbackfn /* , thisArg */) {
		    return $filter(this, callbackfn, arguments[1]);
		  }
		});
	
	
	/***/ },
	/* 443 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		var $export = __webpack_require__(273);
		var $some = __webpack_require__(438)(3);
	
		$export($export.P + $export.F * !__webpack_require__(434)([].some, true), 'Array', {
		  // 22.1.3.23 / 15.4.4.17 Array.prototype.some(callbackfn [, thisArg])
		  some: function some(callbackfn /* , thisArg */) {
		    return $some(this, callbackfn, arguments[1]);
		  }
		});
	
	
	/***/ },
	/* 444 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		var $export = __webpack_require__(273);
		var $every = __webpack_require__(438)(4);
	
		$export($export.P + $export.F * !__webpack_require__(434)([].every, true), 'Array', {
		  // 22.1.3.5 / 15.4.4.16 Array.prototype.every(callbackfn [, thisArg])
		  every: function every(callbackfn /* , thisArg */) {
		    return $every(this, callbackfn, arguments[1]);
		  }
		});
	
	
	/***/ },
	/* 445 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		var $export = __webpack_require__(273);
		var $reduce = __webpack_require__(446);
	
		$export($export.P + $export.F * !__webpack_require__(434)([].reduce, true), 'Array', {
		  // 22.1.3.18 / 15.4.4.21 Array.prototype.reduce(callbackfn [, initialValue])
		  reduce: function reduce(callbackfn /* , initialValue */) {
		    return $reduce(this, callbackfn, arguments.length, arguments[1], false);
		  }
		});
	
	
	/***/ },
	/* 446 */
	/***/ function(module, exports, __webpack_require__) {
	
		var aFunction = __webpack_require__(286);
		var toObject = __webpack_require__(322);
		var IObject = __webpack_require__(298);
		var toLength = __webpack_require__(302);
	
		module.exports = function (that, callbackfn, aLen, memo, isRight) {
		  aFunction(callbackfn);
		  var O = toObject(that);
		  var self = IObject(O);
		  var length = toLength(O.length);
		  var index = isRight ? length - 1 : 0;
		  var i = isRight ? -1 : 1;
		  if (aLen < 2) for (;;) {
		    if (index in self) {
		      memo = self[index];
		      index += i;
		      break;
		    }
		    index += i;
		    if (isRight ? index < 0 : length <= index) {
		      throw TypeError('Reduce of empty array with no initial value');
		    }
		  }
		  for (;isRight ? index >= 0 : length > index; index += i) if (index in self) {
		    memo = callbackfn(memo, self[index], index, O);
		  }
		  return memo;
		};
	
	
	/***/ },
	/* 447 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		var $export = __webpack_require__(273);
		var $reduce = __webpack_require__(446);
	
		$export($export.P + $export.F * !__webpack_require__(434)([].reduceRight, true), 'Array', {
		  // 22.1.3.19 / 15.4.4.22 Array.prototype.reduceRight(callbackfn [, initialValue])
		  reduceRight: function reduceRight(callbackfn /* , initialValue */) {
		    return $reduce(this, callbackfn, arguments.length, arguments[1], true);
		  }
		});
	
	
	/***/ },
	/* 448 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		var $export = __webpack_require__(273);
		var $indexOf = __webpack_require__(301)(false);
		var $native = [].indexOf;
		var NEGATIVE_ZERO = !!$native && 1 / [1].indexOf(1, -0) < 0;
	
		$export($export.P + $export.F * (NEGATIVE_ZERO || !__webpack_require__(434)($native)), 'Array', {
		  // 22.1.3.11 / 15.4.4.14 Array.prototype.indexOf(searchElement [, fromIndex])
		  indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {
		    return NEGATIVE_ZERO
		      // convert -0 to +0
		      ? $native.apply(this, arguments) || 0
		      : $indexOf(this, searchElement, arguments[1]);
		  }
		});
	
	
	/***/ },
	/* 449 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		var $export = __webpack_require__(273);
		var toIObject = __webpack_require__(297);
		var toInteger = __webpack_require__(303);
		var toLength = __webpack_require__(302);
		var $native = [].lastIndexOf;
		var NEGATIVE_ZERO = !!$native && 1 / [1].lastIndexOf(1, -0) < 0;
	
		$export($export.P + $export.F * (NEGATIVE_ZERO || !__webpack_require__(434)($native)), 'Array', {
		  // 22.1.3.14 / 15.4.4.15 Array.prototype.lastIndexOf(searchElement [, fromIndex])
		  lastIndexOf: function lastIndexOf(searchElement /* , fromIndex = @[*-1] */) {
		    // convert -0 to +0
		    if (NEGATIVE_ZERO) return $native.apply(this, arguments) || 0;
		    var O = toIObject(this);
		    var length = toLength(O.length);
		    var index = length - 1;
		    if (arguments.length > 1) index = Math.min(index, toInteger(arguments[1]));
		    if (index < 0) index = length + index;
		    for (;index >= 0; index--) if (index in O) if (O[index] === searchElement) return index || 0;
		    return -1;
		  }
		});
	
	
	/***/ },
	/* 450 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
		var $export = __webpack_require__(273);
	
		$export($export.P, 'Array', { copyWithin: __webpack_require__(451) });
	
		__webpack_require__(452)('copyWithin');
	
	
	/***/ },
	/* 451 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
		'use strict';
		var toObject = __webpack_require__(322);
		var toAbsoluteIndex = __webpack_require__(304);
		var toLength = __webpack_require__(302);
	
		module.exports = [].copyWithin || function copyWithin(target /* = 0 */, start /* = 0, end = @length */) {
		  var O = toObject(this);
		  var len = toLength(O.length);
		  var to = toAbsoluteIndex(target, len);
		  var from = toAbsoluteIndex(start, len);
		  var end = arguments.length > 2 ? arguments[2] : undefined;
		  var count = Math.min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);
		  var inc = 1;
		  if (from < to && to < from + count) {
		    inc = -1;
		    from += count - 1;
		    to += count - 1;
		  }
		  while (count-- > 0) {
		    if (from in O) O[to] = O[from];
		    else delete O[to];
		    to += inc;
		    from += inc;
		  } return O;
		};
	
	
	/***/ },
	/* 452 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 22.1.3.31 Array.prototype[@@unscopables]
		var UNSCOPABLES = __webpack_require__(290)('unscopables');
		var ArrayProto = Array.prototype;
		if (ArrayProto[UNSCOPABLES] == undefined) __webpack_require__(275)(ArrayProto, UNSCOPABLES, {});
		module.exports = function (key) {
		  ArrayProto[UNSCOPABLES][key] = true;
		};
	
	
	/***/ },
	/* 453 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
		var $export = __webpack_require__(273);
	
		$export($export.P, 'Array', { fill: __webpack_require__(454) });
	
		__webpack_require__(452)('fill');
	
	
	/***/ },
	/* 454 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
		'use strict';
		var toObject = __webpack_require__(322);
		var toAbsoluteIndex = __webpack_require__(304);
		var toLength = __webpack_require__(302);
		module.exports = function fill(value /* , start = 0, end = @length */) {
		  var O = toObject(this);
		  var length = toLength(O.length);
		  var aLen = arguments.length;
		  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);
		  var end = aLen > 2 ? arguments[2] : undefined;
		  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);
		  while (endPos > index) O[index++] = value;
		  return O;
		};
	
	
	/***/ },
	/* 455 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)
		var $export = __webpack_require__(273);
		var $find = __webpack_require__(438)(5);
		var KEY = 'find';
		var forced = true;
		// Shouldn't skip holes
		if (KEY in []) Array(1)[KEY](function () { forced = false; });
		$export($export.P + $export.F * forced, 'Array', {
		  find: function find(callbackfn /* , that = undefined */) {
		    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
		  }
		});
		__webpack_require__(452)(KEY);
	
	
	/***/ },
	/* 456 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)
		var $export = __webpack_require__(273);
		var $find = __webpack_require__(438)(6);
		var KEY = 'findIndex';
		var forced = true;
		// Shouldn't skip holes
		if (KEY in []) Array(1)[KEY](function () { forced = false; });
		$export($export.P + $export.F * forced, 'Array', {
		  findIndex: function findIndex(callbackfn /* , that = undefined */) {
		    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
		  }
		});
		__webpack_require__(452)(KEY);
	
	
	/***/ },
	/* 457 */
	/***/ function(module, exports, __webpack_require__) {
	
		__webpack_require__(458)('Array');
	
	
	/***/ },
	/* 458 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		var global = __webpack_require__(269);
		var dP = __webpack_require__(276);
		var DESCRIPTORS = __webpack_require__(271);
		var SPECIES = __webpack_require__(290)('species');
	
		module.exports = function (KEY) {
		  var C = global[KEY];
		  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
		    configurable: true,
		    get: function () { return this; }
		  });
		};
	
	
	/***/ },
	/* 459 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		var addToUnscopables = __webpack_require__(452);
		var step = __webpack_require__(460);
		var Iterators = __webpack_require__(394);
		var toIObject = __webpack_require__(297);
	
		// 22.1.3.4 Array.prototype.entries()
		// 22.1.3.13 Array.prototype.keys()
		// 22.1.3.29 Array.prototype.values()
		// 22.1.3.30 Array.prototype[@@iterator]()
		module.exports = __webpack_require__(393)(Array, 'Array', function (iterated, kind) {
		  this._t = toIObject(iterated); // target
		  this._i = 0;                   // next index
		  this._k = kind;                // kind
		// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
		}, function () {
		  var O = this._t;
		  var kind = this._k;
		  var index = this._i++;
		  if (!O || index >= O.length) {
		    this._t = undefined;
		    return step(1);
		  }
		  if (kind == 'keys') return step(0, index);
		  if (kind == 'values') return step(0, O[index]);
		  return step(0, [index, O[index]]);
		}, 'values');
	
		// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
		Iterators.Arguments = Iterators.Array;
	
		addToUnscopables('keys');
		addToUnscopables('values');
		addToUnscopables('entries');
	
	
	/***/ },
	/* 460 */
	/***/ function(module, exports) {
	
		module.exports = function (done, value) {
		  return { value: value, done: !!done };
		};
	
	
	/***/ },
	/* 461 */
	/***/ function(module, exports, __webpack_require__) {
	
		var global = __webpack_require__(269);
		var inheritIfRequired = __webpack_require__(352);
		var dP = __webpack_require__(276).f;
		var gOPN = __webpack_require__(314).f;
		var isRegExp = __webpack_require__(399);
		var $flags = __webpack_require__(462);
		var $RegExp = global.RegExp;
		var Base = $RegExp;
		var proto = $RegExp.prototype;
		var re1 = /a/g;
		var re2 = /a/g;
		// "new" creates a new object, old webkit buggy here
		var CORRECT_NEW = new $RegExp(re1) !== re1;
	
		if (__webpack_require__(271) && (!CORRECT_NEW || __webpack_require__(272)(function () {
		  re2[__webpack_require__(290)('match')] = false;
		  // RegExp constructor can alter flags and IsRegExp works correct with @@match
		  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';
		}))) {
		  $RegExp = function RegExp(p, f) {
		    var tiRE = this instanceof $RegExp;
		    var piRE = isRegExp(p);
		    var fiU = f === undefined;
		    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p
		      : inheritIfRequired(CORRECT_NEW
		        ? new Base(piRE && !fiU ? p.source : p, f)
		        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)
		      , tiRE ? this : proto, $RegExp);
		  };
		  var proxy = function (key) {
		    key in $RegExp || dP($RegExp, key, {
		      configurable: true,
		      get: function () { return Base[key]; },
		      set: function (it) { Base[key] = it; }
		    });
		  };
		  for (var keys = gOPN(Base), i = 0; keys.length > i;) proxy(keys[i++]);
		  proto.constructor = $RegExp;
		  $RegExp.prototype = proto;
		  __webpack_require__(283)(global, 'RegExp', $RegExp);
		}
	
		__webpack_require__(458)('RegExp');
	
	
	/***/ },
	/* 462 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		// 21.2.5.3 get RegExp.prototype.flags
		var anObject = __webpack_require__(277);
		module.exports = function () {
		  var that = anObject(this);
		  var result = '';
		  if (that.global) result += 'g';
		  if (that.ignoreCase) result += 'i';
		  if (that.multiline) result += 'm';
		  if (that.unicode) result += 'u';
		  if (that.sticky) result += 'y';
		  return result;
		};
	
	
	/***/ },
	/* 463 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		__webpack_require__(464);
		var anObject = __webpack_require__(277);
		var $flags = __webpack_require__(462);
		var DESCRIPTORS = __webpack_require__(271);
		var TO_STRING = 'toString';
		var $toString = /./[TO_STRING];
	
		var define = function (fn) {
		  __webpack_require__(283)(RegExp.prototype, TO_STRING, fn, true);
		};
	
		// 21.2.5.14 RegExp.prototype.toString()
		if (__webpack_require__(272)(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {
		  define(function toString() {
		    var R = anObject(this);
		    return '/'.concat(R.source, '/',
		      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);
		  });
		// FF44- RegExp#toString has a wrong name
		} else if ($toString.name != TO_STRING) {
		  define(function toString() {
		    return $toString.call(this);
		  });
		}
	
	
	/***/ },
	/* 464 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 21.2.5.3 get RegExp.prototype.flags()
		if (__webpack_require__(271) && /./g.flags != 'g') __webpack_require__(276).f(RegExp.prototype, 'flags', {
		  configurable: true,
		  get: __webpack_require__(462)
		});
	
	
	/***/ },
	/* 465 */
	/***/ function(module, exports, __webpack_require__) {
	
		// @@match logic
		__webpack_require__(466)('match', 1, function (defined, MATCH, $match) {
		  // 21.1.3.11 String.prototype.match(regexp)
		  return [function match(regexp) {
		    'use strict';
		    var O = defined(this);
		    var fn = regexp == undefined ? undefined : regexp[MATCH];
		    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));
		  }, $match];
		});
	
	
	/***/ },
	/* 466 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		var hide = __webpack_require__(275);
		var redefine = __webpack_require__(283);
		var fails = __webpack_require__(272);
		var defined = __webpack_require__(300);
		var wks = __webpack_require__(290);
	
		module.exports = function (KEY, length, exec) {
		  var SYMBOL = wks(KEY);
		  var fns = exec(defined, SYMBOL, ''[KEY]);
		  var strfn = fns[0];
		  var rxfn = fns[1];
		  if (fails(function () {
		    var O = {};
		    O[SYMBOL] = function () { return 7; };
		    return ''[KEY](O) != 7;
		  })) {
		    redefine(String.prototype, KEY, strfn);
		    hide(RegExp.prototype, SYMBOL, length == 2
		      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
		      // 21.2.5.11 RegExp.prototype[@@split](string, limit)
		      ? function (string, arg) { return rxfn.call(string, this, arg); }
		      // 21.2.5.6 RegExp.prototype[@@match](string)
		      // 21.2.5.9 RegExp.prototype[@@search](string)
		      : function (string) { return rxfn.call(string, this); }
		    );
		  }
		};
	
	
	/***/ },
	/* 467 */
	/***/ function(module, exports, __webpack_require__) {
	
		// @@replace logic
		__webpack_require__(466)('replace', 2, function (defined, REPLACE, $replace) {
		  // 21.1.3.14 String.prototype.replace(searchValue, replaceValue)
		  return [function replace(searchValue, replaceValue) {
		    'use strict';
		    var O = defined(this);
		    var fn = searchValue == undefined ? undefined : searchValue[REPLACE];
		    return fn !== undefined
		      ? fn.call(searchValue, O, replaceValue)
		      : $replace.call(String(O), searchValue, replaceValue);
		  }, $replace];
		});
	
	
	/***/ },
	/* 468 */
	/***/ function(module, exports, __webpack_require__) {
	
		// @@search logic
		__webpack_require__(466)('search', 1, function (defined, SEARCH, $search) {
		  // 21.1.3.15 String.prototype.search(regexp)
		  return [function search(regexp) {
		    'use strict';
		    var O = defined(this);
		    var fn = regexp == undefined ? undefined : regexp[SEARCH];
		    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));
		  }, $search];
		});
	
	
	/***/ },
	/* 469 */
	/***/ function(module, exports, __webpack_require__) {
	
		// @@split logic
		__webpack_require__(466)('split', 2, function (defined, SPLIT, $split) {
		  'use strict';
		  var isRegExp = __webpack_require__(399);
		  var _split = $split;
		  var $push = [].push;
		  var $SPLIT = 'split';
		  var LENGTH = 'length';
		  var LAST_INDEX = 'lastIndex';
		  if (
		    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||
		    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||
		    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||
		    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||
		    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||
		    ''[$SPLIT](/.?/)[LENGTH]
		  ) {
		    var NPCG = /()??/.exec('')[1] === undefined; // nonparticipating capturing group
		    // based on es5-shim implementation, need to rework it
		    $split = function (separator, limit) {
		      var string = String(this);
		      if (separator === undefined && limit === 0) return [];
		      // If `separator` is not a regex, use native split
		      if (!isRegExp(separator)) return _split.call(string, separator, limit);
		      var output = [];
		      var flags = (separator.ignoreCase ? 'i' : '') +
		                  (separator.multiline ? 'm' : '') +
		                  (separator.unicode ? 'u' : '') +
		                  (separator.sticky ? 'y' : '');
		      var lastLastIndex = 0;
		      var splitLimit = limit === undefined ? 4294967295 : limit >>> 0;
		      // Make `global` and avoid `lastIndex` issues by working with a copy
		      var separatorCopy = new RegExp(separator.source, flags + 'g');
		      var separator2, match, lastIndex, lastLength, i;
		      // Doesn't need flags gy, but they don't hurt
		      if (!NPCG) separator2 = new RegExp('^' + separatorCopy.source + '$(?!\\s)', flags);
		      while (match = separatorCopy.exec(string)) {
		        // `separatorCopy.lastIndex` is not reliable cross-browser
		        lastIndex = match.index + match[0][LENGTH];
		        if (lastIndex > lastLastIndex) {
		          output.push(string.slice(lastLastIndex, match.index));
		          // Fix browsers whose `exec` methods don't consistently return `undefined` for NPCG
		          // eslint-disable-next-line no-loop-func
		          if (!NPCG && match[LENGTH] > 1) match[0].replace(separator2, function () {
		            for (i = 1; i < arguments[LENGTH] - 2; i++) if (arguments[i] === undefined) match[i] = undefined;
		          });
		          if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));
		          lastLength = match[0][LENGTH];
		          lastLastIndex = lastIndex;
		          if (output[LENGTH] >= splitLimit) break;
		        }
		        if (separatorCopy[LAST_INDEX] === match.index) separatorCopy[LAST_INDEX]++; // Avoid an infinite loop
		      }
		      if (lastLastIndex === string[LENGTH]) {
		        if (lastLength || !separatorCopy.test('')) output.push('');
		      } else output.push(string.slice(lastLastIndex));
		      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;
		    };
		  // Chakra, V8
		  } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {
		    $split = function (separator, limit) {
		      return separator === undefined && limit === 0 ? [] : _split.call(this, separator, limit);
		    };
		  }
		  // 21.1.3.17 String.prototype.split(separator, limit)
		  return [function split(separator, limit) {
		    var O = defined(this);
		    var fn = separator == undefined ? undefined : separator[SPLIT];
		    return fn !== undefined ? fn.call(separator, O, limit) : $split.call(String(O), separator, limit);
		  }, $split];
		});
	
	
	/***/ },
	/* 470 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		var LIBRARY = __webpack_require__(293);
		var global = __webpack_require__(269);
		var ctx = __webpack_require__(285);
		var classof = __webpack_require__(339);
		var $export = __webpack_require__(273);
		var isObject = __webpack_require__(278);
		var aFunction = __webpack_require__(286);
		var anInstance = __webpack_require__(471);
		var forOf = __webpack_require__(472);
		var speciesConstructor = __webpack_require__(473);
		var task = __webpack_require__(474).set;
		var microtask = __webpack_require__(475)();
		var newPromiseCapabilityModule = __webpack_require__(476);
		var perform = __webpack_require__(477);
		var promiseResolve = __webpack_require__(478);
		var PROMISE = 'Promise';
		var TypeError = global.TypeError;
		var process = global.process;
		var $Promise = global[PROMISE];
		var isNode = classof(process) == 'process';
		var empty = function () { /* empty */ };
		var Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;
		var newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;
	
		var USE_NATIVE = !!function () {
		  try {
		    // correct subclassing with @@species support
		    var promise = $Promise.resolve(1);
		    var FakePromise = (promise.constructor = {})[__webpack_require__(290)('species')] = function (exec) {
		      exec(empty, empty);
		    };
		    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
		    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;
		  } catch (e) { /* empty */ }
		}();
	
		// helpers
		var isThenable = function (it) {
		  var then;
		  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
		};
		var notify = function (promise, isReject) {
		  if (promise._n) return;
		  promise._n = true;
		  var chain = promise._c;
		  microtask(function () {
		    var value = promise._v;
		    var ok = promise._s == 1;
		    var i = 0;
		    var run = function (reaction) {
		      var handler = ok ? reaction.ok : reaction.fail;
		      var resolve = reaction.resolve;
		      var reject = reaction.reject;
		      var domain = reaction.domain;
		      var result, then;
		      try {
		        if (handler) {
		          if (!ok) {
		            if (promise._h == 2) onHandleUnhandled(promise);
		            promise._h = 1;
		          }
		          if (handler === true) result = value;
		          else {
		            if (domain) domain.enter();
		            result = handler(value);
		            if (domain) domain.exit();
		          }
		          if (result === reaction.promise) {
		            reject(TypeError('Promise-chain cycle'));
		          } else if (then = isThenable(result)) {
		            then.call(result, resolve, reject);
		          } else resolve(result);
		        } else reject(value);
		      } catch (e) {
		        reject(e);
		      }
		    };
		    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach
		    promise._c = [];
		    promise._n = false;
		    if (isReject && !promise._h) onUnhandled(promise);
		  });
		};
		var onUnhandled = function (promise) {
		  task.call(global, function () {
		    var value = promise._v;
		    var unhandled = isUnhandled(promise);
		    var result, handler, console;
		    if (unhandled) {
		      result = perform(function () {
		        if (isNode) {
		          process.emit('unhandledRejection', value, promise);
		        } else if (handler = global.onunhandledrejection) {
		          handler({ promise: promise, reason: value });
		        } else if ((console = global.console) && console.error) {
		          console.error('Unhandled promise rejection', value);
		        }
		      });
		      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
		      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
		    } promise._a = undefined;
		    if (unhandled && result.e) throw result.v;
		  });
		};
		var isUnhandled = function (promise) {
		  if (promise._h == 1) return false;
		  var chain = promise._a || promise._c;
		  var i = 0;
		  var reaction;
		  while (chain.length > i) {
		    reaction = chain[i++];
		    if (reaction.fail || !isUnhandled(reaction.promise)) return false;
		  } return true;
		};
		var onHandleUnhandled = function (promise) {
		  task.call(global, function () {
		    var handler;
		    if (isNode) {
		      process.emit('rejectionHandled', promise);
		    } else if (handler = global.onrejectionhandled) {
		      handler({ promise: promise, reason: promise._v });
		    }
		  });
		};
		var $reject = function (value) {
		  var promise = this;
		  if (promise._d) return;
		  promise._d = true;
		  promise = promise._w || promise; // unwrap
		  promise._v = value;
		  promise._s = 2;
		  if (!promise._a) promise._a = promise._c.slice();
		  notify(promise, true);
		};
		var $resolve = function (value) {
		  var promise = this;
		  var then;
		  if (promise._d) return;
		  promise._d = true;
		  promise = promise._w || promise; // unwrap
		  try {
		    if (promise === value) throw TypeError("Promise can't be resolved itself");
		    if (then = isThenable(value)) {
		      microtask(function () {
		        var wrapper = { _w: promise, _d: false }; // wrap
		        try {
		          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
		        } catch (e) {
		          $reject.call(wrapper, e);
		        }
		      });
		    } else {
		      promise._v = value;
		      promise._s = 1;
		      notify(promise, false);
		    }
		  } catch (e) {
		    $reject.call({ _w: promise, _d: false }, e); // wrap
		  }
		};
	
		// constructor polyfill
		if (!USE_NATIVE) {
		  // 25.4.3.1 Promise(executor)
		  $Promise = function Promise(executor) {
		    anInstance(this, $Promise, PROMISE, '_h');
		    aFunction(executor);
		    Internal.call(this);
		    try {
		      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
		    } catch (err) {
		      $reject.call(this, err);
		    }
		  };
		  // eslint-disable-next-line no-unused-vars
		  Internal = function Promise(executor) {
		    this._c = [];             // <- awaiting reactions
		    this._a = undefined;      // <- checked in isUnhandled reactions
		    this._s = 0;              // <- state
		    this._d = false;          // <- done
		    this._v = undefined;      // <- value
		    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
		    this._n = false;          // <- notify
		  };
		  Internal.prototype = __webpack_require__(479)($Promise.prototype, {
		    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
		    then: function then(onFulfilled, onRejected) {
		      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));
		      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
		      reaction.fail = typeof onRejected == 'function' && onRejected;
		      reaction.domain = isNode ? process.domain : undefined;
		      this._c.push(reaction);
		      if (this._a) this._a.push(reaction);
		      if (this._s) notify(this, false);
		      return reaction.promise;
		    },
		    // 25.4.5.1 Promise.prototype.catch(onRejected)
		    'catch': function (onRejected) {
		      return this.then(undefined, onRejected);
		    }
		  });
		  OwnPromiseCapability = function () {
		    var promise = new Internal();
		    this.promise = promise;
		    this.resolve = ctx($resolve, promise, 1);
		    this.reject = ctx($reject, promise, 1);
		  };
		  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
		    return C === $Promise || C === Wrapper
		      ? new OwnPromiseCapability(C)
		      : newGenericPromiseCapability(C);
		  };
		}
	
		$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });
		__webpack_require__(289)($Promise, PROMISE);
		__webpack_require__(458)(PROMISE);
		Wrapper = __webpack_require__(274)[PROMISE];
	
		// statics
		$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
		  // 25.4.4.5 Promise.reject(r)
		  reject: function reject(r) {
		    var capability = newPromiseCapability(this);
		    var $$reject = capability.reject;
		    $$reject(r);
		    return capability.promise;
		  }
		});
		$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
		  // 25.4.4.6 Promise.resolve(x)
		  resolve: function resolve(x) {
		    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);
		  }
		});
		$export($export.S + $export.F * !(USE_NATIVE && __webpack_require__(431)(function (iter) {
		  $Promise.all(iter)['catch'](empty);
		})), PROMISE, {
		  // 25.4.4.1 Promise.all(iterable)
		  all: function all(iterable) {
		    var C = this;
		    var capability = newPromiseCapability(C);
		    var resolve = capability.resolve;
		    var reject = capability.reject;
		    var result = perform(function () {
		      var values = [];
		      var index = 0;
		      var remaining = 1;
		      forOf(iterable, false, function (promise) {
		        var $index = index++;
		        var alreadyCalled = false;
		        values.push(undefined);
		        remaining++;
		        C.resolve(promise).then(function (value) {
		          if (alreadyCalled) return;
		          alreadyCalled = true;
		          values[$index] = value;
		          --remaining || resolve(values);
		        }, reject);
		      });
		      --remaining || resolve(values);
		    });
		    if (result.e) reject(result.v);
		    return capability.promise;
		  },
		  // 25.4.4.4 Promise.race(iterable)
		  race: function race(iterable) {
		    var C = this;
		    var capability = newPromiseCapability(C);
		    var reject = capability.reject;
		    var result = perform(function () {
		      forOf(iterable, false, function (promise) {
		        C.resolve(promise).then(capability.resolve, reject);
		      });
		    });
		    if (result.e) reject(result.v);
		    return capability.promise;
		  }
		});
	
	
	/***/ },
	/* 471 */
	/***/ function(module, exports) {
	
		module.exports = function (it, Constructor, name, forbiddenField) {
		  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {
		    throw TypeError(name + ': incorrect invocation!');
		  } return it;
		};
	
	
	/***/ },
	/* 472 */
	/***/ function(module, exports, __webpack_require__) {
	
		var ctx = __webpack_require__(285);
		var call = __webpack_require__(427);
		var isArrayIter = __webpack_require__(428);
		var anObject = __webpack_require__(277);
		var toLength = __webpack_require__(302);
		var getIterFn = __webpack_require__(430);
		var BREAK = {};
		var RETURN = {};
		var exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {
		  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);
		  var f = ctx(fn, that, entries ? 2 : 1);
		  var index = 0;
		  var length, step, iterator, result;
		  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
		  // fast case for arrays with default iterator
		  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {
		    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
		    if (result === BREAK || result === RETURN) return result;
		  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
		    result = call(iterator, f, step.value, entries);
		    if (result === BREAK || result === RETURN) return result;
		  }
		};
		exports.BREAK = BREAK;
		exports.RETURN = RETURN;
	
	
	/***/ },
	/* 473 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 7.3.20 SpeciesConstructor(O, defaultConstructor)
		var anObject = __webpack_require__(277);
		var aFunction = __webpack_require__(286);
		var SPECIES = __webpack_require__(290)('species');
		module.exports = function (O, D) {
		  var C = anObject(O).constructor;
		  var S;
		  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
		};
	
	
	/***/ },
	/* 474 */
	/***/ function(module, exports, __webpack_require__) {
	
		var ctx = __webpack_require__(285);
		var invoke = __webpack_require__(342);
		var html = __webpack_require__(312);
		var cel = __webpack_require__(280);
		var global = __webpack_require__(269);
		var process = global.process;
		var setTask = global.setImmediate;
		var clearTask = global.clearImmediate;
		var MessageChannel = global.MessageChannel;
		var Dispatch = global.Dispatch;
		var counter = 0;
		var queue = {};
		var ONREADYSTATECHANGE = 'onreadystatechange';
		var defer, channel, port;
		var run = function () {
		  var id = +this;
		  // eslint-disable-next-line no-prototype-builtins
		  if (queue.hasOwnProperty(id)) {
		    var fn = queue[id];
		    delete queue[id];
		    fn();
		  }
		};
		var listener = function (event) {
		  run.call(event.data);
		};
		// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
		if (!setTask || !clearTask) {
		  setTask = function setImmediate(fn) {
		    var args = [];
		    var i = 1;
		    while (arguments.length > i) args.push(arguments[i++]);
		    queue[++counter] = function () {
		      // eslint-disable-next-line no-new-func
		      invoke(typeof fn == 'function' ? fn : Function(fn), args);
		    };
		    defer(counter);
		    return counter;
		  };
		  clearTask = function clearImmediate(id) {
		    delete queue[id];
		  };
		  // Node.js 0.8-
		  if (__webpack_require__(299)(process) == 'process') {
		    defer = function (id) {
		      process.nextTick(ctx(run, id, 1));
		    };
		  // Sphere (JS game engine) Dispatch API
		  } else if (Dispatch && Dispatch.now) {
		    defer = function (id) {
		      Dispatch.now(ctx(run, id, 1));
		    };
		  // Browsers with MessageChannel, includes WebWorkers
		  } else if (MessageChannel) {
		    channel = new MessageChannel();
		    port = channel.port2;
		    channel.port1.onmessage = listener;
		    defer = ctx(port.postMessage, port, 1);
		  // Browsers with postMessage, skip WebWorkers
		  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
		  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {
		    defer = function (id) {
		      global.postMessage(id + '', '*');
		    };
		    global.addEventListener('message', listener, false);
		  // IE8-
		  } else if (ONREADYSTATECHANGE in cel('script')) {
		    defer = function (id) {
		      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {
		        html.removeChild(this);
		        run.call(id);
		      };
		    };
		  // Rest old browsers
		  } else {
		    defer = function (id) {
		      setTimeout(ctx(run, id, 1), 0);
		    };
		  }
		}
		module.exports = {
		  set: setTask,
		  clear: clearTask
		};
	
	
	/***/ },
	/* 475 */
	/***/ function(module, exports, __webpack_require__) {
	
		var global = __webpack_require__(269);
		var macrotask = __webpack_require__(474).set;
		var Observer = global.MutationObserver || global.WebKitMutationObserver;
		var process = global.process;
		var Promise = global.Promise;
		var isNode = __webpack_require__(299)(process) == 'process';
	
		module.exports = function () {
		  var head, last, notify;
	
		  var flush = function () {
		    var parent, fn;
		    if (isNode && (parent = process.domain)) parent.exit();
		    while (head) {
		      fn = head.fn;
		      head = head.next;
		      try {
		        fn();
		      } catch (e) {
		        if (head) notify();
		        else last = undefined;
		        throw e;
		      }
		    } last = undefined;
		    if (parent) parent.enter();
		  };
	
		  // Node.js
		  if (isNode) {
		    notify = function () {
		      process.nextTick(flush);
		    };
		  // browsers with MutationObserver
		  } else if (Observer) {
		    var toggle = true;
		    var node = document.createTextNode('');
		    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new
		    notify = function () {
		      node.data = toggle = !toggle;
		    };
		  // environments with maybe non-completely correct, but existent Promise
		  } else if (Promise && Promise.resolve) {
		    var promise = Promise.resolve();
		    notify = function () {
		      promise.then(flush);
		    };
		  // for other environments - macrotask based on:
		  // - setImmediate
		  // - MessageChannel
		  // - window.postMessag
		  // - onreadystatechange
		  // - setTimeout
		  } else {
		    notify = function () {
		      // strange IE + webpack dev server bug - use .call(global)
		      macrotask.call(global, flush);
		    };
		  }
	
		  return function (fn) {
		    var task = { fn: fn, next: undefined };
		    if (last) last.next = task;
		    if (!head) {
		      head = task;
		      notify();
		    } last = task;
		  };
		};
	
	
	/***/ },
	/* 476 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		// 25.4.1.5 NewPromiseCapability(C)
		var aFunction = __webpack_require__(286);
	
		function PromiseCapability(C) {
		  var resolve, reject;
		  this.promise = new C(function ($$resolve, $$reject) {
		    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
		    resolve = $$resolve;
		    reject = $$reject;
		  });
		  this.resolve = aFunction(resolve);
		  this.reject = aFunction(reject);
		}
	
		module.exports.f = function (C) {
		  return new PromiseCapability(C);
		};
	
	
	/***/ },
	/* 477 */
	/***/ function(module, exports) {
	
		module.exports = function (exec) {
		  try {
		    return { e: false, v: exec() };
		  } catch (e) {
		    return { e: true, v: e };
		  }
		};
	
	
	/***/ },
	/* 478 */
	/***/ function(module, exports, __webpack_require__) {
	
		var anObject = __webpack_require__(277);
		var isObject = __webpack_require__(278);
		var newPromiseCapability = __webpack_require__(476);
	
		module.exports = function (C, x) {
		  anObject(C);
		  if (isObject(x) && x.constructor === C) return x;
		  var promiseCapability = newPromiseCapability.f(C);
		  var resolve = promiseCapability.resolve;
		  resolve(x);
		  return promiseCapability.promise;
		};
	
	
	/***/ },
	/* 479 */
	/***/ function(module, exports, __webpack_require__) {
	
		var redefine = __webpack_require__(283);
		module.exports = function (target, src, safe) {
		  for (var key in src) redefine(target, key, src[key], safe);
		  return target;
		};
	
	
	/***/ },
	/* 480 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		var strong = __webpack_require__(481);
		var validate = __webpack_require__(482);
		var MAP = 'Map';
	
		// 23.1 Map Objects
		module.exports = __webpack_require__(483)(MAP, function (get) {
		  return function Map() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
		}, {
		  // 23.1.3.6 Map.prototype.get(key)
		  get: function get(key) {
		    var entry = strong.getEntry(validate(this, MAP), key);
		    return entry && entry.v;
		  },
		  // 23.1.3.9 Map.prototype.set(key, value)
		  set: function set(key, value) {
		    return strong.def(validate(this, MAP), key === 0 ? 0 : key, value);
		  }
		}, strong, true);
	
	
	/***/ },
	/* 481 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		var dP = __webpack_require__(276).f;
		var create = __webpack_require__(310);
		var redefineAll = __webpack_require__(479);
		var ctx = __webpack_require__(285);
		var anInstance = __webpack_require__(471);
		var forOf = __webpack_require__(472);
		var $iterDefine = __webpack_require__(393);
		var step = __webpack_require__(460);
		var setSpecies = __webpack_require__(458);
		var DESCRIPTORS = __webpack_require__(271);
		var fastKey = __webpack_require__(287).fastKey;
		var validate = __webpack_require__(482);
		var SIZE = DESCRIPTORS ? '_s' : 'size';
	
		var getEntry = function (that, key) {
		  // fast case
		  var index = fastKey(key);
		  var entry;
		  if (index !== 'F') return that._i[index];
		  // frozen object case
		  for (entry = that._f; entry; entry = entry.n) {
		    if (entry.k == key) return entry;
		  }
		};
	
		module.exports = {
		  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {
		    var C = wrapper(function (that, iterable) {
		      anInstance(that, C, NAME, '_i');
		      that._t = NAME;         // collection type
		      that._i = create(null); // index
		      that._f = undefined;    // first entry
		      that._l = undefined;    // last entry
		      that[SIZE] = 0;         // size
		      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
		    });
		    redefineAll(C.prototype, {
		      // 23.1.3.1 Map.prototype.clear()
		      // 23.2.3.2 Set.prototype.clear()
		      clear: function clear() {
		        for (var that = validate(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {
		          entry.r = true;
		          if (entry.p) entry.p = entry.p.n = undefined;
		          delete data[entry.i];
		        }
		        that._f = that._l = undefined;
		        that[SIZE] = 0;
		      },
		      // 23.1.3.3 Map.prototype.delete(key)
		      // 23.2.3.4 Set.prototype.delete(value)
		      'delete': function (key) {
		        var that = validate(this, NAME);
		        var entry = getEntry(that, key);
		        if (entry) {
		          var next = entry.n;
		          var prev = entry.p;
		          delete that._i[entry.i];
		          entry.r = true;
		          if (prev) prev.n = next;
		          if (next) next.p = prev;
		          if (that._f == entry) that._f = next;
		          if (that._l == entry) that._l = prev;
		          that[SIZE]--;
		        } return !!entry;
		      },
		      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
		      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
		      forEach: function forEach(callbackfn /* , that = undefined */) {
		        validate(this, NAME);
		        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);
		        var entry;
		        while (entry = entry ? entry.n : this._f) {
		          f(entry.v, entry.k, this);
		          // revert to the last existing entry
		          while (entry && entry.r) entry = entry.p;
		        }
		      },
		      // 23.1.3.7 Map.prototype.has(key)
		      // 23.2.3.7 Set.prototype.has(value)
		      has: function has(key) {
		        return !!getEntry(validate(this, NAME), key);
		      }
		    });
		    if (DESCRIPTORS) dP(C.prototype, 'size', {
		      get: function () {
		        return validate(this, NAME)[SIZE];
		      }
		    });
		    return C;
		  },
		  def: function (that, key, value) {
		    var entry = getEntry(that, key);
		    var prev, index;
		    // change existing entry
		    if (entry) {
		      entry.v = value;
		    // create new entry
		    } else {
		      that._l = entry = {
		        i: index = fastKey(key, true), // <- index
		        k: key,                        // <- key
		        v: value,                      // <- value
		        p: prev = that._l,             // <- previous entry
		        n: undefined,                  // <- next entry
		        r: false                       // <- removed
		      };
		      if (!that._f) that._f = entry;
		      if (prev) prev.n = entry;
		      that[SIZE]++;
		      // add to index
		      if (index !== 'F') that._i[index] = entry;
		    } return that;
		  },
		  getEntry: getEntry,
		  setStrong: function (C, NAME, IS_MAP) {
		    // add .keys, .values, .entries, [@@iterator]
		    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
		    $iterDefine(C, NAME, function (iterated, kind) {
		      this._t = validate(iterated, NAME); // target
		      this._k = kind;                     // kind
		      this._l = undefined;                // previous
		    }, function () {
		      var that = this;
		      var kind = that._k;
		      var entry = that._l;
		      // revert to the last existing entry
		      while (entry && entry.r) entry = entry.p;
		      // get next entry
		      if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {
		        // or finish the iteration
		        that._t = undefined;
		        return step(1);
		      }
		      // return step by kind
		      if (kind == 'keys') return step(0, entry.k);
		      if (kind == 'values') return step(0, entry.v);
		      return step(0, [entry.k, entry.v]);
		    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);
	
		    // add [@@species], 23.1.2.2, 23.2.2.2
		    setSpecies(NAME);
		  }
		};
	
	
	/***/ },
	/* 482 */
	/***/ function(module, exports, __webpack_require__) {
	
		var isObject = __webpack_require__(278);
		module.exports = function (it, TYPE) {
		  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');
		  return it;
		};
	
	
	/***/ },
	/* 483 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		var global = __webpack_require__(269);
		var $export = __webpack_require__(273);
		var redefine = __webpack_require__(283);
		var redefineAll = __webpack_require__(479);
		var meta = __webpack_require__(287);
		var forOf = __webpack_require__(472);
		var anInstance = __webpack_require__(471);
		var isObject = __webpack_require__(278);
		var fails = __webpack_require__(272);
		var $iterDetect = __webpack_require__(431);
		var setToStringTag = __webpack_require__(289);
		var inheritIfRequired = __webpack_require__(352);
	
		module.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {
		  var Base = global[NAME];
		  var C = Base;
		  var ADDER = IS_MAP ? 'set' : 'add';
		  var proto = C && C.prototype;
		  var O = {};
		  var fixMethod = function (KEY) {
		    var fn = proto[KEY];
		    redefine(proto, KEY,
		      KEY == 'delete' ? function (a) {
		        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
		      } : KEY == 'has' ? function has(a) {
		        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
		      } : KEY == 'get' ? function get(a) {
		        return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);
		      } : KEY == 'add' ? function add(a) { fn.call(this, a === 0 ? 0 : a); return this; }
		        : function set(a, b) { fn.call(this, a === 0 ? 0 : a, b); return this; }
		    );
		  };
		  if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {
		    new C().entries().next();
		  }))) {
		    // create collection constructor
		    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
		    redefineAll(C.prototype, methods);
		    meta.NEED = true;
		  } else {
		    var instance = new C();
		    // early implementations not supports chaining
		    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;
		    // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false
		    var THROWS_ON_PRIMITIVES = fails(function () { instance.has(1); });
		    // most early implementations doesn't supports iterables, most modern - not close it correctly
		    var ACCEPT_ITERABLES = $iterDetect(function (iter) { new C(iter); }); // eslint-disable-line no-new
		    // for early implementations -0 and +0 not the same
		    var BUGGY_ZERO = !IS_WEAK && fails(function () {
		      // V8 ~ Chromium 42- fails only with 5+ elements
		      var $instance = new C();
		      var index = 5;
		      while (index--) $instance[ADDER](index, index);
		      return !$instance.has(-0);
		    });
		    if (!ACCEPT_ITERABLES) {
		      C = wrapper(function (target, iterable) {
		        anInstance(target, C, NAME);
		        var that = inheritIfRequired(new Base(), target, C);
		        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
		        return that;
		      });
		      C.prototype = proto;
		      proto.constructor = C;
		    }
		    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
		      fixMethod('delete');
		      fixMethod('has');
		      IS_MAP && fixMethod('get');
		    }
		    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);
		    // weak collections should not contains .clear method
		    if (IS_WEAK && proto.clear) delete proto.clear;
		  }
	
		  setToStringTag(C, NAME);
	
		  O[NAME] = C;
		  $export($export.G + $export.W + $export.F * (C != Base), O);
	
		  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);
	
		  return C;
		};
	
	
	/***/ },
	/* 484 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		var strong = __webpack_require__(481);
		var validate = __webpack_require__(482);
		var SET = 'Set';
	
		// 23.2 Set Objects
		module.exports = __webpack_require__(483)(SET, function (get) {
		  return function Set() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
		}, {
		  // 23.2.3.1 Set.prototype.add(value)
		  add: function add(value) {
		    return strong.def(validate(this, SET), value = value === 0 ? 0 : value, value);
		  }
		}, strong);
	
	
	/***/ },
	/* 485 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		var each = __webpack_require__(438)(0);
		var redefine = __webpack_require__(283);
		var meta = __webpack_require__(287);
		var assign = __webpack_require__(333);
		var weak = __webpack_require__(486);
		var isObject = __webpack_require__(278);
		var fails = __webpack_require__(272);
		var validate = __webpack_require__(482);
		var WEAK_MAP = 'WeakMap';
		var getWeak = meta.getWeak;
		var isExtensible = Object.isExtensible;
		var uncaughtFrozenStore = weak.ufstore;
		var tmp = {};
		var InternalMap;
	
		var wrapper = function (get) {
		  return function WeakMap() {
		    return get(this, arguments.length > 0 ? arguments[0] : undefined);
		  };
		};
	
		var methods = {
		  // 23.3.3.3 WeakMap.prototype.get(key)
		  get: function get(key) {
		    if (isObject(key)) {
		      var data = getWeak(key);
		      if (data === true) return uncaughtFrozenStore(validate(this, WEAK_MAP)).get(key);
		      return data ? data[this._i] : undefined;
		    }
		  },
		  // 23.3.3.5 WeakMap.prototype.set(key, value)
		  set: function set(key, value) {
		    return weak.def(validate(this, WEAK_MAP), key, value);
		  }
		};
	
		// 23.3 WeakMap Objects
		var $WeakMap = module.exports = __webpack_require__(483)(WEAK_MAP, wrapper, methods, weak, true, true);
	
		// IE11 WeakMap frozen keys fix
		if (fails(function () { return new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7; })) {
		  InternalMap = weak.getConstructor(wrapper, WEAK_MAP);
		  assign(InternalMap.prototype, methods);
		  meta.NEED = true;
		  each(['delete', 'has', 'get', 'set'], function (key) {
		    var proto = $WeakMap.prototype;
		    var method = proto[key];
		    redefine(proto, key, function (a, b) {
		      // store frozen objects on internal weakmap shim
		      if (isObject(a) && !isExtensible(a)) {
		        if (!this._f) this._f = new InternalMap();
		        var result = this._f[key](a, b);
		        return key == 'set' ? this : result;
		      // store all the rest on native weakmap
		      } return method.call(this, a, b);
		    });
		  });
		}
	
	
	/***/ },
	/* 486 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		var redefineAll = __webpack_require__(479);
		var getWeak = __webpack_require__(287).getWeak;
		var anObject = __webpack_require__(277);
		var isObject = __webpack_require__(278);
		var anInstance = __webpack_require__(471);
		var forOf = __webpack_require__(472);
		var createArrayMethod = __webpack_require__(438);
		var $has = __webpack_require__(270);
		var validate = __webpack_require__(482);
		var arrayFind = createArrayMethod(5);
		var arrayFindIndex = createArrayMethod(6);
		var id = 0;
	
		// fallback for uncaught frozen keys
		var uncaughtFrozenStore = function (that) {
		  return that._l || (that._l = new UncaughtFrozenStore());
		};
		var UncaughtFrozenStore = function () {
		  this.a = [];
		};
		var findUncaughtFrozen = function (store, key) {
		  return arrayFind(store.a, function (it) {
		    return it[0] === key;
		  });
		};
		UncaughtFrozenStore.prototype = {
		  get: function (key) {
		    var entry = findUncaughtFrozen(this, key);
		    if (entry) return entry[1];
		  },
		  has: function (key) {
		    return !!findUncaughtFrozen(this, key);
		  },
		  set: function (key, value) {
		    var entry = findUncaughtFrozen(this, key);
		    if (entry) entry[1] = value;
		    else this.a.push([key, value]);
		  },
		  'delete': function (key) {
		    var index = arrayFindIndex(this.a, function (it) {
		      return it[0] === key;
		    });
		    if (~index) this.a.splice(index, 1);
		    return !!~index;
		  }
		};
	
		module.exports = {
		  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {
		    var C = wrapper(function (that, iterable) {
		      anInstance(that, C, NAME, '_i');
		      that._t = NAME;      // collection type
		      that._i = id++;      // collection id
		      that._l = undefined; // leak store for uncaught frozen objects
		      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
		    });
		    redefineAll(C.prototype, {
		      // 23.3.3.2 WeakMap.prototype.delete(key)
		      // 23.4.3.3 WeakSet.prototype.delete(value)
		      'delete': function (key) {
		        if (!isObject(key)) return false;
		        var data = getWeak(key);
		        if (data === true) return uncaughtFrozenStore(validate(this, NAME))['delete'](key);
		        return data && $has(data, this._i) && delete data[this._i];
		      },
		      // 23.3.3.4 WeakMap.prototype.has(key)
		      // 23.4.3.4 WeakSet.prototype.has(value)
		      has: function has(key) {
		        if (!isObject(key)) return false;
		        var data = getWeak(key);
		        if (data === true) return uncaughtFrozenStore(validate(this, NAME)).has(key);
		        return data && $has(data, this._i);
		      }
		    });
		    return C;
		  },
		  def: function (that, key, value) {
		    var data = getWeak(anObject(key), true);
		    if (data === true) uncaughtFrozenStore(that).set(key, value);
		    else data[that._i] = value;
		    return that;
		  },
		  ufstore: uncaughtFrozenStore
		};
	
	
	/***/ },
	/* 487 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		var weak = __webpack_require__(486);
		var validate = __webpack_require__(482);
		var WEAK_SET = 'WeakSet';
	
		// 23.4 WeakSet Objects
		__webpack_require__(483)(WEAK_SET, function (get) {
		  return function WeakSet() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
		}, {
		  // 23.4.3.1 WeakSet.prototype.add(value)
		  add: function add(value) {
		    return weak.def(validate(this, WEAK_SET), value, true);
		  }
		}, weak, false, true);
	
	
	/***/ },
	/* 488 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		var $export = __webpack_require__(273);
		var $typed = __webpack_require__(489);
		var buffer = __webpack_require__(490);
		var anObject = __webpack_require__(277);
		var toAbsoluteIndex = __webpack_require__(304);
		var toLength = __webpack_require__(302);
		var isObject = __webpack_require__(278);
		var ArrayBuffer = __webpack_require__(269).ArrayBuffer;
		var speciesConstructor = __webpack_require__(473);
		var $ArrayBuffer = buffer.ArrayBuffer;
		var $DataView = buffer.DataView;
		var $isView = $typed.ABV && ArrayBuffer.isView;
		var $slice = $ArrayBuffer.prototype.slice;
		var VIEW = $typed.VIEW;
		var ARRAY_BUFFER = 'ArrayBuffer';
	
		$export($export.G + $export.W + $export.F * (ArrayBuffer !== $ArrayBuffer), { ArrayBuffer: $ArrayBuffer });
	
		$export($export.S + $export.F * !$typed.CONSTR, ARRAY_BUFFER, {
		  // 24.1.3.1 ArrayBuffer.isView(arg)
		  isView: function isView(it) {
		    return $isView && $isView(it) || isObject(it) && VIEW in it;
		  }
		});
	
		$export($export.P + $export.U + $export.F * __webpack_require__(272)(function () {
		  return !new $ArrayBuffer(2).slice(1, undefined).byteLength;
		}), ARRAY_BUFFER, {
		  // 24.1.4.3 ArrayBuffer.prototype.slice(start, end)
		  slice: function slice(start, end) {
		    if ($slice !== undefined && end === undefined) return $slice.call(anObject(this), start); // FF fix
		    var len = anObject(this).byteLength;
		    var first = toAbsoluteIndex(start, len);
		    var final = toAbsoluteIndex(end === undefined ? len : end, len);
		    var result = new (speciesConstructor(this, $ArrayBuffer))(toLength(final - first));
		    var viewS = new $DataView(this);
		    var viewT = new $DataView(result);
		    var index = 0;
		    while (first < final) {
		      viewT.setUint8(index++, viewS.getUint8(first++));
		    } return result;
		  }
		});
	
		__webpack_require__(458)(ARRAY_BUFFER);
	
	
	/***/ },
	/* 489 */
	/***/ function(module, exports, __webpack_require__) {
	
		var global = __webpack_require__(269);
		var hide = __webpack_require__(275);
		var uid = __webpack_require__(284);
		var TYPED = uid('typed_array');
		var VIEW = uid('view');
		var ABV = !!(global.ArrayBuffer && global.DataView);
		var CONSTR = ABV;
		var i = 0;
		var l = 9;
		var Typed;
	
		var TypedArrayConstructors = (
		  'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'
		).split(',');
	
		while (i < l) {
		  if (Typed = global[TypedArrayConstructors[i++]]) {
		    hide(Typed.prototype, TYPED, true);
		    hide(Typed.prototype, VIEW, true);
		  } else CONSTR = false;
		}
	
		module.exports = {
		  ABV: ABV,
		  CONSTR: CONSTR,
		  TYPED: TYPED,
		  VIEW: VIEW
		};
	
	
	/***/ },
	/* 490 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		var global = __webpack_require__(269);
		var DESCRIPTORS = __webpack_require__(271);
		var LIBRARY = __webpack_require__(293);
		var $typed = __webpack_require__(489);
		var hide = __webpack_require__(275);
		var redefineAll = __webpack_require__(479);
		var fails = __webpack_require__(272);
		var anInstance = __webpack_require__(471);
		var toInteger = __webpack_require__(303);
		var toLength = __webpack_require__(302);
		var toIndex = __webpack_require__(491);
		var gOPN = __webpack_require__(314).f;
		var dP = __webpack_require__(276).f;
		var arrayFill = __webpack_require__(454);
		var setToStringTag = __webpack_require__(289);
		var ARRAY_BUFFER = 'ArrayBuffer';
		var DATA_VIEW = 'DataView';
		var PROTOTYPE = 'prototype';
		var WRONG_LENGTH = 'Wrong length!';
		var WRONG_INDEX = 'Wrong index!';
		var $ArrayBuffer = global[ARRAY_BUFFER];
		var $DataView = global[DATA_VIEW];
		var Math = global.Math;
		var RangeError = global.RangeError;
		// eslint-disable-next-line no-shadow-restricted-names
		var Infinity = global.Infinity;
		var BaseBuffer = $ArrayBuffer;
		var abs = Math.abs;
		var pow = Math.pow;
		var floor = Math.floor;
		var log = Math.log;
		var LN2 = Math.LN2;
		var BUFFER = 'buffer';
		var BYTE_LENGTH = 'byteLength';
		var BYTE_OFFSET = 'byteOffset';
		var $BUFFER = DESCRIPTORS ? '_b' : BUFFER;
		var $LENGTH = DESCRIPTORS ? '_l' : BYTE_LENGTH;
		var $OFFSET = DESCRIPTORS ? '_o' : BYTE_OFFSET;
	
		// IEEE754 conversions based on https://github.com/feross/ieee754
		function packIEEE754(value, mLen, nBytes) {
		  var buffer = Array(nBytes);
		  var eLen = nBytes * 8 - mLen - 1;
		  var eMax = (1 << eLen) - 1;
		  var eBias = eMax >> 1;
		  var rt = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0;
		  var i = 0;
		  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;
		  var e, m, c;
		  value = abs(value);
		  // eslint-disable-next-line no-self-compare
		  if (value != value || value === Infinity) {
		    // eslint-disable-next-line no-self-compare
		    m = value != value ? 1 : 0;
		    e = eMax;
		  } else {
		    e = floor(log(value) / LN2);
		    if (value * (c = pow(2, -e)) < 1) {
		      e--;
		      c *= 2;
		    }
		    if (e + eBias >= 1) {
		      value += rt / c;
		    } else {
		      value += rt * pow(2, 1 - eBias);
		    }
		    if (value * c >= 2) {
		      e++;
		      c /= 2;
		    }
		    if (e + eBias >= eMax) {
		      m = 0;
		      e = eMax;
		    } else if (e + eBias >= 1) {
		      m = (value * c - 1) * pow(2, mLen);
		      e = e + eBias;
		    } else {
		      m = value * pow(2, eBias - 1) * pow(2, mLen);
		      e = 0;
		    }
		  }
		  for (; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);
		  e = e << mLen | m;
		  eLen += mLen;
		  for (; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);
		  buffer[--i] |= s * 128;
		  return buffer;
		}
		function unpackIEEE754(buffer, mLen, nBytes) {
		  var eLen = nBytes * 8 - mLen - 1;
		  var eMax = (1 << eLen) - 1;
		  var eBias = eMax >> 1;
		  var nBits = eLen - 7;
		  var i = nBytes - 1;
		  var s = buffer[i--];
		  var e = s & 127;
		  var m;
		  s >>= 7;
		  for (; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8);
		  m = e & (1 << -nBits) - 1;
		  e >>= -nBits;
		  nBits += mLen;
		  for (; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8);
		  if (e === 0) {
		    e = 1 - eBias;
		  } else if (e === eMax) {
		    return m ? NaN : s ? -Infinity : Infinity;
		  } else {
		    m = m + pow(2, mLen);
		    e = e - eBias;
		  } return (s ? -1 : 1) * m * pow(2, e - mLen);
		}
	
		function unpackI32(bytes) {
		  return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];
		}
		function packI8(it) {
		  return [it & 0xff];
		}
		function packI16(it) {
		  return [it & 0xff, it >> 8 & 0xff];
		}
		function packI32(it) {
		  return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];
		}
		function packF64(it) {
		  return packIEEE754(it, 52, 8);
		}
		function packF32(it) {
		  return packIEEE754(it, 23, 4);
		}
	
		function addGetter(C, key, internal) {
		  dP(C[PROTOTYPE], key, { get: function () { return this[internal]; } });
		}
	
		function get(view, bytes, index, isLittleEndian) {
		  var numIndex = +index;
		  var intIndex = toIndex(numIndex);
		  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);
		  var store = view[$BUFFER]._b;
		  var start = intIndex + view[$OFFSET];
		  var pack = store.slice(start, start + bytes);
		  return isLittleEndian ? pack : pack.reverse();
		}
		function set(view, bytes, index, conversion, value, isLittleEndian) {
		  var numIndex = +index;
		  var intIndex = toIndex(numIndex);
		  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);
		  var store = view[$BUFFER]._b;
		  var start = intIndex + view[$OFFSET];
		  var pack = conversion(+value);
		  for (var i = 0; i < bytes; i++) store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];
		}
	
		if (!$typed.ABV) {
		  $ArrayBuffer = function ArrayBuffer(length) {
		    anInstance(this, $ArrayBuffer, ARRAY_BUFFER);
		    var byteLength = toIndex(length);
		    this._b = arrayFill.call(Array(byteLength), 0);
		    this[$LENGTH] = byteLength;
		  };
	
		  $DataView = function DataView(buffer, byteOffset, byteLength) {
		    anInstance(this, $DataView, DATA_VIEW);
		    anInstance(buffer, $ArrayBuffer, DATA_VIEW);
		    var bufferLength = buffer[$LENGTH];
		    var offset = toInteger(byteOffset);
		    if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset!');
		    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);
		    if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);
		    this[$BUFFER] = buffer;
		    this[$OFFSET] = offset;
		    this[$LENGTH] = byteLength;
		  };
	
		  if (DESCRIPTORS) {
		    addGetter($ArrayBuffer, BYTE_LENGTH, '_l');
		    addGetter($DataView, BUFFER, '_b');
		    addGetter($DataView, BYTE_LENGTH, '_l');
		    addGetter($DataView, BYTE_OFFSET, '_o');
		  }
	
		  redefineAll($DataView[PROTOTYPE], {
		    getInt8: function getInt8(byteOffset) {
		      return get(this, 1, byteOffset)[0] << 24 >> 24;
		    },
		    getUint8: function getUint8(byteOffset) {
		      return get(this, 1, byteOffset)[0];
		    },
		    getInt16: function getInt16(byteOffset /* , littleEndian */) {
		      var bytes = get(this, 2, byteOffset, arguments[1]);
		      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;
		    },
		    getUint16: function getUint16(byteOffset /* , littleEndian */) {
		      var bytes = get(this, 2, byteOffset, arguments[1]);
		      return bytes[1] << 8 | bytes[0];
		    },
		    getInt32: function getInt32(byteOffset /* , littleEndian */) {
		      return unpackI32(get(this, 4, byteOffset, arguments[1]));
		    },
		    getUint32: function getUint32(byteOffset /* , littleEndian */) {
		      return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;
		    },
		    getFloat32: function getFloat32(byteOffset /* , littleEndian */) {
		      return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);
		    },
		    getFloat64: function getFloat64(byteOffset /* , littleEndian */) {
		      return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);
		    },
		    setInt8: function setInt8(byteOffset, value) {
		      set(this, 1, byteOffset, packI8, value);
		    },
		    setUint8: function setUint8(byteOffset, value) {
		      set(this, 1, byteOffset, packI8, value);
		    },
		    setInt16: function setInt16(byteOffset, value /* , littleEndian */) {
		      set(this, 2, byteOffset, packI16, value, arguments[2]);
		    },
		    setUint16: function setUint16(byteOffset, value /* , littleEndian */) {
		      set(this, 2, byteOffset, packI16, value, arguments[2]);
		    },
		    setInt32: function setInt32(byteOffset, value /* , littleEndian */) {
		      set(this, 4, byteOffset, packI32, value, arguments[2]);
		    },
		    setUint32: function setUint32(byteOffset, value /* , littleEndian */) {
		      set(this, 4, byteOffset, packI32, value, arguments[2]);
		    },
		    setFloat32: function setFloat32(byteOffset, value /* , littleEndian */) {
		      set(this, 4, byteOffset, packF32, value, arguments[2]);
		    },
		    setFloat64: function setFloat64(byteOffset, value /* , littleEndian */) {
		      set(this, 8, byteOffset, packF64, value, arguments[2]);
		    }
		  });
		} else {
		  if (!fails(function () {
		    $ArrayBuffer(1);
		  }) || !fails(function () {
		    new $ArrayBuffer(-1); // eslint-disable-line no-new
		  }) || fails(function () {
		    new $ArrayBuffer(); // eslint-disable-line no-new
		    new $ArrayBuffer(1.5); // eslint-disable-line no-new
		    new $ArrayBuffer(NaN); // eslint-disable-line no-new
		    return $ArrayBuffer.name != ARRAY_BUFFER;
		  })) {
		    $ArrayBuffer = function ArrayBuffer(length) {
		      anInstance(this, $ArrayBuffer);
		      return new BaseBuffer(toIndex(length));
		    };
		    var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];
		    for (var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j;) {
		      if (!((key = keys[j++]) in $ArrayBuffer)) hide($ArrayBuffer, key, BaseBuffer[key]);
		    }
		    if (!LIBRARY) ArrayBufferProto.constructor = $ArrayBuffer;
		  }
		  // iOS Safari 7.x bug
		  var view = new $DataView(new $ArrayBuffer(2));
		  var $setInt8 = $DataView[PROTOTYPE].setInt8;
		  view.setInt8(0, 2147483648);
		  view.setInt8(1, 2147483649);
		  if (view.getInt8(0) || !view.getInt8(1)) redefineAll($DataView[PROTOTYPE], {
		    setInt8: function setInt8(byteOffset, value) {
		      $setInt8.call(this, byteOffset, value << 24 >> 24);
		    },
		    setUint8: function setUint8(byteOffset, value) {
		      $setInt8.call(this, byteOffset, value << 24 >> 24);
		    }
		  }, true);
		}
		setToStringTag($ArrayBuffer, ARRAY_BUFFER);
		setToStringTag($DataView, DATA_VIEW);
		hide($DataView[PROTOTYPE], $typed.VIEW, true);
		exports[ARRAY_BUFFER] = $ArrayBuffer;
		exports[DATA_VIEW] = $DataView;
	
	
	/***/ },
	/* 491 */
	/***/ function(module, exports, __webpack_require__) {
	
		// https://tc39.github.io/ecma262/#sec-toindex
		var toInteger = __webpack_require__(303);
		var toLength = __webpack_require__(302);
		module.exports = function (it) {
		  if (it === undefined) return 0;
		  var number = toInteger(it);
		  var length = toLength(number);
		  if (number !== length) throw RangeError('Wrong length!');
		  return length;
		};
	
	
	/***/ },
	/* 492 */
	/***/ function(module, exports, __webpack_require__) {
	
		var $export = __webpack_require__(273);
		$export($export.G + $export.W + $export.F * !__webpack_require__(489).ABV, {
		  DataView: __webpack_require__(490).DataView
		});
	
	
	/***/ },
	/* 493 */
	/***/ function(module, exports, __webpack_require__) {
	
		__webpack_require__(494)('Int8', 1, function (init) {
		  return function Int8Array(data, byteOffset, length) {
		    return init(this, data, byteOffset, length);
		  };
		});
	
	
	/***/ },
	/* 494 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		if (__webpack_require__(271)) {
		  var LIBRARY = __webpack_require__(293);
		  var global = __webpack_require__(269);
		  var fails = __webpack_require__(272);
		  var $export = __webpack_require__(273);
		  var $typed = __webpack_require__(489);
		  var $buffer = __webpack_require__(490);
		  var ctx = __webpack_require__(285);
		  var anInstance = __webpack_require__(471);
		  var propertyDesc = __webpack_require__(282);
		  var hide = __webpack_require__(275);
		  var redefineAll = __webpack_require__(479);
		  var toInteger = __webpack_require__(303);
		  var toLength = __webpack_require__(302);
		  var toIndex = __webpack_require__(491);
		  var toAbsoluteIndex = __webpack_require__(304);
		  var toPrimitive = __webpack_require__(281);
		  var has = __webpack_require__(270);
		  var classof = __webpack_require__(339);
		  var isObject = __webpack_require__(278);
		  var toObject = __webpack_require__(322);
		  var isArrayIter = __webpack_require__(428);
		  var create = __webpack_require__(310);
		  var getPrototypeOf = __webpack_require__(323);
		  var gOPN = __webpack_require__(314).f;
		  var getIterFn = __webpack_require__(430);
		  var uid = __webpack_require__(284);
		  var wks = __webpack_require__(290);
		  var createArrayMethod = __webpack_require__(438);
		  var createArrayIncludes = __webpack_require__(301);
		  var speciesConstructor = __webpack_require__(473);
		  var ArrayIterators = __webpack_require__(459);
		  var Iterators = __webpack_require__(394);
		  var $iterDetect = __webpack_require__(431);
		  var setSpecies = __webpack_require__(458);
		  var arrayFill = __webpack_require__(454);
		  var arrayCopyWithin = __webpack_require__(451);
		  var $DP = __webpack_require__(276);
		  var $GOPD = __webpack_require__(315);
		  var dP = $DP.f;
		  var gOPD = $GOPD.f;
		  var RangeError = global.RangeError;
		  var TypeError = global.TypeError;
		  var Uint8Array = global.Uint8Array;
		  var ARRAY_BUFFER = 'ArrayBuffer';
		  var SHARED_BUFFER = 'Shared' + ARRAY_BUFFER;
		  var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';
		  var PROTOTYPE = 'prototype';
		  var ArrayProto = Array[PROTOTYPE];
		  var $ArrayBuffer = $buffer.ArrayBuffer;
		  var $DataView = $buffer.DataView;
		  var arrayForEach = createArrayMethod(0);
		  var arrayFilter = createArrayMethod(2);
		  var arraySome = createArrayMethod(3);
		  var arrayEvery = createArrayMethod(4);
		  var arrayFind = createArrayMethod(5);
		  var arrayFindIndex = createArrayMethod(6);
		  var arrayIncludes = createArrayIncludes(true);
		  var arrayIndexOf = createArrayIncludes(false);
		  var arrayValues = ArrayIterators.values;
		  var arrayKeys = ArrayIterators.keys;
		  var arrayEntries = ArrayIterators.entries;
		  var arrayLastIndexOf = ArrayProto.lastIndexOf;
		  var arrayReduce = ArrayProto.reduce;
		  var arrayReduceRight = ArrayProto.reduceRight;
		  var arrayJoin = ArrayProto.join;
		  var arraySort = ArrayProto.sort;
		  var arraySlice = ArrayProto.slice;
		  var arrayToString = ArrayProto.toString;
		  var arrayToLocaleString = ArrayProto.toLocaleString;
		  var ITERATOR = wks('iterator');
		  var TAG = wks('toStringTag');
		  var TYPED_CONSTRUCTOR = uid('typed_constructor');
		  var DEF_CONSTRUCTOR = uid('def_constructor');
		  var ALL_CONSTRUCTORS = $typed.CONSTR;
		  var TYPED_ARRAY = $typed.TYPED;
		  var VIEW = $typed.VIEW;
		  var WRONG_LENGTH = 'Wrong length!';
	
		  var $map = createArrayMethod(1, function (O, length) {
		    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);
		  });
	
		  var LITTLE_ENDIAN = fails(function () {
		    // eslint-disable-next-line no-undef
		    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;
		  });
	
		  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function () {
		    new Uint8Array(1).set({});
		  });
	
		  var toOffset = function (it, BYTES) {
		    var offset = toInteger(it);
		    if (offset < 0 || offset % BYTES) throw RangeError('Wrong offset!');
		    return offset;
		  };
	
		  var validate = function (it) {
		    if (isObject(it) && TYPED_ARRAY in it) return it;
		    throw TypeError(it + ' is not a typed array!');
		  };
	
		  var allocate = function (C, length) {
		    if (!(isObject(C) && TYPED_CONSTRUCTOR in C)) {
		      throw TypeError('It is not a typed array constructor!');
		    } return new C(length);
		  };
	
		  var speciesFromList = function (O, list) {
		    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);
		  };
	
		  var fromList = function (C, list) {
		    var index = 0;
		    var length = list.length;
		    var result = allocate(C, length);
		    while (length > index) result[index] = list[index++];
		    return result;
		  };
	
		  var addGetter = function (it, key, internal) {
		    dP(it, key, { get: function () { return this._d[internal]; } });
		  };
	
		  var $from = function from(source /* , mapfn, thisArg */) {
		    var O = toObject(source);
		    var aLen = arguments.length;
		    var mapfn = aLen > 1 ? arguments[1] : undefined;
		    var mapping = mapfn !== undefined;
		    var iterFn = getIterFn(O);
		    var i, length, values, result, step, iterator;
		    if (iterFn != undefined && !isArrayIter(iterFn)) {
		      for (iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++) {
		        values.push(step.value);
		      } O = values;
		    }
		    if (mapping && aLen > 2) mapfn = ctx(mapfn, arguments[2], 2);
		    for (i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++) {
		      result[i] = mapping ? mapfn(O[i], i) : O[i];
		    }
		    return result;
		  };
	
		  var $of = function of(/* ...items */) {
		    var index = 0;
		    var length = arguments.length;
		    var result = allocate(this, length);
		    while (length > index) result[index] = arguments[index++];
		    return result;
		  };
	
		  // iOS Safari 6.x fails here
		  var TO_LOCALE_BUG = !!Uint8Array && fails(function () { arrayToLocaleString.call(new Uint8Array(1)); });
	
		  var $toLocaleString = function toLocaleString() {
		    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);
		  };
	
		  var proto = {
		    copyWithin: function copyWithin(target, start /* , end */) {
		      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);
		    },
		    every: function every(callbackfn /* , thisArg */) {
		      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
		    },
		    fill: function fill(value /* , start, end */) { // eslint-disable-line no-unused-vars
		      return arrayFill.apply(validate(this), arguments);
		    },
		    filter: function filter(callbackfn /* , thisArg */) {
		      return speciesFromList(this, arrayFilter(validate(this), callbackfn,
		        arguments.length > 1 ? arguments[1] : undefined));
		    },
		    find: function find(predicate /* , thisArg */) {
		      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
		    },
		    findIndex: function findIndex(predicate /* , thisArg */) {
		      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
		    },
		    forEach: function forEach(callbackfn /* , thisArg */) {
		      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
		    },
		    indexOf: function indexOf(searchElement /* , fromIndex */) {
		      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
		    },
		    includes: function includes(searchElement /* , fromIndex */) {
		      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
		    },
		    join: function join(separator) { // eslint-disable-line no-unused-vars
		      return arrayJoin.apply(validate(this), arguments);
		    },
		    lastIndexOf: function lastIndexOf(searchElement /* , fromIndex */) { // eslint-disable-line no-unused-vars
		      return arrayLastIndexOf.apply(validate(this), arguments);
		    },
		    map: function map(mapfn /* , thisArg */) {
		      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);
		    },
		    reduce: function reduce(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars
		      return arrayReduce.apply(validate(this), arguments);
		    },
		    reduceRight: function reduceRight(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars
		      return arrayReduceRight.apply(validate(this), arguments);
		    },
		    reverse: function reverse() {
		      var that = this;
		      var length = validate(that).length;
		      var middle = Math.floor(length / 2);
		      var index = 0;
		      var value;
		      while (index < middle) {
		        value = that[index];
		        that[index++] = that[--length];
		        that[length] = value;
		      } return that;
		    },
		    some: function some(callbackfn /* , thisArg */) {
		      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
		    },
		    sort: function sort(comparefn) {
		      return arraySort.call(validate(this), comparefn);
		    },
		    subarray: function subarray(begin, end) {
		      var O = validate(this);
		      var length = O.length;
		      var $begin = toAbsoluteIndex(begin, length);
		      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(
		        O.buffer,
		        O.byteOffset + $begin * O.BYTES_PER_ELEMENT,
		        toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - $begin)
		      );
		    }
		  };
	
		  var $slice = function slice(start, end) {
		    return speciesFromList(this, arraySlice.call(validate(this), start, end));
		  };
	
		  var $set = function set(arrayLike /* , offset */) {
		    validate(this);
		    var offset = toOffset(arguments[1], 1);
		    var length = this.length;
		    var src = toObject(arrayLike);
		    var len = toLength(src.length);
		    var index = 0;
		    if (len + offset > length) throw RangeError(WRONG_LENGTH);
		    while (index < len) this[offset + index] = src[index++];
		  };
	
		  var $iterators = {
		    entries: function entries() {
		      return arrayEntries.call(validate(this));
		    },
		    keys: function keys() {
		      return arrayKeys.call(validate(this));
		    },
		    values: function values() {
		      return arrayValues.call(validate(this));
		    }
		  };
	
		  var isTAIndex = function (target, key) {
		    return isObject(target)
		      && target[TYPED_ARRAY]
		      && typeof key != 'symbol'
		      && key in target
		      && String(+key) == String(key);
		  };
		  var $getDesc = function getOwnPropertyDescriptor(target, key) {
		    return isTAIndex(target, key = toPrimitive(key, true))
		      ? propertyDesc(2, target[key])
		      : gOPD(target, key);
		  };
		  var $setDesc = function defineProperty(target, key, desc) {
		    if (isTAIndex(target, key = toPrimitive(key, true))
		      && isObject(desc)
		      && has(desc, 'value')
		      && !has(desc, 'get')
		      && !has(desc, 'set')
		      // TODO: add validation descriptor w/o calling accessors
		      && !desc.configurable
		      && (!has(desc, 'writable') || desc.writable)
		      && (!has(desc, 'enumerable') || desc.enumerable)
		    ) {
		      target[key] = desc.value;
		      return target;
		    } return dP(target, key, desc);
		  };
	
		  if (!ALL_CONSTRUCTORS) {
		    $GOPD.f = $getDesc;
		    $DP.f = $setDesc;
		  }
	
		  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {
		    getOwnPropertyDescriptor: $getDesc,
		    defineProperty: $setDesc
		  });
	
		  if (fails(function () { arrayToString.call({}); })) {
		    arrayToString = arrayToLocaleString = function toString() {
		      return arrayJoin.call(this);
		    };
		  }
	
		  var $TypedArrayPrototype$ = redefineAll({}, proto);
		  redefineAll($TypedArrayPrototype$, $iterators);
		  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);
		  redefineAll($TypedArrayPrototype$, {
		    slice: $slice,
		    set: $set,
		    constructor: function () { /* noop */ },
		    toString: arrayToString,
		    toLocaleString: $toLocaleString
		  });
		  addGetter($TypedArrayPrototype$, 'buffer', 'b');
		  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');
		  addGetter($TypedArrayPrototype$, 'byteLength', 'l');
		  addGetter($TypedArrayPrototype$, 'length', 'e');
		  dP($TypedArrayPrototype$, TAG, {
		    get: function () { return this[TYPED_ARRAY]; }
		  });
	
		  // eslint-disable-next-line max-statements
		  module.exports = function (KEY, BYTES, wrapper, CLAMPED) {
		    CLAMPED = !!CLAMPED;
		    var NAME = KEY + (CLAMPED ? 'Clamped' : '') + 'Array';
		    var GETTER = 'get' + KEY;
		    var SETTER = 'set' + KEY;
		    var TypedArray = global[NAME];
		    var Base = TypedArray || {};
		    var TAC = TypedArray && getPrototypeOf(TypedArray);
		    var FORCED = !TypedArray || !$typed.ABV;
		    var O = {};
		    var TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];
		    var getter = function (that, index) {
		      var data = that._d;
		      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);
		    };
		    var setter = function (that, index, value) {
		      var data = that._d;
		      if (CLAMPED) value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;
		      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);
		    };
		    var addElement = function (that, index) {
		      dP(that, index, {
		        get: function () {
		          return getter(this, index);
		        },
		        set: function (value) {
		          return setter(this, index, value);
		        },
		        enumerable: true
		      });
		    };
		    if (FORCED) {
		      TypedArray = wrapper(function (that, data, $offset, $length) {
		        anInstance(that, TypedArray, NAME, '_d');
		        var index = 0;
		        var offset = 0;
		        var buffer, byteLength, length, klass;
		        if (!isObject(data)) {
		          length = toIndex(data);
		          byteLength = length * BYTES;
		          buffer = new $ArrayBuffer(byteLength);
		        } else if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {
		          buffer = data;
		          offset = toOffset($offset, BYTES);
		          var $len = data.byteLength;
		          if ($length === undefined) {
		            if ($len % BYTES) throw RangeError(WRONG_LENGTH);
		            byteLength = $len - offset;
		            if (byteLength < 0) throw RangeError(WRONG_LENGTH);
		          } else {
		            byteLength = toLength($length) * BYTES;
		            if (byteLength + offset > $len) throw RangeError(WRONG_LENGTH);
		          }
		          length = byteLength / BYTES;
		        } else if (TYPED_ARRAY in data) {
		          return fromList(TypedArray, data);
		        } else {
		          return $from.call(TypedArray, data);
		        }
		        hide(that, '_d', {
		          b: buffer,
		          o: offset,
		          l: byteLength,
		          e: length,
		          v: new $DataView(buffer)
		        });
		        while (index < length) addElement(that, index++);
		      });
		      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);
		      hide(TypedArrayPrototype, 'constructor', TypedArray);
		    } else if (!fails(function () {
		      TypedArray(1);
		    }) || !fails(function () {
		      new TypedArray(-1); // eslint-disable-line no-new
		    }) || !$iterDetect(function (iter) {
		      new TypedArray(); // eslint-disable-line no-new
		      new TypedArray(null); // eslint-disable-line no-new
		      new TypedArray(1.5); // eslint-disable-line no-new
		      new TypedArray(iter); // eslint-disable-line no-new
		    }, true)) {
		      TypedArray = wrapper(function (that, data, $offset, $length) {
		        anInstance(that, TypedArray, NAME);
		        var klass;
		        // `ws` module bug, temporarily remove validation length for Uint8Array
		        // https://github.com/websockets/ws/pull/645
		        if (!isObject(data)) return new Base(toIndex(data));
		        if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {
		          return $length !== undefined
		            ? new Base(data, toOffset($offset, BYTES), $length)
		            : $offset !== undefined
		              ? new Base(data, toOffset($offset, BYTES))
		              : new Base(data);
		        }
		        if (TYPED_ARRAY in data) return fromList(TypedArray, data);
		        return $from.call(TypedArray, data);
		      });
		      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function (key) {
		        if (!(key in TypedArray)) hide(TypedArray, key, Base[key]);
		      });
		      TypedArray[PROTOTYPE] = TypedArrayPrototype;
		      if (!LIBRARY) TypedArrayPrototype.constructor = TypedArray;
		    }
		    var $nativeIterator = TypedArrayPrototype[ITERATOR];
		    var CORRECT_ITER_NAME = !!$nativeIterator
		      && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined);
		    var $iterator = $iterators.values;
		    hide(TypedArray, TYPED_CONSTRUCTOR, true);
		    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);
		    hide(TypedArrayPrototype, VIEW, true);
		    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);
	
		    if (CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)) {
		      dP(TypedArrayPrototype, TAG, {
		        get: function () { return NAME; }
		      });
		    }
	
		    O[NAME] = TypedArray;
	
		    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);
	
		    $export($export.S, NAME, {
		      BYTES_PER_ELEMENT: BYTES
		    });
	
		    $export($export.S + $export.F * fails(function () { Base.of.call(TypedArray, 1); }), NAME, {
		      from: $from,
		      of: $of
		    });
	
		    if (!(BYTES_PER_ELEMENT in TypedArrayPrototype)) hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);
	
		    $export($export.P, NAME, proto);
	
		    setSpecies(NAME);
	
		    $export($export.P + $export.F * FORCED_SET, NAME, { set: $set });
	
		    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);
	
		    if (!LIBRARY && TypedArrayPrototype.toString != arrayToString) TypedArrayPrototype.toString = arrayToString;
	
		    $export($export.P + $export.F * fails(function () {
		      new TypedArray(1).slice();
		    }), NAME, { slice: $slice });
	
		    $export($export.P + $export.F * (fails(function () {
		      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString();
		    }) || !fails(function () {
		      TypedArrayPrototype.toLocaleString.call([1, 2]);
		    })), NAME, { toLocaleString: $toLocaleString });
	
		    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;
		    if (!LIBRARY && !CORRECT_ITER_NAME) hide(TypedArrayPrototype, ITERATOR, $iterator);
		  };
		} else module.exports = function () { /* empty */ };
	
	
	/***/ },
	/* 495 */
	/***/ function(module, exports, __webpack_require__) {
	
		__webpack_require__(494)('Uint8', 1, function (init) {
		  return function Uint8Array(data, byteOffset, length) {
		    return init(this, data, byteOffset, length);
		  };
		});
	
	
	/***/ },
	/* 496 */
	/***/ function(module, exports, __webpack_require__) {
	
		__webpack_require__(494)('Uint8', 1, function (init) {
		  return function Uint8ClampedArray(data, byteOffset, length) {
		    return init(this, data, byteOffset, length);
		  };
		}, true);
	
	
	/***/ },
	/* 497 */
	/***/ function(module, exports, __webpack_require__) {
	
		__webpack_require__(494)('Int16', 2, function (init) {
		  return function Int16Array(data, byteOffset, length) {
		    return init(this, data, byteOffset, length);
		  };
		});
	
	
	/***/ },
	/* 498 */
	/***/ function(module, exports, __webpack_require__) {
	
		__webpack_require__(494)('Uint16', 2, function (init) {
		  return function Uint16Array(data, byteOffset, length) {
		    return init(this, data, byteOffset, length);
		  };
		});
	
	
	/***/ },
	/* 499 */
	/***/ function(module, exports, __webpack_require__) {
	
		__webpack_require__(494)('Int32', 4, function (init) {
		  return function Int32Array(data, byteOffset, length) {
		    return init(this, data, byteOffset, length);
		  };
		});
	
	
	/***/ },
	/* 500 */
	/***/ function(module, exports, __webpack_require__) {
	
		__webpack_require__(494)('Uint32', 4, function (init) {
		  return function Uint32Array(data, byteOffset, length) {
		    return init(this, data, byteOffset, length);
		  };
		});
	
	
	/***/ },
	/* 501 */
	/***/ function(module, exports, __webpack_require__) {
	
		__webpack_require__(494)('Float32', 4, function (init) {
		  return function Float32Array(data, byteOffset, length) {
		    return init(this, data, byteOffset, length);
		  };
		});
	
	
	/***/ },
	/* 502 */
	/***/ function(module, exports, __webpack_require__) {
	
		__webpack_require__(494)('Float64', 8, function (init) {
		  return function Float64Array(data, byteOffset, length) {
		    return init(this, data, byteOffset, length);
		  };
		});
	
	
	/***/ },
	/* 503 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 26.1.1 Reflect.apply(target, thisArgument, argumentsList)
		var $export = __webpack_require__(273);
		var aFunction = __webpack_require__(286);
		var anObject = __webpack_require__(277);
		var rApply = (__webpack_require__(269).Reflect || {}).apply;
		var fApply = Function.apply;
		// MS Edge argumentsList argument is optional
		$export($export.S + $export.F * !__webpack_require__(272)(function () {
		  rApply(function () { /* empty */ });
		}), 'Reflect', {
		  apply: function apply(target, thisArgument, argumentsList) {
		    var T = aFunction(target);
		    var L = anObject(argumentsList);
		    return rApply ? rApply(T, thisArgument, L) : fApply.call(T, thisArgument, L);
		  }
		});
	
	
	/***/ },
	/* 504 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])
		var $export = __webpack_require__(273);
		var create = __webpack_require__(310);
		var aFunction = __webpack_require__(286);
		var anObject = __webpack_require__(277);
		var isObject = __webpack_require__(278);
		var fails = __webpack_require__(272);
		var bind = __webpack_require__(341);
		var rConstruct = (__webpack_require__(269).Reflect || {}).construct;
	
		// MS Edge supports only 2 arguments and argumentsList argument is optional
		// FF Nightly sets third argument as `new.target`, but does not create `this` from it
		var NEW_TARGET_BUG = fails(function () {
		  function F() { /* empty */ }
		  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);
		});
		var ARGS_BUG = !fails(function () {
		  rConstruct(function () { /* empty */ });
		});
	
		$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {
		  construct: function construct(Target, args /* , newTarget */) {
		    aFunction(Target);
		    anObject(args);
		    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);
		    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);
		    if (Target == newTarget) {
		      // w/o altered newTarget, optimization for 0-4 arguments
		      switch (args.length) {
		        case 0: return new Target();
		        case 1: return new Target(args[0]);
		        case 2: return new Target(args[0], args[1]);
		        case 3: return new Target(args[0], args[1], args[2]);
		        case 4: return new Target(args[0], args[1], args[2], args[3]);
		      }
		      // w/o altered newTarget, lot of arguments case
		      var $args = [null];
		      $args.push.apply($args, args);
		      return new (bind.apply(Target, $args))();
		    }
		    // with altered newTarget, not support built-in constructors
		    var proto = newTarget.prototype;
		    var instance = create(isObject(proto) ? proto : Object.prototype);
		    var result = Function.apply.call(Target, instance, args);
		    return isObject(result) ? result : instance;
		  }
		});
	
	
	/***/ },
	/* 505 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 26.1.3 Reflect.defineProperty(target, propertyKey, attributes)
		var dP = __webpack_require__(276);
		var $export = __webpack_require__(273);
		var anObject = __webpack_require__(277);
		var toPrimitive = __webpack_require__(281);
	
		// MS Edge has broken Reflect.defineProperty - throwing instead of returning false
		$export($export.S + $export.F * __webpack_require__(272)(function () {
		  // eslint-disable-next-line no-undef
		  Reflect.defineProperty(dP.f({}, 1, { value: 1 }), 1, { value: 2 });
		}), 'Reflect', {
		  defineProperty: function defineProperty(target, propertyKey, attributes) {
		    anObject(target);
		    propertyKey = toPrimitive(propertyKey, true);
		    anObject(attributes);
		    try {
		      dP.f(target, propertyKey, attributes);
		      return true;
		    } catch (e) {
		      return false;
		    }
		  }
		});
	
	
	/***/ },
	/* 506 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 26.1.4 Reflect.deleteProperty(target, propertyKey)
		var $export = __webpack_require__(273);
		var gOPD = __webpack_require__(315).f;
		var anObject = __webpack_require__(277);
	
		$export($export.S, 'Reflect', {
		  deleteProperty: function deleteProperty(target, propertyKey) {
		    var desc = gOPD(anObject(target), propertyKey);
		    return desc && !desc.configurable ? false : delete target[propertyKey];
		  }
		});
	
	
	/***/ },
	/* 507 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		// 26.1.5 Reflect.enumerate(target)
		var $export = __webpack_require__(273);
		var anObject = __webpack_require__(277);
		var Enumerate = function (iterated) {
		  this._t = anObject(iterated); // target
		  this._i = 0;                  // next index
		  var keys = this._k = [];      // keys
		  var key;
		  for (key in iterated) keys.push(key);
		};
		__webpack_require__(395)(Enumerate, 'Object', function () {
		  var that = this;
		  var keys = that._k;
		  var key;
		  do {
		    if (that._i >= keys.length) return { value: undefined, done: true };
		  } while (!((key = keys[that._i++]) in that._t));
		  return { value: key, done: false };
		});
	
		$export($export.S, 'Reflect', {
		  enumerate: function enumerate(target) {
		    return new Enumerate(target);
		  }
		});
	
	
	/***/ },
	/* 508 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 26.1.6 Reflect.get(target, propertyKey [, receiver])
		var gOPD = __webpack_require__(315);
		var getPrototypeOf = __webpack_require__(323);
		var has = __webpack_require__(270);
		var $export = __webpack_require__(273);
		var isObject = __webpack_require__(278);
		var anObject = __webpack_require__(277);
	
		function get(target, propertyKey /* , receiver */) {
		  var receiver = arguments.length < 3 ? target : arguments[2];
		  var desc, proto;
		  if (anObject(target) === receiver) return target[propertyKey];
		  if (desc = gOPD.f(target, propertyKey)) return has(desc, 'value')
		    ? desc.value
		    : desc.get !== undefined
		      ? desc.get.call(receiver)
		      : undefined;
		  if (isObject(proto = getPrototypeOf(target))) return get(proto, propertyKey, receiver);
		}
	
		$export($export.S, 'Reflect', { get: get });
	
	
	/***/ },
	/* 509 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 26.1.7 Reflect.getOwnPropertyDescriptor(target, propertyKey)
		var gOPD = __webpack_require__(315);
		var $export = __webpack_require__(273);
		var anObject = __webpack_require__(277);
	
		$export($export.S, 'Reflect', {
		  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey) {
		    return gOPD.f(anObject(target), propertyKey);
		  }
		});
	
	
	/***/ },
	/* 510 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 26.1.8 Reflect.getPrototypeOf(target)
		var $export = __webpack_require__(273);
		var getProto = __webpack_require__(323);
		var anObject = __webpack_require__(277);
	
		$export($export.S, 'Reflect', {
		  getPrototypeOf: function getPrototypeOf(target) {
		    return getProto(anObject(target));
		  }
		});
	
	
	/***/ },
	/* 511 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 26.1.9 Reflect.has(target, propertyKey)
		var $export = __webpack_require__(273);
	
		$export($export.S, 'Reflect', {
		  has: function has(target, propertyKey) {
		    return propertyKey in target;
		  }
		});
	
	
	/***/ },
	/* 512 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 26.1.10 Reflect.isExtensible(target)
		var $export = __webpack_require__(273);
		var anObject = __webpack_require__(277);
		var $isExtensible = Object.isExtensible;
	
		$export($export.S, 'Reflect', {
		  isExtensible: function isExtensible(target) {
		    anObject(target);
		    return $isExtensible ? $isExtensible(target) : true;
		  }
		});
	
	
	/***/ },
	/* 513 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 26.1.11 Reflect.ownKeys(target)
		var $export = __webpack_require__(273);
	
		$export($export.S, 'Reflect', { ownKeys: __webpack_require__(514) });
	
	
	/***/ },
	/* 514 */
	/***/ function(module, exports, __webpack_require__) {
	
		// all object keys, includes non-enumerable and symbols
		var gOPN = __webpack_require__(314);
		var gOPS = __webpack_require__(307);
		var anObject = __webpack_require__(277);
		var Reflect = __webpack_require__(269).Reflect;
		module.exports = Reflect && Reflect.ownKeys || function ownKeys(it) {
		  var keys = gOPN.f(anObject(it));
		  var getSymbols = gOPS.f;
		  return getSymbols ? keys.concat(getSymbols(it)) : keys;
		};
	
	
	/***/ },
	/* 515 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 26.1.12 Reflect.preventExtensions(target)
		var $export = __webpack_require__(273);
		var anObject = __webpack_require__(277);
		var $preventExtensions = Object.preventExtensions;
	
		$export($export.S, 'Reflect', {
		  preventExtensions: function preventExtensions(target) {
		    anObject(target);
		    try {
		      if ($preventExtensions) $preventExtensions(target);
		      return true;
		    } catch (e) {
		      return false;
		    }
		  }
		});
	
	
	/***/ },
	/* 516 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 26.1.13 Reflect.set(target, propertyKey, V [, receiver])
		var dP = __webpack_require__(276);
		var gOPD = __webpack_require__(315);
		var getPrototypeOf = __webpack_require__(323);
		var has = __webpack_require__(270);
		var $export = __webpack_require__(273);
		var createDesc = __webpack_require__(282);
		var anObject = __webpack_require__(277);
		var isObject = __webpack_require__(278);
	
		function set(target, propertyKey, V /* , receiver */) {
		  var receiver = arguments.length < 4 ? target : arguments[3];
		  var ownDesc = gOPD.f(anObject(target), propertyKey);
		  var existingDescriptor, proto;
		  if (!ownDesc) {
		    if (isObject(proto = getPrototypeOf(target))) {
		      return set(proto, propertyKey, V, receiver);
		    }
		    ownDesc = createDesc(0);
		  }
		  if (has(ownDesc, 'value')) {
		    if (ownDesc.writable === false || !isObject(receiver)) return false;
		    existingDescriptor = gOPD.f(receiver, propertyKey) || createDesc(0);
		    existingDescriptor.value = V;
		    dP.f(receiver, propertyKey, existingDescriptor);
		    return true;
		  }
		  return ownDesc.set === undefined ? false : (ownDesc.set.call(receiver, V), true);
		}
	
		$export($export.S, 'Reflect', { set: set });
	
	
	/***/ },
	/* 517 */
	/***/ function(module, exports, __webpack_require__) {
	
		// 26.1.14 Reflect.setPrototypeOf(target, proto)
		var $export = __webpack_require__(273);
		var setProto = __webpack_require__(337);
	
		if (setProto) $export($export.S, 'Reflect', {
		  setPrototypeOf: function setPrototypeOf(target, proto) {
		    setProto.check(target, proto);
		    try {
		      setProto.set(target, proto);
		      return true;
		    } catch (e) {
		      return false;
		    }
		  }
		});
	
	
	/***/ },
	/* 518 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		// https://github.com/tc39/Array.prototype.includes
		var $export = __webpack_require__(273);
		var $includes = __webpack_require__(301)(true);
	
		$export($export.P, 'Array', {
		  includes: function includes(el /* , fromIndex = 0 */) {
		    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
		  }
		});
	
		__webpack_require__(452)('includes');
	
	
	/***/ },
	/* 519 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		// https://tc39.github.io/proposal-flatMap/#sec-Array.prototype.flatMap
		var $export = __webpack_require__(273);
		var flattenIntoArray = __webpack_require__(520);
		var toObject = __webpack_require__(322);
		var toLength = __webpack_require__(302);
		var aFunction = __webpack_require__(286);
		var arraySpeciesCreate = __webpack_require__(439);
	
		$export($export.P, 'Array', {
		  flatMap: function flatMap(callbackfn /* , thisArg */) {
		    var O = toObject(this);
		    var sourceLen, A;
		    aFunction(callbackfn);
		    sourceLen = toLength(O.length);
		    A = arraySpeciesCreate(O, 0);
		    flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments[1]);
		    return A;
		  }
		});
	
		__webpack_require__(452)('flatMap');
	
	
	/***/ },
	/* 520 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray
		var isArray = __webpack_require__(309);
		var isObject = __webpack_require__(278);
		var toLength = __webpack_require__(302);
		var ctx = __webpack_require__(285);
		var IS_CONCAT_SPREADABLE = __webpack_require__(290)('isConcatSpreadable');
	
		function flattenIntoArray(target, original, source, sourceLen, start, depth, mapper, thisArg) {
		  var targetIndex = start;
		  var sourceIndex = 0;
		  var mapFn = mapper ? ctx(mapper, thisArg, 3) : false;
		  var element, spreadable;
	
		  while (sourceIndex < sourceLen) {
		    if (sourceIndex in source) {
		      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];
	
		      spreadable = false;
		      if (isObject(element)) {
		        spreadable = element[IS_CONCAT_SPREADABLE];
		        spreadable = spreadable !== undefined ? !!spreadable : isArray(element);
		      }
	
		      if (spreadable && depth > 0) {
		        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;
		      } else {
		        if (targetIndex >= 0x1fffffffffffff) throw TypeError();
		        target[targetIndex] = element;
		      }
	
		      targetIndex++;
		    }
		    sourceIndex++;
		  }
		  return targetIndex;
		}
	
		module.exports = flattenIntoArray;
	
	
	/***/ },
	/* 521 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		// https://tc39.github.io/proposal-flatMap/#sec-Array.prototype.flatten
		var $export = __webpack_require__(273);
		var flattenIntoArray = __webpack_require__(520);
		var toObject = __webpack_require__(322);
		var toLength = __webpack_require__(302);
		var toInteger = __webpack_require__(303);
		var arraySpeciesCreate = __webpack_require__(439);
	
		$export($export.P, 'Array', {
		  flatten: function flatten(/* depthArg = 1 */) {
		    var depthArg = arguments[0];
		    var O = toObject(this);
		    var sourceLen = toLength(O.length);
		    var A = arraySpeciesCreate(O, 0);
		    flattenIntoArray(A, O, O, sourceLen, 0, depthArg === undefined ? 1 : toInteger(depthArg));
		    return A;
		  }
		});
	
		__webpack_require__(452)('flatten');
	
	
	/***/ },
	/* 522 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		// https://github.com/mathiasbynens/String.prototype.at
		var $export = __webpack_require__(273);
		var $at = __webpack_require__(392)(true);
	
		$export($export.P, 'String', {
		  at: function at(pos) {
		    return $at(this, pos);
		  }
		});
	
	
	/***/ },
	/* 523 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		// https://github.com/tc39/proposal-string-pad-start-end
		var $export = __webpack_require__(273);
		var $pad = __webpack_require__(524);
	
		$export($export.P, 'String', {
		  padStart: function padStart(maxLength /* , fillString = ' ' */) {
		    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);
		  }
		});
	
	
	/***/ },
	/* 524 */
	/***/ function(module, exports, __webpack_require__) {
	
		// https://github.com/tc39/proposal-string-pad-start-end
		var toLength = __webpack_require__(302);
		var repeat = __webpack_require__(355);
		var defined = __webpack_require__(300);
	
		module.exports = function (that, maxLength, fillString, left) {
		  var S = String(defined(that));
		  var stringLength = S.length;
		  var fillStr = fillString === undefined ? ' ' : String(fillString);
		  var intMaxLength = toLength(maxLength);
		  if (intMaxLength <= stringLength || fillStr == '') return S;
		  var fillLen = intMaxLength - stringLength;
		  var stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));
		  if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);
		  return left ? stringFiller + S : S + stringFiller;
		};
	
	
	/***/ },
	/* 525 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		// https://github.com/tc39/proposal-string-pad-start-end
		var $export = __webpack_require__(273);
		var $pad = __webpack_require__(524);
	
		$export($export.P, 'String', {
		  padEnd: function padEnd(maxLength /* , fillString = ' ' */) {
		    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);
		  }
		});
	
	
	/***/ },
	/* 526 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		// https://github.com/sebmarkbage/ecmascript-string-left-right-trim
		__webpack_require__(347)('trimLeft', function ($trim) {
		  return function trimLeft() {
		    return $trim(this, 1);
		  };
		}, 'trimStart');
	
	
	/***/ },
	/* 527 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		// https://github.com/sebmarkbage/ecmascript-string-left-right-trim
		__webpack_require__(347)('trimRight', function ($trim) {
		  return function trimRight() {
		    return $trim(this, 2);
		  };
		}, 'trimEnd');
	
	
	/***/ },
	/* 528 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		// https://tc39.github.io/String.prototype.matchAll/
		var $export = __webpack_require__(273);
		var defined = __webpack_require__(300);
		var toLength = __webpack_require__(302);
		var isRegExp = __webpack_require__(399);
		var getFlags = __webpack_require__(462);
		var RegExpProto = RegExp.prototype;
	
		var $RegExpStringIterator = function (regexp, string) {
		  this._r = regexp;
		  this._s = string;
		};
	
		__webpack_require__(395)($RegExpStringIterator, 'RegExp String', function next() {
		  var match = this._r.exec(this._s);
		  return { value: match, done: match === null };
		});
	
		$export($export.P, 'String', {
		  matchAll: function matchAll(regexp) {
		    defined(this);
		    if (!isRegExp(regexp)) throw TypeError(regexp + ' is not a regexp!');
		    var S = String(this);
		    var flags = 'flags' in RegExpProto ? String(regexp.flags) : getFlags.call(regexp);
		    var rx = new RegExp(regexp.source, ~flags.indexOf('g') ? flags : 'g' + flags);
		    rx.lastIndex = toLength(regexp.lastIndex);
		    return new $RegExpStringIterator(rx, S);
		  }
		});
	
	
	/***/ },
	/* 529 */
	/***/ function(module, exports, __webpack_require__) {
	
		__webpack_require__(292)('asyncIterator');
	
	
	/***/ },
	/* 530 */
	/***/ function(module, exports, __webpack_require__) {
	
		__webpack_require__(292)('observable');
	
	
	/***/ },
	/* 531 */
	/***/ function(module, exports, __webpack_require__) {
	
		// https://github.com/tc39/proposal-object-getownpropertydescriptors
		var $export = __webpack_require__(273);
		var ownKeys = __webpack_require__(514);
		var toIObject = __webpack_require__(297);
		var gOPD = __webpack_require__(315);
		var createProperty = __webpack_require__(429);
	
		$export($export.S, 'Object', {
		  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {
		    var O = toIObject(object);
		    var getDesc = gOPD.f;
		    var keys = ownKeys(O);
		    var result = {};
		    var i = 0;
		    var key, desc;
		    while (keys.length > i) {
		      desc = getDesc(O, key = keys[i++]);
		      if (desc !== undefined) createProperty(result, key, desc);
		    }
		    return result;
		  }
		});
	
	
	/***/ },
	/* 532 */
	/***/ function(module, exports, __webpack_require__) {
	
		// https://github.com/tc39/proposal-object-values-entries
		var $export = __webpack_require__(273);
		var $values = __webpack_require__(533)(false);
	
		$export($export.S, 'Object', {
		  values: function values(it) {
		    return $values(it);
		  }
		});
	
	
	/***/ },
	/* 533 */
	/***/ function(module, exports, __webpack_require__) {
	
		var getKeys = __webpack_require__(295);
		var toIObject = __webpack_require__(297);
		var isEnum = __webpack_require__(308).f;
		module.exports = function (isEntries) {
		  return function (it) {
		    var O = toIObject(it);
		    var keys = getKeys(O);
		    var length = keys.length;
		    var i = 0;
		    var result = [];
		    var key;
		    while (length > i) if (isEnum.call(O, key = keys[i++])) {
		      result.push(isEntries ? [key, O[key]] : O[key]);
		    } return result;
		  };
		};
	
	
	/***/ },
	/* 534 */
	/***/ function(module, exports, __webpack_require__) {
	
		// https://github.com/tc39/proposal-object-values-entries
		var $export = __webpack_require__(273);
		var $entries = __webpack_require__(533)(true);
	
		$export($export.S, 'Object', {
		  entries: function entries(it) {
		    return $entries(it);
		  }
		});
	
	
	/***/ },
	/* 535 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		var $export = __webpack_require__(273);
		var toObject = __webpack_require__(322);
		var aFunction = __webpack_require__(286);
		var $defineProperty = __webpack_require__(276);
	
		// B.2.2.2 Object.prototype.__defineGetter__(P, getter)
		__webpack_require__(271) && $export($export.P + __webpack_require__(536), 'Object', {
		  __defineGetter__: function __defineGetter__(P, getter) {
		    $defineProperty.f(toObject(this), P, { get: aFunction(getter), enumerable: true, configurable: true });
		  }
		});
	
	
	/***/ },
	/* 536 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		// Forced replacement prototype accessors methods
		module.exports = __webpack_require__(293) || !__webpack_require__(272)(function () {
		  var K = Math.random();
		  // In FF throws only define methods
		  // eslint-disable-next-line no-undef, no-useless-call
		  __defineSetter__.call(null, K, function () { /* empty */ });
		  delete __webpack_require__(269)[K];
		});
	
	
	/***/ },
	/* 537 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		var $export = __webpack_require__(273);
		var toObject = __webpack_require__(322);
		var aFunction = __webpack_require__(286);
		var $defineProperty = __webpack_require__(276);
	
		// B.2.2.3 Object.prototype.__defineSetter__(P, setter)
		__webpack_require__(271) && $export($export.P + __webpack_require__(536), 'Object', {
		  __defineSetter__: function __defineSetter__(P, setter) {
		    $defineProperty.f(toObject(this), P, { set: aFunction(setter), enumerable: true, configurable: true });
		  }
		});
	
	
	/***/ },
	/* 538 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		var $export = __webpack_require__(273);
		var toObject = __webpack_require__(322);
		var toPrimitive = __webpack_require__(281);
		var getPrototypeOf = __webpack_require__(323);
		var getOwnPropertyDescriptor = __webpack_require__(315).f;
	
		// B.2.2.4 Object.prototype.__lookupGetter__(P)
		__webpack_require__(271) && $export($export.P + __webpack_require__(536), 'Object', {
		  __lookupGetter__: function __lookupGetter__(P) {
		    var O = toObject(this);
		    var K = toPrimitive(P, true);
		    var D;
		    do {
		      if (D = getOwnPropertyDescriptor(O, K)) return D.get;
		    } while (O = getPrototypeOf(O));
		  }
		});
	
	
	/***/ },
	/* 539 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		var $export = __webpack_require__(273);
		var toObject = __webpack_require__(322);
		var toPrimitive = __webpack_require__(281);
		var getPrototypeOf = __webpack_require__(323);
		var getOwnPropertyDescriptor = __webpack_require__(315).f;
	
		// B.2.2.5 Object.prototype.__lookupSetter__(P)
		__webpack_require__(271) && $export($export.P + __webpack_require__(536), 'Object', {
		  __lookupSetter__: function __lookupSetter__(P) {
		    var O = toObject(this);
		    var K = toPrimitive(P, true);
		    var D;
		    do {
		      if (D = getOwnPropertyDescriptor(O, K)) return D.set;
		    } while (O = getPrototypeOf(O));
		  }
		});
	
	
	/***/ },
	/* 540 */
	/***/ function(module, exports, __webpack_require__) {
	
		// https://github.com/DavidBruant/Map-Set.prototype.toJSON
		var $export = __webpack_require__(273);
	
		$export($export.P + $export.R, 'Map', { toJSON: __webpack_require__(541)('Map') });
	
	
	/***/ },
	/* 541 */
	/***/ function(module, exports, __webpack_require__) {
	
		// https://github.com/DavidBruant/Map-Set.prototype.toJSON
		var classof = __webpack_require__(339);
		var from = __webpack_require__(542);
		module.exports = function (NAME) {
		  return function toJSON() {
		    if (classof(this) != NAME) throw TypeError(NAME + "#toJSON isn't generic");
		    return from(this);
		  };
		};
	
	
	/***/ },
	/* 542 */
	/***/ function(module, exports, __webpack_require__) {
	
		var forOf = __webpack_require__(472);
	
		module.exports = function (iter, ITERATOR) {
		  var result = [];
		  forOf(iter, false, result.push, result, ITERATOR);
		  return result;
		};
	
	
	/***/ },
	/* 543 */
	/***/ function(module, exports, __webpack_require__) {
	
		// https://github.com/DavidBruant/Map-Set.prototype.toJSON
		var $export = __webpack_require__(273);
	
		$export($export.P + $export.R, 'Set', { toJSON: __webpack_require__(541)('Set') });
	
	
	/***/ },
	/* 544 */
	/***/ function(module, exports, __webpack_require__) {
	
		// https://tc39.github.io/proposal-setmap-offrom/#sec-map.of
		__webpack_require__(545)('Map');
	
	
	/***/ },
	/* 545 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		// https://tc39.github.io/proposal-setmap-offrom/
		var $export = __webpack_require__(273);
	
		module.exports = function (COLLECTION) {
		  $export($export.S, COLLECTION, { of: function of() {
		    var length = arguments.length;
		    var A = Array(length);
		    while (length--) A[length] = arguments[length];
		    return new this(A);
		  } });
		};
	
	
	/***/ },
	/* 546 */
	/***/ function(module, exports, __webpack_require__) {
	
		// https://tc39.github.io/proposal-setmap-offrom/#sec-set.of
		__webpack_require__(545)('Set');
	
	
	/***/ },
	/* 547 */
	/***/ function(module, exports, __webpack_require__) {
	
		// https://tc39.github.io/proposal-setmap-offrom/#sec-weakmap.of
		__webpack_require__(545)('WeakMap');
	
	
	/***/ },
	/* 548 */
	/***/ function(module, exports, __webpack_require__) {
	
		// https://tc39.github.io/proposal-setmap-offrom/#sec-weakset.of
		__webpack_require__(545)('WeakSet');
	
	
	/***/ },
	/* 549 */
	/***/ function(module, exports, __webpack_require__) {
	
		// https://tc39.github.io/proposal-setmap-offrom/#sec-map.from
		__webpack_require__(550)('Map');
	
	
	/***/ },
	/* 550 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		// https://tc39.github.io/proposal-setmap-offrom/
		var $export = __webpack_require__(273);
		var aFunction = __webpack_require__(286);
		var ctx = __webpack_require__(285);
		var forOf = __webpack_require__(472);
	
		module.exports = function (COLLECTION) {
		  $export($export.S, COLLECTION, { from: function from(source /* , mapFn, thisArg */) {
		    var mapFn = arguments[1];
		    var mapping, A, n, cb;
		    aFunction(this);
		    mapping = mapFn !== undefined;
		    if (mapping) aFunction(mapFn);
		    if (source == undefined) return new this();
		    A = [];
		    if (mapping) {
		      n = 0;
		      cb = ctx(mapFn, arguments[2], 2);
		      forOf(source, false, function (nextItem) {
		        A.push(cb(nextItem, n++));
		      });
		    } else {
		      forOf(source, false, A.push, A);
		    }
		    return new this(A);
		  } });
		};
	
	
	/***/ },
	/* 551 */
	/***/ function(module, exports, __webpack_require__) {
	
		// https://tc39.github.io/proposal-setmap-offrom/#sec-set.from
		__webpack_require__(550)('Set');
	
	
	/***/ },
	/* 552 */
	/***/ function(module, exports, __webpack_require__) {
	
		// https://tc39.github.io/proposal-setmap-offrom/#sec-weakmap.from
		__webpack_require__(550)('WeakMap');
	
	
	/***/ },
	/* 553 */
	/***/ function(module, exports, __webpack_require__) {
	
		// https://tc39.github.io/proposal-setmap-offrom/#sec-weakset.from
		__webpack_require__(550)('WeakSet');
	
	
	/***/ },
	/* 554 */
	/***/ function(module, exports, __webpack_require__) {
	
		// https://github.com/tc39/proposal-global
		var $export = __webpack_require__(273);
	
		$export($export.G, { global: __webpack_require__(269) });
	
	
	/***/ },
	/* 555 */
	/***/ function(module, exports, __webpack_require__) {
	
		// https://github.com/tc39/proposal-global
		var $export = __webpack_require__(273);
	
		$export($export.S, 'System', { global: __webpack_require__(269) });
	
	
	/***/ },
	/* 556 */
	/***/ function(module, exports, __webpack_require__) {
	
		// https://github.com/ljharb/proposal-is-error
		var $export = __webpack_require__(273);
		var cof = __webpack_require__(299);
	
		$export($export.S, 'Error', {
		  isError: function isError(it) {
		    return cof(it) === 'Error';
		  }
		});
	
	
	/***/ },
	/* 557 */
	/***/ function(module, exports, __webpack_require__) {
	
		// https://rwaldron.github.io/proposal-math-extensions/
		var $export = __webpack_require__(273);
	
		$export($export.S, 'Math', {
		  clamp: function clamp(x, lower, upper) {
		    return Math.min(upper, Math.max(lower, x));
		  }
		});
	
	
	/***/ },
	/* 558 */
	/***/ function(module, exports, __webpack_require__) {
	
		// https://rwaldron.github.io/proposal-math-extensions/
		var $export = __webpack_require__(273);
	
		$export($export.S, 'Math', { DEG_PER_RAD: Math.PI / 180 });
	
	
	/***/ },
	/* 559 */
	/***/ function(module, exports, __webpack_require__) {
	
		// https://rwaldron.github.io/proposal-math-extensions/
		var $export = __webpack_require__(273);
		var RAD_PER_DEG = 180 / Math.PI;
	
		$export($export.S, 'Math', {
		  degrees: function degrees(radians) {
		    return radians * RAD_PER_DEG;
		  }
		});
	
	
	/***/ },
	/* 560 */
	/***/ function(module, exports, __webpack_require__) {
	
		// https://rwaldron.github.io/proposal-math-extensions/
		var $export = __webpack_require__(273);
		var scale = __webpack_require__(561);
		var fround = __webpack_require__(378);
	
		$export($export.S, 'Math', {
		  fscale: function fscale(x, inLow, inHigh, outLow, outHigh) {
		    return fround(scale(x, inLow, inHigh, outLow, outHigh));
		  }
		});
	
	
	/***/ },
	/* 561 */
	/***/ function(module, exports) {
	
		// https://rwaldron.github.io/proposal-math-extensions/
		module.exports = Math.scale || function scale(x, inLow, inHigh, outLow, outHigh) {
		  if (
		    arguments.length === 0
		      // eslint-disable-next-line no-self-compare
		      || x != x
		      // eslint-disable-next-line no-self-compare
		      || inLow != inLow
		      // eslint-disable-next-line no-self-compare
		      || inHigh != inHigh
		      // eslint-disable-next-line no-self-compare
		      || outLow != outLow
		      // eslint-disable-next-line no-self-compare
		      || outHigh != outHigh
		  ) return NaN;
		  if (x === Infinity || x === -Infinity) return x;
		  return (x - inLow) * (outHigh - outLow) / (inHigh - inLow) + outLow;
		};
	
	
	/***/ },
	/* 562 */
	/***/ function(module, exports, __webpack_require__) {
	
		// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
		var $export = __webpack_require__(273);
	
		$export($export.S, 'Math', {
		  iaddh: function iaddh(x0, x1, y0, y1) {
		    var $x0 = x0 >>> 0;
		    var $x1 = x1 >>> 0;
		    var $y0 = y0 >>> 0;
		    return $x1 + (y1 >>> 0) + (($x0 & $y0 | ($x0 | $y0) & ~($x0 + $y0 >>> 0)) >>> 31) | 0;
		  }
		});
	
	
	/***/ },
	/* 563 */
	/***/ function(module, exports, __webpack_require__) {
	
		// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
		var $export = __webpack_require__(273);
	
		$export($export.S, 'Math', {
		  isubh: function isubh(x0, x1, y0, y1) {
		    var $x0 = x0 >>> 0;
		    var $x1 = x1 >>> 0;
		    var $y0 = y0 >>> 0;
		    return $x1 - (y1 >>> 0) - ((~$x0 & $y0 | ~($x0 ^ $y0) & $x0 - $y0 >>> 0) >>> 31) | 0;
		  }
		});
	
	
	/***/ },
	/* 564 */
	/***/ function(module, exports, __webpack_require__) {
	
		// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
		var $export = __webpack_require__(273);
	
		$export($export.S, 'Math', {
		  imulh: function imulh(u, v) {
		    var UINT16 = 0xffff;
		    var $u = +u;
		    var $v = +v;
		    var u0 = $u & UINT16;
		    var v0 = $v & UINT16;
		    var u1 = $u >> 16;
		    var v1 = $v >> 16;
		    var t = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);
		    return u1 * v1 + (t >> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >> 16);
		  }
		});
	
	
	/***/ },
	/* 565 */
	/***/ function(module, exports, __webpack_require__) {
	
		// https://rwaldron.github.io/proposal-math-extensions/
		var $export = __webpack_require__(273);
	
		$export($export.S, 'Math', { RAD_PER_DEG: 180 / Math.PI });
	
	
	/***/ },
	/* 566 */
	/***/ function(module, exports, __webpack_require__) {
	
		// https://rwaldron.github.io/proposal-math-extensions/
		var $export = __webpack_require__(273);
		var DEG_PER_RAD = Math.PI / 180;
	
		$export($export.S, 'Math', {
		  radians: function radians(degrees) {
		    return degrees * DEG_PER_RAD;
		  }
		});
	
	
	/***/ },
	/* 567 */
	/***/ function(module, exports, __webpack_require__) {
	
		// https://rwaldron.github.io/proposal-math-extensions/
		var $export = __webpack_require__(273);
	
		$export($export.S, 'Math', { scale: __webpack_require__(561) });
	
	
	/***/ },
	/* 568 */
	/***/ function(module, exports, __webpack_require__) {
	
		// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
		var $export = __webpack_require__(273);
	
		$export($export.S, 'Math', {
		  umulh: function umulh(u, v) {
		    var UINT16 = 0xffff;
		    var $u = +u;
		    var $v = +v;
		    var u0 = $u & UINT16;
		    var v0 = $v & UINT16;
		    var u1 = $u >>> 16;
		    var v1 = $v >>> 16;
		    var t = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);
		    return u1 * v1 + (t >>> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >>> 16);
		  }
		});
	
	
	/***/ },
	/* 569 */
	/***/ function(module, exports, __webpack_require__) {
	
		// http://jfbastien.github.io/papers/Math.signbit.html
		var $export = __webpack_require__(273);
	
		$export($export.S, 'Math', { signbit: function signbit(x) {
		  // eslint-disable-next-line no-self-compare
		  return (x = +x) != x ? x : x == 0 ? 1 / x == Infinity : x > 0;
		} });
	
	
	/***/ },
	/* 570 */
	/***/ function(module, exports, __webpack_require__) {
	
		// https://github.com/tc39/proposal-promise-finally
		'use strict';
		var $export = __webpack_require__(273);
		var core = __webpack_require__(274);
		var global = __webpack_require__(269);
		var speciesConstructor = __webpack_require__(473);
		var promiseResolve = __webpack_require__(478);
	
		$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {
		  var C = speciesConstructor(this, core.Promise || global.Promise);
		  var isFunction = typeof onFinally == 'function';
		  return this.then(
		    isFunction ? function (x) {
		      return promiseResolve(C, onFinally()).then(function () { return x; });
		    } : onFinally,
		    isFunction ? function (e) {
		      return promiseResolve(C, onFinally()).then(function () { throw e; });
		    } : onFinally
		  );
		} });
	
	
	/***/ },
	/* 571 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		// https://github.com/tc39/proposal-promise-try
		var $export = __webpack_require__(273);
		var newPromiseCapability = __webpack_require__(476);
		var perform = __webpack_require__(477);
	
		$export($export.S, 'Promise', { 'try': function (callbackfn) {
		  var promiseCapability = newPromiseCapability.f(this);
		  var result = perform(callbackfn);
		  (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);
		  return promiseCapability.promise;
		} });
	
	
	/***/ },
	/* 572 */
	/***/ function(module, exports, __webpack_require__) {
	
		var metadata = __webpack_require__(573);
		var anObject = __webpack_require__(277);
		var toMetaKey = metadata.key;
		var ordinaryDefineOwnMetadata = metadata.set;
	
		metadata.exp({ defineMetadata: function defineMetadata(metadataKey, metadataValue, target, targetKey) {
		  ordinaryDefineOwnMetadata(metadataKey, metadataValue, anObject(target), toMetaKey(targetKey));
		} });
	
	
	/***/ },
	/* 573 */
	/***/ function(module, exports, __webpack_require__) {
	
		var Map = __webpack_require__(480);
		var $export = __webpack_require__(273);
		var shared = __webpack_require__(288)('metadata');
		var store = shared.store || (shared.store = new (__webpack_require__(485))());
	
		var getOrCreateMetadataMap = function (target, targetKey, create) {
		  var targetMetadata = store.get(target);
		  if (!targetMetadata) {
		    if (!create) return undefined;
		    store.set(target, targetMetadata = new Map());
		  }
		  var keyMetadata = targetMetadata.get(targetKey);
		  if (!keyMetadata) {
		    if (!create) return undefined;
		    targetMetadata.set(targetKey, keyMetadata = new Map());
		  } return keyMetadata;
		};
		var ordinaryHasOwnMetadata = function (MetadataKey, O, P) {
		  var metadataMap = getOrCreateMetadataMap(O, P, false);
		  return metadataMap === undefined ? false : metadataMap.has(MetadataKey);
		};
		var ordinaryGetOwnMetadata = function (MetadataKey, O, P) {
		  var metadataMap = getOrCreateMetadataMap(O, P, false);
		  return metadataMap === undefined ? undefined : metadataMap.get(MetadataKey);
		};
		var ordinaryDefineOwnMetadata = function (MetadataKey, MetadataValue, O, P) {
		  getOrCreateMetadataMap(O, P, true).set(MetadataKey, MetadataValue);
		};
		var ordinaryOwnMetadataKeys = function (target, targetKey) {
		  var metadataMap = getOrCreateMetadataMap(target, targetKey, false);
		  var keys = [];
		  if (metadataMap) metadataMap.forEach(function (_, key) { keys.push(key); });
		  return keys;
		};
		var toMetaKey = function (it) {
		  return it === undefined || typeof it == 'symbol' ? it : String(it);
		};
		var exp = function (O) {
		  $export($export.S, 'Reflect', O);
		};
	
		module.exports = {
		  store: store,
		  map: getOrCreateMetadataMap,
		  has: ordinaryHasOwnMetadata,
		  get: ordinaryGetOwnMetadata,
		  set: ordinaryDefineOwnMetadata,
		  keys: ordinaryOwnMetadataKeys,
		  key: toMetaKey,
		  exp: exp
		};
	
	
	/***/ },
	/* 574 */
	/***/ function(module, exports, __webpack_require__) {
	
		var metadata = __webpack_require__(573);
		var anObject = __webpack_require__(277);
		var toMetaKey = metadata.key;
		var getOrCreateMetadataMap = metadata.map;
		var store = metadata.store;
	
		metadata.exp({ deleteMetadata: function deleteMetadata(metadataKey, target /* , targetKey */) {
		  var targetKey = arguments.length < 3 ? undefined : toMetaKey(arguments[2]);
		  var metadataMap = getOrCreateMetadataMap(anObject(target), targetKey, false);
		  if (metadataMap === undefined || !metadataMap['delete'](metadataKey)) return false;
		  if (metadataMap.size) return true;
		  var targetMetadata = store.get(target);
		  targetMetadata['delete'](targetKey);
		  return !!targetMetadata.size || store['delete'](target);
		} });
	
	
	/***/ },
	/* 575 */
	/***/ function(module, exports, __webpack_require__) {
	
		var metadata = __webpack_require__(573);
		var anObject = __webpack_require__(277);
		var getPrototypeOf = __webpack_require__(323);
		var ordinaryHasOwnMetadata = metadata.has;
		var ordinaryGetOwnMetadata = metadata.get;
		var toMetaKey = metadata.key;
	
		var ordinaryGetMetadata = function (MetadataKey, O, P) {
		  var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);
		  if (hasOwn) return ordinaryGetOwnMetadata(MetadataKey, O, P);
		  var parent = getPrototypeOf(O);
		  return parent !== null ? ordinaryGetMetadata(MetadataKey, parent, P) : undefined;
		};
	
		metadata.exp({ getMetadata: function getMetadata(metadataKey, target /* , targetKey */) {
		  return ordinaryGetMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
		} });
	
	
	/***/ },
	/* 576 */
	/***/ function(module, exports, __webpack_require__) {
	
		var Set = __webpack_require__(484);
		var from = __webpack_require__(542);
		var metadata = __webpack_require__(573);
		var anObject = __webpack_require__(277);
		var getPrototypeOf = __webpack_require__(323);
		var ordinaryOwnMetadataKeys = metadata.keys;
		var toMetaKey = metadata.key;
	
		var ordinaryMetadataKeys = function (O, P) {
		  var oKeys = ordinaryOwnMetadataKeys(O, P);
		  var parent = getPrototypeOf(O);
		  if (parent === null) return oKeys;
		  var pKeys = ordinaryMetadataKeys(parent, P);
		  return pKeys.length ? oKeys.length ? from(new Set(oKeys.concat(pKeys))) : pKeys : oKeys;
		};
	
		metadata.exp({ getMetadataKeys: function getMetadataKeys(target /* , targetKey */) {
		  return ordinaryMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));
		} });
	
	
	/***/ },
	/* 577 */
	/***/ function(module, exports, __webpack_require__) {
	
		var metadata = __webpack_require__(573);
		var anObject = __webpack_require__(277);
		var ordinaryGetOwnMetadata = metadata.get;
		var toMetaKey = metadata.key;
	
		metadata.exp({ getOwnMetadata: function getOwnMetadata(metadataKey, target /* , targetKey */) {
		  return ordinaryGetOwnMetadata(metadataKey, anObject(target)
		    , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
		} });
	
	
	/***/ },
	/* 578 */
	/***/ function(module, exports, __webpack_require__) {
	
		var metadata = __webpack_require__(573);
		var anObject = __webpack_require__(277);
		var ordinaryOwnMetadataKeys = metadata.keys;
		var toMetaKey = metadata.key;
	
		metadata.exp({ getOwnMetadataKeys: function getOwnMetadataKeys(target /* , targetKey */) {
		  return ordinaryOwnMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));
		} });
	
	
	/***/ },
	/* 579 */
	/***/ function(module, exports, __webpack_require__) {
	
		var metadata = __webpack_require__(573);
		var anObject = __webpack_require__(277);
		var getPrototypeOf = __webpack_require__(323);
		var ordinaryHasOwnMetadata = metadata.has;
		var toMetaKey = metadata.key;
	
		var ordinaryHasMetadata = function (MetadataKey, O, P) {
		  var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);
		  if (hasOwn) return true;
		  var parent = getPrototypeOf(O);
		  return parent !== null ? ordinaryHasMetadata(MetadataKey, parent, P) : false;
		};
	
		metadata.exp({ hasMetadata: function hasMetadata(metadataKey, target /* , targetKey */) {
		  return ordinaryHasMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
		} });
	
	
	/***/ },
	/* 580 */
	/***/ function(module, exports, __webpack_require__) {
	
		var metadata = __webpack_require__(573);
		var anObject = __webpack_require__(277);
		var ordinaryHasOwnMetadata = metadata.has;
		var toMetaKey = metadata.key;
	
		metadata.exp({ hasOwnMetadata: function hasOwnMetadata(metadataKey, target /* , targetKey */) {
		  return ordinaryHasOwnMetadata(metadataKey, anObject(target)
		    , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
		} });
	
	
	/***/ },
	/* 581 */
	/***/ function(module, exports, __webpack_require__) {
	
		var $metadata = __webpack_require__(573);
		var anObject = __webpack_require__(277);
		var aFunction = __webpack_require__(286);
		var toMetaKey = $metadata.key;
		var ordinaryDefineOwnMetadata = $metadata.set;
	
		$metadata.exp({ metadata: function metadata(metadataKey, metadataValue) {
		  return function decorator(target, targetKey) {
		    ordinaryDefineOwnMetadata(
		      metadataKey, metadataValue,
		      (targetKey !== undefined ? anObject : aFunction)(target),
		      toMetaKey(targetKey)
		    );
		  };
		} });
	
	
	/***/ },
	/* 582 */
	/***/ function(module, exports, __webpack_require__) {
	
		// https://github.com/rwaldron/tc39-notes/blob/master/es6/2014-09/sept-25.md#510-globalasap-for-enqueuing-a-microtask
		var $export = __webpack_require__(273);
		var microtask = __webpack_require__(475)();
		var process = __webpack_require__(269).process;
		var isNode = __webpack_require__(299)(process) == 'process';
	
		$export($export.G, {
		  asap: function asap(fn) {
		    var domain = isNode && process.domain;
		    microtask(domain ? domain.bind(fn) : fn);
		  }
		});
	
	
	/***/ },
	/* 583 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		// https://github.com/zenparsing/es-observable
		var $export = __webpack_require__(273);
		var global = __webpack_require__(269);
		var core = __webpack_require__(274);
		var microtask = __webpack_require__(475)();
		var OBSERVABLE = __webpack_require__(290)('observable');
		var aFunction = __webpack_require__(286);
		var anObject = __webpack_require__(277);
		var anInstance = __webpack_require__(471);
		var redefineAll = __webpack_require__(479);
		var hide = __webpack_require__(275);
		var forOf = __webpack_require__(472);
		var RETURN = forOf.RETURN;
	
		var getMethod = function (fn) {
		  return fn == null ? undefined : aFunction(fn);
		};
	
		var cleanupSubscription = function (subscription) {
		  var cleanup = subscription._c;
		  if (cleanup) {
		    subscription._c = undefined;
		    cleanup();
		  }
		};
	
		var subscriptionClosed = function (subscription) {
		  return subscription._o === undefined;
		};
	
		var closeSubscription = function (subscription) {
		  if (!subscriptionClosed(subscription)) {
		    subscription._o = undefined;
		    cleanupSubscription(subscription);
		  }
		};
	
		var Subscription = function (observer, subscriber) {
		  anObject(observer);
		  this._c = undefined;
		  this._o = observer;
		  observer = new SubscriptionObserver(this);
		  try {
		    var cleanup = subscriber(observer);
		    var subscription = cleanup;
		    if (cleanup != null) {
		      if (typeof cleanup.unsubscribe === 'function') cleanup = function () { subscription.unsubscribe(); };
		      else aFunction(cleanup);
		      this._c = cleanup;
		    }
		  } catch (e) {
		    observer.error(e);
		    return;
		  } if (subscriptionClosed(this)) cleanupSubscription(this);
		};
	
		Subscription.prototype = redefineAll({}, {
		  unsubscribe: function unsubscribe() { closeSubscription(this); }
		});
	
		var SubscriptionObserver = function (subscription) {
		  this._s = subscription;
		};
	
		SubscriptionObserver.prototype = redefineAll({}, {
		  next: function next(value) {
		    var subscription = this._s;
		    if (!subscriptionClosed(subscription)) {
		      var observer = subscription._o;
		      try {
		        var m = getMethod(observer.next);
		        if (m) return m.call(observer, value);
		      } catch (e) {
		        try {
		          closeSubscription(subscription);
		        } finally {
		          throw e;
		        }
		      }
		    }
		  },
		  error: function error(value) {
		    var subscription = this._s;
		    if (subscriptionClosed(subscription)) throw value;
		    var observer = subscription._o;
		    subscription._o = undefined;
		    try {
		      var m = getMethod(observer.error);
		      if (!m) throw value;
		      value = m.call(observer, value);
		    } catch (e) {
		      try {
		        cleanupSubscription(subscription);
		      } finally {
		        throw e;
		      }
		    } cleanupSubscription(subscription);
		    return value;
		  },
		  complete: function complete(value) {
		    var subscription = this._s;
		    if (!subscriptionClosed(subscription)) {
		      var observer = subscription._o;
		      subscription._o = undefined;
		      try {
		        var m = getMethod(observer.complete);
		        value = m ? m.call(observer, value) : undefined;
		      } catch (e) {
		        try {
		          cleanupSubscription(subscription);
		        } finally {
		          throw e;
		        }
		      } cleanupSubscription(subscription);
		      return value;
		    }
		  }
		});
	
		var $Observable = function Observable(subscriber) {
		  anInstance(this, $Observable, 'Observable', '_f')._f = aFunction(subscriber);
		};
	
		redefineAll($Observable.prototype, {
		  subscribe: function subscribe(observer) {
		    return new Subscription(observer, this._f);
		  },
		  forEach: function forEach(fn) {
		    var that = this;
		    return new (core.Promise || global.Promise)(function (resolve, reject) {
		      aFunction(fn);
		      var subscription = that.subscribe({
		        next: function (value) {
		          try {
		            return fn(value);
		          } catch (e) {
		            reject(e);
		            subscription.unsubscribe();
		          }
		        },
		        error: reject,
		        complete: resolve
		      });
		    });
		  }
		});
	
		redefineAll($Observable, {
		  from: function from(x) {
		    var C = typeof this === 'function' ? this : $Observable;
		    var method = getMethod(anObject(x)[OBSERVABLE]);
		    if (method) {
		      var observable = anObject(method.call(x));
		      return observable.constructor === C ? observable : new C(function (observer) {
		        return observable.subscribe(observer);
		      });
		    }
		    return new C(function (observer) {
		      var done = false;
		      microtask(function () {
		        if (!done) {
		          try {
		            if (forOf(x, false, function (it) {
		              observer.next(it);
		              if (done) return RETURN;
		            }) === RETURN) return;
		          } catch (e) {
		            if (done) throw e;
		            observer.error(e);
		            return;
		          } observer.complete();
		        }
		      });
		      return function () { done = true; };
		    });
		  },
		  of: function of() {
		    for (var i = 0, l = arguments.length, items = Array(l); i < l;) items[i] = arguments[i++];
		    return new (typeof this === 'function' ? this : $Observable)(function (observer) {
		      var done = false;
		      microtask(function () {
		        if (!done) {
		          for (var j = 0; j < items.length; ++j) {
		            observer.next(items[j]);
		            if (done) return;
		          } observer.complete();
		        }
		      });
		      return function () { done = true; };
		    });
		  }
		});
	
		hide($Observable.prototype, OBSERVABLE, function () { return this; });
	
		$export($export.G, { Observable: $Observable });
	
		__webpack_require__(458)('Observable');
	
	
	/***/ },
	/* 584 */
	/***/ function(module, exports, __webpack_require__) {
	
		// ie9- setTimeout & setInterval additional parameters fix
		var global = __webpack_require__(269);
		var $export = __webpack_require__(273);
		var navigator = global.navigator;
		var slice = [].slice;
		var MSIE = !!navigator && /MSIE .\./.test(navigator.userAgent); // <- dirty ie9- check
		var wrap = function (set) {
		  return function (fn, time /* , ...args */) {
		    var boundArgs = arguments.length > 2;
		    var args = boundArgs ? slice.call(arguments, 2) : false;
		    return set(boundArgs ? function () {
		      // eslint-disable-next-line no-new-func
		      (typeof fn == 'function' ? fn : Function(fn)).apply(this, args);
		    } : fn, time);
		  };
		};
		$export($export.G + $export.B + $export.F * MSIE, {
		  setTimeout: wrap(global.setTimeout),
		  setInterval: wrap(global.setInterval)
		});
	
	
	/***/ },
	/* 585 */
	/***/ function(module, exports, __webpack_require__) {
	
		var $export = __webpack_require__(273);
		var $task = __webpack_require__(474);
		$export($export.G + $export.B, {
		  setImmediate: $task.set,
		  clearImmediate: $task.clear
		});
	
	
	/***/ },
	/* 586 */
	/***/ function(module, exports, __webpack_require__) {
	
		var $iterators = __webpack_require__(459);
		var getKeys = __webpack_require__(295);
		var redefine = __webpack_require__(283);
		var global = __webpack_require__(269);
		var hide = __webpack_require__(275);
		var Iterators = __webpack_require__(394);
		var wks = __webpack_require__(290);
		var ITERATOR = wks('iterator');
		var TO_STRING_TAG = wks('toStringTag');
		var ArrayValues = Iterators.Array;
	
		var DOMIterables = {
		  CSSRuleList: true, // TODO: Not spec compliant, should be false.
		  CSSStyleDeclaration: false,
		  CSSValueList: false,
		  ClientRectList: false,
		  DOMRectList: false,
		  DOMStringList: false,
		  DOMTokenList: true,
		  DataTransferItemList: false,
		  FileList: false,
		  HTMLAllCollection: false,
		  HTMLCollection: false,
		  HTMLFormElement: false,
		  HTMLSelectElement: false,
		  MediaList: true, // TODO: Not spec compliant, should be false.
		  MimeTypeArray: false,
		  NamedNodeMap: false,
		  NodeList: true,
		  PaintRequestList: false,
		  Plugin: false,
		  PluginArray: false,
		  SVGLengthList: false,
		  SVGNumberList: false,
		  SVGPathSegList: false,
		  SVGPointList: false,
		  SVGStringList: false,
		  SVGTransformList: false,
		  SourceBufferList: false,
		  StyleSheetList: true, // TODO: Not spec compliant, should be false.
		  TextTrackCueList: false,
		  TextTrackList: false,
		  TouchList: false
		};
	
		for (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {
		  var NAME = collections[i];
		  var explicit = DOMIterables[NAME];
		  var Collection = global[NAME];
		  var proto = Collection && Collection.prototype;
		  var key;
		  if (proto) {
		    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);
		    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
		    Iterators[NAME] = ArrayValues;
		    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);
		  }
		}
	
	
	/***/ },
	/* 587 */
	/***/ function(module, exports) {
	
		/* WEBPACK VAR INJECTION */(function(global) {/**
		 * Copyright (c) 2014, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * https://raw.github.com/facebook/regenerator/master/LICENSE file. An
		 * additional grant of patent rights can be found in the PATENTS file in
		 * the same directory.
		 */
	
		!(function(global) {
		  "use strict";
	
		  var Op = Object.prototype;
		  var hasOwn = Op.hasOwnProperty;
		  var undefined; // More compressible than void 0.
		  var $Symbol = typeof Symbol === "function" ? Symbol : {};
		  var iteratorSymbol = $Symbol.iterator || "@@iterator";
		  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
		  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";
	
		  var inModule = typeof module === "object";
		  var runtime = global.regeneratorRuntime;
		  if (runtime) {
		    if (inModule) {
		      // If regeneratorRuntime is defined globally and we're in a module,
		      // make the exports object identical to regeneratorRuntime.
		      module.exports = runtime;
		    }
		    // Don't bother evaluating the rest of this file if the runtime was
		    // already defined globally.
		    return;
		  }
	
		  // Define the runtime globally (as expected by generated code) as either
		  // module.exports (if we're in a module) or a new, empty object.
		  runtime = global.regeneratorRuntime = inModule ? module.exports : {};
	
		  function wrap(innerFn, outerFn, self, tryLocsList) {
		    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
		    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
		    var generator = Object.create(protoGenerator.prototype);
		    var context = new Context(tryLocsList || []);
	
		    // The ._invoke method unifies the implementations of the .next,
		    // .throw, and .return methods.
		    generator._invoke = makeInvokeMethod(innerFn, self, context);
	
		    return generator;
		  }
		  runtime.wrap = wrap;
	
		  // Try/catch helper to minimize deoptimizations. Returns a completion
		  // record like context.tryEntries[i].completion. This interface could
		  // have been (and was previously) designed to take a closure to be
		  // invoked without arguments, but in all the cases we care about we
		  // already have an existing method we want to call, so there's no need
		  // to create a new function object. We can even get away with assuming
		  // the method takes exactly one argument, since that happens to be true
		  // in every case, so we don't have to touch the arguments object. The
		  // only additional allocation required is the completion record, which
		  // has a stable shape and so hopefully should be cheap to allocate.
		  function tryCatch(fn, obj, arg) {
		    try {
		      return { type: "normal", arg: fn.call(obj, arg) };
		    } catch (err) {
		      return { type: "throw", arg: err };
		    }
		  }
	
		  var GenStateSuspendedStart = "suspendedStart";
		  var GenStateSuspendedYield = "suspendedYield";
		  var GenStateExecuting = "executing";
		  var GenStateCompleted = "completed";
	
		  // Returning this object from the innerFn has the same effect as
		  // breaking out of the dispatch switch statement.
		  var ContinueSentinel = {};
	
		  // Dummy constructor functions that we use as the .constructor and
		  // .constructor.prototype properties for functions that return Generator
		  // objects. For full spec compliance, you may wish to configure your
		  // minifier not to mangle the names of these two functions.
		  function Generator() {}
		  function GeneratorFunction() {}
		  function GeneratorFunctionPrototype() {}
	
		  // This is a polyfill for %IteratorPrototype% for environments that
		  // don't natively support it.
		  var IteratorPrototype = {};
		  IteratorPrototype[iteratorSymbol] = function () {
		    return this;
		  };
	
		  var getProto = Object.getPrototypeOf;
		  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
		  if (NativeIteratorPrototype &&
		      NativeIteratorPrototype !== Op &&
		      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
		    // This environment has a native %IteratorPrototype%; use it instead
		    // of the polyfill.
		    IteratorPrototype = NativeIteratorPrototype;
		  }
	
		  var Gp = GeneratorFunctionPrototype.prototype =
		    Generator.prototype = Object.create(IteratorPrototype);
		  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
		  GeneratorFunctionPrototype.constructor = GeneratorFunction;
		  GeneratorFunctionPrototype[toStringTagSymbol] =
		    GeneratorFunction.displayName = "GeneratorFunction";
	
		  // Helper for defining the .next, .throw, and .return methods of the
		  // Iterator interface in terms of a single ._invoke method.
		  function defineIteratorMethods(prototype) {
		    ["next", "throw", "return"].forEach(function(method) {
		      prototype[method] = function(arg) {
		        return this._invoke(method, arg);
		      };
		    });
		  }
	
		  runtime.isGeneratorFunction = function(genFun) {
		    var ctor = typeof genFun === "function" && genFun.constructor;
		    return ctor
		      ? ctor === GeneratorFunction ||
		        // For the native GeneratorFunction constructor, the best we can
		        // do is to check its .name property.
		        (ctor.displayName || ctor.name) === "GeneratorFunction"
		      : false;
		  };
	
		  runtime.mark = function(genFun) {
		    if (Object.setPrototypeOf) {
		      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
		    } else {
		      genFun.__proto__ = GeneratorFunctionPrototype;
		      if (!(toStringTagSymbol in genFun)) {
		        genFun[toStringTagSymbol] = "GeneratorFunction";
		      }
		    }
		    genFun.prototype = Object.create(Gp);
		    return genFun;
		  };
	
		  // Within the body of any async function, `await x` is transformed to
		  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
		  // `hasOwn.call(value, "__await")` to determine if the yielded value is
		  // meant to be awaited.
		  runtime.awrap = function(arg) {
		    return { __await: arg };
		  };
	
		  function AsyncIterator(generator) {
		    function invoke(method, arg, resolve, reject) {
		      var record = tryCatch(generator[method], generator, arg);
		      if (record.type === "throw") {
		        reject(record.arg);
		      } else {
		        var result = record.arg;
		        var value = result.value;
		        if (value &&
		            typeof value === "object" &&
		            hasOwn.call(value, "__await")) {
		          return Promise.resolve(value.__await).then(function(value) {
		            invoke("next", value, resolve, reject);
		          }, function(err) {
		            invoke("throw", err, resolve, reject);
		          });
		        }
	
		        return Promise.resolve(value).then(function(unwrapped) {
		          // When a yielded Promise is resolved, its final value becomes
		          // the .value of the Promise<{value,done}> result for the
		          // current iteration. If the Promise is rejected, however, the
		          // result for this iteration will be rejected with the same
		          // reason. Note that rejections of yielded Promises are not
		          // thrown back into the generator function, as is the case
		          // when an awaited Promise is rejected. This difference in
		          // behavior between yield and await is important, because it
		          // allows the consumer to decide what to do with the yielded
		          // rejection (swallow it and continue, manually .throw it back
		          // into the generator, abandon iteration, whatever). With
		          // await, by contrast, there is no opportunity to examine the
		          // rejection reason outside the generator function, so the
		          // only option is to throw it from the await expression, and
		          // let the generator function handle the exception.
		          result.value = unwrapped;
		          resolve(result);
		        }, reject);
		      }
		    }
	
		    if (typeof global.process === "object" && global.process.domain) {
		      invoke = global.process.domain.bind(invoke);
		    }
	
		    var previousPromise;
	
		    function enqueue(method, arg) {
		      function callInvokeWithMethodAndArg() {
		        return new Promise(function(resolve, reject) {
		          invoke(method, arg, resolve, reject);
		        });
		      }
	
		      return previousPromise =
		        // If enqueue has been called before, then we want to wait until
		        // all previous Promises have been resolved before calling invoke,
		        // so that results are always delivered in the correct order. If
		        // enqueue has not been called before, then it is important to
		        // call invoke immediately, without waiting on a callback to fire,
		        // so that the async generator function has the opportunity to do
		        // any necessary setup in a predictable way. This predictability
		        // is why the Promise constructor synchronously invokes its
		        // executor callback, and why async functions synchronously
		        // execute code before the first await. Since we implement simple
		        // async functions in terms of async generators, it is especially
		        // important to get this right, even though it requires care.
		        previousPromise ? previousPromise.then(
		          callInvokeWithMethodAndArg,
		          // Avoid propagating failures to Promises returned by later
		          // invocations of the iterator.
		          callInvokeWithMethodAndArg
		        ) : callInvokeWithMethodAndArg();
		    }
	
		    // Define the unified helper method that is used to implement .next,
		    // .throw, and .return (see defineIteratorMethods).
		    this._invoke = enqueue;
		  }
	
		  defineIteratorMethods(AsyncIterator.prototype);
		  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
		    return this;
		  };
		  runtime.AsyncIterator = AsyncIterator;
	
		  // Note that simple async functions are implemented on top of
		  // AsyncIterator objects; they just return a Promise for the value of
		  // the final result produced by the iterator.
		  runtime.async = function(innerFn, outerFn, self, tryLocsList) {
		    var iter = new AsyncIterator(
		      wrap(innerFn, outerFn, self, tryLocsList)
		    );
	
		    return runtime.isGeneratorFunction(outerFn)
		      ? iter // If outerFn is a generator, return the full iterator.
		      : iter.next().then(function(result) {
		          return result.done ? result.value : iter.next();
		        });
		  };
	
		  function makeInvokeMethod(innerFn, self, context) {
		    var state = GenStateSuspendedStart;
	
		    return function invoke(method, arg) {
		      if (state === GenStateExecuting) {
		        throw new Error("Generator is already running");
		      }
	
		      if (state === GenStateCompleted) {
		        if (method === "throw") {
		          throw arg;
		        }
	
		        // Be forgiving, per 25.3.3.3.3 of the spec:
		        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
		        return doneResult();
		      }
	
		      context.method = method;
		      context.arg = arg;
	
		      while (true) {
		        var delegate = context.delegate;
		        if (delegate) {
		          var delegateResult = maybeInvokeDelegate(delegate, context);
		          if (delegateResult) {
		            if (delegateResult === ContinueSentinel) continue;
		            return delegateResult;
		          }
		        }
	
		        if (context.method === "next") {
		          // Setting context._sent for legacy support of Babel's
		          // function.sent implementation.
		          context.sent = context._sent = context.arg;
	
		        } else if (context.method === "throw") {
		          if (state === GenStateSuspendedStart) {
		            state = GenStateCompleted;
		            throw context.arg;
		          }
	
		          context.dispatchException(context.arg);
	
		        } else if (context.method === "return") {
		          context.abrupt("return", context.arg);
		        }
	
		        state = GenStateExecuting;
	
		        var record = tryCatch(innerFn, self, context);
		        if (record.type === "normal") {
		          // If an exception is thrown from innerFn, we leave state ===
		          // GenStateExecuting and loop back for another invocation.
		          state = context.done
		            ? GenStateCompleted
		            : GenStateSuspendedYield;
	
		          if (record.arg === ContinueSentinel) {
		            continue;
		          }
	
		          return {
		            value: record.arg,
		            done: context.done
		          };
	
		        } else if (record.type === "throw") {
		          state = GenStateCompleted;
		          // Dispatch the exception by looping back around to the
		          // context.dispatchException(context.arg) call above.
		          context.method = "throw";
		          context.arg = record.arg;
		        }
		      }
		    };
		  }
	
		  // Call delegate.iterator[context.method](context.arg) and handle the
		  // result, either by returning a { value, done } result from the
		  // delegate iterator, or by modifying context.method and context.arg,
		  // setting context.delegate to null, and returning the ContinueSentinel.
		  function maybeInvokeDelegate(delegate, context) {
		    var method = delegate.iterator[context.method];
		    if (method === undefined) {
		      // A .throw or .return when the delegate iterator has no .throw
		      // method always terminates the yield* loop.
		      context.delegate = null;
	
		      if (context.method === "throw") {
		        if (delegate.iterator.return) {
		          // If the delegate iterator has a return method, give it a
		          // chance to clean up.
		          context.method = "return";
		          context.arg = undefined;
		          maybeInvokeDelegate(delegate, context);
	
		          if (context.method === "throw") {
		            // If maybeInvokeDelegate(context) changed context.method from
		            // "return" to "throw", let that override the TypeError below.
		            return ContinueSentinel;
		          }
		        }
	
		        context.method = "throw";
		        context.arg = new TypeError(
		          "The iterator does not provide a 'throw' method");
		      }
	
		      return ContinueSentinel;
		    }
	
		    var record = tryCatch(method, delegate.iterator, context.arg);
	
		    if (record.type === "throw") {
		      context.method = "throw";
		      context.arg = record.arg;
		      context.delegate = null;
		      return ContinueSentinel;
		    }
	
		    var info = record.arg;
	
		    if (! info) {
		      context.method = "throw";
		      context.arg = new TypeError("iterator result is not an object");
		      context.delegate = null;
		      return ContinueSentinel;
		    }
	
		    if (info.done) {
		      // Assign the result of the finished delegate to the temporary
		      // variable specified by delegate.resultName (see delegateYield).
		      context[delegate.resultName] = info.value;
	
		      // Resume execution at the desired location (see delegateYield).
		      context.next = delegate.nextLoc;
	
		      // If context.method was "throw" but the delegate handled the
		      // exception, let the outer generator proceed normally. If
		      // context.method was "next", forget context.arg since it has been
		      // "consumed" by the delegate iterator. If context.method was
		      // "return", allow the original .return call to continue in the
		      // outer generator.
		      if (context.method !== "return") {
		        context.method = "next";
		        context.arg = undefined;
		      }
	
		    } else {
		      // Re-yield the result returned by the delegate method.
		      return info;
		    }
	
		    // The delegate iterator is finished, so forget it and continue with
		    // the outer generator.
		    context.delegate = null;
		    return ContinueSentinel;
		  }
	
		  // Define Generator.prototype.{next,throw,return} in terms of the
		  // unified ._invoke helper method.
		  defineIteratorMethods(Gp);
	
		  Gp[toStringTagSymbol] = "Generator";
	
		  // A Generator should always return itself as the iterator object when the
		  // @@iterator function is called on it. Some browsers' implementations of the
		  // iterator prototype chain incorrectly implement this, causing the Generator
		  // object to not be returned from this call. This ensures that doesn't happen.
		  // See https://github.com/facebook/regenerator/issues/274 for more details.
		  Gp[iteratorSymbol] = function() {
		    return this;
		  };
	
		  Gp.toString = function() {
		    return "[object Generator]";
		  };
	
		  function pushTryEntry(locs) {
		    var entry = { tryLoc: locs[0] };
	
		    if (1 in locs) {
		      entry.catchLoc = locs[1];
		    }
	
		    if (2 in locs) {
		      entry.finallyLoc = locs[2];
		      entry.afterLoc = locs[3];
		    }
	
		    this.tryEntries.push(entry);
		  }
	
		  function resetTryEntry(entry) {
		    var record = entry.completion || {};
		    record.type = "normal";
		    delete record.arg;
		    entry.completion = record;
		  }
	
		  function Context(tryLocsList) {
		    // The root entry object (effectively a try statement without a catch
		    // or a finally block) gives us a place to store values thrown from
		    // locations where there is no enclosing try statement.
		    this.tryEntries = [{ tryLoc: "root" }];
		    tryLocsList.forEach(pushTryEntry, this);
		    this.reset(true);
		  }
	
		  runtime.keys = function(object) {
		    var keys = [];
		    for (var key in object) {
		      keys.push(key);
		    }
		    keys.reverse();
	
		    // Rather than returning an object with a next method, we keep
		    // things simple and return the next function itself.
		    return function next() {
		      while (keys.length) {
		        var key = keys.pop();
		        if (key in object) {
		          next.value = key;
		          next.done = false;
		          return next;
		        }
		      }
	
		      // To avoid creating an additional object, we just hang the .value
		      // and .done properties off the next function object itself. This
		      // also ensures that the minifier will not anonymize the function.
		      next.done = true;
		      return next;
		    };
		  };
	
		  function values(iterable) {
		    if (iterable) {
		      var iteratorMethod = iterable[iteratorSymbol];
		      if (iteratorMethod) {
		        return iteratorMethod.call(iterable);
		      }
	
		      if (typeof iterable.next === "function") {
		        return iterable;
		      }
	
		      if (!isNaN(iterable.length)) {
		        var i = -1, next = function next() {
		          while (++i < iterable.length) {
		            if (hasOwn.call(iterable, i)) {
		              next.value = iterable[i];
		              next.done = false;
		              return next;
		            }
		          }
	
		          next.value = undefined;
		          next.done = true;
	
		          return next;
		        };
	
		        return next.next = next;
		      }
		    }
	
		    // Return an iterator with no values.
		    return { next: doneResult };
		  }
		  runtime.values = values;
	
		  function doneResult() {
		    return { value: undefined, done: true };
		  }
	
		  Context.prototype = {
		    constructor: Context,
	
		    reset: function(skipTempReset) {
		      this.prev = 0;
		      this.next = 0;
		      // Resetting context._sent for legacy support of Babel's
		      // function.sent implementation.
		      this.sent = this._sent = undefined;
		      this.done = false;
		      this.delegate = null;
	
		      this.method = "next";
		      this.arg = undefined;
	
		      this.tryEntries.forEach(resetTryEntry);
	
		      if (!skipTempReset) {
		        for (var name in this) {
		          // Not sure about the optimal order of these conditions:
		          if (name.charAt(0) === "t" &&
		              hasOwn.call(this, name) &&
		              !isNaN(+name.slice(1))) {
		            this[name] = undefined;
		          }
		        }
		      }
		    },
	
		    stop: function() {
		      this.done = true;
	
		      var rootEntry = this.tryEntries[0];
		      var rootRecord = rootEntry.completion;
		      if (rootRecord.type === "throw") {
		        throw rootRecord.arg;
		      }
	
		      return this.rval;
		    },
	
		    dispatchException: function(exception) {
		      if (this.done) {
		        throw exception;
		      }
	
		      var context = this;
		      function handle(loc, caught) {
		        record.type = "throw";
		        record.arg = exception;
		        context.next = loc;
	
		        if (caught) {
		          // If the dispatched exception was caught by a catch block,
		          // then let that catch block handle the exception normally.
		          context.method = "next";
		          context.arg = undefined;
		        }
	
		        return !! caught;
		      }
	
		      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
		        var entry = this.tryEntries[i];
		        var record = entry.completion;
	
		        if (entry.tryLoc === "root") {
		          // Exception thrown outside of any try block that could handle
		          // it, so set the completion value of the entire function to
		          // throw the exception.
		          return handle("end");
		        }
	
		        if (entry.tryLoc <= this.prev) {
		          var hasCatch = hasOwn.call(entry, "catchLoc");
		          var hasFinally = hasOwn.call(entry, "finallyLoc");
	
		          if (hasCatch && hasFinally) {
		            if (this.prev < entry.catchLoc) {
		              return handle(entry.catchLoc, true);
		            } else if (this.prev < entry.finallyLoc) {
		              return handle(entry.finallyLoc);
		            }
	
		          } else if (hasCatch) {
		            if (this.prev < entry.catchLoc) {
		              return handle(entry.catchLoc, true);
		            }
	
		          } else if (hasFinally) {
		            if (this.prev < entry.finallyLoc) {
		              return handle(entry.finallyLoc);
		            }
	
		          } else {
		            throw new Error("try statement without catch or finally");
		          }
		        }
		      }
		    },
	
		    abrupt: function(type, arg) {
		      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
		        var entry = this.tryEntries[i];
		        if (entry.tryLoc <= this.prev &&
		            hasOwn.call(entry, "finallyLoc") &&
		            this.prev < entry.finallyLoc) {
		          var finallyEntry = entry;
		          break;
		        }
		      }
	
		      if (finallyEntry &&
		          (type === "break" ||
		           type === "continue") &&
		          finallyEntry.tryLoc <= arg &&
		          arg <= finallyEntry.finallyLoc) {
		        // Ignore the finally entry if control is not jumping to a
		        // location outside the try/catch block.
		        finallyEntry = null;
		      }
	
		      var record = finallyEntry ? finallyEntry.completion : {};
		      record.type = type;
		      record.arg = arg;
	
		      if (finallyEntry) {
		        this.method = "next";
		        this.next = finallyEntry.finallyLoc;
		        return ContinueSentinel;
		      }
	
		      return this.complete(record);
		    },
	
		    complete: function(record, afterLoc) {
		      if (record.type === "throw") {
		        throw record.arg;
		      }
	
		      if (record.type === "break" ||
		          record.type === "continue") {
		        this.next = record.arg;
		      } else if (record.type === "return") {
		        this.rval = this.arg = record.arg;
		        this.method = "return";
		        this.next = "end";
		      } else if (record.type === "normal" && afterLoc) {
		        this.next = afterLoc;
		      }
	
		      return ContinueSentinel;
		    },
	
		    finish: function(finallyLoc) {
		      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
		        var entry = this.tryEntries[i];
		        if (entry.finallyLoc === finallyLoc) {
		          this.complete(entry.completion, entry.afterLoc);
		          resetTryEntry(entry);
		          return ContinueSentinel;
		        }
		      }
		    },
	
		    "catch": function(tryLoc) {
		      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
		        var entry = this.tryEntries[i];
		        if (entry.tryLoc === tryLoc) {
		          var record = entry.completion;
		          if (record.type === "throw") {
		            var thrown = record.arg;
		            resetTryEntry(entry);
		          }
		          return thrown;
		        }
		      }
	
		      // The context.catch method must only be called with a location
		      // argument that corresponds to a known catch block.
		      throw new Error("illegal catch attempt");
		    },
	
		    delegateYield: function(iterable, resultName, nextLoc) {
		      this.delegate = {
		        iterator: values(iterable),
		        resultName: resultName,
		        nextLoc: nextLoc
		      };
	
		      if (this.method === "next") {
		        // Deliberately forget the last sent value so that we don't
		        // accidentally pass it on to the delegate.
		        this.arg = undefined;
		      }
	
		      return ContinueSentinel;
		    }
		  };
		})(
		  // Among the various tricks for obtaining a reference to the global
		  // object, this seems to be the most reliable technique that does not
		  // use indirect eval (which violates Content Security Policy).
		  typeof global === "object" ? global :
		  typeof window === "object" ? window :
		  typeof self === "object" ? self : this
		);
	
		/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))
	
	/***/ },
	/* 588 */
	/***/ function(module, exports, __webpack_require__) {
	
		__webpack_require__(589);
		module.exports = __webpack_require__(274).RegExp.escape;
	
	
	/***/ },
	/* 589 */
	/***/ function(module, exports, __webpack_require__) {
	
		// https://github.com/benjamingr/RexExp.escape
		var $export = __webpack_require__(273);
		var $re = __webpack_require__(590)(/[\\^$*+?.()|[\]{}]/g, '\\$&');
	
		$export($export.S, 'RegExp', { escape: function escape(it) { return $re(it); } });
	
	
	/***/ },
	/* 590 */
	/***/ function(module, exports) {
	
		module.exports = function (regExp, replace) {
		  var replacer = replace === Object(replace) ? function (part) {
		    return replace[part];
		  } : replace;
		  return function (it) {
		    return String(it).replace(regExp, replacer);
		  };
		};
	
	
	/***/ },
	/* 591 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var _react = __webpack_require__(68);
	
		var _react2 = _interopRequireDefault(_react);
	
		var _PreLoader = __webpack_require__(251);
	
		var _PreLoader2 = _interopRequireDefault(_PreLoader);
	
		var _reactInfiniteScroller = __webpack_require__(252);
	
		var _reactInfiniteScroller2 = _interopRequireDefault(_reactInfiniteScroller);
	
		var _LanguageSwitch = __webpack_require__(592);
	
		var _LanguageSwitch2 = _interopRequireDefault(_LanguageSwitch);
	
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
		var ResultList = _react2.default.createClass({
			displayName: 'ResultList',
	
	
			showResults: function showResults() {
				var replacements = {};
				var searchElem = [];
				var filterElem = [];
				var resultMessage = this.props.i18n.AmountOfResultsSingle;
				var displayedYear = isNaN(this.props.year) ? this.props.i18n.NewsAllYears : this.props.year;
	
				switch (this.props.reactAppName) {
					case 'presscenter':
						searchElem = typeof this.props.searchValue !== "undefined" && this.props.searchValue.length ? ', ' + this.props.searchValue : '';
						filterElem = typeof this.props.selectedFilter !== "undefined" && this.props.selectedFilter.length ? ', ' + this.props.selectedFilter : '';
	
						replacements = {
							"{0}": this.props.results.length,
							"{1}": this.props.totalResults,
							"{2}": displayedYear + searchElem + filterElem
						};
						break;
	
					case 'sitesearch':
						searchElem = typeof this.props.searchValue !== "undefined" && this.props.searchValue.length ? this.props.searchValue : '';
						filterElem = typeof this.props.selectedFilter !== "undefined" && this.props.selectedFilter.length ? ', ' + this.props.selectedFilter : '';
	
						replacements = {
							"{0}": this.props.results.length,
							"{1}": this.props.totalResults,
							"{2}": searchElem + filterElem + ' '
						};
						break;
	
					default:
						replacements = {
							"{0}": this.props.results.length,
							"{1}": this.props.totalResults,
							"{2}": this.props.year
						};
				}
	
				resultMessage = resultMessage.replace(/{\w+}/g, function (all) {
					return replacements[all] || all;
				});
	
				return resultMessage;
			},
	
			render: function render() {
				var _this = this;
	
				var content = null;
	
				if (this.props.isLoading) {
					content = _react2.default.createElement(_PreLoader2.default, null);
				} else {
					if (this.props.results.length > 0) {
						content = _react2.default.createElement(
							'div',
							null,
							_react2.default.createElement(
								'h3',
								{ className: 'mod-result-list__heading' },
								this.showResults()
							),
							this.props.showLanguageSwitch && this.props.switchLang && _react2.default.createElement(_LanguageSwitch2.default, {
								i18n: this.props.i18n,
								label: this.props.switchText,
								context: this.props.contextLang,
								contextUrl: this.props.contextLangUrl,
								'switch': this.props.switchLang,
								switchUrl: this.props.switchLangUrl
							}),
							_react2.default.createElement(
								'div',
								{ className: 'mod-result-list__body' },
								this.props.children
							)
						);
					} else {
	
						content = _react2.default.createElement(
							'div',
							{ className: 'mod-result-list__no-results' },
							this.props.i18n.NoResultsFound
						);
					}
				}
	
				return _react2.default.createElement(
					'div',
					{ className: 'mod mod-result-list', 'data-t-name': 'ResultList' },
					_react2.default.createElement(
						_reactInfiniteScroller2.default,
						{
							pageStart: 1,
							loadMore: function loadMore(e) {
								_this.props.showNextResults && _this.props.loadNextResults(e);
							},
							hasMore: this.props.totalResults > this.props.results.length && this.props.showNextResults,
							loader: _react2.default.createElement(_PreLoader2.default, null)
						},
						content
					),
					!this.props.isLoading && this.props.totalResults > this.props.itemsPerPage && !this.props.showNextResults && _react2.default.createElement(
						'button',
						{ type: 'button', onClick: this.props.handleMoreResultsForShowing, className: 'btn btn--secondary btn--block text-center' },
						_react2.default.createElement('span', { className: 'icon icon--loop', 'aria-hidden': 'true' }),
						this.props.i18n.LoadMoreResults
					)
				);
			}
		});
	
		module.exports = ResultList;
	
	/***/ },
	/* 592 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
	
		var _react = __webpack_require__(68);
	
		var _react2 = _interopRequireDefault(_react);
	
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
		var LanguageSwitch = _react2.default.createClass({
			displayName: "LanguageSwitch",
	
	
			render: function render() {
	
				return _react2.default.createElement(
					"div",
					{ className: "mod-press-center__language-switch" },
					_react2.default.createElement(
						"span",
						null,
						this.props.label
					),
					_react2.default.createElement(
						"ul",
						{ className: "linklist linklist--separator mod-press-center__language-select" },
						_react2.default.createElement(
							"li",
							{ className: "is-active" },
							this.props.context
						),
						_react2.default.createElement(
							"li",
							null,
							_react2.default.createElement(
								"a",
								{ href: this.props.switchUrl },
								this.props.switch
							)
						)
					)
				);
			}
		});
	
		module.exports = LanguageSwitch;
	
	/***/ },
	/* 593 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
	
		var _react = __webpack_require__(68);
	
		var _react2 = _interopRequireDefault(_react);
	
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
		var CalendarListItem = _react2.default.createClass({
		    displayName: "CalendarListItem",
	
	
		    handleMeta: function handleMeta() {
		        return _react2.default.createElement(
		            "div",
		            { className: "mod-calendar-list__meta" },
		            this.props.location && _react2.default.createElement(
		                "span",
		                { className: "mod-calendar-list__info" },
		                _react2.default.createElement("span", { className: "icon icon--location" }),
		                this.props.location
		            ),
		            !this.props.isDeparted && _react2.default.createElement(
		                "a",
		                { href: this.props.addEvent, "data-eventid": this.props.eventId, className: "mod-calendar-list__info" },
		                _react2.default.createElement("span", { className: "icon icon--add" }),
		                this.props.linkText
		            )
		        );
		    },
	
		    render: function render() {
	
		        /* Sent date format is: November 9, 2017 and has to be split */
		        var dateArr = this.props.date.split(',');
		        var dateSubstrg = dateArr[0].split(' ');
		        var dateYear = dateArr[1];
		        var dateMonth = dateSubstrg[0];
		        var dateDay = dateSubstrg[1];
	
		        return _react2.default.createElement(
		            "article",
		            { className: "mod mod-calendar-list__item " + (this.props.isDeparted ? 'is-departed' : '') },
		            _react2.default.createElement(
		                "div",
		                { className: "mod-calendar-list__date" },
		                _react2.default.createElement(
		                    "span",
		                    { className: "mod-calendar-list__year" },
		                    dateYear
		                ),
		                _react2.default.createElement(
		                    "span",
		                    { className: "mod-calendar-list__day" },
		                    dateDay
		                ),
		                _react2.default.createElement(
		                    "span",
		                    { className: "mod-calendar-list__month" },
		                    dateMonth
		                )
		            ),
		            this.props.location || !this.props.isDeparted ? this.handleMeta() : '',
		            _react2.default.createElement(
		                "div",
		                { className: "mod-calendar-list__content" },
		                this.props.typeName ? _react2.default.createElement(
		                    "span",
		                    { className: "label label--secondary" },
		                    this.props.typeName
		                ) : '',
		                _react2.default.createElement(
		                    "h3",
		                    { className: "mod-calendar-list__headline heading-h2" },
		                    this.props.linkUrl ? _react2.default.createElement(
		                        "a",
		                        { className: "link link-copy", target: this.props.linkTarget, title: this.props.linkTitle, href: this.props.linkUrl },
		                        this.props.headline
		                    ) : this.props.headline
		                )
		            )
		        );
		    }
		});
	
		module.exports = CalendarListItem;
	
	/***/ },
	/* 594 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var _react = __webpack_require__(68);
	
		var _react2 = _interopRequireDefault(_react);
	
		var _reactSelect2Wrapper = __webpack_require__(595);
	
		var _reactSelect2Wrapper2 = _interopRequireDefault(_reactSelect2Wrapper);
	
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
		var SortSection = _react2.default.createClass({
			displayName: 'SortSection',
	
	
			getInitialState: function getInitialState() {
				return {
					filterOptions: []
				};
			},
	
			componentDidMount: function componentDidMount() {
				if (this.props.filterOptions) {
					this.props.filterOptions.then(function (data) {
						switch (this.props.reactAppName) {
							case 'presscenter':
								data;break;
							case 'calendar':
								data;break;
							default:
								data.shift();break;
						}
						this.setState({ filterOptions: data });
					}.bind(this));
				}
			},
	
			onSubmit: function onSubmit(e) {
				e.preventDefault();
				this.props.handleSearchInput(this.props.searchValue);
			},
	
			render: function render() {
	
				var leftContent = '';
				var midContent = '';
				var rightContent = '';
	
				switch (this.props.reactAppName) {
	
					case 'knowledgehub':
						leftContent = _react2.default.createElement(
							'div',
							{ className: 'mod-sort-section__search' },
							_react2.default.createElement(
								'form',
								{ onSubmit: this.onSubmit, className: 'mod mod-form', 'data-t-name': 'Form' },
								_react2.default.createElement(
									'div',
									{ className: 'textfield textfield--float-label js-float-label' },
									_react2.default.createElement('input', { type: 'search', onChange: this.props.onTextInputChange, value: this.props.searchValue, id: 'searchtextfield', className: 'textfield__control ' + (this.props.searchValue ? 'is-not-empty' : 'is-empty') }),
									_react2.default.createElement(
										'label',
										{ className: 'textfield__label', htmlFor: 'searchtextfield' },
										this.props.i18n.ResultSortingSearchLabel
									),
									_react2.default.createElement('button', { className: 'icon icon--search textfield__icon', type: 'submit', 'aria-hidden': 'true' })
								)
							)
						);
	
						midContent = _react2.default.createElement(
							'div',
							{ className: 'hidden-sm-up js-nav-drawer-trigger' },
							_react2.default.createElement(
								'div',
								{ className: 'mod mod-copy mod--flex', 'data-t-name': 'Copy' },
								_react2.default.createElement(
									'div',
									{ className: 'mod__body' },
									_react2.default.createElement(
										'div',
										{ className: 'rte' },
										_react2.default.createElement(
											'a',
											{ href: '#' },
											_react2.default.createElement('span', { className: 'icon icon--arrow-slider-right pull-right', 'aria-hidden': 'true' }),
											this.props.i18n.ShowFilterOnMobile
										)
									)
								)
							)
						);
	
						rightContent = _react2.default.createElement(
							'div',
							{ className: 'mod-sort-section__sort' },
							_react2.default.createElement(
								'form',
								{ action: '', method: 'GET', className: 'mod mod-form', 'data-t-name': 'Form' },
								_react2.default.createElement(
									'div',
									{ className: 'textfield textfield--select ' },
									_react2.default.createElement(_reactSelect2Wrapper2.default, {
										data: this.state.filterOptions,
										options: {
											placeholder: this.state.filterOptions[0],
											minimumResultsForSearch: Infinity,
											allowClear: false
										},
										className: 'textfield__control js-select',
										onSelect: this.props.filterOptionsChanged,
										value: this.props.selectedValue
									}),
									_react2.default.createElement(
										'label',
										{ className: 'textfield__label', htmlFor: 'select2' },
										this.props.i18n.ResultSortingLabel
									)
								)
							)
						);
						break;
	
					case 'presscenter':
						leftContent = _react2.default.createElement(
							'div',
							{ className: 'mod-sort-section__search' },
							_react2.default.createElement(
								'form',
								{ onSubmit: this.onSubmit, className: 'mod mod-form', 'data-t-name': 'Form' },
								_react2.default.createElement(
									'div',
									{ className: 'textfield textfield--float-label js-float-label' },
									_react2.default.createElement('input', { type: 'search', onChange: this.props.onTextInputChange, value: this.props.searchValue, id: 'searchtextfield', className: 'textfield__control ' + (this.props.searchValue ? 'is-not-empty' : 'is-empty') }),
									_react2.default.createElement(
										'label',
										{ className: 'textfield__label', htmlFor: 'searchtextfield' },
										this.props.i18n.ResultSortingSearchLabel
									),
									_react2.default.createElement('button', { className: 'icon icon--search textfield__icon', type: 'submit', 'aria-hidden': 'true' })
								)
							)
						);
	
						midContent = _react2.default.createElement(
							'div',
							{ className: 'hidden-sm-up js-nav-drawer-trigger' },
							_react2.default.createElement(
								'div',
								{ className: 'mod mod-copy mod--flex', 'data-t-name': 'Copy' },
								_react2.default.createElement(
									'div',
									{ className: 'mod__body' },
									_react2.default.createElement(
										'div',
										{ className: 'rte' },
										_react2.default.createElement(
											'a',
											{ href: '#' },
											_react2.default.createElement('span', { className: 'icon icon--arrow-slider-right pull-right', 'aria-hidden': 'true' }),
											this.props.i18n.ShowFilterOnMobile
										)
									)
								)
							)
						);
	
						rightContent = _react2.default.createElement(
							'div',
							{ className: 'mod-sort-section__sort' },
							_react2.default.createElement(
								'form',
								{ action: '', method: 'GET', className: 'mod mod-form', 'data-t-name': 'Form' },
								_react2.default.createElement(
									'div',
									{ className: 'textfield textfield--select ' },
									_react2.default.createElement(_reactSelect2Wrapper2.default, {
										data: this.state.filterOptions,
										options: {
											placeholder: this.props.defaultYear,
											minimumResultsForSearch: Infinity,
											allowClear: false
										},
										className: 'textfield__control js-select',
										onSelect: this.props.filterOptionsChanged,
										value: this.props.selectedValue
									}),
									_react2.default.createElement(
										'label',
										{ className: 'textfield__label', htmlFor: 'select2' },
										this.props.i18n.ResultSortingLabel
									)
								)
							)
						);
						break;
	
					case 'calendar':
						leftContent = _react2.default.createElement(
							'div',
							{ className: 'mod-sort-section__sort' },
							_react2.default.createElement(
								'form',
								{ action: '', method: 'GET', className: 'mod mod-form', 'data-t-name': 'Form' },
								_react2.default.createElement(
									'div',
									{ className: 'textfield textfield--select ' },
									_react2.default.createElement(_reactSelect2Wrapper2.default, {
										data: this.state.filterOptions,
										options: {
											placeholder: this.props.currentYear,
											minimumResultsForSearch: Infinity,
											allowClear: false
										},
										className: 'textfield__control js-select',
										onSelect: this.props.filterOptionsChanged,
										value: this.props.selectedValue
									})
								)
							)
						);
	
						midContent = _react2.default.createElement(
							'div',
							{ className: 'hidden-sm-up js-nav-drawer-trigger' },
							_react2.default.createElement(
								'div',
								{ className: 'mod mod-copy mod--flex', 'data-t-name': 'Copy' },
								_react2.default.createElement(
									'div',
									{ className: 'mod__body' },
									_react2.default.createElement(
										'div',
										{ className: 'rte' },
										_react2.default.createElement(
											'a',
											{ href: '#' },
											_react2.default.createElement('span', { className: 'icon icon--arrow-slider-right pull-right',
												'aria-hidden': 'true' }),
											this.props.i18n.ShowFilterOnMobile
										)
									)
								)
							)
						);
	
						rightContent = _react2.default.createElement(
							'div',
							{ className: 'mod-sort-section__add-button' },
							this.props.handlerAddEvents && _react2.default.createElement(
								'a',
								{ href: this.props.handlerAddEvents },
								_react2.default.createElement('span', { className: 'icon icon--add', 'aria-hidden': 'true' }),
								this.props.i18n.AddAllEventsToCalendar
							)
						);
						break;
	
					default:
						leftContent = _react2.default.createElement(
							'div',
							{ className: 'mod-sort-section__search' },
							_react2.default.createElement(
								'form',
								{ onSubmit: this.onSubmit, className: 'mod mod-form', 'data-t-name': 'Form' },
								_react2.default.createElement(
									'div',
									{ className: 'textfield textfield--float-label js-float-label' },
									_react2.default.createElement('input', { type: 'search', onChange: this.props.onTextInputChange, value: this.props.searchValue, id: 'searchtextfield', className: 'textfield__control ' + (this.props.searchValue ? 'is-not-empty' : 'is-empty') }),
									_react2.default.createElement(
										'label',
										{ className: 'textfield__label', htmlFor: 'searchtextfield' },
										this.props.i18n.ResultSortingSearchLabel
									),
									_react2.default.createElement('button', { className: 'icon icon--search textfield__icon', type: 'submit', 'aria-hidden': 'true' })
								)
							)
						);
	
						midContent = _react2.default.createElement(
							'div',
							{ className: 'hidden-sm-up js-nav-drawer-trigger' },
							_react2.default.createElement(
								'div',
								{ className: 'mod mod-copy mod--flex', 'data-t-name': 'Copy' },
								_react2.default.createElement(
									'div',
									{ className: 'mod__body' },
									_react2.default.createElement(
										'div',
										{ className: 'rte' },
										_react2.default.createElement(
											'a',
											{ href: '#' },
											_react2.default.createElement('span', { className: 'icon icon--arrow-slider-right pull-right', 'aria-hidden': 'true' }),
											this.props.i18n.ShowFilterOnMobile
										)
									)
								)
							)
						);
	
						rightContent = '';
				}
	
				return _react2.default.createElement(
					'div',
					{ className: 'mod mod-sort-section', 'data-t-name': 'SortSection' },
					leftContent,
					midContent,
					rightContent
				);
			}
		});
	
		module.exports = SortSection;
	
	/***/ },
	/* 595 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
	
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
		var _react = __webpack_require__(68);
	
		var _react2 = _interopRequireDefault(_react);
	
		var _propTypes = __webpack_require__(596);
	
		var _propTypes2 = _interopRequireDefault(_propTypes);
	
		var _reactDom = __webpack_require__(99);
	
		var _reactDom2 = _interopRequireDefault(_reactDom);
	
		var _shallowEqualFuzzy = __webpack_require__(604);
	
		var _shallowEqualFuzzy2 = _interopRequireDefault(_shallowEqualFuzzy);
	
		var _jquery = __webpack_require__(4);
	
		var _jquery2 = _interopRequireDefault(_jquery);
	
		__webpack_require__(39);
	
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
		function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
		var namespace = 'react-select2-wrapper';
	
		var Select2 = function (_Component) {
		  _inherits(Select2, _Component);
	
		  function Select2(props) {
		    _classCallCheck(this, Select2);
	
		    var _this = _possibleConstructorReturn(this, (Select2.__proto__ || Object.getPrototypeOf(Select2)).call(this, props));
	
		    _this.el = null;
		    _this.forceUpdateValue = false;
		    _this.initialRender = true;
		    return _this;
		  }
	
		  _createClass(Select2, [{
		    key: 'componentDidMount',
		    value: function componentDidMount() {
		      this.initSelect2(this.props);
		      this.updateValue();
		    }
		  }, {
		    key: 'componentWillReceiveProps',
		    value: function componentWillReceiveProps(nextProps) {
		      this.initialRender = false;
		      this.updSelect2(nextProps);
		    }
		  }, {
		    key: 'componentDidUpdate',
		    value: function componentDidUpdate() {
		      this.updateValue();
		    }
		  }, {
		    key: 'componentWillUnmount',
		    value: function componentWillUnmount() {
		      this.destroySelect2();
		    }
		  }, {
		    key: 'initSelect2',
		    value: function initSelect2(props) {
		      var options = props.options;
	
	
		      this.el = (0, _jquery2.default)(_reactDom2.default.findDOMNode(this));
		      // fix for updating selected value when data is changing
		      if (this.forceUpdateValue) {
		        this.updateSelect2Value(null);
		      }
		      this.el.select2(this.prepareOptions(options));
		      this.attachEventHandlers(props);
		    }
		  }, {
		    key: 'updSelect2',
		    value: function updSelect2(props) {
		      var prevProps = this.props;
	
		      if (!(0, _shallowEqualFuzzy2.default)(prevProps.data, props.data)) {
		        this.forceUpdateValue = true;
		        this.destroySelect2(false);
		        this.initSelect2(props);
		        return;
		      }
	
		      var options = props.options;
	
		      if (!(0, _shallowEqualFuzzy2.default)(prevProps.options, options)) {
		        this.el.select2(this.prepareOptions(options));
		      }
	
		      var handlerChanged = function handlerChanged(e) {
		        return prevProps[e[1]] !== props[e[1]];
		      };
		      if (props.events.some(handlerChanged)) {
		        this.detachEventHandlers();
		        this.attachEventHandlers(props);
		      }
		    }
		  }, {
		    key: 'updateSelect2Value',
		    value: function updateSelect2Value(value) {
		      this.el.off('change.' + namespace).val(value).trigger('change');
	
		      var onChange = this.props.onChange;
		      if (onChange) {
		        this.el.on('change.' + namespace, onChange);
		      }
		    }
		  }, {
		    key: 'updateValue',
		    value: function updateValue() {
		      var _props = this.props,
		          value = _props.value,
		          defaultValue = _props.defaultValue,
		          multiple = _props.multiple;
	
		      var newValue = this.prepareValue(value, defaultValue);
		      var currentValue = multiple ? this.el.val() || [] : this.el.val();
	
		      if (!this.fuzzyValuesEqual(currentValue, newValue) || this.forceUpdateValue) {
		        this.updateSelect2Value(newValue);
		        if (!this.initialRender) {
		          this.el.trigger('change');
		        }
		        this.forceUpdateValue = false;
		      }
		    }
		  }, {
		    key: 'fuzzyValuesEqual',
		    value: function fuzzyValuesEqual(currentValue, newValue) {
		      return currentValue === null && newValue === '' || (0, _shallowEqualFuzzy2.default)(currentValue, newValue);
		    }
		  }, {
		    key: 'destroySelect2',
		    value: function destroySelect2() {
		      var withCallbacks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
	
		      if (withCallbacks) {
		        this.detachEventHandlers();
		      }
	
		      this.el.select2('destroy');
		      this.el = null;
		    }
		  }, {
		    key: 'attachEventHandlers',
		    value: function attachEventHandlers(props) {
		      var _this2 = this;
	
		      props.events.forEach(function (event) {
		        if (typeof props[event[1]] !== 'undefined') {
		          _this2.el.on(event[0], props[event[1]]);
		        }
		      });
		    }
		  }, {
		    key: 'detachEventHandlers',
		    value: function detachEventHandlers() {
		      var _this3 = this;
	
		      this.props.events.forEach(function (event) {
		        if (typeof _this3.props[event[1]] !== 'undefined') {
		          _this3.el.off(event[0]);
		        }
		      });
		    }
		  }, {
		    key: 'prepareValue',
		    value: function prepareValue(value, defaultValue) {
		      var issetValue = typeof value !== 'undefined' && value !== null;
		      var issetDefaultValue = typeof defaultValue !== 'undefined';
	
		      if (!issetValue && issetDefaultValue) {
		        return defaultValue;
		      }
		      return value;
		    }
		  }, {
		    key: 'prepareOptions',
		    value: function prepareOptions(options) {
		      var opt = options;
		      if (typeof opt.dropdownParent === 'string') {
		        opt.dropdownParent = (0, _jquery2.default)(opt.dropdownParent);
		      }
		      return opt;
		    }
		  }, {
		    key: 'isObject',
		    value: function isObject(value) {
		      var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);
		      return type === 'function' || value && type === 'object' || false;
		    }
		  }, {
		    key: 'makeOption',
		    value: function makeOption(item) {
		      if (this.isObject(item)) {
		        var id = item.id,
		            text = item.text,
		            itemParams = _objectWithoutProperties(item, ['id', 'text']);
	
		        return _react2.default.createElement(
		          'option',
		          _extends({ key: 'option-' + id, value: id }, itemParams),
		          text
		        );
		      }
	
		      return _react2.default.createElement(
		        'option',
		        { key: 'option-' + item, value: item },
		        item
		      );
		    }
		  }, {
		    key: 'render',
		    value: function render() {
		      var _this4 = this;
	
		      var _props2 = this.props,
		          data = _props2.data,
		          value = _props2.value,
		          props = _objectWithoutProperties(_props2, ['data', 'value']);
	
		      delete props.options;
		      delete props.events;
		      delete props.onOpen;
		      delete props.onClose;
		      delete props.onSelect;
		      delete props.onChange;
		      delete props.onUnselect;
	
		      return _react2.default.createElement(
		        'select',
		        props,
		        data.map(function (item, k) {
		          if (_this4.isObject(item) && _this4.isObject(item.children)) {
		            var children = item.children,
		                text = item.text,
		                itemParams = _objectWithoutProperties(item, ['children', 'text']);
	
		            return _react2.default.createElement(
		              'optgroup',
		              _extends({ key: 'optgroup-' + k, label: text }, itemParams),
		              children.map(function (child) {
		                return _this4.makeOption(child);
		              })
		            );
		          }
		          return _this4.makeOption(item);
		        })
		      );
		    }
		  }]);
	
		  return Select2;
		}(_react.Component);
	
		Select2.propTypes = {
		  defaultValue: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.array, _propTypes2.default.string]),
		  value: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.array, _propTypes2.default.string]),
		  data: _propTypes2.default.array,
		  events: _propTypes2.default.array,
		  options: _propTypes2.default.object,
		  multiple: _propTypes2.default.bool,
		  onOpen: _propTypes2.default.func,
		  onClose: _propTypes2.default.func,
		  onSelect: _propTypes2.default.func,
		  onChange: _propTypes2.default.func,
		  onUnselect: _propTypes2.default.func
		};
		Select2.defaultProps = {
		  data: [],
		  events: [['change.' + namespace, 'onChange'], ['select2:open.' + namespace, 'onOpen'], ['select2:close.' + namespace, 'onClose'], ['select2:select.' + namespace, 'onSelect'], ['select2:unselect.' + namespace, 'onUnselect']],
		  options: {},
		  multiple: false
		};
		exports.default = Select2;
		module.exports = exports['default'];
	
	/***/ },
	/* 596 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 */
	
		if (process.env.NODE_ENV !== 'production') {
		  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&
		    Symbol.for &&
		    Symbol.for('react.element')) ||
		    0xeac7;
	
		  var isValidElement = function(object) {
		    return typeof object === 'object' &&
		      object !== null &&
		      object.$$typeof === REACT_ELEMENT_TYPE;
		  };
	
		  // By explicitly using `prop-types` you are opting into new development behavior.
		  // http://fb.me/prop-types-in-prod
		  var throwOnDirectAccess = true;
		  module.exports = __webpack_require__(597)(isValidElement, throwOnDirectAccess);
		} else {
		  // By explicitly using `prop-types` you are opting into new production behavior.
		  // http://fb.me/prop-types-in-prod
		  module.exports = __webpack_require__(603)();
		}
	
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 597 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 */
	
		'use strict';
	
		var emptyFunction = __webpack_require__(598);
		var invariant = __webpack_require__(599);
		var warning = __webpack_require__(600);
	
		var ReactPropTypesSecret = __webpack_require__(601);
		var checkPropTypes = __webpack_require__(602);
	
		module.exports = function(isValidElement, throwOnDirectAccess) {
		  /* global Symbol */
		  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
		  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.
	
		  /**
		   * Returns the iterator method function contained on the iterable object.
		   *
		   * Be sure to invoke the function with the iterable as context:
		   *
		   *     var iteratorFn = getIteratorFn(myIterable);
		   *     if (iteratorFn) {
		   *       var iterator = iteratorFn.call(myIterable);
		   *       ...
		   *     }
		   *
		   * @param {?object} maybeIterable
		   * @return {?function}
		   */
		  function getIteratorFn(maybeIterable) {
		    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
		    if (typeof iteratorFn === 'function') {
		      return iteratorFn;
		    }
		  }
	
		  /**
		   * Collection of methods that allow declaration and validation of props that are
		   * supplied to React components. Example usage:
		   *
		   *   var Props = require('ReactPropTypes');
		   *   var MyArticle = React.createClass({
		   *     propTypes: {
		   *       // An optional string prop named "description".
		   *       description: Props.string,
		   *
		   *       // A required enum prop named "category".
		   *       category: Props.oneOf(['News','Photos']).isRequired,
		   *
		   *       // A prop named "dialog" that requires an instance of Dialog.
		   *       dialog: Props.instanceOf(Dialog).isRequired
		   *     },
		   *     render: function() { ... }
		   *   });
		   *
		   * A more formal specification of how these methods are used:
		   *
		   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
		   *   decl := ReactPropTypes.{type}(.isRequired)?
		   *
		   * Each and every declaration produces a function with the same signature. This
		   * allows the creation of custom validation functions. For example:
		   *
		   *  var MyLink = React.createClass({
		   *    propTypes: {
		   *      // An optional string or URI prop named "href".
		   *      href: function(props, propName, componentName) {
		   *        var propValue = props[propName];
		   *        if (propValue != null && typeof propValue !== 'string' &&
		   *            !(propValue instanceof URI)) {
		   *          return new Error(
		   *            'Expected a string or an URI for ' + propName + ' in ' +
		   *            componentName
		   *          );
		   *        }
		   *      }
		   *    },
		   *    render: function() {...}
		   *  });
		   *
		   * @internal
		   */
	
		  var ANONYMOUS = '<<anonymous>>';
	
		  // Important!
		  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
		  var ReactPropTypes = {
		    array: createPrimitiveTypeChecker('array'),
		    bool: createPrimitiveTypeChecker('boolean'),
		    func: createPrimitiveTypeChecker('function'),
		    number: createPrimitiveTypeChecker('number'),
		    object: createPrimitiveTypeChecker('object'),
		    string: createPrimitiveTypeChecker('string'),
		    symbol: createPrimitiveTypeChecker('symbol'),
	
		    any: createAnyTypeChecker(),
		    arrayOf: createArrayOfTypeChecker,
		    element: createElementTypeChecker(),
		    instanceOf: createInstanceTypeChecker,
		    node: createNodeChecker(),
		    objectOf: createObjectOfTypeChecker,
		    oneOf: createEnumTypeChecker,
		    oneOfType: createUnionTypeChecker,
		    shape: createShapeTypeChecker
		  };
	
		  /**
		   * inlined Object.is polyfill to avoid requiring consumers ship their own
		   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
		   */
		  /*eslint-disable no-self-compare*/
		  function is(x, y) {
		    // SameValue algorithm
		    if (x === y) {
		      // Steps 1-5, 7-10
		      // Steps 6.b-6.e: +0 != -0
		      return x !== 0 || 1 / x === 1 / y;
		    } else {
		      // Step 6.a: NaN == NaN
		      return x !== x && y !== y;
		    }
		  }
		  /*eslint-enable no-self-compare*/
	
		  /**
		   * We use an Error-like object for backward compatibility as people may call
		   * PropTypes directly and inspect their output. However, we don't use real
		   * Errors anymore. We don't inspect their stack anyway, and creating them
		   * is prohibitively expensive if they are created too often, such as what
		   * happens in oneOfType() for any type before the one that matched.
		   */
		  function PropTypeError(message) {
		    this.message = message;
		    this.stack = '';
		  }
		  // Make `instanceof Error` still work for returned errors.
		  PropTypeError.prototype = Error.prototype;
	
		  function createChainableTypeChecker(validate) {
		    if (process.env.NODE_ENV !== 'production') {
		      var manualPropTypeCallCache = {};
		      var manualPropTypeWarningCount = 0;
		    }
		    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
		      componentName = componentName || ANONYMOUS;
		      propFullName = propFullName || propName;
	
		      if (secret !== ReactPropTypesSecret) {
		        if (throwOnDirectAccess) {
		          // New behavior only for users of `prop-types` package
		          invariant(
		            false,
		            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
		            'Use `PropTypes.checkPropTypes()` to call them. ' +
		            'Read more at http://fb.me/use-check-prop-types'
		          );
		        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
		          // Old behavior for people using React.PropTypes
		          var cacheKey = componentName + ':' + propName;
		          if (
		            !manualPropTypeCallCache[cacheKey] &&
		            // Avoid spamming the console because they are often not actionable except for lib authors
		            manualPropTypeWarningCount < 3
		          ) {
		            warning(
		              false,
		              'You are manually calling a React.PropTypes validation ' +
		              'function for the `%s` prop on `%s`. This is deprecated ' +
		              'and will throw in the standalone `prop-types` package. ' +
		              'You may be seeing this warning due to a third-party PropTypes ' +
		              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.',
		              propFullName,
		              componentName
		            );
		            manualPropTypeCallCache[cacheKey] = true;
		            manualPropTypeWarningCount++;
		          }
		        }
		      }
		      if (props[propName] == null) {
		        if (isRequired) {
		          if (props[propName] === null) {
		            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
		          }
		          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
		        }
		        return null;
		      } else {
		        return validate(props, propName, componentName, location, propFullName);
		      }
		    }
	
		    var chainedCheckType = checkType.bind(null, false);
		    chainedCheckType.isRequired = checkType.bind(null, true);
	
		    return chainedCheckType;
		  }
	
		  function createPrimitiveTypeChecker(expectedType) {
		    function validate(props, propName, componentName, location, propFullName, secret) {
		      var propValue = props[propName];
		      var propType = getPropType(propValue);
		      if (propType !== expectedType) {
		        // `propValue` being instance of, say, date/regexp, pass the 'object'
		        // check, but we can offer a more precise error message here rather than
		        // 'of type `object`'.
		        var preciseType = getPreciseType(propValue);
	
		        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
		      }
		      return null;
		    }
		    return createChainableTypeChecker(validate);
		  }
	
		  function createAnyTypeChecker() {
		    return createChainableTypeChecker(emptyFunction.thatReturnsNull);
		  }
	
		  function createArrayOfTypeChecker(typeChecker) {
		    function validate(props, propName, componentName, location, propFullName) {
		      if (typeof typeChecker !== 'function') {
		        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
		      }
		      var propValue = props[propName];
		      if (!Array.isArray(propValue)) {
		        var propType = getPropType(propValue);
		        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
		      }
		      for (var i = 0; i < propValue.length; i++) {
		        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
		        if (error instanceof Error) {
		          return error;
		        }
		      }
		      return null;
		    }
		    return createChainableTypeChecker(validate);
		  }
	
		  function createElementTypeChecker() {
		    function validate(props, propName, componentName, location, propFullName) {
		      var propValue = props[propName];
		      if (!isValidElement(propValue)) {
		        var propType = getPropType(propValue);
		        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
		      }
		      return null;
		    }
		    return createChainableTypeChecker(validate);
		  }
	
		  function createInstanceTypeChecker(expectedClass) {
		    function validate(props, propName, componentName, location, propFullName) {
		      if (!(props[propName] instanceof expectedClass)) {
		        var expectedClassName = expectedClass.name || ANONYMOUS;
		        var actualClassName = getClassName(props[propName]);
		        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
		      }
		      return null;
		    }
		    return createChainableTypeChecker(validate);
		  }
	
		  function createEnumTypeChecker(expectedValues) {
		    if (!Array.isArray(expectedValues)) {
		      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
		      return emptyFunction.thatReturnsNull;
		    }
	
		    function validate(props, propName, componentName, location, propFullName) {
		      var propValue = props[propName];
		      for (var i = 0; i < expectedValues.length; i++) {
		        if (is(propValue, expectedValues[i])) {
		          return null;
		        }
		      }
	
		      var valuesString = JSON.stringify(expectedValues);
		      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
		    }
		    return createChainableTypeChecker(validate);
		  }
	
		  function createObjectOfTypeChecker(typeChecker) {
		    function validate(props, propName, componentName, location, propFullName) {
		      if (typeof typeChecker !== 'function') {
		        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
		      }
		      var propValue = props[propName];
		      var propType = getPropType(propValue);
		      if (propType !== 'object') {
		        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
		      }
		      for (var key in propValue) {
		        if (propValue.hasOwnProperty(key)) {
		          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
		          if (error instanceof Error) {
		            return error;
		          }
		        }
		      }
		      return null;
		    }
		    return createChainableTypeChecker(validate);
		  }
	
		  function createUnionTypeChecker(arrayOfTypeCheckers) {
		    if (!Array.isArray(arrayOfTypeCheckers)) {
		      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
		      return emptyFunction.thatReturnsNull;
		    }
	
		    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
		      var checker = arrayOfTypeCheckers[i];
		      if (typeof checker !== 'function') {
		        warning(
		          false,
		          'Invalid argument supplid to oneOfType. Expected an array of check functions, but ' +
		          'received %s at index %s.',
		          getPostfixForTypeWarning(checker),
		          i
		        );
		        return emptyFunction.thatReturnsNull;
		      }
		    }
	
		    function validate(props, propName, componentName, location, propFullName) {
		      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
		        var checker = arrayOfTypeCheckers[i];
		        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
		          return null;
		        }
		      }
	
		      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
		    }
		    return createChainableTypeChecker(validate);
		  }
	
		  function createNodeChecker() {
		    function validate(props, propName, componentName, location, propFullName) {
		      if (!isNode(props[propName])) {
		        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
		      }
		      return null;
		    }
		    return createChainableTypeChecker(validate);
		  }
	
		  function createShapeTypeChecker(shapeTypes) {
		    function validate(props, propName, componentName, location, propFullName) {
		      var propValue = props[propName];
		      var propType = getPropType(propValue);
		      if (propType !== 'object') {
		        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
		      }
		      for (var key in shapeTypes) {
		        var checker = shapeTypes[key];
		        if (!checker) {
		          continue;
		        }
		        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
		        if (error) {
		          return error;
		        }
		      }
		      return null;
		    }
		    return createChainableTypeChecker(validate);
		  }
	
		  function isNode(propValue) {
		    switch (typeof propValue) {
		      case 'number':
		      case 'string':
		      case 'undefined':
		        return true;
		      case 'boolean':
		        return !propValue;
		      case 'object':
		        if (Array.isArray(propValue)) {
		          return propValue.every(isNode);
		        }
		        if (propValue === null || isValidElement(propValue)) {
		          return true;
		        }
	
		        var iteratorFn = getIteratorFn(propValue);
		        if (iteratorFn) {
		          var iterator = iteratorFn.call(propValue);
		          var step;
		          if (iteratorFn !== propValue.entries) {
		            while (!(step = iterator.next()).done) {
		              if (!isNode(step.value)) {
		                return false;
		              }
		            }
		          } else {
		            // Iterator will provide entry [k,v] tuples rather than values.
		            while (!(step = iterator.next()).done) {
		              var entry = step.value;
		              if (entry) {
		                if (!isNode(entry[1])) {
		                  return false;
		                }
		              }
		            }
		          }
		        } else {
		          return false;
		        }
	
		        return true;
		      default:
		        return false;
		    }
		  }
	
		  function isSymbol(propType, propValue) {
		    // Native Symbol.
		    if (propType === 'symbol') {
		      return true;
		    }
	
		    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
		    if (propValue['@@toStringTag'] === 'Symbol') {
		      return true;
		    }
	
		    // Fallback for non-spec compliant Symbols which are polyfilled.
		    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
		      return true;
		    }
	
		    return false;
		  }
	
		  // Equivalent of `typeof` but with special handling for array and regexp.
		  function getPropType(propValue) {
		    var propType = typeof propValue;
		    if (Array.isArray(propValue)) {
		      return 'array';
		    }
		    if (propValue instanceof RegExp) {
		      // Old webkits (at least until Android 4.0) return 'function' rather than
		      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
		      // passes PropTypes.object.
		      return 'object';
		    }
		    if (isSymbol(propType, propValue)) {
		      return 'symbol';
		    }
		    return propType;
		  }
	
		  // This handles more types than `getPropType`. Only used for error messages.
		  // See `createPrimitiveTypeChecker`.
		  function getPreciseType(propValue) {
		    if (typeof propValue === 'undefined' || propValue === null) {
		      return '' + propValue;
		    }
		    var propType = getPropType(propValue);
		    if (propType === 'object') {
		      if (propValue instanceof Date) {
		        return 'date';
		      } else if (propValue instanceof RegExp) {
		        return 'regexp';
		      }
		    }
		    return propType;
		  }
	
		  // Returns a string that is postfixed to a warning about an invalid type.
		  // For example, "undefined" or "of type array"
		  function getPostfixForTypeWarning(value) {
		    var type = getPreciseType(value);
		    switch (type) {
		      case 'array':
		      case 'object':
		        return 'an ' + type;
		      case 'boolean':
		      case 'date':
		      case 'regexp':
		        return 'a ' + type;
		      default:
		        return type;
		    }
		  }
	
		  // Returns class name of the object, if any.
		  function getClassName(propValue) {
		    if (!propValue.constructor || !propValue.constructor.name) {
		      return ANONYMOUS;
		    }
		    return propValue.constructor.name;
		  }
	
		  ReactPropTypes.checkPropTypes = checkPropTypes;
		  ReactPropTypes.PropTypes = ReactPropTypes;
	
		  return ReactPropTypes;
		};
	
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 598 */
	/***/ function(module, exports) {
	
		"use strict";
	
		/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * 
		 */
	
		function makeEmptyFunction(arg) {
		  return function () {
		    return arg;
		  };
		}
	
		/**
		 * This function accepts and discards inputs; it has no side effects. This is
		 * primarily useful idiomatically for overridable function endpoints which
		 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
		 */
		var emptyFunction = function emptyFunction() {};
	
		emptyFunction.thatReturns = makeEmptyFunction;
		emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
		emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
		emptyFunction.thatReturnsNull = makeEmptyFunction(null);
		emptyFunction.thatReturnsThis = function () {
		  return this;
		};
		emptyFunction.thatReturnsArgument = function (arg) {
		  return arg;
		};
	
		module.exports = emptyFunction;
	
	/***/ },
	/* 599 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		/**
		 * Use invariant() to assert state which your program assumes to be true.
		 *
		 * Provide sprintf-style format (only %s is supported) and arguments
		 * to provide information about what broke and what you were
		 * expecting.
		 *
		 * The invariant message will be stripped in production, but the invariant
		 * will remain to ensure logic does not differ in production.
		 */
	
		var validateFormat = function validateFormat(format) {};
	
		if (process.env.NODE_ENV !== 'production') {
		  validateFormat = function validateFormat(format) {
		    if (format === undefined) {
		      throw new Error('invariant requires an error message argument');
		    }
		  };
		}
	
		function invariant(condition, format, a, b, c, d, e, f) {
		  validateFormat(format);
	
		  if (!condition) {
		    var error;
		    if (format === undefined) {
		      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
		    } else {
		      var args = [a, b, c, d, e, f];
		      var argIndex = 0;
		      error = new Error(format.replace(/%s/g, function () {
		        return args[argIndex++];
		      }));
		      error.name = 'Invariant Violation';
		    }
	
		    error.framesToPop = 1; // we don't care about invariant's own frame
		    throw error;
		  }
		}
	
		module.exports = invariant;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 600 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2014-2015, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
	
		'use strict';
	
		var emptyFunction = __webpack_require__(598);
	
		/**
		 * Similar to invariant but only logs a warning if the condition is not met.
		 * This can be used to log issues in development environments in critical
		 * paths. Removing the logging code for production environments will keep the
		 * same logic and follow the same code paths.
		 */
	
		var warning = emptyFunction;
	
		if (process.env.NODE_ENV !== 'production') {
		  var printWarning = function printWarning(format) {
		    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
		      args[_key - 1] = arguments[_key];
		    }
	
		    var argIndex = 0;
		    var message = 'Warning: ' + format.replace(/%s/g, function () {
		      return args[argIndex++];
		    });
		    if (typeof console !== 'undefined') {
		      console.error(message);
		    }
		    try {
		      // --- Welcome to debugging React ---
		      // This error was thrown as a convenience so that you can use this stack
		      // to find the callsite that caused this warning to fire.
		      throw new Error(message);
		    } catch (x) {}
		  };
	
		  warning = function warning(condition, format) {
		    if (format === undefined) {
		      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
		    }
	
		    if (format.indexOf('Failed Composite propType: ') === 0) {
		      return; // Ignore CompositeComponent proptype check.
		    }
	
		    if (!condition) {
		      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
		        args[_key2 - 2] = arguments[_key2];
		      }
	
		      printWarning.apply(undefined, [format].concat(args));
		    }
		  };
		}
	
		module.exports = warning;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 601 */
	/***/ function(module, exports) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 */
	
		'use strict';
	
		var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
	
		module.exports = ReactPropTypesSecret;
	
	
	/***/ },
	/* 602 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 */
	
		'use strict';
	
		if (process.env.NODE_ENV !== 'production') {
		  var invariant = __webpack_require__(599);
		  var warning = __webpack_require__(600);
		  var ReactPropTypesSecret = __webpack_require__(601);
		  var loggedTypeFailures = {};
		}
	
		/**
		 * Assert that the values match with the type specs.
		 * Error messages are memorized and will only be shown once.
		 *
		 * @param {object} typeSpecs Map of name to a ReactPropType
		 * @param {object} values Runtime values that need to be type-checked
		 * @param {string} location e.g. "prop", "context", "child context"
		 * @param {string} componentName Name of the component for error messages.
		 * @param {?Function} getStack Returns the component stack.
		 * @private
		 */
		function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
		  if (process.env.NODE_ENV !== 'production') {
		    for (var typeSpecName in typeSpecs) {
		      if (typeSpecs.hasOwnProperty(typeSpecName)) {
		        var error;
		        // Prop type validation may throw. In case they do, we don't want to
		        // fail the render phase where it didn't fail before. So we log it.
		        // After these have been cleaned up, we'll let them throw.
		        try {
		          // This is intentionally an invariant that gets caught. It's the same
		          // behavior as without this statement except with a better message.
		          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', componentName || 'React class', location, typeSpecName);
		          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
		        } catch (ex) {
		          error = ex;
		        }
		        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);
		        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
		          // Only monitor this failure once because there tends to be a lot of the
		          // same error.
		          loggedTypeFailures[error.message] = true;
	
		          var stack = getStack ? getStack() : '';
	
		          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');
		        }
		      }
		    }
		  }
		}
	
		module.exports = checkPropTypes;
	
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))
	
	/***/ },
	/* 603 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 */
	
		'use strict';
	
		var emptyFunction = __webpack_require__(598);
		var invariant = __webpack_require__(599);
		var ReactPropTypesSecret = __webpack_require__(601);
	
		module.exports = function() {
		  function shim(props, propName, componentName, location, propFullName, secret) {
		    if (secret === ReactPropTypesSecret) {
		      // It is still safe when called from React.
		      return;
		    }
		    invariant(
		      false,
		      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
		      'Use PropTypes.checkPropTypes() to call them. ' +
		      'Read more at http://fb.me/use-check-prop-types'
		    );
		  };
		  shim.isRequired = shim;
		  function getShim() {
		    return shim;
		  };
		  // Important!
		  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
		  var ReactPropTypes = {
		    array: shim,
		    bool: shim,
		    func: shim,
		    number: shim,
		    object: shim,
		    string: shim,
		    symbol: shim,
	
		    any: shim,
		    arrayOf: getShim,
		    element: shim,
		    instanceOf: getShim,
		    node: shim,
		    objectOf: getShim,
		    oneOf: getShim,
		    oneOfType: getShim,
		    shape: getShim
		  };
	
		  ReactPropTypes.checkPropTypes = emptyFunction;
		  ReactPropTypes.PropTypes = ReactPropTypes;
	
		  return ReactPropTypes;
		};
	
	
	/***/ },
	/* 604 */
	/***/ function(module, exports) {
	
		// inlined http://underscorejs.org/ realization isString, isNumber
		var toString = Object.prototype.toString;
	
		function isString(obj) {
		  return toString.call(obj) === "[object String]";
		}
	
		function isNumber(obj) {
		  return toString.call(obj) === "[object Number]";
		}
	
		/**
		 * inlined Object.is polyfill to avoid requiring consumers ship their own
		 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
		 */
		function is(x, y) {
		  // SameValue algorithm
		  if (x === y) {
		    // Steps 1-5, 7-10
		    // Steps 6.b-6.e: +0 != -0
		    return x !== 0 || 1 / x === 1 / y;
		  } else {
		    // Step 6.a: NaN == NaN
		    /* eslint no-self-compare: 0 */
		    return x !== x && y !== y;
		  }
		}
	
		function isFuzzy(x, y) {
		  /* eslint eqeqeq: 0 */
		  if (x == y) {
		    if ((isString(x) || isNumber(x)) && (isString(y) || isNumber(y))) {
		      return true;
		    }
		  }
		  return is(x, y);
		}
	
		var hasOwnProperty = Object.prototype.hasOwnProperty;
	
		// custom algoritm from https://github.com/facebook/fbjs
		// fbjs/lib/shallowEqual
		function shallowEqualFuzzy(objA, objB) {
		  if (isFuzzy(objA, objB)) {
		    return true;
		  }
	
		  if (typeof objA !== "object" || objA === null || typeof objB !== "object" || objB === null) {
		    return false;
		  }
	
		  if (objA instanceof Array && objB instanceof Array) {
		    if (objA.length !== objB.length) {
		      return false;
		    }
		    // greed search
		    var valA, iLen = objA.length;
		    var equalityMap = new Array(iLen);
		    for (var i = 0; i < iLen; i++) {
		      valA = objA[i];
		      if (shallowEqualFuzzy(valA, objB[i])) {
		        // elements in array in normal order
		        equalityMap[i] = true;
		        continue;
		      }
	
		      // elements in array have different order
		      var isEqual = false;
		      for (var k = 0, kLen = objB.length; k < kLen; k++) {
		        if (equalityMap[k]) {
		          continue;
		        }
		        if (shallowEqualFuzzy(valA, objB[k])) {
		          equalityMap[k] = true;
		          isEqual = true;
		          break;
		        }
		      }
		      if (!isEqual) {
		        return false;
		      }
		    }
		    return true;
		  }
	
		  var keysA = Object.keys(objA);
		  var keysB = Object.keys(objB);
	
		  if (keysA.length !== keysB.length) {
		    return false;
		  }
	
		  for (var j = 0; j < keysA.length; j++) {
		    if (!hasOwnProperty.call(objB, keysA[j]) ||
		      !shallowEqualFuzzy(objA[keysA[j]], objB[keysA[j]])) {
		      return false;
		    }
		  }
		  return true;
		}
	
		module.exports = shallowEqualFuzzy;
	
	
	/***/ },
	/* 605 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var _react = __webpack_require__(68);
	
		var _react2 = _interopRequireDefault(_react);
	
		var _GlobalFilterSection = __webpack_require__(606);
	
		var _GlobalFilterSection2 = _interopRequireDefault(_GlobalFilterSection);
	
		var _lodash = __webpack_require__(609);
	
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
		var GlobalFilter = _react2.default.createClass({
			displayName: 'GlobalFilter',
	
	
			getInitialState: function getInitialState() {
				return {
					selectedFilters: [], filtered: false
				};
			},
	
			clearFilter: function clearFilter(e) {
				if (e) e.preventDefault();
	
				if (this.props.isLoading) {
					return;
				}
				if (this.state.selectedFilters.length > 0 || this.props.hasSearch || this.props.hasSorted) {
					this.setState({ selectedFilters: [] });
					this.props.handleClearFilter();
				}
			},
	
			componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
				switch (this.props.reactAppName) {
					case 'calendar':
						if (nextProps.switchYear !== this.props.switchYear) {
							this.setState({ selectedFilters: [] });
						}
						break;
	
					case 'presscenter':
						if (nextProps.switchYear !== this.props.switchYear) {
							this.setState({ selectedFilters: [] });
						}
						break;
				}
			},
	
	
			initActiveFilter: function initActiveFilter(e, category, title, filterKey, categoryType) {
				if (e) e.preventDefault();
				console.log('test');
				if (this.props.isLoading) return;
	
				var filterObject = this.createFilterObject(categoryType, title, filterKey, category);
				var selectedFilters = this.state.selectedFilters;
	
				var filterObjectAlreadyExists = selectedFilters.filter(function (filter) {
					return filter.title === filterObject.title && filter.categoryType === filterObject.categoryType;
				}).length > 0;
	
				if (!filterObjectAlreadyExists) {
					selectedFilters.push(filterObject);
				}
				this.setState({ selectedFilters: selectedFilters });
			},
	
			setFilter: function setFilter(e, category, title, filterKey, categoryType) {
				if (e) e.preventDefault();
				if (this.props.isLoading) return;
	
				var filterObject = this.createFilterObject(categoryType, title, filterKey, category);
				var selectedFilters = this.state.selectedFilters;
	
				var filterObjectAlreadyExists = selectedFilters.filter(function (filter) {
					return filter.title === filterObject.title && filter.categoryType === filterObject.categoryType;
				}).length > 0;
	
				if (!filterObjectAlreadyExists) {
					selectedFilters.push(filterObject);
					this.props.filterResult(filterObject[category], selectedFilters, categoryType);
				}
	
				this.setState({ selectedFilters: selectedFilters });
			},
	
			unsetFilter: function unsetFilter(e, category, title, filterKey, categoryType) {
				if (e) {
					e.preventDefault();
				}
				if (this.props.isLoading) {
					return;
				}
				var selectedFilters = this.state.selectedFilters;
	
				selectedFilters.splice(selectedFilters.findIndex(function (filter) {
					return filter.key === filterKey;
				}), 1);
				this.props.filterResult(category, selectedFilters, categoryType);
	
				this.setState({ selectedFilters: selectedFilters });
			},
	
			createFilterObject: function createFilterObject(categoryType, title, filterKey, category) {
				var filterString = {
					key: filterKey,
					categoryType: categoryType,
					title: title,
					contentType: category
				};
				return filterString;
			},
	
			render: function render() {
				var _this = this;
	
				var filtersection = _react2.default.createElement(
					'div',
					{ className: 'mod mod-global-filter' },
					_react2.default.createElement(
						'div',
						{ className: 'mod-global-filter__header' },
						_react2.default.createElement(
							'h3',
							null,
							this.props.i18n.FilterSectionHeadline
						),
						_react2.default.createElement(
							'a',
							{ href: '#', onClick: function onClick(e) {
									return _this.clearFilter(e);
								} },
							this.props.i18n.ClearFilterSection
						)
					),
					this.props.categories.length > 0 ? this.props.categories.map(function (key, idx) {
						return _react2.default.createElement(_GlobalFilterSection2.default, {
							key: idx,
							categoryName: key.Name,
							filters: key.FacetValues,
							idx: idx,
							selectFilter: this.setFilter,
							unselectFilter: this.unsetFilter,
							selectedFilters: this.state.selectedFilters,
							initActive: this.initActiveFilter,
							categoryType: key.IndexedField,
							i18n: this.props.i18n
						});
					}, this) : !this.props.isLoading && _react2.default.createElement(
						'div',
						{ className: 'mod-global-filter__no-results' },
						this.props.i18n.NoResultsFound
					)
				);
	
				return _react2.default.createElement(
					'div',
					null,
					filtersection
				);
			}
		});
	
		module.exports = GlobalFilter;
	
	/***/ },
	/* 606 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var _react = __webpack_require__(68);
	
		var _react2 = _interopRequireDefault(_react);
	
		var _LessMoreWrapper = __webpack_require__(607);
	
		var _LessMoreWrapper2 = _interopRequireDefault(_LessMoreWrapper);
	
		var _GlobalFilterItem = __webpack_require__(608);
	
		var _GlobalFilterItem2 = _interopRequireDefault(_GlobalFilterItem);
	
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
		var GlobalFilterSection = _react2.default.createClass({
			displayName: 'GlobalFilterSection',
	
	
			render: function render() {
	
				var isFilterItemSelected = function isFilterItemSelected(filterKey, category, categoryType, isActive) {
					var objectIsSelectedFilter = isActive && true;
					return objectIsSelectedFilter;
				};
	
				return _react2.default.createElement(
					'div',
					{ className: 'mod-global-filter__section' },
					_react2.default.createElement(
						'h3',
						null,
						this.props.categoryName
					),
					_react2.default.createElement(_LessMoreWrapper2.default, { filterAmount: '4', i18n: this.props.i18n, items: this.props.filters.map(function (key, idx) {
							return _react2.default.createElement(_GlobalFilterItem2.default, {
								key: idx,
								title: key.Title,
								filterKey: key.Key,
								count: key.AggregateCount,
								selectFilter: this.props.selectFilter,
								unselectFilter: this.props.unselectFilter,
								categoryName: this.props.categoryName,
								categoryType: this.props.categoryType,
								isActive: key.IsActive,
								isSelected: isFilterItemSelected(key.Key, this.props.categoryName, this.props.categoryType, key.IsActive),
								initActive: this.props.initActive
							});
						}, this) })
				);
			}
		});
	
		module.exports = GlobalFilterSection;
	
	/***/ },
	/* 607 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
	
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
	
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
		var _react = __webpack_require__(68);
	
		var _react2 = _interopRequireDefault(_react);
	
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
		function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
		var LessMoreWrapper = function (_React$Component) {
		    _inherits(LessMoreWrapper, _React$Component);
	
		    function LessMoreWrapper() {
		        _classCallCheck(this, LessMoreWrapper);
	
		        var _this = _possibleConstructorReturn(this, (LessMoreWrapper.__proto__ || Object.getPrototypeOf(LessMoreWrapper)).call(this));
	
		        _this.state = {
		            "showMoreItems": false
		        };
		        return _this;
		    }
	
		    _createClass(LessMoreWrapper, [{
		        key: "showAllFilters",
		        value: function showAllFilters(e) {
		            e.preventDefault();
		            this.setState({ "showMoreItems": true });
		        }
		    }, {
		        key: "reduceAllFilters",
		        value: function reduceAllFilters(e) {
		            e.preventDefault();
		            this.setState({ "showMoreItems": false });
		        }
		    }, {
		        key: "render",
		        value: function render() {
		            var _this2 = this;
	
		            var showMoreLink = _react2.default.createElement(
		                "li",
		                { key: 'showMoreLink' },
		                _react2.default.createElement(
		                    "span",
		                    { className: "mod-global-filter__section__showmore" },
		                    _react2.default.createElement(
		                        "a",
		                        { href: "#", onClick: function onClick(e) {
		                                return _this2.showAllFilters(e);
		                            } },
		                        _react2.default.createElement("span", { className: "icon icon--arrow-down-thick" }),
		                        this.props.i18n.MoreFilterOptions
		                    )
		                )
		            );
	
		            var showLessLink = _react2.default.createElement(
		                "li",
		                { key: 'showLessLink' },
		                _react2.default.createElement(
		                    "span",
		                    { className: "mod-global-filter__section__showless" },
		                    _react2.default.createElement(
		                        "a",
		                        { href: "#", onClick: function onClick(e) {
		                                return _this2.reduceAllFilters(e);
		                            } },
		                        _react2.default.createElement("span", { className: "icon icon--arrow-up-thick" }),
		                        this.props.i18n.LessFilterOptions
		                    )
		                )
		            );
	
		            var itemsToShow = [];
	
		            if (!this.state.showMoreItems) {
		                for (var length = 0; length < this.props.filterAmount; length++) {
		                    itemsToShow.push(this.props.items[length]);
		                }
		                if (this.props.items.length > this.props.filterAmount) {
		                    itemsToShow.push(showMoreLink);
		                }
		            } else {
		                itemsToShow = this.props.items;
		                if (this.props.items.length > this.props.filterAmount) {
		                    itemsToShow = [].concat(_toConsumableArray(itemsToShow), [showLessLink]);
		                }
		            }
	
		            return _react2.default.createElement(
		                "ul",
		                null,
		                itemsToShow
		            );
		        }
		    }]);
	
		    return LessMoreWrapper;
		}(_react2.default.Component);
	
		exports.default = LessMoreWrapper;
	
	/***/ },
	/* 608 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var _react = __webpack_require__(68);
	
		var _react2 = _interopRequireDefault(_react);
	
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
		var GlobalFilterItem = _react2.default.createClass({
			displayName: 'GlobalFilterItem',
	
			componentDidMount: function componentDidMount() {
				if (this.props.isActive) {
					this.props.initActive(undefined, this.props.categoryName, this.props.title, this.props.filterKey, this.props.categoryType, this.props.isActive);
				}
			},
	
			render: function render() {
				var _this = this;
	
				return _react2.default.createElement(
					'li',
					null,
					_react2.default.createElement(
						'a',
						{ href: '#',
							className: 'mod-global-filter__section__filter ' + (this.props.isSelected ? 'is-selected' : ''),
							'data-filter-key': this.props.categoryName,
							onClick: function onClick(e) {
								return _this.props.isSelected ? _this.props.unselectFilter(e, _this.props.categoryName, _this.props.title, _this.props.filterKey, _this.props.categoryType, _this.props.isActive) : _this.props.selectFilter(e, _this.props.categoryName, _this.props.title, _this.props.filterKey, _this.props.categoryType, _this.props.isActive);
							} },
						this.props.title,
						_react2.default.createElement(
							'span',
							{ className: 'mod-global-filter__section__filter-counter' },
							'(',
							this.props.count,
							')'
						),
						_react2.default.createElement('span', { className: 'icon icon--cross-filled', 'aria-hidden': 'true' })
					)
				);
			}
		});
	
		module.exports = GlobalFilterItem;
	
	/***/ },
	/* 609 */
	/***/ function(module, exports, __webpack_require__) {
	
		var __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(global, module) {/**
		 * @license
		 * Lodash <https://lodash.com/>
		 * Copyright JS Foundation and other contributors <https://js.foundation/>
		 * Released under MIT license <https://lodash.com/license>
		 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
		 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
		 */
		;(function() {
	
		  /** Used as a safe reference for `undefined` in pre-ES5 environments. */
		  var undefined;
	
		  /** Used as the semantic version number. */
		  var VERSION = '4.17.4';
	
		  /** Used as the size to enable large array optimizations. */
		  var LARGE_ARRAY_SIZE = 200;
	
		  /** Error message constants. */
		  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',
		      FUNC_ERROR_TEXT = 'Expected a function';
	
		  /** Used to stand-in for `undefined` hash values. */
		  var HASH_UNDEFINED = '__lodash_hash_undefined__';
	
		  /** Used as the maximum memoize cache size. */
		  var MAX_MEMOIZE_SIZE = 500;
	
		  /** Used as the internal argument placeholder. */
		  var PLACEHOLDER = '__lodash_placeholder__';
	
		  /** Used to compose bitmasks for cloning. */
		  var CLONE_DEEP_FLAG = 1,
		      CLONE_FLAT_FLAG = 2,
		      CLONE_SYMBOLS_FLAG = 4;
	
		  /** Used to compose bitmasks for value comparisons. */
		  var COMPARE_PARTIAL_FLAG = 1,
		      COMPARE_UNORDERED_FLAG = 2;
	
		  /** Used to compose bitmasks for function metadata. */
		  var WRAP_BIND_FLAG = 1,
		      WRAP_BIND_KEY_FLAG = 2,
		      WRAP_CURRY_BOUND_FLAG = 4,
		      WRAP_CURRY_FLAG = 8,
		      WRAP_CURRY_RIGHT_FLAG = 16,
		      WRAP_PARTIAL_FLAG = 32,
		      WRAP_PARTIAL_RIGHT_FLAG = 64,
		      WRAP_ARY_FLAG = 128,
		      WRAP_REARG_FLAG = 256,
		      WRAP_FLIP_FLAG = 512;
	
		  /** Used as default options for `_.truncate`. */
		  var DEFAULT_TRUNC_LENGTH = 30,
		      DEFAULT_TRUNC_OMISSION = '...';
	
		  /** Used to detect hot functions by number of calls within a span of milliseconds. */
		  var HOT_COUNT = 800,
		      HOT_SPAN = 16;
	
		  /** Used to indicate the type of lazy iteratees. */
		  var LAZY_FILTER_FLAG = 1,
		      LAZY_MAP_FLAG = 2,
		      LAZY_WHILE_FLAG = 3;
	
		  /** Used as references for various `Number` constants. */
		  var INFINITY = 1 / 0,
		      MAX_SAFE_INTEGER = 9007199254740991,
		      MAX_INTEGER = 1.7976931348623157e+308,
		      NAN = 0 / 0;
	
		  /** Used as references for the maximum length and index of an array. */
		  var MAX_ARRAY_LENGTH = 4294967295,
		      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,
		      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;
	
		  /** Used to associate wrap methods with their bit flags. */
		  var wrapFlags = [
		    ['ary', WRAP_ARY_FLAG],
		    ['bind', WRAP_BIND_FLAG],
		    ['bindKey', WRAP_BIND_KEY_FLAG],
		    ['curry', WRAP_CURRY_FLAG],
		    ['curryRight', WRAP_CURRY_RIGHT_FLAG],
		    ['flip', WRAP_FLIP_FLAG],
		    ['partial', WRAP_PARTIAL_FLAG],
		    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],
		    ['rearg', WRAP_REARG_FLAG]
		  ];
	
		  /** `Object#toString` result references. */
		  var argsTag = '[object Arguments]',
		      arrayTag = '[object Array]',
		      asyncTag = '[object AsyncFunction]',
		      boolTag = '[object Boolean]',
		      dateTag = '[object Date]',
		      domExcTag = '[object DOMException]',
		      errorTag = '[object Error]',
		      funcTag = '[object Function]',
		      genTag = '[object GeneratorFunction]',
		      mapTag = '[object Map]',
		      numberTag = '[object Number]',
		      nullTag = '[object Null]',
		      objectTag = '[object Object]',
		      promiseTag = '[object Promise]',
		      proxyTag = '[object Proxy]',
		      regexpTag = '[object RegExp]',
		      setTag = '[object Set]',
		      stringTag = '[object String]',
		      symbolTag = '[object Symbol]',
		      undefinedTag = '[object Undefined]',
		      weakMapTag = '[object WeakMap]',
		      weakSetTag = '[object WeakSet]';
	
		  var arrayBufferTag = '[object ArrayBuffer]',
		      dataViewTag = '[object DataView]',
		      float32Tag = '[object Float32Array]',
		      float64Tag = '[object Float64Array]',
		      int8Tag = '[object Int8Array]',
		      int16Tag = '[object Int16Array]',
		      int32Tag = '[object Int32Array]',
		      uint8Tag = '[object Uint8Array]',
		      uint8ClampedTag = '[object Uint8ClampedArray]',
		      uint16Tag = '[object Uint16Array]',
		      uint32Tag = '[object Uint32Array]';
	
		  /** Used to match empty string literals in compiled template source. */
		  var reEmptyStringLeading = /\b__p \+= '';/g,
		      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
		      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;
	
		  /** Used to match HTML entities and HTML characters. */
		  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,
		      reUnescapedHtml = /[&<>"']/g,
		      reHasEscapedHtml = RegExp(reEscapedHtml.source),
		      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);
	
		  /** Used to match template delimiters. */
		  var reEscape = /<%-([\s\S]+?)%>/g,
		      reEvaluate = /<%([\s\S]+?)%>/g,
		      reInterpolate = /<%=([\s\S]+?)%>/g;
	
		  /** Used to match property names within property paths. */
		  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
		      reIsPlainProp = /^\w*$/,
		      reLeadingDot = /^\./,
		      rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
	
		  /**
		   * Used to match `RegExp`
		   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
		   */
		  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
		      reHasRegExpChar = RegExp(reRegExpChar.source);
	
		  /** Used to match leading and trailing whitespace. */
		  var reTrim = /^\s+|\s+$/g,
		      reTrimStart = /^\s+/,
		      reTrimEnd = /\s+$/;
	
		  /** Used to match wrap detail comments. */
		  var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
		      reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
		      reSplitDetails = /,? & /;
	
		  /** Used to match words composed of alphanumeric characters. */
		  var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
	
		  /** Used to match backslashes in property paths. */
		  var reEscapeChar = /\\(\\)?/g;
	
		  /**
		   * Used to match
		   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).
		   */
		  var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;
	
		  /** Used to match `RegExp` flags from their coerced string values. */
		  var reFlags = /\w*$/;
	
		  /** Used to detect bad signed hexadecimal string values. */
		  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
	
		  /** Used to detect binary string values. */
		  var reIsBinary = /^0b[01]+$/i;
	
		  /** Used to detect host constructors (Safari). */
		  var reIsHostCtor = /^\[object .+?Constructor\]$/;
	
		  /** Used to detect octal string values. */
		  var reIsOctal = /^0o[0-7]+$/i;
	
		  /** Used to detect unsigned integer values. */
		  var reIsUint = /^(?:0|[1-9]\d*)$/;
	
		  /** Used to match Latin Unicode letters (excluding mathematical operators). */
		  var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;
	
		  /** Used to ensure capturing order of template delimiters. */
		  var reNoMatch = /($^)/;
	
		  /** Used to match unescaped characters in compiled string literals. */
		  var reUnescapedString = /['\n\r\u2028\u2029\\]/g;
	
		  /** Used to compose unicode character classes. */
		  var rsAstralRange = '\\ud800-\\udfff',
		      rsComboMarksRange = '\\u0300-\\u036f',
		      reComboHalfMarksRange = '\\ufe20-\\ufe2f',
		      rsComboSymbolsRange = '\\u20d0-\\u20ff',
		      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
		      rsDingbatRange = '\\u2700-\\u27bf',
		      rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
		      rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
		      rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
		      rsPunctuationRange = '\\u2000-\\u206f',
		      rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
		      rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
		      rsVarRange = '\\ufe0e\\ufe0f',
		      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;
	
		  /** Used to compose unicode capture groups. */
		  var rsApos = "['\u2019]",
		      rsAstral = '[' + rsAstralRange + ']',
		      rsBreak = '[' + rsBreakRange + ']',
		      rsCombo = '[' + rsComboRange + ']',
		      rsDigits = '\\d+',
		      rsDingbat = '[' + rsDingbatRange + ']',
		      rsLower = '[' + rsLowerRange + ']',
		      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
		      rsFitz = '\\ud83c[\\udffb-\\udfff]',
		      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
		      rsNonAstral = '[^' + rsAstralRange + ']',
		      rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
		      rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
		      rsUpper = '[' + rsUpperRange + ']',
		      rsZWJ = '\\u200d';
	
		  /** Used to compose unicode regexes. */
		  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
		      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
		      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
		      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
		      reOptMod = rsModifier + '?',
		      rsOptVar = '[' + rsVarRange + ']?',
		      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
		      rsOrdLower = '\\d*(?:(?:1st|2nd|3rd|(?![123])\\dth)\\b)',
		      rsOrdUpper = '\\d*(?:(?:1ST|2ND|3RD|(?![123])\\dTH)\\b)',
		      rsSeq = rsOptVar + reOptMod + rsOptJoin,
		      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,
		      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';
	
		  /** Used to match apostrophes. */
		  var reApos = RegExp(rsApos, 'g');
	
		  /**
		   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
		   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
		   */
		  var reComboMark = RegExp(rsCombo, 'g');
	
		  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
		  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');
	
		  /** Used to match complex or compound words. */
		  var reUnicodeWord = RegExp([
		    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
		    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',
		    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,
		    rsUpper + '+' + rsOptContrUpper,
		    rsOrdUpper,
		    rsOrdLower,
		    rsDigits,
		    rsEmoji
		  ].join('|'), 'g');
	
		  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
		  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');
	
		  /** Used to detect strings that need a more robust regexp to match words. */
		  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
	
		  /** Used to assign default `context` object properties. */
		  var contextProps = [
		    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',
		    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',
		    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',
		    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',
		    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'
		  ];
	
		  /** Used to make template sourceURLs easier to identify. */
		  var templateCounter = -1;
	
		  /** Used to identify `toStringTag` values of typed arrays. */
		  var typedArrayTags = {};
		  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
		  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
		  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
		  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
		  typedArrayTags[uint32Tag] = true;
		  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
		  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
		  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
		  typedArrayTags[errorTag] = typedArrayTags[funcTag] =
		  typedArrayTags[mapTag] = typedArrayTags[numberTag] =
		  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
		  typedArrayTags[setTag] = typedArrayTags[stringTag] =
		  typedArrayTags[weakMapTag] = false;
	
		  /** Used to identify `toStringTag` values supported by `_.clone`. */
		  var cloneableTags = {};
		  cloneableTags[argsTag] = cloneableTags[arrayTag] =
		  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
		  cloneableTags[boolTag] = cloneableTags[dateTag] =
		  cloneableTags[float32Tag] = cloneableTags[float64Tag] =
		  cloneableTags[int8Tag] = cloneableTags[int16Tag] =
		  cloneableTags[int32Tag] = cloneableTags[mapTag] =
		  cloneableTags[numberTag] = cloneableTags[objectTag] =
		  cloneableTags[regexpTag] = cloneableTags[setTag] =
		  cloneableTags[stringTag] = cloneableTags[symbolTag] =
		  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
		  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
		  cloneableTags[errorTag] = cloneableTags[funcTag] =
		  cloneableTags[weakMapTag] = false;
	
		  /** Used to map Latin Unicode letters to basic Latin letters. */
		  var deburredLetters = {
		    // Latin-1 Supplement block.
		    '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
		    '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
		    '\xc7': 'C',  '\xe7': 'c',
		    '\xd0': 'D',  '\xf0': 'd',
		    '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
		    '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
		    '\xcc': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
		    '\xec': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
		    '\xd1': 'N',  '\xf1': 'n',
		    '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
		    '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
		    '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
		    '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
		    '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
		    '\xc6': 'Ae', '\xe6': 'ae',
		    '\xde': 'Th', '\xfe': 'th',
		    '\xdf': 'ss',
		    // Latin Extended-A block.
		    '\u0100': 'A',  '\u0102': 'A', '\u0104': 'A',
		    '\u0101': 'a',  '\u0103': 'a', '\u0105': 'a',
		    '\u0106': 'C',  '\u0108': 'C', '\u010a': 'C', '\u010c': 'C',
		    '\u0107': 'c',  '\u0109': 'c', '\u010b': 'c', '\u010d': 'c',
		    '\u010e': 'D',  '\u0110': 'D', '\u010f': 'd', '\u0111': 'd',
		    '\u0112': 'E',  '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011a': 'E',
		    '\u0113': 'e',  '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011b': 'e',
		    '\u011c': 'G',  '\u011e': 'G', '\u0120': 'G', '\u0122': 'G',
		    '\u011d': 'g',  '\u011f': 'g', '\u0121': 'g', '\u0123': 'g',
		    '\u0124': 'H',  '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
		    '\u0128': 'I',  '\u012a': 'I', '\u012c': 'I', '\u012e': 'I', '\u0130': 'I',
		    '\u0129': 'i',  '\u012b': 'i', '\u012d': 'i', '\u012f': 'i', '\u0131': 'i',
		    '\u0134': 'J',  '\u0135': 'j',
		    '\u0136': 'K',  '\u0137': 'k', '\u0138': 'k',
		    '\u0139': 'L',  '\u013b': 'L', '\u013d': 'L', '\u013f': 'L', '\u0141': 'L',
		    '\u013a': 'l',  '\u013c': 'l', '\u013e': 'l', '\u0140': 'l', '\u0142': 'l',
		    '\u0143': 'N',  '\u0145': 'N', '\u0147': 'N', '\u014a': 'N',
		    '\u0144': 'n',  '\u0146': 'n', '\u0148': 'n', '\u014b': 'n',
		    '\u014c': 'O',  '\u014e': 'O', '\u0150': 'O',
		    '\u014d': 'o',  '\u014f': 'o', '\u0151': 'o',
		    '\u0154': 'R',  '\u0156': 'R', '\u0158': 'R',
		    '\u0155': 'r',  '\u0157': 'r', '\u0159': 'r',
		    '\u015a': 'S',  '\u015c': 'S', '\u015e': 'S', '\u0160': 'S',
		    '\u015b': 's',  '\u015d': 's', '\u015f': 's', '\u0161': 's',
		    '\u0162': 'T',  '\u0164': 'T', '\u0166': 'T',
		    '\u0163': 't',  '\u0165': 't', '\u0167': 't',
		    '\u0168': 'U',  '\u016a': 'U', '\u016c': 'U', '\u016e': 'U', '\u0170': 'U', '\u0172': 'U',
		    '\u0169': 'u',  '\u016b': 'u', '\u016d': 'u', '\u016f': 'u', '\u0171': 'u', '\u0173': 'u',
		    '\u0174': 'W',  '\u0175': 'w',
		    '\u0176': 'Y',  '\u0177': 'y', '\u0178': 'Y',
		    '\u0179': 'Z',  '\u017b': 'Z', '\u017d': 'Z',
		    '\u017a': 'z',  '\u017c': 'z', '\u017e': 'z',
		    '\u0132': 'IJ', '\u0133': 'ij',
		    '\u0152': 'Oe', '\u0153': 'oe',
		    '\u0149': "'n", '\u017f': 's'
		  };
	
		  /** Used to map characters to HTML entities. */
		  var htmlEscapes = {
		    '&': '&amp;',
		    '<': '&lt;',
		    '>': '&gt;',
		    '"': '&quot;',
		    "'": '&#39;'
		  };
	
		  /** Used to map HTML entities to characters. */
		  var htmlUnescapes = {
		    '&amp;': '&',
		    '&lt;': '<',
		    '&gt;': '>',
		    '&quot;': '"',
		    '&#39;': "'"
		  };
	
		  /** Used to escape characters for inclusion in compiled string literals. */
		  var stringEscapes = {
		    '\\': '\\',
		    "'": "'",
		    '\n': 'n',
		    '\r': 'r',
		    '\u2028': 'u2028',
		    '\u2029': 'u2029'
		  };
	
		  /** Built-in method references without a dependency on `root`. */
		  var freeParseFloat = parseFloat,
		      freeParseInt = parseInt;
	
		  /** Detect free variable `global` from Node.js. */
		  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;
	
		  /** Detect free variable `self`. */
		  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;
	
		  /** Used as a reference to the global object. */
		  var root = freeGlobal || freeSelf || Function('return this')();
	
		  /** Detect free variable `exports`. */
		  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;
	
		  /** Detect free variable `module`. */
		  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;
	
		  /** Detect the popular CommonJS extension `module.exports`. */
		  var moduleExports = freeModule && freeModule.exports === freeExports;
	
		  /** Detect free variable `process` from Node.js. */
		  var freeProcess = moduleExports && freeGlobal.process;
	
		  /** Used to access faster Node.js helpers. */
		  var nodeUtil = (function() {
		    try {
		      return freeProcess && freeProcess.binding && freeProcess.binding('util');
		    } catch (e) {}
		  }());
	
		  /* Node.js helper references. */
		  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,
		      nodeIsDate = nodeUtil && nodeUtil.isDate,
		      nodeIsMap = nodeUtil && nodeUtil.isMap,
		      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,
		      nodeIsSet = nodeUtil && nodeUtil.isSet,
		      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
	
		  /*--------------------------------------------------------------------------*/
	
		  /**
		   * Adds the key-value `pair` to `map`.
		   *
		   * @private
		   * @param {Object} map The map to modify.
		   * @param {Array} pair The key-value pair to add.
		   * @returns {Object} Returns `map`.
		   */
		  function addMapEntry(map, pair) {
		    // Don't return `map.set` because it's not chainable in IE 11.
		    map.set(pair[0], pair[1]);
		    return map;
		  }
	
		  /**
		   * Adds `value` to `set`.
		   *
		   * @private
		   * @param {Object} set The set to modify.
		   * @param {*} value The value to add.
		   * @returns {Object} Returns `set`.
		   */
		  function addSetEntry(set, value) {
		    // Don't return `set.add` because it's not chainable in IE 11.
		    set.add(value);
		    return set;
		  }
	
		  /**
		   * A faster alternative to `Function#apply`, this function invokes `func`
		   * with the `this` binding of `thisArg` and the arguments of `args`.
		   *
		   * @private
		   * @param {Function} func The function to invoke.
		   * @param {*} thisArg The `this` binding of `func`.
		   * @param {Array} args The arguments to invoke `func` with.
		   * @returns {*} Returns the result of `func`.
		   */
		  function apply(func, thisArg, args) {
		    switch (args.length) {
		      case 0: return func.call(thisArg);
		      case 1: return func.call(thisArg, args[0]);
		      case 2: return func.call(thisArg, args[0], args[1]);
		      case 3: return func.call(thisArg, args[0], args[1], args[2]);
		    }
		    return func.apply(thisArg, args);
		  }
	
		  /**
		   * A specialized version of `baseAggregator` for arrays.
		   *
		   * @private
		   * @param {Array} [array] The array to iterate over.
		   * @param {Function} setter The function to set `accumulator` values.
		   * @param {Function} iteratee The iteratee to transform keys.
		   * @param {Object} accumulator The initial aggregated object.
		   * @returns {Function} Returns `accumulator`.
		   */
		  function arrayAggregator(array, setter, iteratee, accumulator) {
		    var index = -1,
		        length = array == null ? 0 : array.length;
	
		    while (++index < length) {
		      var value = array[index];
		      setter(accumulator, value, iteratee(value), array);
		    }
		    return accumulator;
		  }
	
		  /**
		   * A specialized version of `_.forEach` for arrays without support for
		   * iteratee shorthands.
		   *
		   * @private
		   * @param {Array} [array] The array to iterate over.
		   * @param {Function} iteratee The function invoked per iteration.
		   * @returns {Array} Returns `array`.
		   */
		  function arrayEach(array, iteratee) {
		    var index = -1,
		        length = array == null ? 0 : array.length;
	
		    while (++index < length) {
		      if (iteratee(array[index], index, array) === false) {
		        break;
		      }
		    }
		    return array;
		  }
	
		  /**
		   * A specialized version of `_.forEachRight` for arrays without support for
		   * iteratee shorthands.
		   *
		   * @private
		   * @param {Array} [array] The array to iterate over.
		   * @param {Function} iteratee The function invoked per iteration.
		   * @returns {Array} Returns `array`.
		   */
		  function arrayEachRight(array, iteratee) {
		    var length = array == null ? 0 : array.length;
	
		    while (length--) {
		      if (iteratee(array[length], length, array) === false) {
		        break;
		      }
		    }
		    return array;
		  }
	
		  /**
		   * A specialized version of `_.every` for arrays without support for
		   * iteratee shorthands.
		   *
		   * @private
		   * @param {Array} [array] The array to iterate over.
		   * @param {Function} predicate The function invoked per iteration.
		   * @returns {boolean} Returns `true` if all elements pass the predicate check,
		   *  else `false`.
		   */
		  function arrayEvery(array, predicate) {
		    var index = -1,
		        length = array == null ? 0 : array.length;
	
		    while (++index < length) {
		      if (!predicate(array[index], index, array)) {
		        return false;
		      }
		    }
		    return true;
		  }
	
		  /**
		   * A specialized version of `_.filter` for arrays without support for
		   * iteratee shorthands.
		   *
		   * @private
		   * @param {Array} [array] The array to iterate over.
		   * @param {Function} predicate The function invoked per iteration.
		   * @returns {Array} Returns the new filtered array.
		   */
		  function arrayFilter(array, predicate) {
		    var index = -1,
		        length = array == null ? 0 : array.length,
		        resIndex = 0,
		        result = [];
	
		    while (++index < length) {
		      var value = array[index];
		      if (predicate(value, index, array)) {
		        result[resIndex++] = value;
		      }
		    }
		    return result;
		  }
	
		  /**
		   * A specialized version of `_.includes` for arrays without support for
		   * specifying an index to search from.
		   *
		   * @private
		   * @param {Array} [array] The array to inspect.
		   * @param {*} target The value to search for.
		   * @returns {boolean} Returns `true` if `target` is found, else `false`.
		   */
		  function arrayIncludes(array, value) {
		    var length = array == null ? 0 : array.length;
		    return !!length && baseIndexOf(array, value, 0) > -1;
		  }
	
		  /**
		   * This function is like `arrayIncludes` except that it accepts a comparator.
		   *
		   * @private
		   * @param {Array} [array] The array to inspect.
		   * @param {*} target The value to search for.
		   * @param {Function} comparator The comparator invoked per element.
		   * @returns {boolean} Returns `true` if `target` is found, else `false`.
		   */
		  function arrayIncludesWith(array, value, comparator) {
		    var index = -1,
		        length = array == null ? 0 : array.length;
	
		    while (++index < length) {
		      if (comparator(value, array[index])) {
		        return true;
		      }
		    }
		    return false;
		  }
	
		  /**
		   * A specialized version of `_.map` for arrays without support for iteratee
		   * shorthands.
		   *
		   * @private
		   * @param {Array} [array] The array to iterate over.
		   * @param {Function} iteratee The function invoked per iteration.
		   * @returns {Array} Returns the new mapped array.
		   */
		  function arrayMap(array, iteratee) {
		    var index = -1,
		        length = array == null ? 0 : array.length,
		        result = Array(length);
	
		    while (++index < length) {
		      result[index] = iteratee(array[index], index, array);
		    }
		    return result;
		  }
	
		  /**
		   * Appends the elements of `values` to `array`.
		   *
		   * @private
		   * @param {Array} array The array to modify.
		   * @param {Array} values The values to append.
		   * @returns {Array} Returns `array`.
		   */
		  function arrayPush(array, values) {
		    var index = -1,
		        length = values.length,
		        offset = array.length;
	
		    while (++index < length) {
		      array[offset + index] = values[index];
		    }
		    return array;
		  }
	
		  /**
		   * A specialized version of `_.reduce` for arrays without support for
		   * iteratee shorthands.
		   *
		   * @private
		   * @param {Array} [array] The array to iterate over.
		   * @param {Function} iteratee The function invoked per iteration.
		   * @param {*} [accumulator] The initial value.
		   * @param {boolean} [initAccum] Specify using the first element of `array` as
		   *  the initial value.
		   * @returns {*} Returns the accumulated value.
		   */
		  function arrayReduce(array, iteratee, accumulator, initAccum) {
		    var index = -1,
		        length = array == null ? 0 : array.length;
	
		    if (initAccum && length) {
		      accumulator = array[++index];
		    }
		    while (++index < length) {
		      accumulator = iteratee(accumulator, array[index], index, array);
		    }
		    return accumulator;
		  }
	
		  /**
		   * A specialized version of `_.reduceRight` for arrays without support for
		   * iteratee shorthands.
		   *
		   * @private
		   * @param {Array} [array] The array to iterate over.
		   * @param {Function} iteratee The function invoked per iteration.
		   * @param {*} [accumulator] The initial value.
		   * @param {boolean} [initAccum] Specify using the last element of `array` as
		   *  the initial value.
		   * @returns {*} Returns the accumulated value.
		   */
		  function arrayReduceRight(array, iteratee, accumulator, initAccum) {
		    var length = array == null ? 0 : array.length;
		    if (initAccum && length) {
		      accumulator = array[--length];
		    }
		    while (length--) {
		      accumulator = iteratee(accumulator, array[length], length, array);
		    }
		    return accumulator;
		  }
	
		  /**
		   * A specialized version of `_.some` for arrays without support for iteratee
		   * shorthands.
		   *
		   * @private
		   * @param {Array} [array] The array to iterate over.
		   * @param {Function} predicate The function invoked per iteration.
		   * @returns {boolean} Returns `true` if any element passes the predicate check,
		   *  else `false`.
		   */
		  function arraySome(array, predicate) {
		    var index = -1,
		        length = array == null ? 0 : array.length;
	
		    while (++index < length) {
		      if (predicate(array[index], index, array)) {
		        return true;
		      }
		    }
		    return false;
		  }
	
		  /**
		   * Gets the size of an ASCII `string`.
		   *
		   * @private
		   * @param {string} string The string inspect.
		   * @returns {number} Returns the string size.
		   */
		  var asciiSize = baseProperty('length');
	
		  /**
		   * Converts an ASCII `string` to an array.
		   *
		   * @private
		   * @param {string} string The string to convert.
		   * @returns {Array} Returns the converted array.
		   */
		  function asciiToArray(string) {
		    return string.split('');
		  }
	
		  /**
		   * Splits an ASCII `string` into an array of its words.
		   *
		   * @private
		   * @param {string} The string to inspect.
		   * @returns {Array} Returns the words of `string`.
		   */
		  function asciiWords(string) {
		    return string.match(reAsciiWord) || [];
		  }
	
		  /**
		   * The base implementation of methods like `_.findKey` and `_.findLastKey`,
		   * without support for iteratee shorthands, which iterates over `collection`
		   * using `eachFunc`.
		   *
		   * @private
		   * @param {Array|Object} collection The collection to inspect.
		   * @param {Function} predicate The function invoked per iteration.
		   * @param {Function} eachFunc The function to iterate over `collection`.
		   * @returns {*} Returns the found element or its key, else `undefined`.
		   */
		  function baseFindKey(collection, predicate, eachFunc) {
		    var result;
		    eachFunc(collection, function(value, key, collection) {
		      if (predicate(value, key, collection)) {
		        result = key;
		        return false;
		      }
		    });
		    return result;
		  }
	
		  /**
		   * The base implementation of `_.findIndex` and `_.findLastIndex` without
		   * support for iteratee shorthands.
		   *
		   * @private
		   * @param {Array} array The array to inspect.
		   * @param {Function} predicate The function invoked per iteration.
		   * @param {number} fromIndex The index to search from.
		   * @param {boolean} [fromRight] Specify iterating from right to left.
		   * @returns {number} Returns the index of the matched value, else `-1`.
		   */
		  function baseFindIndex(array, predicate, fromIndex, fromRight) {
		    var length = array.length,
		        index = fromIndex + (fromRight ? 1 : -1);
	
		    while ((fromRight ? index-- : ++index < length)) {
		      if (predicate(array[index], index, array)) {
		        return index;
		      }
		    }
		    return -1;
		  }
	
		  /**
		   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
		   *
		   * @private
		   * @param {Array} array The array to inspect.
		   * @param {*} value The value to search for.
		   * @param {number} fromIndex The index to search from.
		   * @returns {number} Returns the index of the matched value, else `-1`.
		   */
		  function baseIndexOf(array, value, fromIndex) {
		    return value === value
		      ? strictIndexOf(array, value, fromIndex)
		      : baseFindIndex(array, baseIsNaN, fromIndex);
		  }
	
		  /**
		   * This function is like `baseIndexOf` except that it accepts a comparator.
		   *
		   * @private
		   * @param {Array} array The array to inspect.
		   * @param {*} value The value to search for.
		   * @param {number} fromIndex The index to search from.
		   * @param {Function} comparator The comparator invoked per element.
		   * @returns {number} Returns the index of the matched value, else `-1`.
		   */
		  function baseIndexOfWith(array, value, fromIndex, comparator) {
		    var index = fromIndex - 1,
		        length = array.length;
	
		    while (++index < length) {
		      if (comparator(array[index], value)) {
		        return index;
		      }
		    }
		    return -1;
		  }
	
		  /**
		   * The base implementation of `_.isNaN` without support for number objects.
		   *
		   * @private
		   * @param {*} value The value to check.
		   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
		   */
		  function baseIsNaN(value) {
		    return value !== value;
		  }
	
		  /**
		   * The base implementation of `_.mean` and `_.meanBy` without support for
		   * iteratee shorthands.
		   *
		   * @private
		   * @param {Array} array The array to iterate over.
		   * @param {Function} iteratee The function invoked per iteration.
		   * @returns {number} Returns the mean.
		   */
		  function baseMean(array, iteratee) {
		    var length = array == null ? 0 : array.length;
		    return length ? (baseSum(array, iteratee) / length) : NAN;
		  }
	
		  /**
		   * The base implementation of `_.property` without support for deep paths.
		   *
		   * @private
		   * @param {string} key The key of the property to get.
		   * @returns {Function} Returns the new accessor function.
		   */
		  function baseProperty(key) {
		    return function(object) {
		      return object == null ? undefined : object[key];
		    };
		  }
	
		  /**
		   * The base implementation of `_.propertyOf` without support for deep paths.
		   *
		   * @private
		   * @param {Object} object The object to query.
		   * @returns {Function} Returns the new accessor function.
		   */
		  function basePropertyOf(object) {
		    return function(key) {
		      return object == null ? undefined : object[key];
		    };
		  }
	
		  /**
		   * The base implementation of `_.reduce` and `_.reduceRight`, without support
		   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
		   *
		   * @private
		   * @param {Array|Object} collection The collection to iterate over.
		   * @param {Function} iteratee The function invoked per iteration.
		   * @param {*} accumulator The initial value.
		   * @param {boolean} initAccum Specify using the first or last element of
		   *  `collection` as the initial value.
		   * @param {Function} eachFunc The function to iterate over `collection`.
		   * @returns {*} Returns the accumulated value.
		   */
		  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
		    eachFunc(collection, function(value, index, collection) {
		      accumulator = initAccum
		        ? (initAccum = false, value)
		        : iteratee(accumulator, value, index, collection);
		    });
		    return accumulator;
		  }
	
		  /**
		   * The base implementation of `_.sortBy` which uses `comparer` to define the
		   * sort order of `array` and replaces criteria objects with their corresponding
		   * values.
		   *
		   * @private
		   * @param {Array} array The array to sort.
		   * @param {Function} comparer The function to define sort order.
		   * @returns {Array} Returns `array`.
		   */
		  function baseSortBy(array, comparer) {
		    var length = array.length;
	
		    array.sort(comparer);
		    while (length--) {
		      array[length] = array[length].value;
		    }
		    return array;
		  }
	
		  /**
		   * The base implementation of `_.sum` and `_.sumBy` without support for
		   * iteratee shorthands.
		   *
		   * @private
		   * @param {Array} array The array to iterate over.
		   * @param {Function} iteratee The function invoked per iteration.
		   * @returns {number} Returns the sum.
		   */
		  function baseSum(array, iteratee) {
		    var result,
		        index = -1,
		        length = array.length;
	
		    while (++index < length) {
		      var current = iteratee(array[index]);
		      if (current !== undefined) {
		        result = result === undefined ? current : (result + current);
		      }
		    }
		    return result;
		  }
	
		  /**
		   * The base implementation of `_.times` without support for iteratee shorthands
		   * or max array length checks.
		   *
		   * @private
		   * @param {number} n The number of times to invoke `iteratee`.
		   * @param {Function} iteratee The function invoked per iteration.
		   * @returns {Array} Returns the array of results.
		   */
		  function baseTimes(n, iteratee) {
		    var index = -1,
		        result = Array(n);
	
		    while (++index < n) {
		      result[index] = iteratee(index);
		    }
		    return result;
		  }
	
		  /**
		   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
		   * of key-value pairs for `object` corresponding to the property names of `props`.
		   *
		   * @private
		   * @param {Object} object The object to query.
		   * @param {Array} props The property names to get values for.
		   * @returns {Object} Returns the key-value pairs.
		   */
		  function baseToPairs(object, props) {
		    return arrayMap(props, function(key) {
		      return [key, object[key]];
		    });
		  }
	
		  /**
		   * The base implementation of `_.unary` without support for storing metadata.
		   *
		   * @private
		   * @param {Function} func The function to cap arguments for.
		   * @returns {Function} Returns the new capped function.
		   */
		  function baseUnary(func) {
		    return function(value) {
		      return func(value);
		    };
		  }
	
		  /**
		   * The base implementation of `_.values` and `_.valuesIn` which creates an
		   * array of `object` property values corresponding to the property names
		   * of `props`.
		   *
		   * @private
		   * @param {Object} object The object to query.
		   * @param {Array} props The property names to get values for.
		   * @returns {Object} Returns the array of property values.
		   */
		  function baseValues(object, props) {
		    return arrayMap(props, function(key) {
		      return object[key];
		    });
		  }
	
		  /**
		   * Checks if a `cache` value for `key` exists.
		   *
		   * @private
		   * @param {Object} cache The cache to query.
		   * @param {string} key The key of the entry to check.
		   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
		   */
		  function cacheHas(cache, key) {
		    return cache.has(key);
		  }
	
		  /**
		   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
		   * that is not found in the character symbols.
		   *
		   * @private
		   * @param {Array} strSymbols The string symbols to inspect.
		   * @param {Array} chrSymbols The character symbols to find.
		   * @returns {number} Returns the index of the first unmatched string symbol.
		   */
		  function charsStartIndex(strSymbols, chrSymbols) {
		    var index = -1,
		        length = strSymbols.length;
	
		    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
		    return index;
		  }
	
		  /**
		   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
		   * that is not found in the character symbols.
		   *
		   * @private
		   * @param {Array} strSymbols The string symbols to inspect.
		   * @param {Array} chrSymbols The character symbols to find.
		   * @returns {number} Returns the index of the last unmatched string symbol.
		   */
		  function charsEndIndex(strSymbols, chrSymbols) {
		    var index = strSymbols.length;
	
		    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
		    return index;
		  }
	
		  /**
		   * Gets the number of `placeholder` occurrences in `array`.
		   *
		   * @private
		   * @param {Array} array The array to inspect.
		   * @param {*} placeholder The placeholder to search for.
		   * @returns {number} Returns the placeholder count.
		   */
		  function countHolders(array, placeholder) {
		    var length = array.length,
		        result = 0;
	
		    while (length--) {
		      if (array[length] === placeholder) {
		        ++result;
		      }
		    }
		    return result;
		  }
	
		  /**
		   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
		   * letters to basic Latin letters.
		   *
		   * @private
		   * @param {string} letter The matched letter to deburr.
		   * @returns {string} Returns the deburred letter.
		   */
		  var deburrLetter = basePropertyOf(deburredLetters);
	
		  /**
		   * Used by `_.escape` to convert characters to HTML entities.
		   *
		   * @private
		   * @param {string} chr The matched character to escape.
		   * @returns {string} Returns the escaped character.
		   */
		  var escapeHtmlChar = basePropertyOf(htmlEscapes);
	
		  /**
		   * Used by `_.template` to escape characters for inclusion in compiled string literals.
		   *
		   * @private
		   * @param {string} chr The matched character to escape.
		   * @returns {string} Returns the escaped character.
		   */
		  function escapeStringChar(chr) {
		    return '\\' + stringEscapes[chr];
		  }
	
		  /**
		   * Gets the value at `key` of `object`.
		   *
		   * @private
		   * @param {Object} [object] The object to query.
		   * @param {string} key The key of the property to get.
		   * @returns {*} Returns the property value.
		   */
		  function getValue(object, key) {
		    return object == null ? undefined : object[key];
		  }
	
		  /**
		   * Checks if `string` contains Unicode symbols.
		   *
		   * @private
		   * @param {string} string The string to inspect.
		   * @returns {boolean} Returns `true` if a symbol is found, else `false`.
		   */
		  function hasUnicode(string) {
		    return reHasUnicode.test(string);
		  }
	
		  /**
		   * Checks if `string` contains a word composed of Unicode symbols.
		   *
		   * @private
		   * @param {string} string The string to inspect.
		   * @returns {boolean} Returns `true` if a word is found, else `false`.
		   */
		  function hasUnicodeWord(string) {
		    return reHasUnicodeWord.test(string);
		  }
	
		  /**
		   * Converts `iterator` to an array.
		   *
		   * @private
		   * @param {Object} iterator The iterator to convert.
		   * @returns {Array} Returns the converted array.
		   */
		  function iteratorToArray(iterator) {
		    var data,
		        result = [];
	
		    while (!(data = iterator.next()).done) {
		      result.push(data.value);
		    }
		    return result;
		  }
	
		  /**
		   * Converts `map` to its key-value pairs.
		   *
		   * @private
		   * @param {Object} map The map to convert.
		   * @returns {Array} Returns the key-value pairs.
		   */
		  function mapToArray(map) {
		    var index = -1,
		        result = Array(map.size);
	
		    map.forEach(function(value, key) {
		      result[++index] = [key, value];
		    });
		    return result;
		  }
	
		  /**
		   * Creates a unary function that invokes `func` with its argument transformed.
		   *
		   * @private
		   * @param {Function} func The function to wrap.
		   * @param {Function} transform The argument transform.
		   * @returns {Function} Returns the new function.
		   */
		  function overArg(func, transform) {
		    return function(arg) {
		      return func(transform(arg));
		    };
		  }
	
		  /**
		   * Replaces all `placeholder` elements in `array` with an internal placeholder
		   * and returns an array of their indexes.
		   *
		   * @private
		   * @param {Array} array The array to modify.
		   * @param {*} placeholder The placeholder to replace.
		   * @returns {Array} Returns the new array of placeholder indexes.
		   */
		  function replaceHolders(array, placeholder) {
		    var index = -1,
		        length = array.length,
		        resIndex = 0,
		        result = [];
	
		    while (++index < length) {
		      var value = array[index];
		      if (value === placeholder || value === PLACEHOLDER) {
		        array[index] = PLACEHOLDER;
		        result[resIndex++] = index;
		      }
		    }
		    return result;
		  }
	
		  /**
		   * Converts `set` to an array of its values.
		   *
		   * @private
		   * @param {Object} set The set to convert.
		   * @returns {Array} Returns the values.
		   */
		  function setToArray(set) {
		    var index = -1,
		        result = Array(set.size);
	
		    set.forEach(function(value) {
		      result[++index] = value;
		    });
		    return result;
		  }
	
		  /**
		   * Converts `set` to its value-value pairs.
		   *
		   * @private
		   * @param {Object} set The set to convert.
		   * @returns {Array} Returns the value-value pairs.
		   */
		  function setToPairs(set) {
		    var index = -1,
		        result = Array(set.size);
	
		    set.forEach(function(value) {
		      result[++index] = [value, value];
		    });
		    return result;
		  }
	
		  /**
		   * A specialized version of `_.indexOf` which performs strict equality
		   * comparisons of values, i.e. `===`.
		   *
		   * @private
		   * @param {Array} array The array to inspect.
		   * @param {*} value The value to search for.
		   * @param {number} fromIndex The index to search from.
		   * @returns {number} Returns the index of the matched value, else `-1`.
		   */
		  function strictIndexOf(array, value, fromIndex) {
		    var index = fromIndex - 1,
		        length = array.length;
	
		    while (++index < length) {
		      if (array[index] === value) {
		        return index;
		      }
		    }
		    return -1;
		  }
	
		  /**
		   * A specialized version of `_.lastIndexOf` which performs strict equality
		   * comparisons of values, i.e. `===`.
		   *
		   * @private
		   * @param {Array} array The array to inspect.
		   * @param {*} value The value to search for.
		   * @param {number} fromIndex The index to search from.
		   * @returns {number} Returns the index of the matched value, else `-1`.
		   */
		  function strictLastIndexOf(array, value, fromIndex) {
		    var index = fromIndex + 1;
		    while (index--) {
		      if (array[index] === value) {
		        return index;
		      }
		    }
		    return index;
		  }
	
		  /**
		   * Gets the number of symbols in `string`.
		   *
		   * @private
		   * @param {string} string The string to inspect.
		   * @returns {number} Returns the string size.
		   */
		  function stringSize(string) {
		    return hasUnicode(string)
		      ? unicodeSize(string)
		      : asciiSize(string);
		  }
	
		  /**
		   * Converts `string` to an array.
		   *
		   * @private
		   * @param {string} string The string to convert.
		   * @returns {Array} Returns the converted array.
		   */
		  function stringToArray(string) {
		    return hasUnicode(string)
		      ? unicodeToArray(string)
		      : asciiToArray(string);
		  }
	
		  /**
		   * Used by `_.unescape` to convert HTML entities to characters.
		   *
		   * @private
		   * @param {string} chr The matched character to unescape.
		   * @returns {string} Returns the unescaped character.
		   */
		  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);
	
		  /**
		   * Gets the size of a Unicode `string`.
		   *
		   * @private
		   * @param {string} string The string inspect.
		   * @returns {number} Returns the string size.
		   */
		  function unicodeSize(string) {
		    var result = reUnicode.lastIndex = 0;
		    while (reUnicode.test(string)) {
		      ++result;
		    }
		    return result;
		  }
	
		  /**
		   * Converts a Unicode `string` to an array.
		   *
		   * @private
		   * @param {string} string The string to convert.
		   * @returns {Array} Returns the converted array.
		   */
		  function unicodeToArray(string) {
		    return string.match(reUnicode) || [];
		  }
	
		  /**
		   * Splits a Unicode `string` into an array of its words.
		   *
		   * @private
		   * @param {string} The string to inspect.
		   * @returns {Array} Returns the words of `string`.
		   */
		  function unicodeWords(string) {
		    return string.match(reUnicodeWord) || [];
		  }
	
		  /*--------------------------------------------------------------------------*/
	
		  /**
		   * Create a new pristine `lodash` function using the `context` object.
		   *
		   * @static
		   * @memberOf _
		   * @since 1.1.0
		   * @category Util
		   * @param {Object} [context=root] The context object.
		   * @returns {Function} Returns a new `lodash` function.
		   * @example
		   *
		   * _.mixin({ 'foo': _.constant('foo') });
		   *
		   * var lodash = _.runInContext();
		   * lodash.mixin({ 'bar': lodash.constant('bar') });
		   *
		   * _.isFunction(_.foo);
		   * // => true
		   * _.isFunction(_.bar);
		   * // => false
		   *
		   * lodash.isFunction(lodash.foo);
		   * // => false
		   * lodash.isFunction(lodash.bar);
		   * // => true
		   *
		   * // Create a suped-up `defer` in Node.js.
		   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
		   */
		  var runInContext = (function runInContext(context) {
		    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));
	
		    /** Built-in constructor references. */
		    var Array = context.Array,
		        Date = context.Date,
		        Error = context.Error,
		        Function = context.Function,
		        Math = context.Math,
		        Object = context.Object,
		        RegExp = context.RegExp,
		        String = context.String,
		        TypeError = context.TypeError;
	
		    /** Used for built-in method references. */
		    var arrayProto = Array.prototype,
		        funcProto = Function.prototype,
		        objectProto = Object.prototype;
	
		    /** Used to detect overreaching core-js shims. */
		    var coreJsData = context['__core-js_shared__'];
	
		    /** Used to resolve the decompiled source of functions. */
		    var funcToString = funcProto.toString;
	
		    /** Used to check objects for own properties. */
		    var hasOwnProperty = objectProto.hasOwnProperty;
	
		    /** Used to generate unique IDs. */
		    var idCounter = 0;
	
		    /** Used to detect methods masquerading as native. */
		    var maskSrcKey = (function() {
		      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
		      return uid ? ('Symbol(src)_1.' + uid) : '';
		    }());
	
		    /**
		     * Used to resolve the
		     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
		     * of values.
		     */
		    var nativeObjectToString = objectProto.toString;
	
		    /** Used to infer the `Object` constructor. */
		    var objectCtorString = funcToString.call(Object);
	
		    /** Used to restore the original `_` reference in `_.noConflict`. */
		    var oldDash = root._;
	
		    /** Used to detect if a method is native. */
		    var reIsNative = RegExp('^' +
		      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
		      .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
		    );
	
		    /** Built-in value references. */
		    var Buffer = moduleExports ? context.Buffer : undefined,
		        Symbol = context.Symbol,
		        Uint8Array = context.Uint8Array,
		        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,
		        getPrototype = overArg(Object.getPrototypeOf, Object),
		        objectCreate = Object.create,
		        propertyIsEnumerable = objectProto.propertyIsEnumerable,
		        splice = arrayProto.splice,
		        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,
		        symIterator = Symbol ? Symbol.iterator : undefined,
		        symToStringTag = Symbol ? Symbol.toStringTag : undefined;
	
		    var defineProperty = (function() {
		      try {
		        var func = getNative(Object, 'defineProperty');
		        func({}, '', {});
		        return func;
		      } catch (e) {}
		    }());
	
		    /** Mocked built-ins. */
		    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,
		        ctxNow = Date && Date.now !== root.Date.now && Date.now,
		        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;
	
		    /* Built-in method references for those with the same name as other `lodash` methods. */
		    var nativeCeil = Math.ceil,
		        nativeFloor = Math.floor,
		        nativeGetSymbols = Object.getOwnPropertySymbols,
		        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
		        nativeIsFinite = context.isFinite,
		        nativeJoin = arrayProto.join,
		        nativeKeys = overArg(Object.keys, Object),
		        nativeMax = Math.max,
		        nativeMin = Math.min,
		        nativeNow = Date.now,
		        nativeParseInt = context.parseInt,
		        nativeRandom = Math.random,
		        nativeReverse = arrayProto.reverse;
	
		    /* Built-in method references that are verified to be native. */
		    var DataView = getNative(context, 'DataView'),
		        Map = getNative(context, 'Map'),
		        Promise = getNative(context, 'Promise'),
		        Set = getNative(context, 'Set'),
		        WeakMap = getNative(context, 'WeakMap'),
		        nativeCreate = getNative(Object, 'create');
	
		    /** Used to store function metadata. */
		    var metaMap = WeakMap && new WeakMap;
	
		    /** Used to lookup unminified function names. */
		    var realNames = {};
	
		    /** Used to detect maps, sets, and weakmaps. */
		    var dataViewCtorString = toSource(DataView),
		        mapCtorString = toSource(Map),
		        promiseCtorString = toSource(Promise),
		        setCtorString = toSource(Set),
		        weakMapCtorString = toSource(WeakMap);
	
		    /** Used to convert symbols to primitives and strings. */
		    var symbolProto = Symbol ? Symbol.prototype : undefined,
		        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,
		        symbolToString = symbolProto ? symbolProto.toString : undefined;
	
		    /*------------------------------------------------------------------------*/
	
		    /**
		     * Creates a `lodash` object which wraps `value` to enable implicit method
		     * chain sequences. Methods that operate on and return arrays, collections,
		     * and functions can be chained together. Methods that retrieve a single value
		     * or may return a primitive value will automatically end the chain sequence
		     * and return the unwrapped value. Otherwise, the value must be unwrapped
		     * with `_#value`.
		     *
		     * Explicit chain sequences, which must be unwrapped with `_#value`, may be
		     * enabled using `_.chain`.
		     *
		     * The execution of chained methods is lazy, that is, it's deferred until
		     * `_#value` is implicitly or explicitly called.
		     *
		     * Lazy evaluation allows several methods to support shortcut fusion.
		     * Shortcut fusion is an optimization to merge iteratee calls; this avoids
		     * the creation of intermediate arrays and can greatly reduce the number of
		     * iteratee executions. Sections of a chain sequence qualify for shortcut
		     * fusion if the section is applied to an array and iteratees accept only
		     * one argument. The heuristic for whether a section qualifies for shortcut
		     * fusion is subject to change.
		     *
		     * Chaining is supported in custom builds as long as the `_#value` method is
		     * directly or indirectly included in the build.
		     *
		     * In addition to lodash methods, wrappers have `Array` and `String` methods.
		     *
		     * The wrapper `Array` methods are:
		     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
		     *
		     * The wrapper `String` methods are:
		     * `replace` and `split`
		     *
		     * The wrapper methods that support shortcut fusion are:
		     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
		     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
		     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
		     *
		     * The chainable wrapper methods are:
		     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
		     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
		     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
		     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
		     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
		     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
		     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
		     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
		     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
		     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
		     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
		     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
		     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
		     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
		     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
		     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
		     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
		     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
		     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
		     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
		     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
		     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
		     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
		     * `zipObject`, `zipObjectDeep`, and `zipWith`
		     *
		     * The wrapper methods that are **not** chainable by default are:
		     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
		     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
		     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
		     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
		     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
		     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
		     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
		     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
		     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
		     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
		     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
		     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
		     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
		     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
		     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
		     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
		     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
		     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
		     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
		     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
		     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
		     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
		     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
		     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
		     * `upperFirst`, `value`, and `words`
		     *
		     * @name _
		     * @constructor
		     * @category Seq
		     * @param {*} value The value to wrap in a `lodash` instance.
		     * @returns {Object} Returns the new `lodash` wrapper instance.
		     * @example
		     *
		     * function square(n) {
		     *   return n * n;
		     * }
		     *
		     * var wrapped = _([1, 2, 3]);
		     *
		     * // Returns an unwrapped value.
		     * wrapped.reduce(_.add);
		     * // => 6
		     *
		     * // Returns a wrapped value.
		     * var squares = wrapped.map(square);
		     *
		     * _.isArray(squares);
		     * // => false
		     *
		     * _.isArray(squares.value());
		     * // => true
		     */
		    function lodash(value) {
		      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
		        if (value instanceof LodashWrapper) {
		          return value;
		        }
		        if (hasOwnProperty.call(value, '__wrapped__')) {
		          return wrapperClone(value);
		        }
		      }
		      return new LodashWrapper(value);
		    }
	
		    /**
		     * The base implementation of `_.create` without support for assigning
		     * properties to the created object.
		     *
		     * @private
		     * @param {Object} proto The object to inherit from.
		     * @returns {Object} Returns the new object.
		     */
		    var baseCreate = (function() {
		      function object() {}
		      return function(proto) {
		        if (!isObject(proto)) {
		          return {};
		        }
		        if (objectCreate) {
		          return objectCreate(proto);
		        }
		        object.prototype = proto;
		        var result = new object;
		        object.prototype = undefined;
		        return result;
		      };
		    }());
	
		    /**
		     * The function whose prototype chain sequence wrappers inherit from.
		     *
		     * @private
		     */
		    function baseLodash() {
		      // No operation performed.
		    }
	
		    /**
		     * The base constructor for creating `lodash` wrapper objects.
		     *
		     * @private
		     * @param {*} value The value to wrap.
		     * @param {boolean} [chainAll] Enable explicit method chain sequences.
		     */
		    function LodashWrapper(value, chainAll) {
		      this.__wrapped__ = value;
		      this.__actions__ = [];
		      this.__chain__ = !!chainAll;
		      this.__index__ = 0;
		      this.__values__ = undefined;
		    }
	
		    /**
		     * By default, the template delimiters used by lodash are like those in
		     * embedded Ruby (ERB) as well as ES2015 template strings. Change the
		     * following template settings to use alternative delimiters.
		     *
		     * @static
		     * @memberOf _
		     * @type {Object}
		     */
		    lodash.templateSettings = {
	
		      /**
		       * Used to detect `data` property values to be HTML-escaped.
		       *
		       * @memberOf _.templateSettings
		       * @type {RegExp}
		       */
		      'escape': reEscape,
	
		      /**
		       * Used to detect code to be evaluated.
		       *
		       * @memberOf _.templateSettings
		       * @type {RegExp}
		       */
		      'evaluate': reEvaluate,
	
		      /**
		       * Used to detect `data` property values to inject.
		       *
		       * @memberOf _.templateSettings
		       * @type {RegExp}
		       */
		      'interpolate': reInterpolate,
	
		      /**
		       * Used to reference the data object in the template text.
		       *
		       * @memberOf _.templateSettings
		       * @type {string}
		       */
		      'variable': '',
	
		      /**
		       * Used to import variables into the compiled template.
		       *
		       * @memberOf _.templateSettings
		       * @type {Object}
		       */
		      'imports': {
	
		        /**
		         * A reference to the `lodash` function.
		         *
		         * @memberOf _.templateSettings.imports
		         * @type {Function}
		         */
		        '_': lodash
		      }
		    };
	
		    // Ensure wrappers are instances of `baseLodash`.
		    lodash.prototype = baseLodash.prototype;
		    lodash.prototype.constructor = lodash;
	
		    LodashWrapper.prototype = baseCreate(baseLodash.prototype);
		    LodashWrapper.prototype.constructor = LodashWrapper;
	
		    /*------------------------------------------------------------------------*/
	
		    /**
		     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
		     *
		     * @private
		     * @constructor
		     * @param {*} value The value to wrap.
		     */
		    function LazyWrapper(value) {
		      this.__wrapped__ = value;
		      this.__actions__ = [];
		      this.__dir__ = 1;
		      this.__filtered__ = false;
		      this.__iteratees__ = [];
		      this.__takeCount__ = MAX_ARRAY_LENGTH;
		      this.__views__ = [];
		    }
	
		    /**
		     * Creates a clone of the lazy wrapper object.
		     *
		     * @private
		     * @name clone
		     * @memberOf LazyWrapper
		     * @returns {Object} Returns the cloned `LazyWrapper` object.
		     */
		    function lazyClone() {
		      var result = new LazyWrapper(this.__wrapped__);
		      result.__actions__ = copyArray(this.__actions__);
		      result.__dir__ = this.__dir__;
		      result.__filtered__ = this.__filtered__;
		      result.__iteratees__ = copyArray(this.__iteratees__);
		      result.__takeCount__ = this.__takeCount__;
		      result.__views__ = copyArray(this.__views__);
		      return result;
		    }
	
		    /**
		     * Reverses the direction of lazy iteration.
		     *
		     * @private
		     * @name reverse
		     * @memberOf LazyWrapper
		     * @returns {Object} Returns the new reversed `LazyWrapper` object.
		     */
		    function lazyReverse() {
		      if (this.__filtered__) {
		        var result = new LazyWrapper(this);
		        result.__dir__ = -1;
		        result.__filtered__ = true;
		      } else {
		        result = this.clone();
		        result.__dir__ *= -1;
		      }
		      return result;
		    }
	
		    /**
		     * Extracts the unwrapped value from its lazy wrapper.
		     *
		     * @private
		     * @name value
		     * @memberOf LazyWrapper
		     * @returns {*} Returns the unwrapped value.
		     */
		    function lazyValue() {
		      var array = this.__wrapped__.value(),
		          dir = this.__dir__,
		          isArr = isArray(array),
		          isRight = dir < 0,
		          arrLength = isArr ? array.length : 0,
		          view = getView(0, arrLength, this.__views__),
		          start = view.start,
		          end = view.end,
		          length = end - start,
		          index = isRight ? end : (start - 1),
		          iteratees = this.__iteratees__,
		          iterLength = iteratees.length,
		          resIndex = 0,
		          takeCount = nativeMin(length, this.__takeCount__);
	
		      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {
		        return baseWrapperValue(array, this.__actions__);
		      }
		      var result = [];
	
		      outer:
		      while (length-- && resIndex < takeCount) {
		        index += dir;
	
		        var iterIndex = -1,
		            value = array[index];
	
		        while (++iterIndex < iterLength) {
		          var data = iteratees[iterIndex],
		              iteratee = data.iteratee,
		              type = data.type,
		              computed = iteratee(value);
	
		          if (type == LAZY_MAP_FLAG) {
		            value = computed;
		          } else if (!computed) {
		            if (type == LAZY_FILTER_FLAG) {
		              continue outer;
		            } else {
		              break outer;
		            }
		          }
		        }
		        result[resIndex++] = value;
		      }
		      return result;
		    }
	
		    // Ensure `LazyWrapper` is an instance of `baseLodash`.
		    LazyWrapper.prototype = baseCreate(baseLodash.prototype);
		    LazyWrapper.prototype.constructor = LazyWrapper;
	
		    /*------------------------------------------------------------------------*/
	
		    /**
		     * Creates a hash object.
		     *
		     * @private
		     * @constructor
		     * @param {Array} [entries] The key-value pairs to cache.
		     */
		    function Hash(entries) {
		      var index = -1,
		          length = entries == null ? 0 : entries.length;
	
		      this.clear();
		      while (++index < length) {
		        var entry = entries[index];
		        this.set(entry[0], entry[1]);
		      }
		    }
	
		    /**
		     * Removes all key-value entries from the hash.
		     *
		     * @private
		     * @name clear
		     * @memberOf Hash
		     */
		    function hashClear() {
		      this.__data__ = nativeCreate ? nativeCreate(null) : {};
		      this.size = 0;
		    }
	
		    /**
		     * Removes `key` and its value from the hash.
		     *
		     * @private
		     * @name delete
		     * @memberOf Hash
		     * @param {Object} hash The hash to modify.
		     * @param {string} key The key of the value to remove.
		     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
		     */
		    function hashDelete(key) {
		      var result = this.has(key) && delete this.__data__[key];
		      this.size -= result ? 1 : 0;
		      return result;
		    }
	
		    /**
		     * Gets the hash value for `key`.
		     *
		     * @private
		     * @name get
		     * @memberOf Hash
		     * @param {string} key The key of the value to get.
		     * @returns {*} Returns the entry value.
		     */
		    function hashGet(key) {
		      var data = this.__data__;
		      if (nativeCreate) {
		        var result = data[key];
		        return result === HASH_UNDEFINED ? undefined : result;
		      }
		      return hasOwnProperty.call(data, key) ? data[key] : undefined;
		    }
	
		    /**
		     * Checks if a hash value for `key` exists.
		     *
		     * @private
		     * @name has
		     * @memberOf Hash
		     * @param {string} key The key of the entry to check.
		     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
		     */
		    function hashHas(key) {
		      var data = this.__data__;
		      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
		    }
	
		    /**
		     * Sets the hash `key` to `value`.
		     *
		     * @private
		     * @name set
		     * @memberOf Hash
		     * @param {string} key The key of the value to set.
		     * @param {*} value The value to set.
		     * @returns {Object} Returns the hash instance.
		     */
		    function hashSet(key, value) {
		      var data = this.__data__;
		      this.size += this.has(key) ? 0 : 1;
		      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
		      return this;
		    }
	
		    // Add methods to `Hash`.
		    Hash.prototype.clear = hashClear;
		    Hash.prototype['delete'] = hashDelete;
		    Hash.prototype.get = hashGet;
		    Hash.prototype.has = hashHas;
		    Hash.prototype.set = hashSet;
	
		    /*------------------------------------------------------------------------*/
	
		    /**
		     * Creates an list cache object.
		     *
		     * @private
		     * @constructor
		     * @param {Array} [entries] The key-value pairs to cache.
		     */
		    function ListCache(entries) {
		      var index = -1,
		          length = entries == null ? 0 : entries.length;
	
		      this.clear();
		      while (++index < length) {
		        var entry = entries[index];
		        this.set(entry[0], entry[1]);
		      }
		    }
	
		    /**
		     * Removes all key-value entries from the list cache.
		     *
		     * @private
		     * @name clear
		     * @memberOf ListCache
		     */
		    function listCacheClear() {
		      this.__data__ = [];
		      this.size = 0;
		    }
	
		    /**
		     * Removes `key` and its value from the list cache.
		     *
		     * @private
		     * @name delete
		     * @memberOf ListCache
		     * @param {string} key The key of the value to remove.
		     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
		     */
		    function listCacheDelete(key) {
		      var data = this.__data__,
		          index = assocIndexOf(data, key);
	
		      if (index < 0) {
		        return false;
		      }
		      var lastIndex = data.length - 1;
		      if (index == lastIndex) {
		        data.pop();
		      } else {
		        splice.call(data, index, 1);
		      }
		      --this.size;
		      return true;
		    }
	
		    /**
		     * Gets the list cache value for `key`.
		     *
		     * @private
		     * @name get
		     * @memberOf ListCache
		     * @param {string} key The key of the value to get.
		     * @returns {*} Returns the entry value.
		     */
		    function listCacheGet(key) {
		      var data = this.__data__,
		          index = assocIndexOf(data, key);
	
		      return index < 0 ? undefined : data[index][1];
		    }
	
		    /**
		     * Checks if a list cache value for `key` exists.
		     *
		     * @private
		     * @name has
		     * @memberOf ListCache
		     * @param {string} key The key of the entry to check.
		     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
		     */
		    function listCacheHas(key) {
		      return assocIndexOf(this.__data__, key) > -1;
		    }
	
		    /**
		     * Sets the list cache `key` to `value`.
		     *
		     * @private
		     * @name set
		     * @memberOf ListCache
		     * @param {string} key The key of the value to set.
		     * @param {*} value The value to set.
		     * @returns {Object} Returns the list cache instance.
		     */
		    function listCacheSet(key, value) {
		      var data = this.__data__,
		          index = assocIndexOf(data, key);
	
		      if (index < 0) {
		        ++this.size;
		        data.push([key, value]);
		      } else {
		        data[index][1] = value;
		      }
		      return this;
		    }
	
		    // Add methods to `ListCache`.
		    ListCache.prototype.clear = listCacheClear;
		    ListCache.prototype['delete'] = listCacheDelete;
		    ListCache.prototype.get = listCacheGet;
		    ListCache.prototype.has = listCacheHas;
		    ListCache.prototype.set = listCacheSet;
	
		    /*------------------------------------------------------------------------*/
	
		    /**
		     * Creates a map cache object to store key-value pairs.
		     *
		     * @private
		     * @constructor
		     * @param {Array} [entries] The key-value pairs to cache.
		     */
		    function MapCache(entries) {
		      var index = -1,
		          length = entries == null ? 0 : entries.length;
	
		      this.clear();
		      while (++index < length) {
		        var entry = entries[index];
		        this.set(entry[0], entry[1]);
		      }
		    }
	
		    /**
		     * Removes all key-value entries from the map.
		     *
		     * @private
		     * @name clear
		     * @memberOf MapCache
		     */
		    function mapCacheClear() {
		      this.size = 0;
		      this.__data__ = {
		        'hash': new Hash,
		        'map': new (Map || ListCache),
		        'string': new Hash
		      };
		    }
	
		    /**
		     * Removes `key` and its value from the map.
		     *
		     * @private
		     * @name delete
		     * @memberOf MapCache
		     * @param {string} key The key of the value to remove.
		     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
		     */
		    function mapCacheDelete(key) {
		      var result = getMapData(this, key)['delete'](key);
		      this.size -= result ? 1 : 0;
		      return result;
		    }
	
		    /**
		     * Gets the map value for `key`.
		     *
		     * @private
		     * @name get
		     * @memberOf MapCache
		     * @param {string} key The key of the value to get.
		     * @returns {*} Returns the entry value.
		     */
		    function mapCacheGet(key) {
		      return getMapData(this, key).get(key);
		    }
	
		    /**
		     * Checks if a map value for `key` exists.
		     *
		     * @private
		     * @name has
		     * @memberOf MapCache
		     * @param {string} key The key of the entry to check.
		     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
		     */
		    function mapCacheHas(key) {
		      return getMapData(this, key).has(key);
		    }
	
		    /**
		     * Sets the map `key` to `value`.
		     *
		     * @private
		     * @name set
		     * @memberOf MapCache
		     * @param {string} key The key of the value to set.
		     * @param {*} value The value to set.
		     * @returns {Object} Returns the map cache instance.
		     */
		    function mapCacheSet(key, value) {
		      var data = getMapData(this, key),
		          size = data.size;
	
		      data.set(key, value);
		      this.size += data.size == size ? 0 : 1;
		      return this;
		    }
	
		    // Add methods to `MapCache`.
		    MapCache.prototype.clear = mapCacheClear;
		    MapCache.prototype['delete'] = mapCacheDelete;
		    MapCache.prototype.get = mapCacheGet;
		    MapCache.prototype.has = mapCacheHas;
		    MapCache.prototype.set = mapCacheSet;
	
		    /*------------------------------------------------------------------------*/
	
		    /**
		     *
		     * Creates an array cache object to store unique values.
		     *
		     * @private
		     * @constructor
		     * @param {Array} [values] The values to cache.
		     */
		    function SetCache(values) {
		      var index = -1,
		          length = values == null ? 0 : values.length;
	
		      this.__data__ = new MapCache;
		      while (++index < length) {
		        this.add(values[index]);
		      }
		    }
	
		    /**
		     * Adds `value` to the array cache.
		     *
		     * @private
		     * @name add
		     * @memberOf SetCache
		     * @alias push
		     * @param {*} value The value to cache.
		     * @returns {Object} Returns the cache instance.
		     */
		    function setCacheAdd(value) {
		      this.__data__.set(value, HASH_UNDEFINED);
		      return this;
		    }
	
		    /**
		     * Checks if `value` is in the array cache.
		     *
		     * @private
		     * @name has
		     * @memberOf SetCache
		     * @param {*} value The value to search for.
		     * @returns {number} Returns `true` if `value` is found, else `false`.
		     */
		    function setCacheHas(value) {
		      return this.__data__.has(value);
		    }
	
		    // Add methods to `SetCache`.
		    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
		    SetCache.prototype.has = setCacheHas;
	
		    /*------------------------------------------------------------------------*/
	
		    /**
		     * Creates a stack cache object to store key-value pairs.
		     *
		     * @private
		     * @constructor
		     * @param {Array} [entries] The key-value pairs to cache.
		     */
		    function Stack(entries) {
		      var data = this.__data__ = new ListCache(entries);
		      this.size = data.size;
		    }
	
		    /**
		     * Removes all key-value entries from the stack.
		     *
		     * @private
		     * @name clear
		     * @memberOf Stack
		     */
		    function stackClear() {
		      this.__data__ = new ListCache;
		      this.size = 0;
		    }
	
		    /**
		     * Removes `key` and its value from the stack.
		     *
		     * @private
		     * @name delete
		     * @memberOf Stack
		     * @param {string} key The key of the value to remove.
		     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
		     */
		    function stackDelete(key) {
		      var data = this.__data__,
		          result = data['delete'](key);
	
		      this.size = data.size;
		      return result;
		    }
	
		    /**
		     * Gets the stack value for `key`.
		     *
		     * @private
		     * @name get
		     * @memberOf Stack
		     * @param {string} key The key of the value to get.
		     * @returns {*} Returns the entry value.
		     */
		    function stackGet(key) {
		      return this.__data__.get(key);
		    }
	
		    /**
		     * Checks if a stack value for `key` exists.
		     *
		     * @private
		     * @name has
		     * @memberOf Stack
		     * @param {string} key The key of the entry to check.
		     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
		     */
		    function stackHas(key) {
		      return this.__data__.has(key);
		    }
	
		    /**
		     * Sets the stack `key` to `value`.
		     *
		     * @private
		     * @name set
		     * @memberOf Stack
		     * @param {string} key The key of the value to set.
		     * @param {*} value The value to set.
		     * @returns {Object} Returns the stack cache instance.
		     */
		    function stackSet(key, value) {
		      var data = this.__data__;
		      if (data instanceof ListCache) {
		        var pairs = data.__data__;
		        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
		          pairs.push([key, value]);
		          this.size = ++data.size;
		          return this;
		        }
		        data = this.__data__ = new MapCache(pairs);
		      }
		      data.set(key, value);
		      this.size = data.size;
		      return this;
		    }
	
		    // Add methods to `Stack`.
		    Stack.prototype.clear = stackClear;
		    Stack.prototype['delete'] = stackDelete;
		    Stack.prototype.get = stackGet;
		    Stack.prototype.has = stackHas;
		    Stack.prototype.set = stackSet;
	
		    /*------------------------------------------------------------------------*/
	
		    /**
		     * Creates an array of the enumerable property names of the array-like `value`.
		     *
		     * @private
		     * @param {*} value The value to query.
		     * @param {boolean} inherited Specify returning inherited property names.
		     * @returns {Array} Returns the array of property names.
		     */
		    function arrayLikeKeys(value, inherited) {
		      var isArr = isArray(value),
		          isArg = !isArr && isArguments(value),
		          isBuff = !isArr && !isArg && isBuffer(value),
		          isType = !isArr && !isArg && !isBuff && isTypedArray(value),
		          skipIndexes = isArr || isArg || isBuff || isType,
		          result = skipIndexes ? baseTimes(value.length, String) : [],
		          length = result.length;
	
		      for (var key in value) {
		        if ((inherited || hasOwnProperty.call(value, key)) &&
		            !(skipIndexes && (
		               // Safari 9 has enumerable `arguments.length` in strict mode.
		               key == 'length' ||
		               // Node.js 0.10 has enumerable non-index properties on buffers.
		               (isBuff && (key == 'offset' || key == 'parent')) ||
		               // PhantomJS 2 has enumerable non-index properties on typed arrays.
		               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
		               // Skip index properties.
		               isIndex(key, length)
		            ))) {
		          result.push(key);
		        }
		      }
		      return result;
		    }
	
		    /**
		     * A specialized version of `_.sample` for arrays.
		     *
		     * @private
		     * @param {Array} array The array to sample.
		     * @returns {*} Returns the random element.
		     */
		    function arraySample(array) {
		      var length = array.length;
		      return length ? array[baseRandom(0, length - 1)] : undefined;
		    }
	
		    /**
		     * A specialized version of `_.sampleSize` for arrays.
		     *
		     * @private
		     * @param {Array} array The array to sample.
		     * @param {number} n The number of elements to sample.
		     * @returns {Array} Returns the random elements.
		     */
		    function arraySampleSize(array, n) {
		      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
		    }
	
		    /**
		     * A specialized version of `_.shuffle` for arrays.
		     *
		     * @private
		     * @param {Array} array The array to shuffle.
		     * @returns {Array} Returns the new shuffled array.
		     */
		    function arrayShuffle(array) {
		      return shuffleSelf(copyArray(array));
		    }
	
		    /**
		     * This function is like `assignValue` except that it doesn't assign
		     * `undefined` values.
		     *
		     * @private
		     * @param {Object} object The object to modify.
		     * @param {string} key The key of the property to assign.
		     * @param {*} value The value to assign.
		     */
		    function assignMergeValue(object, key, value) {
		      if ((value !== undefined && !eq(object[key], value)) ||
		          (value === undefined && !(key in object))) {
		        baseAssignValue(object, key, value);
		      }
		    }
	
		    /**
		     * Assigns `value` to `key` of `object` if the existing value is not equivalent
		     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
		     * for equality comparisons.
		     *
		     * @private
		     * @param {Object} object The object to modify.
		     * @param {string} key The key of the property to assign.
		     * @param {*} value The value to assign.
		     */
		    function assignValue(object, key, value) {
		      var objValue = object[key];
		      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
		          (value === undefined && !(key in object))) {
		        baseAssignValue(object, key, value);
		      }
		    }
	
		    /**
		     * Gets the index at which the `key` is found in `array` of key-value pairs.
		     *
		     * @private
		     * @param {Array} array The array to inspect.
		     * @param {*} key The key to search for.
		     * @returns {number} Returns the index of the matched value, else `-1`.
		     */
		    function assocIndexOf(array, key) {
		      var length = array.length;
		      while (length--) {
		        if (eq(array[length][0], key)) {
		          return length;
		        }
		      }
		      return -1;
		    }
	
		    /**
		     * Aggregates elements of `collection` on `accumulator` with keys transformed
		     * by `iteratee` and values set by `setter`.
		     *
		     * @private
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Function} setter The function to set `accumulator` values.
		     * @param {Function} iteratee The iteratee to transform keys.
		     * @param {Object} accumulator The initial aggregated object.
		     * @returns {Function} Returns `accumulator`.
		     */
		    function baseAggregator(collection, setter, iteratee, accumulator) {
		      baseEach(collection, function(value, key, collection) {
		        setter(accumulator, value, iteratee(value), collection);
		      });
		      return accumulator;
		    }
	
		    /**
		     * The base implementation of `_.assign` without support for multiple sources
		     * or `customizer` functions.
		     *
		     * @private
		     * @param {Object} object The destination object.
		     * @param {Object} source The source object.
		     * @returns {Object} Returns `object`.
		     */
		    function baseAssign(object, source) {
		      return object && copyObject(source, keys(source), object);
		    }
	
		    /**
		     * The base implementation of `_.assignIn` without support for multiple sources
		     * or `customizer` functions.
		     *
		     * @private
		     * @param {Object} object The destination object.
		     * @param {Object} source The source object.
		     * @returns {Object} Returns `object`.
		     */
		    function baseAssignIn(object, source) {
		      return object && copyObject(source, keysIn(source), object);
		    }
	
		    /**
		     * The base implementation of `assignValue` and `assignMergeValue` without
		     * value checks.
		     *
		     * @private
		     * @param {Object} object The object to modify.
		     * @param {string} key The key of the property to assign.
		     * @param {*} value The value to assign.
		     */
		    function baseAssignValue(object, key, value) {
		      if (key == '__proto__' && defineProperty) {
		        defineProperty(object, key, {
		          'configurable': true,
		          'enumerable': true,
		          'value': value,
		          'writable': true
		        });
		      } else {
		        object[key] = value;
		      }
		    }
	
		    /**
		     * The base implementation of `_.at` without support for individual paths.
		     *
		     * @private
		     * @param {Object} object The object to iterate over.
		     * @param {string[]} paths The property paths to pick.
		     * @returns {Array} Returns the picked elements.
		     */
		    function baseAt(object, paths) {
		      var index = -1,
		          length = paths.length,
		          result = Array(length),
		          skip = object == null;
	
		      while (++index < length) {
		        result[index] = skip ? undefined : get(object, paths[index]);
		      }
		      return result;
		    }
	
		    /**
		     * The base implementation of `_.clamp` which doesn't coerce arguments.
		     *
		     * @private
		     * @param {number} number The number to clamp.
		     * @param {number} [lower] The lower bound.
		     * @param {number} upper The upper bound.
		     * @returns {number} Returns the clamped number.
		     */
		    function baseClamp(number, lower, upper) {
		      if (number === number) {
		        if (upper !== undefined) {
		          number = number <= upper ? number : upper;
		        }
		        if (lower !== undefined) {
		          number = number >= lower ? number : lower;
		        }
		      }
		      return number;
		    }
	
		    /**
		     * The base implementation of `_.clone` and `_.cloneDeep` which tracks
		     * traversed objects.
		     *
		     * @private
		     * @param {*} value The value to clone.
		     * @param {boolean} bitmask The bitmask flags.
		     *  1 - Deep clone
		     *  2 - Flatten inherited properties
		     *  4 - Clone symbols
		     * @param {Function} [customizer] The function to customize cloning.
		     * @param {string} [key] The key of `value`.
		     * @param {Object} [object] The parent object of `value`.
		     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
		     * @returns {*} Returns the cloned value.
		     */
		    function baseClone(value, bitmask, customizer, key, object, stack) {
		      var result,
		          isDeep = bitmask & CLONE_DEEP_FLAG,
		          isFlat = bitmask & CLONE_FLAT_FLAG,
		          isFull = bitmask & CLONE_SYMBOLS_FLAG;
	
		      if (customizer) {
		        result = object ? customizer(value, key, object, stack) : customizer(value);
		      }
		      if (result !== undefined) {
		        return result;
		      }
		      if (!isObject(value)) {
		        return value;
		      }
		      var isArr = isArray(value);
		      if (isArr) {
		        result = initCloneArray(value);
		        if (!isDeep) {
		          return copyArray(value, result);
		        }
		      } else {
		        var tag = getTag(value),
		            isFunc = tag == funcTag || tag == genTag;
	
		        if (isBuffer(value)) {
		          return cloneBuffer(value, isDeep);
		        }
		        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
		          result = (isFlat || isFunc) ? {} : initCloneObject(value);
		          if (!isDeep) {
		            return isFlat
		              ? copySymbolsIn(value, baseAssignIn(result, value))
		              : copySymbols(value, baseAssign(result, value));
		          }
		        } else {
		          if (!cloneableTags[tag]) {
		            return object ? value : {};
		          }
		          result = initCloneByTag(value, tag, baseClone, isDeep);
		        }
		      }
		      // Check for circular references and return its corresponding clone.
		      stack || (stack = new Stack);
		      var stacked = stack.get(value);
		      if (stacked) {
		        return stacked;
		      }
		      stack.set(value, result);
	
		      var keysFunc = isFull
		        ? (isFlat ? getAllKeysIn : getAllKeys)
		        : (isFlat ? keysIn : keys);
	
		      var props = isArr ? undefined : keysFunc(value);
		      arrayEach(props || value, function(subValue, key) {
		        if (props) {
		          key = subValue;
		          subValue = value[key];
		        }
		        // Recursively populate clone (susceptible to call stack limits).
		        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
		      });
		      return result;
		    }
	
		    /**
		     * The base implementation of `_.conforms` which doesn't clone `source`.
		     *
		     * @private
		     * @param {Object} source The object of property predicates to conform to.
		     * @returns {Function} Returns the new spec function.
		     */
		    function baseConforms(source) {
		      var props = keys(source);
		      return function(object) {
		        return baseConformsTo(object, source, props);
		      };
		    }
	
		    /**
		     * The base implementation of `_.conformsTo` which accepts `props` to check.
		     *
		     * @private
		     * @param {Object} object The object to inspect.
		     * @param {Object} source The object of property predicates to conform to.
		     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
		     */
		    function baseConformsTo(object, source, props) {
		      var length = props.length;
		      if (object == null) {
		        return !length;
		      }
		      object = Object(object);
		      while (length--) {
		        var key = props[length],
		            predicate = source[key],
		            value = object[key];
	
		        if ((value === undefined && !(key in object)) || !predicate(value)) {
		          return false;
		        }
		      }
		      return true;
		    }
	
		    /**
		     * The base implementation of `_.delay` and `_.defer` which accepts `args`
		     * to provide to `func`.
		     *
		     * @private
		     * @param {Function} func The function to delay.
		     * @param {number} wait The number of milliseconds to delay invocation.
		     * @param {Array} args The arguments to provide to `func`.
		     * @returns {number|Object} Returns the timer id or timeout object.
		     */
		    function baseDelay(func, wait, args) {
		      if (typeof func != 'function') {
		        throw new TypeError(FUNC_ERROR_TEXT);
		      }
		      return setTimeout(function() { func.apply(undefined, args); }, wait);
		    }
	
		    /**
		     * The base implementation of methods like `_.difference` without support
		     * for excluding multiple arrays or iteratee shorthands.
		     *
		     * @private
		     * @param {Array} array The array to inspect.
		     * @param {Array} values The values to exclude.
		     * @param {Function} [iteratee] The iteratee invoked per element.
		     * @param {Function} [comparator] The comparator invoked per element.
		     * @returns {Array} Returns the new array of filtered values.
		     */
		    function baseDifference(array, values, iteratee, comparator) {
		      var index = -1,
		          includes = arrayIncludes,
		          isCommon = true,
		          length = array.length,
		          result = [],
		          valuesLength = values.length;
	
		      if (!length) {
		        return result;
		      }
		      if (iteratee) {
		        values = arrayMap(values, baseUnary(iteratee));
		      }
		      if (comparator) {
		        includes = arrayIncludesWith;
		        isCommon = false;
		      }
		      else if (values.length >= LARGE_ARRAY_SIZE) {
		        includes = cacheHas;
		        isCommon = false;
		        values = new SetCache(values);
		      }
		      outer:
		      while (++index < length) {
		        var value = array[index],
		            computed = iteratee == null ? value : iteratee(value);
	
		        value = (comparator || value !== 0) ? value : 0;
		        if (isCommon && computed === computed) {
		          var valuesIndex = valuesLength;
		          while (valuesIndex--) {
		            if (values[valuesIndex] === computed) {
		              continue outer;
		            }
		          }
		          result.push(value);
		        }
		        else if (!includes(values, computed, comparator)) {
		          result.push(value);
		        }
		      }
		      return result;
		    }
	
		    /**
		     * The base implementation of `_.forEach` without support for iteratee shorthands.
		     *
		     * @private
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Function} iteratee The function invoked per iteration.
		     * @returns {Array|Object} Returns `collection`.
		     */
		    var baseEach = createBaseEach(baseForOwn);
	
		    /**
		     * The base implementation of `_.forEachRight` without support for iteratee shorthands.
		     *
		     * @private
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Function} iteratee The function invoked per iteration.
		     * @returns {Array|Object} Returns `collection`.
		     */
		    var baseEachRight = createBaseEach(baseForOwnRight, true);
	
		    /**
		     * The base implementation of `_.every` without support for iteratee shorthands.
		     *
		     * @private
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Function} predicate The function invoked per iteration.
		     * @returns {boolean} Returns `true` if all elements pass the predicate check,
		     *  else `false`
		     */
		    function baseEvery(collection, predicate) {
		      var result = true;
		      baseEach(collection, function(value, index, collection) {
		        result = !!predicate(value, index, collection);
		        return result;
		      });
		      return result;
		    }
	
		    /**
		     * The base implementation of methods like `_.max` and `_.min` which accepts a
		     * `comparator` to determine the extremum value.
		     *
		     * @private
		     * @param {Array} array The array to iterate over.
		     * @param {Function} iteratee The iteratee invoked per iteration.
		     * @param {Function} comparator The comparator used to compare values.
		     * @returns {*} Returns the extremum value.
		     */
		    function baseExtremum(array, iteratee, comparator) {
		      var index = -1,
		          length = array.length;
	
		      while (++index < length) {
		        var value = array[index],
		            current = iteratee(value);
	
		        if (current != null && (computed === undefined
		              ? (current === current && !isSymbol(current))
		              : comparator(current, computed)
		            )) {
		          var computed = current,
		              result = value;
		        }
		      }
		      return result;
		    }
	
		    /**
		     * The base implementation of `_.fill` without an iteratee call guard.
		     *
		     * @private
		     * @param {Array} array The array to fill.
		     * @param {*} value The value to fill `array` with.
		     * @param {number} [start=0] The start position.
		     * @param {number} [end=array.length] The end position.
		     * @returns {Array} Returns `array`.
		     */
		    function baseFill(array, value, start, end) {
		      var length = array.length;
	
		      start = toInteger(start);
		      if (start < 0) {
		        start = -start > length ? 0 : (length + start);
		      }
		      end = (end === undefined || end > length) ? length : toInteger(end);
		      if (end < 0) {
		        end += length;
		      }
		      end = start > end ? 0 : toLength(end);
		      while (start < end) {
		        array[start++] = value;
		      }
		      return array;
		    }
	
		    /**
		     * The base implementation of `_.filter` without support for iteratee shorthands.
		     *
		     * @private
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Function} predicate The function invoked per iteration.
		     * @returns {Array} Returns the new filtered array.
		     */
		    function baseFilter(collection, predicate) {
		      var result = [];
		      baseEach(collection, function(value, index, collection) {
		        if (predicate(value, index, collection)) {
		          result.push(value);
		        }
		      });
		      return result;
		    }
	
		    /**
		     * The base implementation of `_.flatten` with support for restricting flattening.
		     *
		     * @private
		     * @param {Array} array The array to flatten.
		     * @param {number} depth The maximum recursion depth.
		     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
		     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
		     * @param {Array} [result=[]] The initial result value.
		     * @returns {Array} Returns the new flattened array.
		     */
		    function baseFlatten(array, depth, predicate, isStrict, result) {
		      var index = -1,
		          length = array.length;
	
		      predicate || (predicate = isFlattenable);
		      result || (result = []);
	
		      while (++index < length) {
		        var value = array[index];
		        if (depth > 0 && predicate(value)) {
		          if (depth > 1) {
		            // Recursively flatten arrays (susceptible to call stack limits).
		            baseFlatten(value, depth - 1, predicate, isStrict, result);
		          } else {
		            arrayPush(result, value);
		          }
		        } else if (!isStrict) {
		          result[result.length] = value;
		        }
		      }
		      return result;
		    }
	
		    /**
		     * The base implementation of `baseForOwn` which iterates over `object`
		     * properties returned by `keysFunc` and invokes `iteratee` for each property.
		     * Iteratee functions may exit iteration early by explicitly returning `false`.
		     *
		     * @private
		     * @param {Object} object The object to iterate over.
		     * @param {Function} iteratee The function invoked per iteration.
		     * @param {Function} keysFunc The function to get the keys of `object`.
		     * @returns {Object} Returns `object`.
		     */
		    var baseFor = createBaseFor();
	
		    /**
		     * This function is like `baseFor` except that it iterates over properties
		     * in the opposite order.
		     *
		     * @private
		     * @param {Object} object The object to iterate over.
		     * @param {Function} iteratee The function invoked per iteration.
		     * @param {Function} keysFunc The function to get the keys of `object`.
		     * @returns {Object} Returns `object`.
		     */
		    var baseForRight = createBaseFor(true);
	
		    /**
		     * The base implementation of `_.forOwn` without support for iteratee shorthands.
		     *
		     * @private
		     * @param {Object} object The object to iterate over.
		     * @param {Function} iteratee The function invoked per iteration.
		     * @returns {Object} Returns `object`.
		     */
		    function baseForOwn(object, iteratee) {
		      return object && baseFor(object, iteratee, keys);
		    }
	
		    /**
		     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
		     *
		     * @private
		     * @param {Object} object The object to iterate over.
		     * @param {Function} iteratee The function invoked per iteration.
		     * @returns {Object} Returns `object`.
		     */
		    function baseForOwnRight(object, iteratee) {
		      return object && baseForRight(object, iteratee, keys);
		    }
	
		    /**
		     * The base implementation of `_.functions` which creates an array of
		     * `object` function property names filtered from `props`.
		     *
		     * @private
		     * @param {Object} object The object to inspect.
		     * @param {Array} props The property names to filter.
		     * @returns {Array} Returns the function names.
		     */
		    function baseFunctions(object, props) {
		      return arrayFilter(props, function(key) {
		        return isFunction(object[key]);
		      });
		    }
	
		    /**
		     * The base implementation of `_.get` without support for default values.
		     *
		     * @private
		     * @param {Object} object The object to query.
		     * @param {Array|string} path The path of the property to get.
		     * @returns {*} Returns the resolved value.
		     */
		    function baseGet(object, path) {
		      path = castPath(path, object);
	
		      var index = 0,
		          length = path.length;
	
		      while (object != null && index < length) {
		        object = object[toKey(path[index++])];
		      }
		      return (index && index == length) ? object : undefined;
		    }
	
		    /**
		     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
		     * `keysFunc` and `symbolsFunc` to get the enumerable property names and
		     * symbols of `object`.
		     *
		     * @private
		     * @param {Object} object The object to query.
		     * @param {Function} keysFunc The function to get the keys of `object`.
		     * @param {Function} symbolsFunc The function to get the symbols of `object`.
		     * @returns {Array} Returns the array of property names and symbols.
		     */
		    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
		      var result = keysFunc(object);
		      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
		    }
	
		    /**
		     * The base implementation of `getTag` without fallbacks for buggy environments.
		     *
		     * @private
		     * @param {*} value The value to query.
		     * @returns {string} Returns the `toStringTag`.
		     */
		    function baseGetTag(value) {
		      if (value == null) {
		        return value === undefined ? undefinedTag : nullTag;
		      }
		      return (symToStringTag && symToStringTag in Object(value))
		        ? getRawTag(value)
		        : objectToString(value);
		    }
	
		    /**
		     * The base implementation of `_.gt` which doesn't coerce arguments.
		     *
		     * @private
		     * @param {*} value The value to compare.
		     * @param {*} other The other value to compare.
		     * @returns {boolean} Returns `true` if `value` is greater than `other`,
		     *  else `false`.
		     */
		    function baseGt(value, other) {
		      return value > other;
		    }
	
		    /**
		     * The base implementation of `_.has` without support for deep paths.
		     *
		     * @private
		     * @param {Object} [object] The object to query.
		     * @param {Array|string} key The key to check.
		     * @returns {boolean} Returns `true` if `key` exists, else `false`.
		     */
		    function baseHas(object, key) {
		      return object != null && hasOwnProperty.call(object, key);
		    }
	
		    /**
		     * The base implementation of `_.hasIn` without support for deep paths.
		     *
		     * @private
		     * @param {Object} [object] The object to query.
		     * @param {Array|string} key The key to check.
		     * @returns {boolean} Returns `true` if `key` exists, else `false`.
		     */
		    function baseHasIn(object, key) {
		      return object != null && key in Object(object);
		    }
	
		    /**
		     * The base implementation of `_.inRange` which doesn't coerce arguments.
		     *
		     * @private
		     * @param {number} number The number to check.
		     * @param {number} start The start of the range.
		     * @param {number} end The end of the range.
		     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
		     */
		    function baseInRange(number, start, end) {
		      return number >= nativeMin(start, end) && number < nativeMax(start, end);
		    }
	
		    /**
		     * The base implementation of methods like `_.intersection`, without support
		     * for iteratee shorthands, that accepts an array of arrays to inspect.
		     *
		     * @private
		     * @param {Array} arrays The arrays to inspect.
		     * @param {Function} [iteratee] The iteratee invoked per element.
		     * @param {Function} [comparator] The comparator invoked per element.
		     * @returns {Array} Returns the new array of shared values.
		     */
		    function baseIntersection(arrays, iteratee, comparator) {
		      var includes = comparator ? arrayIncludesWith : arrayIncludes,
		          length = arrays[0].length,
		          othLength = arrays.length,
		          othIndex = othLength,
		          caches = Array(othLength),
		          maxLength = Infinity,
		          result = [];
	
		      while (othIndex--) {
		        var array = arrays[othIndex];
		        if (othIndex && iteratee) {
		          array = arrayMap(array, baseUnary(iteratee));
		        }
		        maxLength = nativeMin(array.length, maxLength);
		        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
		          ? new SetCache(othIndex && array)
		          : undefined;
		      }
		      array = arrays[0];
	
		      var index = -1,
		          seen = caches[0];
	
		      outer:
		      while (++index < length && result.length < maxLength) {
		        var value = array[index],
		            computed = iteratee ? iteratee(value) : value;
	
		        value = (comparator || value !== 0) ? value : 0;
		        if (!(seen
		              ? cacheHas(seen, computed)
		              : includes(result, computed, comparator)
		            )) {
		          othIndex = othLength;
		          while (--othIndex) {
		            var cache = caches[othIndex];
		            if (!(cache
		                  ? cacheHas(cache, computed)
		                  : includes(arrays[othIndex], computed, comparator))
		                ) {
		              continue outer;
		            }
		          }
		          if (seen) {
		            seen.push(computed);
		          }
		          result.push(value);
		        }
		      }
		      return result;
		    }
	
		    /**
		     * The base implementation of `_.invert` and `_.invertBy` which inverts
		     * `object` with values transformed by `iteratee` and set by `setter`.
		     *
		     * @private
		     * @param {Object} object The object to iterate over.
		     * @param {Function} setter The function to set `accumulator` values.
		     * @param {Function} iteratee The iteratee to transform values.
		     * @param {Object} accumulator The initial inverted object.
		     * @returns {Function} Returns `accumulator`.
		     */
		    function baseInverter(object, setter, iteratee, accumulator) {
		      baseForOwn(object, function(value, key, object) {
		        setter(accumulator, iteratee(value), key, object);
		      });
		      return accumulator;
		    }
	
		    /**
		     * The base implementation of `_.invoke` without support for individual
		     * method arguments.
		     *
		     * @private
		     * @param {Object} object The object to query.
		     * @param {Array|string} path The path of the method to invoke.
		     * @param {Array} args The arguments to invoke the method with.
		     * @returns {*} Returns the result of the invoked method.
		     */
		    function baseInvoke(object, path, args) {
		      path = castPath(path, object);
		      object = parent(object, path);
		      var func = object == null ? object : object[toKey(last(path))];
		      return func == null ? undefined : apply(func, object, args);
		    }
	
		    /**
		     * The base implementation of `_.isArguments`.
		     *
		     * @private
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
		     */
		    function baseIsArguments(value) {
		      return isObjectLike(value) && baseGetTag(value) == argsTag;
		    }
	
		    /**
		     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.
		     *
		     * @private
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
		     */
		    function baseIsArrayBuffer(value) {
		      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
		    }
	
		    /**
		     * The base implementation of `_.isDate` without Node.js optimizations.
		     *
		     * @private
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
		     */
		    function baseIsDate(value) {
		      return isObjectLike(value) && baseGetTag(value) == dateTag;
		    }
	
		    /**
		     * The base implementation of `_.isEqual` which supports partial comparisons
		     * and tracks traversed objects.
		     *
		     * @private
		     * @param {*} value The value to compare.
		     * @param {*} other The other value to compare.
		     * @param {boolean} bitmask The bitmask flags.
		     *  1 - Unordered comparison
		     *  2 - Partial comparison
		     * @param {Function} [customizer] The function to customize comparisons.
		     * @param {Object} [stack] Tracks traversed `value` and `other` objects.
		     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
		     */
		    function baseIsEqual(value, other, bitmask, customizer, stack) {
		      if (value === other) {
		        return true;
		      }
		      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
		        return value !== value && other !== other;
		      }
		      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
		    }
	
		    /**
		     * A specialized version of `baseIsEqual` for arrays and objects which performs
		     * deep comparisons and tracks traversed objects enabling objects with circular
		     * references to be compared.
		     *
		     * @private
		     * @param {Object} object The object to compare.
		     * @param {Object} other The other object to compare.
		     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
		     * @param {Function} customizer The function to customize comparisons.
		     * @param {Function} equalFunc The function to determine equivalents of values.
		     * @param {Object} [stack] Tracks traversed `object` and `other` objects.
		     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
		     */
		    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
		      var objIsArr = isArray(object),
		          othIsArr = isArray(other),
		          objTag = objIsArr ? arrayTag : getTag(object),
		          othTag = othIsArr ? arrayTag : getTag(other);
	
		      objTag = objTag == argsTag ? objectTag : objTag;
		      othTag = othTag == argsTag ? objectTag : othTag;
	
		      var objIsObj = objTag == objectTag,
		          othIsObj = othTag == objectTag,
		          isSameTag = objTag == othTag;
	
		      if (isSameTag && isBuffer(object)) {
		        if (!isBuffer(other)) {
		          return false;
		        }
		        objIsArr = true;
		        objIsObj = false;
		      }
		      if (isSameTag && !objIsObj) {
		        stack || (stack = new Stack);
		        return (objIsArr || isTypedArray(object))
		          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
		          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
		      }
		      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
		        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
		            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');
	
		        if (objIsWrapped || othIsWrapped) {
		          var objUnwrapped = objIsWrapped ? object.value() : object,
		              othUnwrapped = othIsWrapped ? other.value() : other;
	
		          stack || (stack = new Stack);
		          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
		        }
		      }
		      if (!isSameTag) {
		        return false;
		      }
		      stack || (stack = new Stack);
		      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
		    }
	
		    /**
		     * The base implementation of `_.isMap` without Node.js optimizations.
		     *
		     * @private
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
		     */
		    function baseIsMap(value) {
		      return isObjectLike(value) && getTag(value) == mapTag;
		    }
	
		    /**
		     * The base implementation of `_.isMatch` without support for iteratee shorthands.
		     *
		     * @private
		     * @param {Object} object The object to inspect.
		     * @param {Object} source The object of property values to match.
		     * @param {Array} matchData The property names, values, and compare flags to match.
		     * @param {Function} [customizer] The function to customize comparisons.
		     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
		     */
		    function baseIsMatch(object, source, matchData, customizer) {
		      var index = matchData.length,
		          length = index,
		          noCustomizer = !customizer;
	
		      if (object == null) {
		        return !length;
		      }
		      object = Object(object);
		      while (index--) {
		        var data = matchData[index];
		        if ((noCustomizer && data[2])
		              ? data[1] !== object[data[0]]
		              : !(data[0] in object)
		            ) {
		          return false;
		        }
		      }
		      while (++index < length) {
		        data = matchData[index];
		        var key = data[0],
		            objValue = object[key],
		            srcValue = data[1];
	
		        if (noCustomizer && data[2]) {
		          if (objValue === undefined && !(key in object)) {
		            return false;
		          }
		        } else {
		          var stack = new Stack;
		          if (customizer) {
		            var result = customizer(objValue, srcValue, key, object, source, stack);
		          }
		          if (!(result === undefined
		                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
		                : result
		              )) {
		            return false;
		          }
		        }
		      }
		      return true;
		    }
	
		    /**
		     * The base implementation of `_.isNative` without bad shim checks.
		     *
		     * @private
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is a native function,
		     *  else `false`.
		     */
		    function baseIsNative(value) {
		      if (!isObject(value) || isMasked(value)) {
		        return false;
		      }
		      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
		      return pattern.test(toSource(value));
		    }
	
		    /**
		     * The base implementation of `_.isRegExp` without Node.js optimizations.
		     *
		     * @private
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
		     */
		    function baseIsRegExp(value) {
		      return isObjectLike(value) && baseGetTag(value) == regexpTag;
		    }
	
		    /**
		     * The base implementation of `_.isSet` without Node.js optimizations.
		     *
		     * @private
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
		     */
		    function baseIsSet(value) {
		      return isObjectLike(value) && getTag(value) == setTag;
		    }
	
		    /**
		     * The base implementation of `_.isTypedArray` without Node.js optimizations.
		     *
		     * @private
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
		     */
		    function baseIsTypedArray(value) {
		      return isObjectLike(value) &&
		        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
		    }
	
		    /**
		     * The base implementation of `_.iteratee`.
		     *
		     * @private
		     * @param {*} [value=_.identity] The value to convert to an iteratee.
		     * @returns {Function} Returns the iteratee.
		     */
		    function baseIteratee(value) {
		      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
		      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
		      if (typeof value == 'function') {
		        return value;
		      }
		      if (value == null) {
		        return identity;
		      }
		      if (typeof value == 'object') {
		        return isArray(value)
		          ? baseMatchesProperty(value[0], value[1])
		          : baseMatches(value);
		      }
		      return property(value);
		    }
	
		    /**
		     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
		     *
		     * @private
		     * @param {Object} object The object to query.
		     * @returns {Array} Returns the array of property names.
		     */
		    function baseKeys(object) {
		      if (!isPrototype(object)) {
		        return nativeKeys(object);
		      }
		      var result = [];
		      for (var key in Object(object)) {
		        if (hasOwnProperty.call(object, key) && key != 'constructor') {
		          result.push(key);
		        }
		      }
		      return result;
		    }
	
		    /**
		     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
		     *
		     * @private
		     * @param {Object} object The object to query.
		     * @returns {Array} Returns the array of property names.
		     */
		    function baseKeysIn(object) {
		      if (!isObject(object)) {
		        return nativeKeysIn(object);
		      }
		      var isProto = isPrototype(object),
		          result = [];
	
		      for (var key in object) {
		        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
		          result.push(key);
		        }
		      }
		      return result;
		    }
	
		    /**
		     * The base implementation of `_.lt` which doesn't coerce arguments.
		     *
		     * @private
		     * @param {*} value The value to compare.
		     * @param {*} other The other value to compare.
		     * @returns {boolean} Returns `true` if `value` is less than `other`,
		     *  else `false`.
		     */
		    function baseLt(value, other) {
		      return value < other;
		    }
	
		    /**
		     * The base implementation of `_.map` without support for iteratee shorthands.
		     *
		     * @private
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Function} iteratee The function invoked per iteration.
		     * @returns {Array} Returns the new mapped array.
		     */
		    function baseMap(collection, iteratee) {
		      var index = -1,
		          result = isArrayLike(collection) ? Array(collection.length) : [];
	
		      baseEach(collection, function(value, key, collection) {
		        result[++index] = iteratee(value, key, collection);
		      });
		      return result;
		    }
	
		    /**
		     * The base implementation of `_.matches` which doesn't clone `source`.
		     *
		     * @private
		     * @param {Object} source The object of property values to match.
		     * @returns {Function} Returns the new spec function.
		     */
		    function baseMatches(source) {
		      var matchData = getMatchData(source);
		      if (matchData.length == 1 && matchData[0][2]) {
		        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
		      }
		      return function(object) {
		        return object === source || baseIsMatch(object, source, matchData);
		      };
		    }
	
		    /**
		     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
		     *
		     * @private
		     * @param {string} path The path of the property to get.
		     * @param {*} srcValue The value to match.
		     * @returns {Function} Returns the new spec function.
		     */
		    function baseMatchesProperty(path, srcValue) {
		      if (isKey(path) && isStrictComparable(srcValue)) {
		        return matchesStrictComparable(toKey(path), srcValue);
		      }
		      return function(object) {
		        var objValue = get(object, path);
		        return (objValue === undefined && objValue === srcValue)
		          ? hasIn(object, path)
		          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
		      };
		    }
	
		    /**
		     * The base implementation of `_.merge` without support for multiple sources.
		     *
		     * @private
		     * @param {Object} object The destination object.
		     * @param {Object} source The source object.
		     * @param {number} srcIndex The index of `source`.
		     * @param {Function} [customizer] The function to customize merged values.
		     * @param {Object} [stack] Tracks traversed source values and their merged
		     *  counterparts.
		     */
		    function baseMerge(object, source, srcIndex, customizer, stack) {
		      if (object === source) {
		        return;
		      }
		      baseFor(source, function(srcValue, key) {
		        if (isObject(srcValue)) {
		          stack || (stack = new Stack);
		          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
		        }
		        else {
		          var newValue = customizer
		            ? customizer(object[key], srcValue, (key + ''), object, source, stack)
		            : undefined;
	
		          if (newValue === undefined) {
		            newValue = srcValue;
		          }
		          assignMergeValue(object, key, newValue);
		        }
		      }, keysIn);
		    }
	
		    /**
		     * A specialized version of `baseMerge` for arrays and objects which performs
		     * deep merges and tracks traversed objects enabling objects with circular
		     * references to be merged.
		     *
		     * @private
		     * @param {Object} object The destination object.
		     * @param {Object} source The source object.
		     * @param {string} key The key of the value to merge.
		     * @param {number} srcIndex The index of `source`.
		     * @param {Function} mergeFunc The function to merge values.
		     * @param {Function} [customizer] The function to customize assigned values.
		     * @param {Object} [stack] Tracks traversed source values and their merged
		     *  counterparts.
		     */
		    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
		      var objValue = object[key],
		          srcValue = source[key],
		          stacked = stack.get(srcValue);
	
		      if (stacked) {
		        assignMergeValue(object, key, stacked);
		        return;
		      }
		      var newValue = customizer
		        ? customizer(objValue, srcValue, (key + ''), object, source, stack)
		        : undefined;
	
		      var isCommon = newValue === undefined;
	
		      if (isCommon) {
		        var isArr = isArray(srcValue),
		            isBuff = !isArr && isBuffer(srcValue),
		            isTyped = !isArr && !isBuff && isTypedArray(srcValue);
	
		        newValue = srcValue;
		        if (isArr || isBuff || isTyped) {
		          if (isArray(objValue)) {
		            newValue = objValue;
		          }
		          else if (isArrayLikeObject(objValue)) {
		            newValue = copyArray(objValue);
		          }
		          else if (isBuff) {
		            isCommon = false;
		            newValue = cloneBuffer(srcValue, true);
		          }
		          else if (isTyped) {
		            isCommon = false;
		            newValue = cloneTypedArray(srcValue, true);
		          }
		          else {
		            newValue = [];
		          }
		        }
		        else if (isPlainObject(srcValue) || isArguments(srcValue)) {
		          newValue = objValue;
		          if (isArguments(objValue)) {
		            newValue = toPlainObject(objValue);
		          }
		          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {
		            newValue = initCloneObject(srcValue);
		          }
		        }
		        else {
		          isCommon = false;
		        }
		      }
		      if (isCommon) {
		        // Recursively merge objects and arrays (susceptible to call stack limits).
		        stack.set(srcValue, newValue);
		        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
		        stack['delete'](srcValue);
		      }
		      assignMergeValue(object, key, newValue);
		    }
	
		    /**
		     * The base implementation of `_.nth` which doesn't coerce arguments.
		     *
		     * @private
		     * @param {Array} array The array to query.
		     * @param {number} n The index of the element to return.
		     * @returns {*} Returns the nth element of `array`.
		     */
		    function baseNth(array, n) {
		      var length = array.length;
		      if (!length) {
		        return;
		      }
		      n += n < 0 ? length : 0;
		      return isIndex(n, length) ? array[n] : undefined;
		    }
	
		    /**
		     * The base implementation of `_.orderBy` without param guards.
		     *
		     * @private
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
		     * @param {string[]} orders The sort orders of `iteratees`.
		     * @returns {Array} Returns the new sorted array.
		     */
		    function baseOrderBy(collection, iteratees, orders) {
		      var index = -1;
		      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));
	
		      var result = baseMap(collection, function(value, key, collection) {
		        var criteria = arrayMap(iteratees, function(iteratee) {
		          return iteratee(value);
		        });
		        return { 'criteria': criteria, 'index': ++index, 'value': value };
		      });
	
		      return baseSortBy(result, function(object, other) {
		        return compareMultiple(object, other, orders);
		      });
		    }
	
		    /**
		     * The base implementation of `_.pick` without support for individual
		     * property identifiers.
		     *
		     * @private
		     * @param {Object} object The source object.
		     * @param {string[]} paths The property paths to pick.
		     * @returns {Object} Returns the new object.
		     */
		    function basePick(object, paths) {
		      return basePickBy(object, paths, function(value, path) {
		        return hasIn(object, path);
		      });
		    }
	
		    /**
		     * The base implementation of  `_.pickBy` without support for iteratee shorthands.
		     *
		     * @private
		     * @param {Object} object The source object.
		     * @param {string[]} paths The property paths to pick.
		     * @param {Function} predicate The function invoked per property.
		     * @returns {Object} Returns the new object.
		     */
		    function basePickBy(object, paths, predicate) {
		      var index = -1,
		          length = paths.length,
		          result = {};
	
		      while (++index < length) {
		        var path = paths[index],
		            value = baseGet(object, path);
	
		        if (predicate(value, path)) {
		          baseSet(result, castPath(path, object), value);
		        }
		      }
		      return result;
		    }
	
		    /**
		     * A specialized version of `baseProperty` which supports deep paths.
		     *
		     * @private
		     * @param {Array|string} path The path of the property to get.
		     * @returns {Function} Returns the new accessor function.
		     */
		    function basePropertyDeep(path) {
		      return function(object) {
		        return baseGet(object, path);
		      };
		    }
	
		    /**
		     * The base implementation of `_.pullAllBy` without support for iteratee
		     * shorthands.
		     *
		     * @private
		     * @param {Array} array The array to modify.
		     * @param {Array} values The values to remove.
		     * @param {Function} [iteratee] The iteratee invoked per element.
		     * @param {Function} [comparator] The comparator invoked per element.
		     * @returns {Array} Returns `array`.
		     */
		    function basePullAll(array, values, iteratee, comparator) {
		      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
		          index = -1,
		          length = values.length,
		          seen = array;
	
		      if (array === values) {
		        values = copyArray(values);
		      }
		      if (iteratee) {
		        seen = arrayMap(array, baseUnary(iteratee));
		      }
		      while (++index < length) {
		        var fromIndex = 0,
		            value = values[index],
		            computed = iteratee ? iteratee(value) : value;
	
		        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
		          if (seen !== array) {
		            splice.call(seen, fromIndex, 1);
		          }
		          splice.call(array, fromIndex, 1);
		        }
		      }
		      return array;
		    }
	
		    /**
		     * The base implementation of `_.pullAt` without support for individual
		     * indexes or capturing the removed elements.
		     *
		     * @private
		     * @param {Array} array The array to modify.
		     * @param {number[]} indexes The indexes of elements to remove.
		     * @returns {Array} Returns `array`.
		     */
		    function basePullAt(array, indexes) {
		      var length = array ? indexes.length : 0,
		          lastIndex = length - 1;
	
		      while (length--) {
		        var index = indexes[length];
		        if (length == lastIndex || index !== previous) {
		          var previous = index;
		          if (isIndex(index)) {
		            splice.call(array, index, 1);
		          } else {
		            baseUnset(array, index);
		          }
		        }
		      }
		      return array;
		    }
	
		    /**
		     * The base implementation of `_.random` without support for returning
		     * floating-point numbers.
		     *
		     * @private
		     * @param {number} lower The lower bound.
		     * @param {number} upper The upper bound.
		     * @returns {number} Returns the random number.
		     */
		    function baseRandom(lower, upper) {
		      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
		    }
	
		    /**
		     * The base implementation of `_.range` and `_.rangeRight` which doesn't
		     * coerce arguments.
		     *
		     * @private
		     * @param {number} start The start of the range.
		     * @param {number} end The end of the range.
		     * @param {number} step The value to increment or decrement by.
		     * @param {boolean} [fromRight] Specify iterating from right to left.
		     * @returns {Array} Returns the range of numbers.
		     */
		    function baseRange(start, end, step, fromRight) {
		      var index = -1,
		          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
		          result = Array(length);
	
		      while (length--) {
		        result[fromRight ? length : ++index] = start;
		        start += step;
		      }
		      return result;
		    }
	
		    /**
		     * The base implementation of `_.repeat` which doesn't coerce arguments.
		     *
		     * @private
		     * @param {string} string The string to repeat.
		     * @param {number} n The number of times to repeat the string.
		     * @returns {string} Returns the repeated string.
		     */
		    function baseRepeat(string, n) {
		      var result = '';
		      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
		        return result;
		      }
		      // Leverage the exponentiation by squaring algorithm for a faster repeat.
		      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
		      do {
		        if (n % 2) {
		          result += string;
		        }
		        n = nativeFloor(n / 2);
		        if (n) {
		          string += string;
		        }
		      } while (n);
	
		      return result;
		    }
	
		    /**
		     * The base implementation of `_.rest` which doesn't validate or coerce arguments.
		     *
		     * @private
		     * @param {Function} func The function to apply a rest parameter to.
		     * @param {number} [start=func.length-1] The start position of the rest parameter.
		     * @returns {Function} Returns the new function.
		     */
		    function baseRest(func, start) {
		      return setToString(overRest(func, start, identity), func + '');
		    }
	
		    /**
		     * The base implementation of `_.sample`.
		     *
		     * @private
		     * @param {Array|Object} collection The collection to sample.
		     * @returns {*} Returns the random element.
		     */
		    function baseSample(collection) {
		      return arraySample(values(collection));
		    }
	
		    /**
		     * The base implementation of `_.sampleSize` without param guards.
		     *
		     * @private
		     * @param {Array|Object} collection The collection to sample.
		     * @param {number} n The number of elements to sample.
		     * @returns {Array} Returns the random elements.
		     */
		    function baseSampleSize(collection, n) {
		      var array = values(collection);
		      return shuffleSelf(array, baseClamp(n, 0, array.length));
		    }
	
		    /**
		     * The base implementation of `_.set`.
		     *
		     * @private
		     * @param {Object} object The object to modify.
		     * @param {Array|string} path The path of the property to set.
		     * @param {*} value The value to set.
		     * @param {Function} [customizer] The function to customize path creation.
		     * @returns {Object} Returns `object`.
		     */
		    function baseSet(object, path, value, customizer) {
		      if (!isObject(object)) {
		        return object;
		      }
		      path = castPath(path, object);
	
		      var index = -1,
		          length = path.length,
		          lastIndex = length - 1,
		          nested = object;
	
		      while (nested != null && ++index < length) {
		        var key = toKey(path[index]),
		            newValue = value;
	
		        if (index != lastIndex) {
		          var objValue = nested[key];
		          newValue = customizer ? customizer(objValue, key, nested) : undefined;
		          if (newValue === undefined) {
		            newValue = isObject(objValue)
		              ? objValue
		              : (isIndex(path[index + 1]) ? [] : {});
		          }
		        }
		        assignValue(nested, key, newValue);
		        nested = nested[key];
		      }
		      return object;
		    }
	
		    /**
		     * The base implementation of `setData` without support for hot loop shorting.
		     *
		     * @private
		     * @param {Function} func The function to associate metadata with.
		     * @param {*} data The metadata.
		     * @returns {Function} Returns `func`.
		     */
		    var baseSetData = !metaMap ? identity : function(func, data) {
		      metaMap.set(func, data);
		      return func;
		    };
	
		    /**
		     * The base implementation of `setToString` without support for hot loop shorting.
		     *
		     * @private
		     * @param {Function} func The function to modify.
		     * @param {Function} string The `toString` result.
		     * @returns {Function} Returns `func`.
		     */
		    var baseSetToString = !defineProperty ? identity : function(func, string) {
		      return defineProperty(func, 'toString', {
		        'configurable': true,
		        'enumerable': false,
		        'value': constant(string),
		        'writable': true
		      });
		    };
	
		    /**
		     * The base implementation of `_.shuffle`.
		     *
		     * @private
		     * @param {Array|Object} collection The collection to shuffle.
		     * @returns {Array} Returns the new shuffled array.
		     */
		    function baseShuffle(collection) {
		      return shuffleSelf(values(collection));
		    }
	
		    /**
		     * The base implementation of `_.slice` without an iteratee call guard.
		     *
		     * @private
		     * @param {Array} array The array to slice.
		     * @param {number} [start=0] The start position.
		     * @param {number} [end=array.length] The end position.
		     * @returns {Array} Returns the slice of `array`.
		     */
		    function baseSlice(array, start, end) {
		      var index = -1,
		          length = array.length;
	
		      if (start < 0) {
		        start = -start > length ? 0 : (length + start);
		      }
		      end = end > length ? length : end;
		      if (end < 0) {
		        end += length;
		      }
		      length = start > end ? 0 : ((end - start) >>> 0);
		      start >>>= 0;
	
		      var result = Array(length);
		      while (++index < length) {
		        result[index] = array[index + start];
		      }
		      return result;
		    }
	
		    /**
		     * The base implementation of `_.some` without support for iteratee shorthands.
		     *
		     * @private
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Function} predicate The function invoked per iteration.
		     * @returns {boolean} Returns `true` if any element passes the predicate check,
		     *  else `false`.
		     */
		    function baseSome(collection, predicate) {
		      var result;
	
		      baseEach(collection, function(value, index, collection) {
		        result = predicate(value, index, collection);
		        return !result;
		      });
		      return !!result;
		    }
	
		    /**
		     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
		     * performs a binary search of `array` to determine the index at which `value`
		     * should be inserted into `array` in order to maintain its sort order.
		     *
		     * @private
		     * @param {Array} array The sorted array to inspect.
		     * @param {*} value The value to evaluate.
		     * @param {boolean} [retHighest] Specify returning the highest qualified index.
		     * @returns {number} Returns the index at which `value` should be inserted
		     *  into `array`.
		     */
		    function baseSortedIndex(array, value, retHighest) {
		      var low = 0,
		          high = array == null ? low : array.length;
	
		      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
		        while (low < high) {
		          var mid = (low + high) >>> 1,
		              computed = array[mid];
	
		          if (computed !== null && !isSymbol(computed) &&
		              (retHighest ? (computed <= value) : (computed < value))) {
		            low = mid + 1;
		          } else {
		            high = mid;
		          }
		        }
		        return high;
		      }
		      return baseSortedIndexBy(array, value, identity, retHighest);
		    }
	
		    /**
		     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
		     * which invokes `iteratee` for `value` and each element of `array` to compute
		     * their sort ranking. The iteratee is invoked with one argument; (value).
		     *
		     * @private
		     * @param {Array} array The sorted array to inspect.
		     * @param {*} value The value to evaluate.
		     * @param {Function} iteratee The iteratee invoked per element.
		     * @param {boolean} [retHighest] Specify returning the highest qualified index.
		     * @returns {number} Returns the index at which `value` should be inserted
		     *  into `array`.
		     */
		    function baseSortedIndexBy(array, value, iteratee, retHighest) {
		      value = iteratee(value);
	
		      var low = 0,
		          high = array == null ? 0 : array.length,
		          valIsNaN = value !== value,
		          valIsNull = value === null,
		          valIsSymbol = isSymbol(value),
		          valIsUndefined = value === undefined;
	
		      while (low < high) {
		        var mid = nativeFloor((low + high) / 2),
		            computed = iteratee(array[mid]),
		            othIsDefined = computed !== undefined,
		            othIsNull = computed === null,
		            othIsReflexive = computed === computed,
		            othIsSymbol = isSymbol(computed);
	
		        if (valIsNaN) {
		          var setLow = retHighest || othIsReflexive;
		        } else if (valIsUndefined) {
		          setLow = othIsReflexive && (retHighest || othIsDefined);
		        } else if (valIsNull) {
		          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
		        } else if (valIsSymbol) {
		          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
		        } else if (othIsNull || othIsSymbol) {
		          setLow = false;
		        } else {
		          setLow = retHighest ? (computed <= value) : (computed < value);
		        }
		        if (setLow) {
		          low = mid + 1;
		        } else {
		          high = mid;
		        }
		      }
		      return nativeMin(high, MAX_ARRAY_INDEX);
		    }
	
		    /**
		     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without
		     * support for iteratee shorthands.
		     *
		     * @private
		     * @param {Array} array The array to inspect.
		     * @param {Function} [iteratee] The iteratee invoked per element.
		     * @returns {Array} Returns the new duplicate free array.
		     */
		    function baseSortedUniq(array, iteratee) {
		      var index = -1,
		          length = array.length,
		          resIndex = 0,
		          result = [];
	
		      while (++index < length) {
		        var value = array[index],
		            computed = iteratee ? iteratee(value) : value;
	
		        if (!index || !eq(computed, seen)) {
		          var seen = computed;
		          result[resIndex++] = value === 0 ? 0 : value;
		        }
		      }
		      return result;
		    }
	
		    /**
		     * The base implementation of `_.toNumber` which doesn't ensure correct
		     * conversions of binary, hexadecimal, or octal string values.
		     *
		     * @private
		     * @param {*} value The value to process.
		     * @returns {number} Returns the number.
		     */
		    function baseToNumber(value) {
		      if (typeof value == 'number') {
		        return value;
		      }
		      if (isSymbol(value)) {
		        return NAN;
		      }
		      return +value;
		    }
	
		    /**
		     * The base implementation of `_.toString` which doesn't convert nullish
		     * values to empty strings.
		     *
		     * @private
		     * @param {*} value The value to process.
		     * @returns {string} Returns the string.
		     */
		    function baseToString(value) {
		      // Exit early for strings to avoid a performance hit in some environments.
		      if (typeof value == 'string') {
		        return value;
		      }
		      if (isArray(value)) {
		        // Recursively convert values (susceptible to call stack limits).
		        return arrayMap(value, baseToString) + '';
		      }
		      if (isSymbol(value)) {
		        return symbolToString ? symbolToString.call(value) : '';
		      }
		      var result = (value + '');
		      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
		    }
	
		    /**
		     * The base implementation of `_.uniqBy` without support for iteratee shorthands.
		     *
		     * @private
		     * @param {Array} array The array to inspect.
		     * @param {Function} [iteratee] The iteratee invoked per element.
		     * @param {Function} [comparator] The comparator invoked per element.
		     * @returns {Array} Returns the new duplicate free array.
		     */
		    function baseUniq(array, iteratee, comparator) {
		      var index = -1,
		          includes = arrayIncludes,
		          length = array.length,
		          isCommon = true,
		          result = [],
		          seen = result;
	
		      if (comparator) {
		        isCommon = false;
		        includes = arrayIncludesWith;
		      }
		      else if (length >= LARGE_ARRAY_SIZE) {
		        var set = iteratee ? null : createSet(array);
		        if (set) {
		          return setToArray(set);
		        }
		        isCommon = false;
		        includes = cacheHas;
		        seen = new SetCache;
		      }
		      else {
		        seen = iteratee ? [] : result;
		      }
		      outer:
		      while (++index < length) {
		        var value = array[index],
		            computed = iteratee ? iteratee(value) : value;
	
		        value = (comparator || value !== 0) ? value : 0;
		        if (isCommon && computed === computed) {
		          var seenIndex = seen.length;
		          while (seenIndex--) {
		            if (seen[seenIndex] === computed) {
		              continue outer;
		            }
		          }
		          if (iteratee) {
		            seen.push(computed);
		          }
		          result.push(value);
		        }
		        else if (!includes(seen, computed, comparator)) {
		          if (seen !== result) {
		            seen.push(computed);
		          }
		          result.push(value);
		        }
		      }
		      return result;
		    }
	
		    /**
		     * The base implementation of `_.unset`.
		     *
		     * @private
		     * @param {Object} object The object to modify.
		     * @param {Array|string} path The property path to unset.
		     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
		     */
		    function baseUnset(object, path) {
		      path = castPath(path, object);
		      object = parent(object, path);
		      return object == null || delete object[toKey(last(path))];
		    }
	
		    /**
		     * The base implementation of `_.update`.
		     *
		     * @private
		     * @param {Object} object The object to modify.
		     * @param {Array|string} path The path of the property to update.
		     * @param {Function} updater The function to produce the updated value.
		     * @param {Function} [customizer] The function to customize path creation.
		     * @returns {Object} Returns `object`.
		     */
		    function baseUpdate(object, path, updater, customizer) {
		      return baseSet(object, path, updater(baseGet(object, path)), customizer);
		    }
	
		    /**
		     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
		     * without support for iteratee shorthands.
		     *
		     * @private
		     * @param {Array} array The array to query.
		     * @param {Function} predicate The function invoked per iteration.
		     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
		     * @param {boolean} [fromRight] Specify iterating from right to left.
		     * @returns {Array} Returns the slice of `array`.
		     */
		    function baseWhile(array, predicate, isDrop, fromRight) {
		      var length = array.length,
		          index = fromRight ? length : -1;
	
		      while ((fromRight ? index-- : ++index < length) &&
		        predicate(array[index], index, array)) {}
	
		      return isDrop
		        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))
		        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));
		    }
	
		    /**
		     * The base implementation of `wrapperValue` which returns the result of
		     * performing a sequence of actions on the unwrapped `value`, where each
		     * successive action is supplied the return value of the previous.
		     *
		     * @private
		     * @param {*} value The unwrapped value.
		     * @param {Array} actions Actions to perform to resolve the unwrapped value.
		     * @returns {*} Returns the resolved value.
		     */
		    function baseWrapperValue(value, actions) {
		      var result = value;
		      if (result instanceof LazyWrapper) {
		        result = result.value();
		      }
		      return arrayReduce(actions, function(result, action) {
		        return action.func.apply(action.thisArg, arrayPush([result], action.args));
		      }, result);
		    }
	
		    /**
		     * The base implementation of methods like `_.xor`, without support for
		     * iteratee shorthands, that accepts an array of arrays to inspect.
		     *
		     * @private
		     * @param {Array} arrays The arrays to inspect.
		     * @param {Function} [iteratee] The iteratee invoked per element.
		     * @param {Function} [comparator] The comparator invoked per element.
		     * @returns {Array} Returns the new array of values.
		     */
		    function baseXor(arrays, iteratee, comparator) {
		      var length = arrays.length;
		      if (length < 2) {
		        return length ? baseUniq(arrays[0]) : [];
		      }
		      var index = -1,
		          result = Array(length);
	
		      while (++index < length) {
		        var array = arrays[index],
		            othIndex = -1;
	
		        while (++othIndex < length) {
		          if (othIndex != index) {
		            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);
		          }
		        }
		      }
		      return baseUniq(baseFlatten(result, 1), iteratee, comparator);
		    }
	
		    /**
		     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
		     *
		     * @private
		     * @param {Array} props The property identifiers.
		     * @param {Array} values The property values.
		     * @param {Function} assignFunc The function to assign values.
		     * @returns {Object} Returns the new object.
		     */
		    function baseZipObject(props, values, assignFunc) {
		      var index = -1,
		          length = props.length,
		          valsLength = values.length,
		          result = {};
	
		      while (++index < length) {
		        var value = index < valsLength ? values[index] : undefined;
		        assignFunc(result, props[index], value);
		      }
		      return result;
		    }
	
		    /**
		     * Casts `value` to an empty array if it's not an array like object.
		     *
		     * @private
		     * @param {*} value The value to inspect.
		     * @returns {Array|Object} Returns the cast array-like object.
		     */
		    function castArrayLikeObject(value) {
		      return isArrayLikeObject(value) ? value : [];
		    }
	
		    /**
		     * Casts `value` to `identity` if it's not a function.
		     *
		     * @private
		     * @param {*} value The value to inspect.
		     * @returns {Function} Returns cast function.
		     */
		    function castFunction(value) {
		      return typeof value == 'function' ? value : identity;
		    }
	
		    /**
		     * Casts `value` to a path array if it's not one.
		     *
		     * @private
		     * @param {*} value The value to inspect.
		     * @param {Object} [object] The object to query keys on.
		     * @returns {Array} Returns the cast property path array.
		     */
		    function castPath(value, object) {
		      if (isArray(value)) {
		        return value;
		      }
		      return isKey(value, object) ? [value] : stringToPath(toString(value));
		    }
	
		    /**
		     * A `baseRest` alias which can be replaced with `identity` by module
		     * replacement plugins.
		     *
		     * @private
		     * @type {Function}
		     * @param {Function} func The function to apply a rest parameter to.
		     * @returns {Function} Returns the new function.
		     */
		    var castRest = baseRest;
	
		    /**
		     * Casts `array` to a slice if it's needed.
		     *
		     * @private
		     * @param {Array} array The array to inspect.
		     * @param {number} start The start position.
		     * @param {number} [end=array.length] The end position.
		     * @returns {Array} Returns the cast slice.
		     */
		    function castSlice(array, start, end) {
		      var length = array.length;
		      end = end === undefined ? length : end;
		      return (!start && end >= length) ? array : baseSlice(array, start, end);
		    }
	
		    /**
		     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).
		     *
		     * @private
		     * @param {number|Object} id The timer id or timeout object of the timer to clear.
		     */
		    var clearTimeout = ctxClearTimeout || function(id) {
		      return root.clearTimeout(id);
		    };
	
		    /**
		     * Creates a clone of  `buffer`.
		     *
		     * @private
		     * @param {Buffer} buffer The buffer to clone.
		     * @param {boolean} [isDeep] Specify a deep clone.
		     * @returns {Buffer} Returns the cloned buffer.
		     */
		    function cloneBuffer(buffer, isDeep) {
		      if (isDeep) {
		        return buffer.slice();
		      }
		      var length = buffer.length,
		          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
	
		      buffer.copy(result);
		      return result;
		    }
	
		    /**
		     * Creates a clone of `arrayBuffer`.
		     *
		     * @private
		     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
		     * @returns {ArrayBuffer} Returns the cloned array buffer.
		     */
		    function cloneArrayBuffer(arrayBuffer) {
		      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
		      new Uint8Array(result).set(new Uint8Array(arrayBuffer));
		      return result;
		    }
	
		    /**
		     * Creates a clone of `dataView`.
		     *
		     * @private
		     * @param {Object} dataView The data view to clone.
		     * @param {boolean} [isDeep] Specify a deep clone.
		     * @returns {Object} Returns the cloned data view.
		     */
		    function cloneDataView(dataView, isDeep) {
		      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
		      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
		    }
	
		    /**
		     * Creates a clone of `map`.
		     *
		     * @private
		     * @param {Object} map The map to clone.
		     * @param {Function} cloneFunc The function to clone values.
		     * @param {boolean} [isDeep] Specify a deep clone.
		     * @returns {Object} Returns the cloned map.
		     */
		    function cloneMap(map, isDeep, cloneFunc) {
		      var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);
		      return arrayReduce(array, addMapEntry, new map.constructor);
		    }
	
		    /**
		     * Creates a clone of `regexp`.
		     *
		     * @private
		     * @param {Object} regexp The regexp to clone.
		     * @returns {Object} Returns the cloned regexp.
		     */
		    function cloneRegExp(regexp) {
		      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
		      result.lastIndex = regexp.lastIndex;
		      return result;
		    }
	
		    /**
		     * Creates a clone of `set`.
		     *
		     * @private
		     * @param {Object} set The set to clone.
		     * @param {Function} cloneFunc The function to clone values.
		     * @param {boolean} [isDeep] Specify a deep clone.
		     * @returns {Object} Returns the cloned set.
		     */
		    function cloneSet(set, isDeep, cloneFunc) {
		      var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);
		      return arrayReduce(array, addSetEntry, new set.constructor);
		    }
	
		    /**
		     * Creates a clone of the `symbol` object.
		     *
		     * @private
		     * @param {Object} symbol The symbol object to clone.
		     * @returns {Object} Returns the cloned symbol object.
		     */
		    function cloneSymbol(symbol) {
		      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
		    }
	
		    /**
		     * Creates a clone of `typedArray`.
		     *
		     * @private
		     * @param {Object} typedArray The typed array to clone.
		     * @param {boolean} [isDeep] Specify a deep clone.
		     * @returns {Object} Returns the cloned typed array.
		     */
		    function cloneTypedArray(typedArray, isDeep) {
		      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
		      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
		    }
	
		    /**
		     * Compares values to sort them in ascending order.
		     *
		     * @private
		     * @param {*} value The value to compare.
		     * @param {*} other The other value to compare.
		     * @returns {number} Returns the sort order indicator for `value`.
		     */
		    function compareAscending(value, other) {
		      if (value !== other) {
		        var valIsDefined = value !== undefined,
		            valIsNull = value === null,
		            valIsReflexive = value === value,
		            valIsSymbol = isSymbol(value);
	
		        var othIsDefined = other !== undefined,
		            othIsNull = other === null,
		            othIsReflexive = other === other,
		            othIsSymbol = isSymbol(other);
	
		        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
		            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
		            (valIsNull && othIsDefined && othIsReflexive) ||
		            (!valIsDefined && othIsReflexive) ||
		            !valIsReflexive) {
		          return 1;
		        }
		        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
		            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
		            (othIsNull && valIsDefined && valIsReflexive) ||
		            (!othIsDefined && valIsReflexive) ||
		            !othIsReflexive) {
		          return -1;
		        }
		      }
		      return 0;
		    }
	
		    /**
		     * Used by `_.orderBy` to compare multiple properties of a value to another
		     * and stable sort them.
		     *
		     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
		     * specify an order of "desc" for descending or "asc" for ascending sort order
		     * of corresponding values.
		     *
		     * @private
		     * @param {Object} object The object to compare.
		     * @param {Object} other The other object to compare.
		     * @param {boolean[]|string[]} orders The order to sort by for each property.
		     * @returns {number} Returns the sort order indicator for `object`.
		     */
		    function compareMultiple(object, other, orders) {
		      var index = -1,
		          objCriteria = object.criteria,
		          othCriteria = other.criteria,
		          length = objCriteria.length,
		          ordersLength = orders.length;
	
		      while (++index < length) {
		        var result = compareAscending(objCriteria[index], othCriteria[index]);
		        if (result) {
		          if (index >= ordersLength) {
		            return result;
		          }
		          var order = orders[index];
		          return result * (order == 'desc' ? -1 : 1);
		        }
		      }
		      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
		      // that causes it, under certain circumstances, to provide the same value for
		      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
		      // for more details.
		      //
		      // This also ensures a stable sort in V8 and other engines.
		      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
		      return object.index - other.index;
		    }
	
		    /**
		     * Creates an array that is the composition of partially applied arguments,
		     * placeholders, and provided arguments into a single array of arguments.
		     *
		     * @private
		     * @param {Array} args The provided arguments.
		     * @param {Array} partials The arguments to prepend to those provided.
		     * @param {Array} holders The `partials` placeholder indexes.
		     * @params {boolean} [isCurried] Specify composing for a curried function.
		     * @returns {Array} Returns the new array of composed arguments.
		     */
		    function composeArgs(args, partials, holders, isCurried) {
		      var argsIndex = -1,
		          argsLength = args.length,
		          holdersLength = holders.length,
		          leftIndex = -1,
		          leftLength = partials.length,
		          rangeLength = nativeMax(argsLength - holdersLength, 0),
		          result = Array(leftLength + rangeLength),
		          isUncurried = !isCurried;
	
		      while (++leftIndex < leftLength) {
		        result[leftIndex] = partials[leftIndex];
		      }
		      while (++argsIndex < holdersLength) {
		        if (isUncurried || argsIndex < argsLength) {
		          result[holders[argsIndex]] = args[argsIndex];
		        }
		      }
		      while (rangeLength--) {
		        result[leftIndex++] = args[argsIndex++];
		      }
		      return result;
		    }
	
		    /**
		     * This function is like `composeArgs` except that the arguments composition
		     * is tailored for `_.partialRight`.
		     *
		     * @private
		     * @param {Array} args The provided arguments.
		     * @param {Array} partials The arguments to append to those provided.
		     * @param {Array} holders The `partials` placeholder indexes.
		     * @params {boolean} [isCurried] Specify composing for a curried function.
		     * @returns {Array} Returns the new array of composed arguments.
		     */
		    function composeArgsRight(args, partials, holders, isCurried) {
		      var argsIndex = -1,
		          argsLength = args.length,
		          holdersIndex = -1,
		          holdersLength = holders.length,
		          rightIndex = -1,
		          rightLength = partials.length,
		          rangeLength = nativeMax(argsLength - holdersLength, 0),
		          result = Array(rangeLength + rightLength),
		          isUncurried = !isCurried;
	
		      while (++argsIndex < rangeLength) {
		        result[argsIndex] = args[argsIndex];
		      }
		      var offset = argsIndex;
		      while (++rightIndex < rightLength) {
		        result[offset + rightIndex] = partials[rightIndex];
		      }
		      while (++holdersIndex < holdersLength) {
		        if (isUncurried || argsIndex < argsLength) {
		          result[offset + holders[holdersIndex]] = args[argsIndex++];
		        }
		      }
		      return result;
		    }
	
		    /**
		     * Copies the values of `source` to `array`.
		     *
		     * @private
		     * @param {Array} source The array to copy values from.
		     * @param {Array} [array=[]] The array to copy values to.
		     * @returns {Array} Returns `array`.
		     */
		    function copyArray(source, array) {
		      var index = -1,
		          length = source.length;
	
		      array || (array = Array(length));
		      while (++index < length) {
		        array[index] = source[index];
		      }
		      return array;
		    }
	
		    /**
		     * Copies properties of `source` to `object`.
		     *
		     * @private
		     * @param {Object} source The object to copy properties from.
		     * @param {Array} props The property identifiers to copy.
		     * @param {Object} [object={}] The object to copy properties to.
		     * @param {Function} [customizer] The function to customize copied values.
		     * @returns {Object} Returns `object`.
		     */
		    function copyObject(source, props, object, customizer) {
		      var isNew = !object;
		      object || (object = {});
	
		      var index = -1,
		          length = props.length;
	
		      while (++index < length) {
		        var key = props[index];
	
		        var newValue = customizer
		          ? customizer(object[key], source[key], key, object, source)
		          : undefined;
	
		        if (newValue === undefined) {
		          newValue = source[key];
		        }
		        if (isNew) {
		          baseAssignValue(object, key, newValue);
		        } else {
		          assignValue(object, key, newValue);
		        }
		      }
		      return object;
		    }
	
		    /**
		     * Copies own symbols of `source` to `object`.
		     *
		     * @private
		     * @param {Object} source The object to copy symbols from.
		     * @param {Object} [object={}] The object to copy symbols to.
		     * @returns {Object} Returns `object`.
		     */
		    function copySymbols(source, object) {
		      return copyObject(source, getSymbols(source), object);
		    }
	
		    /**
		     * Copies own and inherited symbols of `source` to `object`.
		     *
		     * @private
		     * @param {Object} source The object to copy symbols from.
		     * @param {Object} [object={}] The object to copy symbols to.
		     * @returns {Object} Returns `object`.
		     */
		    function copySymbolsIn(source, object) {
		      return copyObject(source, getSymbolsIn(source), object);
		    }
	
		    /**
		     * Creates a function like `_.groupBy`.
		     *
		     * @private
		     * @param {Function} setter The function to set accumulator values.
		     * @param {Function} [initializer] The accumulator object initializer.
		     * @returns {Function} Returns the new aggregator function.
		     */
		    function createAggregator(setter, initializer) {
		      return function(collection, iteratee) {
		        var func = isArray(collection) ? arrayAggregator : baseAggregator,
		            accumulator = initializer ? initializer() : {};
	
		        return func(collection, setter, getIteratee(iteratee, 2), accumulator);
		      };
		    }
	
		    /**
		     * Creates a function like `_.assign`.
		     *
		     * @private
		     * @param {Function} assigner The function to assign values.
		     * @returns {Function} Returns the new assigner function.
		     */
		    function createAssigner(assigner) {
		      return baseRest(function(object, sources) {
		        var index = -1,
		            length = sources.length,
		            customizer = length > 1 ? sources[length - 1] : undefined,
		            guard = length > 2 ? sources[2] : undefined;
	
		        customizer = (assigner.length > 3 && typeof customizer == 'function')
		          ? (length--, customizer)
		          : undefined;
	
		        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
		          customizer = length < 3 ? undefined : customizer;
		          length = 1;
		        }
		        object = Object(object);
		        while (++index < length) {
		          var source = sources[index];
		          if (source) {
		            assigner(object, source, index, customizer);
		          }
		        }
		        return object;
		      });
		    }
	
		    /**
		     * Creates a `baseEach` or `baseEachRight` function.
		     *
		     * @private
		     * @param {Function} eachFunc The function to iterate over a collection.
		     * @param {boolean} [fromRight] Specify iterating from right to left.
		     * @returns {Function} Returns the new base function.
		     */
		    function createBaseEach(eachFunc, fromRight) {
		      return function(collection, iteratee) {
		        if (collection == null) {
		          return collection;
		        }
		        if (!isArrayLike(collection)) {
		          return eachFunc(collection, iteratee);
		        }
		        var length = collection.length,
		            index = fromRight ? length : -1,
		            iterable = Object(collection);
	
		        while ((fromRight ? index-- : ++index < length)) {
		          if (iteratee(iterable[index], index, iterable) === false) {
		            break;
		          }
		        }
		        return collection;
		      };
		    }
	
		    /**
		     * Creates a base function for methods like `_.forIn` and `_.forOwn`.
		     *
		     * @private
		     * @param {boolean} [fromRight] Specify iterating from right to left.
		     * @returns {Function} Returns the new base function.
		     */
		    function createBaseFor(fromRight) {
		      return function(object, iteratee, keysFunc) {
		        var index = -1,
		            iterable = Object(object),
		            props = keysFunc(object),
		            length = props.length;
	
		        while (length--) {
		          var key = props[fromRight ? length : ++index];
		          if (iteratee(iterable[key], key, iterable) === false) {
		            break;
		          }
		        }
		        return object;
		      };
		    }
	
		    /**
		     * Creates a function that wraps `func` to invoke it with the optional `this`
		     * binding of `thisArg`.
		     *
		     * @private
		     * @param {Function} func The function to wrap.
		     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
		     * @param {*} [thisArg] The `this` binding of `func`.
		     * @returns {Function} Returns the new wrapped function.
		     */
		    function createBind(func, bitmask, thisArg) {
		      var isBind = bitmask & WRAP_BIND_FLAG,
		          Ctor = createCtor(func);
	
		      function wrapper() {
		        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
		        return fn.apply(isBind ? thisArg : this, arguments);
		      }
		      return wrapper;
		    }
	
		    /**
		     * Creates a function like `_.lowerFirst`.
		     *
		     * @private
		     * @param {string} methodName The name of the `String` case method to use.
		     * @returns {Function} Returns the new case function.
		     */
		    function createCaseFirst(methodName) {
		      return function(string) {
		        string = toString(string);
	
		        var strSymbols = hasUnicode(string)
		          ? stringToArray(string)
		          : undefined;
	
		        var chr = strSymbols
		          ? strSymbols[0]
		          : string.charAt(0);
	
		        var trailing = strSymbols
		          ? castSlice(strSymbols, 1).join('')
		          : string.slice(1);
	
		        return chr[methodName]() + trailing;
		      };
		    }
	
		    /**
		     * Creates a function like `_.camelCase`.
		     *
		     * @private
		     * @param {Function} callback The function to combine each word.
		     * @returns {Function} Returns the new compounder function.
		     */
		    function createCompounder(callback) {
		      return function(string) {
		        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
		      };
		    }
	
		    /**
		     * Creates a function that produces an instance of `Ctor` regardless of
		     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
		     *
		     * @private
		     * @param {Function} Ctor The constructor to wrap.
		     * @returns {Function} Returns the new wrapped function.
		     */
		    function createCtor(Ctor) {
		      return function() {
		        // Use a `switch` statement to work with class constructors. See
		        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
		        // for more details.
		        var args = arguments;
		        switch (args.length) {
		          case 0: return new Ctor;
		          case 1: return new Ctor(args[0]);
		          case 2: return new Ctor(args[0], args[1]);
		          case 3: return new Ctor(args[0], args[1], args[2]);
		          case 4: return new Ctor(args[0], args[1], args[2], args[3]);
		          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
		          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
		          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
		        }
		        var thisBinding = baseCreate(Ctor.prototype),
		            result = Ctor.apply(thisBinding, args);
	
		        // Mimic the constructor's `return` behavior.
		        // See https://es5.github.io/#x13.2.2 for more details.
		        return isObject(result) ? result : thisBinding;
		      };
		    }
	
		    /**
		     * Creates a function that wraps `func` to enable currying.
		     *
		     * @private
		     * @param {Function} func The function to wrap.
		     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
		     * @param {number} arity The arity of `func`.
		     * @returns {Function} Returns the new wrapped function.
		     */
		    function createCurry(func, bitmask, arity) {
		      var Ctor = createCtor(func);
	
		      function wrapper() {
		        var length = arguments.length,
		            args = Array(length),
		            index = length,
		            placeholder = getHolder(wrapper);
	
		        while (index--) {
		          args[index] = arguments[index];
		        }
		        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
		          ? []
		          : replaceHolders(args, placeholder);
	
		        length -= holders.length;
		        if (length < arity) {
		          return createRecurry(
		            func, bitmask, createHybrid, wrapper.placeholder, undefined,
		            args, holders, undefined, undefined, arity - length);
		        }
		        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
		        return apply(fn, this, args);
		      }
		      return wrapper;
		    }
	
		    /**
		     * Creates a `_.find` or `_.findLast` function.
		     *
		     * @private
		     * @param {Function} findIndexFunc The function to find the collection index.
		     * @returns {Function} Returns the new find function.
		     */
		    function createFind(findIndexFunc) {
		      return function(collection, predicate, fromIndex) {
		        var iterable = Object(collection);
		        if (!isArrayLike(collection)) {
		          var iteratee = getIteratee(predicate, 3);
		          collection = keys(collection);
		          predicate = function(key) { return iteratee(iterable[key], key, iterable); };
		        }
		        var index = findIndexFunc(collection, predicate, fromIndex);
		        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
		      };
		    }
	
		    /**
		     * Creates a `_.flow` or `_.flowRight` function.
		     *
		     * @private
		     * @param {boolean} [fromRight] Specify iterating from right to left.
		     * @returns {Function} Returns the new flow function.
		     */
		    function createFlow(fromRight) {
		      return flatRest(function(funcs) {
		        var length = funcs.length,
		            index = length,
		            prereq = LodashWrapper.prototype.thru;
	
		        if (fromRight) {
		          funcs.reverse();
		        }
		        while (index--) {
		          var func = funcs[index];
		          if (typeof func != 'function') {
		            throw new TypeError(FUNC_ERROR_TEXT);
		          }
		          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
		            var wrapper = new LodashWrapper([], true);
		          }
		        }
		        index = wrapper ? index : length;
		        while (++index < length) {
		          func = funcs[index];
	
		          var funcName = getFuncName(func),
		              data = funcName == 'wrapper' ? getData(func) : undefined;
	
		          if (data && isLaziable(data[0]) &&
		                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&
		                !data[4].length && data[9] == 1
		              ) {
		            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
		          } else {
		            wrapper = (func.length == 1 && isLaziable(func))
		              ? wrapper[funcName]()
		              : wrapper.thru(func);
		          }
		        }
		        return function() {
		          var args = arguments,
		              value = args[0];
	
		          if (wrapper && args.length == 1 && isArray(value)) {
		            return wrapper.plant(value).value();
		          }
		          var index = 0,
		              result = length ? funcs[index].apply(this, args) : value;
	
		          while (++index < length) {
		            result = funcs[index].call(this, result);
		          }
		          return result;
		        };
		      });
		    }
	
		    /**
		     * Creates a function that wraps `func` to invoke it with optional `this`
		     * binding of `thisArg`, partial application, and currying.
		     *
		     * @private
		     * @param {Function|string} func The function or method name to wrap.
		     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
		     * @param {*} [thisArg] The `this` binding of `func`.
		     * @param {Array} [partials] The arguments to prepend to those provided to
		     *  the new function.
		     * @param {Array} [holders] The `partials` placeholder indexes.
		     * @param {Array} [partialsRight] The arguments to append to those provided
		     *  to the new function.
		     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
		     * @param {Array} [argPos] The argument positions of the new function.
		     * @param {number} [ary] The arity cap of `func`.
		     * @param {number} [arity] The arity of `func`.
		     * @returns {Function} Returns the new wrapped function.
		     */
		    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
		      var isAry = bitmask & WRAP_ARY_FLAG,
		          isBind = bitmask & WRAP_BIND_FLAG,
		          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
		          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
		          isFlip = bitmask & WRAP_FLIP_FLAG,
		          Ctor = isBindKey ? undefined : createCtor(func);
	
		      function wrapper() {
		        var length = arguments.length,
		            args = Array(length),
		            index = length;
	
		        while (index--) {
		          args[index] = arguments[index];
		        }
		        if (isCurried) {
		          var placeholder = getHolder(wrapper),
		              holdersCount = countHolders(args, placeholder);
		        }
		        if (partials) {
		          args = composeArgs(args, partials, holders, isCurried);
		        }
		        if (partialsRight) {
		          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
		        }
		        length -= holdersCount;
		        if (isCurried && length < arity) {
		          var newHolders = replaceHolders(args, placeholder);
		          return createRecurry(
		            func, bitmask, createHybrid, wrapper.placeholder, thisArg,
		            args, newHolders, argPos, ary, arity - length
		          );
		        }
		        var thisBinding = isBind ? thisArg : this,
		            fn = isBindKey ? thisBinding[func] : func;
	
		        length = args.length;
		        if (argPos) {
		          args = reorder(args, argPos);
		        } else if (isFlip && length > 1) {
		          args.reverse();
		        }
		        if (isAry && ary < length) {
		          args.length = ary;
		        }
		        if (this && this !== root && this instanceof wrapper) {
		          fn = Ctor || createCtor(fn);
		        }
		        return fn.apply(thisBinding, args);
		      }
		      return wrapper;
		    }
	
		    /**
		     * Creates a function like `_.invertBy`.
		     *
		     * @private
		     * @param {Function} setter The function to set accumulator values.
		     * @param {Function} toIteratee The function to resolve iteratees.
		     * @returns {Function} Returns the new inverter function.
		     */
		    function createInverter(setter, toIteratee) {
		      return function(object, iteratee) {
		        return baseInverter(object, setter, toIteratee(iteratee), {});
		      };
		    }
	
		    /**
		     * Creates a function that performs a mathematical operation on two values.
		     *
		     * @private
		     * @param {Function} operator The function to perform the operation.
		     * @param {number} [defaultValue] The value used for `undefined` arguments.
		     * @returns {Function} Returns the new mathematical operation function.
		     */
		    function createMathOperation(operator, defaultValue) {
		      return function(value, other) {
		        var result;
		        if (value === undefined && other === undefined) {
		          return defaultValue;
		        }
		        if (value !== undefined) {
		          result = value;
		        }
		        if (other !== undefined) {
		          if (result === undefined) {
		            return other;
		          }
		          if (typeof value == 'string' || typeof other == 'string') {
		            value = baseToString(value);
		            other = baseToString(other);
		          } else {
		            value = baseToNumber(value);
		            other = baseToNumber(other);
		          }
		          result = operator(value, other);
		        }
		        return result;
		      };
		    }
	
		    /**
		     * Creates a function like `_.over`.
		     *
		     * @private
		     * @param {Function} arrayFunc The function to iterate over iteratees.
		     * @returns {Function} Returns the new over function.
		     */
		    function createOver(arrayFunc) {
		      return flatRest(function(iteratees) {
		        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
		        return baseRest(function(args) {
		          var thisArg = this;
		          return arrayFunc(iteratees, function(iteratee) {
		            return apply(iteratee, thisArg, args);
		          });
		        });
		      });
		    }
	
		    /**
		     * Creates the padding for `string` based on `length`. The `chars` string
		     * is truncated if the number of characters exceeds `length`.
		     *
		     * @private
		     * @param {number} length The padding length.
		     * @param {string} [chars=' '] The string used as padding.
		     * @returns {string} Returns the padding for `string`.
		     */
		    function createPadding(length, chars) {
		      chars = chars === undefined ? ' ' : baseToString(chars);
	
		      var charsLength = chars.length;
		      if (charsLength < 2) {
		        return charsLength ? baseRepeat(chars, length) : chars;
		      }
		      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
		      return hasUnicode(chars)
		        ? castSlice(stringToArray(result), 0, length).join('')
		        : result.slice(0, length);
		    }
	
		    /**
		     * Creates a function that wraps `func` to invoke it with the `this` binding
		     * of `thisArg` and `partials` prepended to the arguments it receives.
		     *
		     * @private
		     * @param {Function} func The function to wrap.
		     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
		     * @param {*} thisArg The `this` binding of `func`.
		     * @param {Array} partials The arguments to prepend to those provided to
		     *  the new function.
		     * @returns {Function} Returns the new wrapped function.
		     */
		    function createPartial(func, bitmask, thisArg, partials) {
		      var isBind = bitmask & WRAP_BIND_FLAG,
		          Ctor = createCtor(func);
	
		      function wrapper() {
		        var argsIndex = -1,
		            argsLength = arguments.length,
		            leftIndex = -1,
		            leftLength = partials.length,
		            args = Array(leftLength + argsLength),
		            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
	
		        while (++leftIndex < leftLength) {
		          args[leftIndex] = partials[leftIndex];
		        }
		        while (argsLength--) {
		          args[leftIndex++] = arguments[++argsIndex];
		        }
		        return apply(fn, isBind ? thisArg : this, args);
		      }
		      return wrapper;
		    }
	
		    /**
		     * Creates a `_.range` or `_.rangeRight` function.
		     *
		     * @private
		     * @param {boolean} [fromRight] Specify iterating from right to left.
		     * @returns {Function} Returns the new range function.
		     */
		    function createRange(fromRight) {
		      return function(start, end, step) {
		        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
		          end = step = undefined;
		        }
		        // Ensure the sign of `-0` is preserved.
		        start = toFinite(start);
		        if (end === undefined) {
		          end = start;
		          start = 0;
		        } else {
		          end = toFinite(end);
		        }
		        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);
		        return baseRange(start, end, step, fromRight);
		      };
		    }
	
		    /**
		     * Creates a function that performs a relational operation on two values.
		     *
		     * @private
		     * @param {Function} operator The function to perform the operation.
		     * @returns {Function} Returns the new relational operation function.
		     */
		    function createRelationalOperation(operator) {
		      return function(value, other) {
		        if (!(typeof value == 'string' && typeof other == 'string')) {
		          value = toNumber(value);
		          other = toNumber(other);
		        }
		        return operator(value, other);
		      };
		    }
	
		    /**
		     * Creates a function that wraps `func` to continue currying.
		     *
		     * @private
		     * @param {Function} func The function to wrap.
		     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
		     * @param {Function} wrapFunc The function to create the `func` wrapper.
		     * @param {*} placeholder The placeholder value.
		     * @param {*} [thisArg] The `this` binding of `func`.
		     * @param {Array} [partials] The arguments to prepend to those provided to
		     *  the new function.
		     * @param {Array} [holders] The `partials` placeholder indexes.
		     * @param {Array} [argPos] The argument positions of the new function.
		     * @param {number} [ary] The arity cap of `func`.
		     * @param {number} [arity] The arity of `func`.
		     * @returns {Function} Returns the new wrapped function.
		     */
		    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
		      var isCurry = bitmask & WRAP_CURRY_FLAG,
		          newHolders = isCurry ? holders : undefined,
		          newHoldersRight = isCurry ? undefined : holders,
		          newPartials = isCurry ? partials : undefined,
		          newPartialsRight = isCurry ? undefined : partials;
	
		      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);
		      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);
	
		      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
		        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
		      }
		      var newData = [
		        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
		        newHoldersRight, argPos, ary, arity
		      ];
	
		      var result = wrapFunc.apply(undefined, newData);
		      if (isLaziable(func)) {
		        setData(result, newData);
		      }
		      result.placeholder = placeholder;
		      return setWrapToString(result, func, bitmask);
		    }
	
		    /**
		     * Creates a function like `_.round`.
		     *
		     * @private
		     * @param {string} methodName The name of the `Math` method to use when rounding.
		     * @returns {Function} Returns the new round function.
		     */
		    function createRound(methodName) {
		      var func = Math[methodName];
		      return function(number, precision) {
		        number = toNumber(number);
		        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);
		        if (precision) {
		          // Shift with exponential notation to avoid floating-point issues.
		          // See [MDN](https://mdn.io/round#Examples) for more details.
		          var pair = (toString(number) + 'e').split('e'),
		              value = func(pair[0] + 'e' + (+pair[1] + precision));
	
		          pair = (toString(value) + 'e').split('e');
		          return +(pair[0] + 'e' + (+pair[1] - precision));
		        }
		        return func(number);
		      };
		    }
	
		    /**
		     * Creates a set object of `values`.
		     *
		     * @private
		     * @param {Array} values The values to add to the set.
		     * @returns {Object} Returns the new set.
		     */
		    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
		      return new Set(values);
		    };
	
		    /**
		     * Creates a `_.toPairs` or `_.toPairsIn` function.
		     *
		     * @private
		     * @param {Function} keysFunc The function to get the keys of a given object.
		     * @returns {Function} Returns the new pairs function.
		     */
		    function createToPairs(keysFunc) {
		      return function(object) {
		        var tag = getTag(object);
		        if (tag == mapTag) {
		          return mapToArray(object);
		        }
		        if (tag == setTag) {
		          return setToPairs(object);
		        }
		        return baseToPairs(object, keysFunc(object));
		      };
		    }
	
		    /**
		     * Creates a function that either curries or invokes `func` with optional
		     * `this` binding and partially applied arguments.
		     *
		     * @private
		     * @param {Function|string} func The function or method name to wrap.
		     * @param {number} bitmask The bitmask flags.
		     *    1 - `_.bind`
		     *    2 - `_.bindKey`
		     *    4 - `_.curry` or `_.curryRight` of a bound function
		     *    8 - `_.curry`
		     *   16 - `_.curryRight`
		     *   32 - `_.partial`
		     *   64 - `_.partialRight`
		     *  128 - `_.rearg`
		     *  256 - `_.ary`
		     *  512 - `_.flip`
		     * @param {*} [thisArg] The `this` binding of `func`.
		     * @param {Array} [partials] The arguments to be partially applied.
		     * @param {Array} [holders] The `partials` placeholder indexes.
		     * @param {Array} [argPos] The argument positions of the new function.
		     * @param {number} [ary] The arity cap of `func`.
		     * @param {number} [arity] The arity of `func`.
		     * @returns {Function} Returns the new wrapped function.
		     */
		    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
		      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
		      if (!isBindKey && typeof func != 'function') {
		        throw new TypeError(FUNC_ERROR_TEXT);
		      }
		      var length = partials ? partials.length : 0;
		      if (!length) {
		        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
		        partials = holders = undefined;
		      }
		      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
		      arity = arity === undefined ? arity : toInteger(arity);
		      length -= holders ? holders.length : 0;
	
		      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
		        var partialsRight = partials,
		            holdersRight = holders;
	
		        partials = holders = undefined;
		      }
		      var data = isBindKey ? undefined : getData(func);
	
		      var newData = [
		        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
		        argPos, ary, arity
		      ];
	
		      if (data) {
		        mergeData(newData, data);
		      }
		      func = newData[0];
		      bitmask = newData[1];
		      thisArg = newData[2];
		      partials = newData[3];
		      holders = newData[4];
		      arity = newData[9] = newData[9] === undefined
		        ? (isBindKey ? 0 : func.length)
		        : nativeMax(newData[9] - length, 0);
	
		      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
		        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
		      }
		      if (!bitmask || bitmask == WRAP_BIND_FLAG) {
		        var result = createBind(func, bitmask, thisArg);
		      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
		        result = createCurry(func, bitmask, arity);
		      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
		        result = createPartial(func, bitmask, thisArg, partials);
		      } else {
		        result = createHybrid.apply(undefined, newData);
		      }
		      var setter = data ? baseSetData : setData;
		      return setWrapToString(setter(result, newData), func, bitmask);
		    }
	
		    /**
		     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties
		     * of source objects to the destination object for all destination properties
		     * that resolve to `undefined`.
		     *
		     * @private
		     * @param {*} objValue The destination value.
		     * @param {*} srcValue The source value.
		     * @param {string} key The key of the property to assign.
		     * @param {Object} object The parent object of `objValue`.
		     * @returns {*} Returns the value to assign.
		     */
		    function customDefaultsAssignIn(objValue, srcValue, key, object) {
		      if (objValue === undefined ||
		          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {
		        return srcValue;
		      }
		      return objValue;
		    }
	
		    /**
		     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source
		     * objects into destination objects that are passed thru.
		     *
		     * @private
		     * @param {*} objValue The destination value.
		     * @param {*} srcValue The source value.
		     * @param {string} key The key of the property to merge.
		     * @param {Object} object The parent object of `objValue`.
		     * @param {Object} source The parent object of `srcValue`.
		     * @param {Object} [stack] Tracks traversed source values and their merged
		     *  counterparts.
		     * @returns {*} Returns the value to assign.
		     */
		    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
		      if (isObject(objValue) && isObject(srcValue)) {
		        // Recursively merge objects and arrays (susceptible to call stack limits).
		        stack.set(srcValue, objValue);
		        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);
		        stack['delete'](srcValue);
		      }
		      return objValue;
		    }
	
		    /**
		     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
		     * objects.
		     *
		     * @private
		     * @param {*} value The value to inspect.
		     * @param {string} key The key of the property to inspect.
		     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
		     */
		    function customOmitClone(value) {
		      return isPlainObject(value) ? undefined : value;
		    }
	
		    /**
		     * A specialized version of `baseIsEqualDeep` for arrays with support for
		     * partial deep comparisons.
		     *
		     * @private
		     * @param {Array} array The array to compare.
		     * @param {Array} other The other array to compare.
		     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
		     * @param {Function} customizer The function to customize comparisons.
		     * @param {Function} equalFunc The function to determine equivalents of values.
		     * @param {Object} stack Tracks traversed `array` and `other` objects.
		     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
		     */
		    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
		      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
		          arrLength = array.length,
		          othLength = other.length;
	
		      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
		        return false;
		      }
		      // Assume cyclic values are equal.
		      var stacked = stack.get(array);
		      if (stacked && stack.get(other)) {
		        return stacked == other;
		      }
		      var index = -1,
		          result = true,
		          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;
	
		      stack.set(array, other);
		      stack.set(other, array);
	
		      // Ignore non-index properties.
		      while (++index < arrLength) {
		        var arrValue = array[index],
		            othValue = other[index];
	
		        if (customizer) {
		          var compared = isPartial
		            ? customizer(othValue, arrValue, index, other, array, stack)
		            : customizer(arrValue, othValue, index, array, other, stack);
		        }
		        if (compared !== undefined) {
		          if (compared) {
		            continue;
		          }
		          result = false;
		          break;
		        }
		        // Recursively compare arrays (susceptible to call stack limits).
		        if (seen) {
		          if (!arraySome(other, function(othValue, othIndex) {
		                if (!cacheHas(seen, othIndex) &&
		                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
		                  return seen.push(othIndex);
		                }
		              })) {
		            result = false;
		            break;
		          }
		        } else if (!(
		              arrValue === othValue ||
		                equalFunc(arrValue, othValue, bitmask, customizer, stack)
		            )) {
		          result = false;
		          break;
		        }
		      }
		      stack['delete'](array);
		      stack['delete'](other);
		      return result;
		    }
	
		    /**
		     * A specialized version of `baseIsEqualDeep` for comparing objects of
		     * the same `toStringTag`.
		     *
		     * **Note:** This function only supports comparing values with tags of
		     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
		     *
		     * @private
		     * @param {Object} object The object to compare.
		     * @param {Object} other The other object to compare.
		     * @param {string} tag The `toStringTag` of the objects to compare.
		     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
		     * @param {Function} customizer The function to customize comparisons.
		     * @param {Function} equalFunc The function to determine equivalents of values.
		     * @param {Object} stack Tracks traversed `object` and `other` objects.
		     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
		     */
		    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
		      switch (tag) {
		        case dataViewTag:
		          if ((object.byteLength != other.byteLength) ||
		              (object.byteOffset != other.byteOffset)) {
		            return false;
		          }
		          object = object.buffer;
		          other = other.buffer;
	
		        case arrayBufferTag:
		          if ((object.byteLength != other.byteLength) ||
		              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
		            return false;
		          }
		          return true;
	
		        case boolTag:
		        case dateTag:
		        case numberTag:
		          // Coerce booleans to `1` or `0` and dates to milliseconds.
		          // Invalid dates are coerced to `NaN`.
		          return eq(+object, +other);
	
		        case errorTag:
		          return object.name == other.name && object.message == other.message;
	
		        case regexpTag:
		        case stringTag:
		          // Coerce regexes to strings and treat strings, primitives and objects,
		          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
		          // for more details.
		          return object == (other + '');
	
		        case mapTag:
		          var convert = mapToArray;
	
		        case setTag:
		          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
		          convert || (convert = setToArray);
	
		          if (object.size != other.size && !isPartial) {
		            return false;
		          }
		          // Assume cyclic values are equal.
		          var stacked = stack.get(object);
		          if (stacked) {
		            return stacked == other;
		          }
		          bitmask |= COMPARE_UNORDERED_FLAG;
	
		          // Recursively compare objects (susceptible to call stack limits).
		          stack.set(object, other);
		          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
		          stack['delete'](object);
		          return result;
	
		        case symbolTag:
		          if (symbolValueOf) {
		            return symbolValueOf.call(object) == symbolValueOf.call(other);
		          }
		      }
		      return false;
		    }
	
		    /**
		     * A specialized version of `baseIsEqualDeep` for objects with support for
		     * partial deep comparisons.
		     *
		     * @private
		     * @param {Object} object The object to compare.
		     * @param {Object} other The other object to compare.
		     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
		     * @param {Function} customizer The function to customize comparisons.
		     * @param {Function} equalFunc The function to determine equivalents of values.
		     * @param {Object} stack Tracks traversed `object` and `other` objects.
		     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
		     */
		    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
		      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
		          objProps = getAllKeys(object),
		          objLength = objProps.length,
		          othProps = getAllKeys(other),
		          othLength = othProps.length;
	
		      if (objLength != othLength && !isPartial) {
		        return false;
		      }
		      var index = objLength;
		      while (index--) {
		        var key = objProps[index];
		        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
		          return false;
		        }
		      }
		      // Assume cyclic values are equal.
		      var stacked = stack.get(object);
		      if (stacked && stack.get(other)) {
		        return stacked == other;
		      }
		      var result = true;
		      stack.set(object, other);
		      stack.set(other, object);
	
		      var skipCtor = isPartial;
		      while (++index < objLength) {
		        key = objProps[index];
		        var objValue = object[key],
		            othValue = other[key];
	
		        if (customizer) {
		          var compared = isPartial
		            ? customizer(othValue, objValue, key, other, object, stack)
		            : customizer(objValue, othValue, key, object, other, stack);
		        }
		        // Recursively compare objects (susceptible to call stack limits).
		        if (!(compared === undefined
		              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
		              : compared
		            )) {
		          result = false;
		          break;
		        }
		        skipCtor || (skipCtor = key == 'constructor');
		      }
		      if (result && !skipCtor) {
		        var objCtor = object.constructor,
		            othCtor = other.constructor;
	
		        // Non `Object` object instances with different constructors are not equal.
		        if (objCtor != othCtor &&
		            ('constructor' in object && 'constructor' in other) &&
		            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
		              typeof othCtor == 'function' && othCtor instanceof othCtor)) {
		          result = false;
		        }
		      }
		      stack['delete'](object);
		      stack['delete'](other);
		      return result;
		    }
	
		    /**
		     * A specialized version of `baseRest` which flattens the rest array.
		     *
		     * @private
		     * @param {Function} func The function to apply a rest parameter to.
		     * @returns {Function} Returns the new function.
		     */
		    function flatRest(func) {
		      return setToString(overRest(func, undefined, flatten), func + '');
		    }
	
		    /**
		     * Creates an array of own enumerable property names and symbols of `object`.
		     *
		     * @private
		     * @param {Object} object The object to query.
		     * @returns {Array} Returns the array of property names and symbols.
		     */
		    function getAllKeys(object) {
		      return baseGetAllKeys(object, keys, getSymbols);
		    }
	
		    /**
		     * Creates an array of own and inherited enumerable property names and
		     * symbols of `object`.
		     *
		     * @private
		     * @param {Object} object The object to query.
		     * @returns {Array} Returns the array of property names and symbols.
		     */
		    function getAllKeysIn(object) {
		      return baseGetAllKeys(object, keysIn, getSymbolsIn);
		    }
	
		    /**
		     * Gets metadata for `func`.
		     *
		     * @private
		     * @param {Function} func The function to query.
		     * @returns {*} Returns the metadata for `func`.
		     */
		    var getData = !metaMap ? noop : function(func) {
		      return metaMap.get(func);
		    };
	
		    /**
		     * Gets the name of `func`.
		     *
		     * @private
		     * @param {Function} func The function to query.
		     * @returns {string} Returns the function name.
		     */
		    function getFuncName(func) {
		      var result = (func.name + ''),
		          array = realNames[result],
		          length = hasOwnProperty.call(realNames, result) ? array.length : 0;
	
		      while (length--) {
		        var data = array[length],
		            otherFunc = data.func;
		        if (otherFunc == null || otherFunc == func) {
		          return data.name;
		        }
		      }
		      return result;
		    }
	
		    /**
		     * Gets the argument placeholder value for `func`.
		     *
		     * @private
		     * @param {Function} func The function to inspect.
		     * @returns {*} Returns the placeholder value.
		     */
		    function getHolder(func) {
		      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;
		      return object.placeholder;
		    }
	
		    /**
		     * Gets the appropriate "iteratee" function. If `_.iteratee` is customized,
		     * this function returns the custom method, otherwise it returns `baseIteratee`.
		     * If arguments are provided, the chosen function is invoked with them and
		     * its result is returned.
		     *
		     * @private
		     * @param {*} [value] The value to convert to an iteratee.
		     * @param {number} [arity] The arity of the created iteratee.
		     * @returns {Function} Returns the chosen function or its result.
		     */
		    function getIteratee() {
		      var result = lodash.iteratee || iteratee;
		      result = result === iteratee ? baseIteratee : result;
		      return arguments.length ? result(arguments[0], arguments[1]) : result;
		    }
	
		    /**
		     * Gets the data for `map`.
		     *
		     * @private
		     * @param {Object} map The map to query.
		     * @param {string} key The reference key.
		     * @returns {*} Returns the map data.
		     */
		    function getMapData(map, key) {
		      var data = map.__data__;
		      return isKeyable(key)
		        ? data[typeof key == 'string' ? 'string' : 'hash']
		        : data.map;
		    }
	
		    /**
		     * Gets the property names, values, and compare flags of `object`.
		     *
		     * @private
		     * @param {Object} object The object to query.
		     * @returns {Array} Returns the match data of `object`.
		     */
		    function getMatchData(object) {
		      var result = keys(object),
		          length = result.length;
	
		      while (length--) {
		        var key = result[length],
		            value = object[key];
	
		        result[length] = [key, value, isStrictComparable(value)];
		      }
		      return result;
		    }
	
		    /**
		     * Gets the native function at `key` of `object`.
		     *
		     * @private
		     * @param {Object} object The object to query.
		     * @param {string} key The key of the method to get.
		     * @returns {*} Returns the function if it's native, else `undefined`.
		     */
		    function getNative(object, key) {
		      var value = getValue(object, key);
		      return baseIsNative(value) ? value : undefined;
		    }
	
		    /**
		     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
		     *
		     * @private
		     * @param {*} value The value to query.
		     * @returns {string} Returns the raw `toStringTag`.
		     */
		    function getRawTag(value) {
		      var isOwn = hasOwnProperty.call(value, symToStringTag),
		          tag = value[symToStringTag];
	
		      try {
		        value[symToStringTag] = undefined;
		        var unmasked = true;
		      } catch (e) {}
	
		      var result = nativeObjectToString.call(value);
		      if (unmasked) {
		        if (isOwn) {
		          value[symToStringTag] = tag;
		        } else {
		          delete value[symToStringTag];
		        }
		      }
		      return result;
		    }
	
		    /**
		     * Creates an array of the own enumerable symbols of `object`.
		     *
		     * @private
		     * @param {Object} object The object to query.
		     * @returns {Array} Returns the array of symbols.
		     */
		    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
		      if (object == null) {
		        return [];
		      }
		      object = Object(object);
		      return arrayFilter(nativeGetSymbols(object), function(symbol) {
		        return propertyIsEnumerable.call(object, symbol);
		      });
		    };
	
		    /**
		     * Creates an array of the own and inherited enumerable symbols of `object`.
		     *
		     * @private
		     * @param {Object} object The object to query.
		     * @returns {Array} Returns the array of symbols.
		     */
		    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
		      var result = [];
		      while (object) {
		        arrayPush(result, getSymbols(object));
		        object = getPrototype(object);
		      }
		      return result;
		    };
	
		    /**
		     * Gets the `toStringTag` of `value`.
		     *
		     * @private
		     * @param {*} value The value to query.
		     * @returns {string} Returns the `toStringTag`.
		     */
		    var getTag = baseGetTag;
	
		    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
		    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
		        (Map && getTag(new Map) != mapTag) ||
		        (Promise && getTag(Promise.resolve()) != promiseTag) ||
		        (Set && getTag(new Set) != setTag) ||
		        (WeakMap && getTag(new WeakMap) != weakMapTag)) {
		      getTag = function(value) {
		        var result = baseGetTag(value),
		            Ctor = result == objectTag ? value.constructor : undefined,
		            ctorString = Ctor ? toSource(Ctor) : '';
	
		        if (ctorString) {
		          switch (ctorString) {
		            case dataViewCtorString: return dataViewTag;
		            case mapCtorString: return mapTag;
		            case promiseCtorString: return promiseTag;
		            case setCtorString: return setTag;
		            case weakMapCtorString: return weakMapTag;
		          }
		        }
		        return result;
		      };
		    }
	
		    /**
		     * Gets the view, applying any `transforms` to the `start` and `end` positions.
		     *
		     * @private
		     * @param {number} start The start of the view.
		     * @param {number} end The end of the view.
		     * @param {Array} transforms The transformations to apply to the view.
		     * @returns {Object} Returns an object containing the `start` and `end`
		     *  positions of the view.
		     */
		    function getView(start, end, transforms) {
		      var index = -1,
		          length = transforms.length;
	
		      while (++index < length) {
		        var data = transforms[index],
		            size = data.size;
	
		        switch (data.type) {
		          case 'drop':      start += size; break;
		          case 'dropRight': end -= size; break;
		          case 'take':      end = nativeMin(end, start + size); break;
		          case 'takeRight': start = nativeMax(start, end - size); break;
		        }
		      }
		      return { 'start': start, 'end': end };
		    }
	
		    /**
		     * Extracts wrapper details from the `source` body comment.
		     *
		     * @private
		     * @param {string} source The source to inspect.
		     * @returns {Array} Returns the wrapper details.
		     */
		    function getWrapDetails(source) {
		      var match = source.match(reWrapDetails);
		      return match ? match[1].split(reSplitDetails) : [];
		    }
	
		    /**
		     * Checks if `path` exists on `object`.
		     *
		     * @private
		     * @param {Object} object The object to query.
		     * @param {Array|string} path The path to check.
		     * @param {Function} hasFunc The function to check properties.
		     * @returns {boolean} Returns `true` if `path` exists, else `false`.
		     */
		    function hasPath(object, path, hasFunc) {
		      path = castPath(path, object);
	
		      var index = -1,
		          length = path.length,
		          result = false;
	
		      while (++index < length) {
		        var key = toKey(path[index]);
		        if (!(result = object != null && hasFunc(object, key))) {
		          break;
		        }
		        object = object[key];
		      }
		      if (result || ++index != length) {
		        return result;
		      }
		      length = object == null ? 0 : object.length;
		      return !!length && isLength(length) && isIndex(key, length) &&
		        (isArray(object) || isArguments(object));
		    }
	
		    /**
		     * Initializes an array clone.
		     *
		     * @private
		     * @param {Array} array The array to clone.
		     * @returns {Array} Returns the initialized clone.
		     */
		    function initCloneArray(array) {
		      var length = array.length,
		          result = array.constructor(length);
	
		      // Add properties assigned by `RegExp#exec`.
		      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
		        result.index = array.index;
		        result.input = array.input;
		      }
		      return result;
		    }
	
		    /**
		     * Initializes an object clone.
		     *
		     * @private
		     * @param {Object} object The object to clone.
		     * @returns {Object} Returns the initialized clone.
		     */
		    function initCloneObject(object) {
		      return (typeof object.constructor == 'function' && !isPrototype(object))
		        ? baseCreate(getPrototype(object))
		        : {};
		    }
	
		    /**
		     * Initializes an object clone based on its `toStringTag`.
		     *
		     * **Note:** This function only supports cloning values with tags of
		     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
		     *
		     * @private
		     * @param {Object} object The object to clone.
		     * @param {string} tag The `toStringTag` of the object to clone.
		     * @param {Function} cloneFunc The function to clone values.
		     * @param {boolean} [isDeep] Specify a deep clone.
		     * @returns {Object} Returns the initialized clone.
		     */
		    function initCloneByTag(object, tag, cloneFunc, isDeep) {
		      var Ctor = object.constructor;
		      switch (tag) {
		        case arrayBufferTag:
		          return cloneArrayBuffer(object);
	
		        case boolTag:
		        case dateTag:
		          return new Ctor(+object);
	
		        case dataViewTag:
		          return cloneDataView(object, isDeep);
	
		        case float32Tag: case float64Tag:
		        case int8Tag: case int16Tag: case int32Tag:
		        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
		          return cloneTypedArray(object, isDeep);
	
		        case mapTag:
		          return cloneMap(object, isDeep, cloneFunc);
	
		        case numberTag:
		        case stringTag:
		          return new Ctor(object);
	
		        case regexpTag:
		          return cloneRegExp(object);
	
		        case setTag:
		          return cloneSet(object, isDeep, cloneFunc);
	
		        case symbolTag:
		          return cloneSymbol(object);
		      }
		    }
	
		    /**
		     * Inserts wrapper `details` in a comment at the top of the `source` body.
		     *
		     * @private
		     * @param {string} source The source to modify.
		     * @returns {Array} details The details to insert.
		     * @returns {string} Returns the modified source.
		     */
		    function insertWrapDetails(source, details) {
		      var length = details.length;
		      if (!length) {
		        return source;
		      }
		      var lastIndex = length - 1;
		      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
		      details = details.join(length > 2 ? ', ' : ' ');
		      return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
		    }
	
		    /**
		     * Checks if `value` is a flattenable `arguments` object or array.
		     *
		     * @private
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
		     */
		    function isFlattenable(value) {
		      return isArray(value) || isArguments(value) ||
		        !!(spreadableSymbol && value && value[spreadableSymbol]);
		    }
	
		    /**
		     * Checks if `value` is a valid array-like index.
		     *
		     * @private
		     * @param {*} value The value to check.
		     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
		     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
		     */
		    function isIndex(value, length) {
		      length = length == null ? MAX_SAFE_INTEGER : length;
		      return !!length &&
		        (typeof value == 'number' || reIsUint.test(value)) &&
		        (value > -1 && value % 1 == 0 && value < length);
		    }
	
		    /**
		     * Checks if the given arguments are from an iteratee call.
		     *
		     * @private
		     * @param {*} value The potential iteratee value argument.
		     * @param {*} index The potential iteratee index or key argument.
		     * @param {*} object The potential iteratee object argument.
		     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
		     *  else `false`.
		     */
		    function isIterateeCall(value, index, object) {
		      if (!isObject(object)) {
		        return false;
		      }
		      var type = typeof index;
		      if (type == 'number'
		            ? (isArrayLike(object) && isIndex(index, object.length))
		            : (type == 'string' && index in object)
		          ) {
		        return eq(object[index], value);
		      }
		      return false;
		    }
	
		    /**
		     * Checks if `value` is a property name and not a property path.
		     *
		     * @private
		     * @param {*} value The value to check.
		     * @param {Object} [object] The object to query keys on.
		     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
		     */
		    function isKey(value, object) {
		      if (isArray(value)) {
		        return false;
		      }
		      var type = typeof value;
		      if (type == 'number' || type == 'symbol' || type == 'boolean' ||
		          value == null || isSymbol(value)) {
		        return true;
		      }
		      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
		        (object != null && value in Object(object));
		    }
	
		    /**
		     * Checks if `value` is suitable for use as unique object key.
		     *
		     * @private
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
		     */
		    function isKeyable(value) {
		      var type = typeof value;
		      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
		        ? (value !== '__proto__')
		        : (value === null);
		    }
	
		    /**
		     * Checks if `func` has a lazy counterpart.
		     *
		     * @private
		     * @param {Function} func The function to check.
		     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
		     *  else `false`.
		     */
		    function isLaziable(func) {
		      var funcName = getFuncName(func),
		          other = lodash[funcName];
	
		      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
		        return false;
		      }
		      if (func === other) {
		        return true;
		      }
		      var data = getData(other);
		      return !!data && func === data[0];
		    }
	
		    /**
		     * Checks if `func` has its source masked.
		     *
		     * @private
		     * @param {Function} func The function to check.
		     * @returns {boolean} Returns `true` if `func` is masked, else `false`.
		     */
		    function isMasked(func) {
		      return !!maskSrcKey && (maskSrcKey in func);
		    }
	
		    /**
		     * Checks if `func` is capable of being masked.
		     *
		     * @private
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.
		     */
		    var isMaskable = coreJsData ? isFunction : stubFalse;
	
		    /**
		     * Checks if `value` is likely a prototype object.
		     *
		     * @private
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
		     */
		    function isPrototype(value) {
		      var Ctor = value && value.constructor,
		          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;
	
		      return value === proto;
		    }
	
		    /**
		     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
		     *
		     * @private
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` if suitable for strict
		     *  equality comparisons, else `false`.
		     */
		    function isStrictComparable(value) {
		      return value === value && !isObject(value);
		    }
	
		    /**
		     * A specialized version of `matchesProperty` for source values suitable
		     * for strict equality comparisons, i.e. `===`.
		     *
		     * @private
		     * @param {string} key The key of the property to get.
		     * @param {*} srcValue The value to match.
		     * @returns {Function} Returns the new spec function.
		     */
		    function matchesStrictComparable(key, srcValue) {
		      return function(object) {
		        if (object == null) {
		          return false;
		        }
		        return object[key] === srcValue &&
		          (srcValue !== undefined || (key in Object(object)));
		      };
		    }
	
		    /**
		     * A specialized version of `_.memoize` which clears the memoized function's
		     * cache when it exceeds `MAX_MEMOIZE_SIZE`.
		     *
		     * @private
		     * @param {Function} func The function to have its output memoized.
		     * @returns {Function} Returns the new memoized function.
		     */
		    function memoizeCapped(func) {
		      var result = memoize(func, function(key) {
		        if (cache.size === MAX_MEMOIZE_SIZE) {
		          cache.clear();
		        }
		        return key;
		      });
	
		      var cache = result.cache;
		      return result;
		    }
	
		    /**
		     * Merges the function metadata of `source` into `data`.
		     *
		     * Merging metadata reduces the number of wrappers used to invoke a function.
		     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
		     * may be applied regardless of execution order. Methods like `_.ary` and
		     * `_.rearg` modify function arguments, making the order in which they are
		     * executed important, preventing the merging of metadata. However, we make
		     * an exception for a safe combined case where curried functions have `_.ary`
		     * and or `_.rearg` applied.
		     *
		     * @private
		     * @param {Array} data The destination metadata.
		     * @param {Array} source The source metadata.
		     * @returns {Array} Returns `data`.
		     */
		    function mergeData(data, source) {
		      var bitmask = data[1],
		          srcBitmask = source[1],
		          newBitmask = bitmask | srcBitmask,
		          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);
	
		      var isCombo =
		        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||
		        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||
		        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));
	
		      // Exit early if metadata can't be merged.
		      if (!(isCommon || isCombo)) {
		        return data;
		      }
		      // Use source `thisArg` if available.
		      if (srcBitmask & WRAP_BIND_FLAG) {
		        data[2] = source[2];
		        // Set when currying a bound function.
		        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
		      }
		      // Compose partial arguments.
		      var value = source[3];
		      if (value) {
		        var partials = data[3];
		        data[3] = partials ? composeArgs(partials, value, source[4]) : value;
		        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
		      }
		      // Compose partial right arguments.
		      value = source[5];
		      if (value) {
		        partials = data[5];
		        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
		        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
		      }
		      // Use source `argPos` if available.
		      value = source[7];
		      if (value) {
		        data[7] = value;
		      }
		      // Use source `ary` if it's smaller.
		      if (srcBitmask & WRAP_ARY_FLAG) {
		        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
		      }
		      // Use source `arity` if one is not provided.
		      if (data[9] == null) {
		        data[9] = source[9];
		      }
		      // Use source `func` and merge bitmasks.
		      data[0] = source[0];
		      data[1] = newBitmask;
	
		      return data;
		    }
	
		    /**
		     * This function is like
		     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
		     * except that it includes inherited enumerable properties.
		     *
		     * @private
		     * @param {Object} object The object to query.
		     * @returns {Array} Returns the array of property names.
		     */
		    function nativeKeysIn(object) {
		      var result = [];
		      if (object != null) {
		        for (var key in Object(object)) {
		          result.push(key);
		        }
		      }
		      return result;
		    }
	
		    /**
		     * Converts `value` to a string using `Object.prototype.toString`.
		     *
		     * @private
		     * @param {*} value The value to convert.
		     * @returns {string} Returns the converted string.
		     */
		    function objectToString(value) {
		      return nativeObjectToString.call(value);
		    }
	
		    /**
		     * A specialized version of `baseRest` which transforms the rest array.
		     *
		     * @private
		     * @param {Function} func The function to apply a rest parameter to.
		     * @param {number} [start=func.length-1] The start position of the rest parameter.
		     * @param {Function} transform The rest array transform.
		     * @returns {Function} Returns the new function.
		     */
		    function overRest(func, start, transform) {
		      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
		      return function() {
		        var args = arguments,
		            index = -1,
		            length = nativeMax(args.length - start, 0),
		            array = Array(length);
	
		        while (++index < length) {
		          array[index] = args[start + index];
		        }
		        index = -1;
		        var otherArgs = Array(start + 1);
		        while (++index < start) {
		          otherArgs[index] = args[index];
		        }
		        otherArgs[start] = transform(array);
		        return apply(func, this, otherArgs);
		      };
		    }
	
		    /**
		     * Gets the parent value at `path` of `object`.
		     *
		     * @private
		     * @param {Object} object The object to query.
		     * @param {Array} path The path to get the parent value of.
		     * @returns {*} Returns the parent value.
		     */
		    function parent(object, path) {
		      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
		    }
	
		    /**
		     * Reorder `array` according to the specified indexes where the element at
		     * the first index is assigned as the first element, the element at
		     * the second index is assigned as the second element, and so on.
		     *
		     * @private
		     * @param {Array} array The array to reorder.
		     * @param {Array} indexes The arranged array indexes.
		     * @returns {Array} Returns `array`.
		     */
		    function reorder(array, indexes) {
		      var arrLength = array.length,
		          length = nativeMin(indexes.length, arrLength),
		          oldArray = copyArray(array);
	
		      while (length--) {
		        var index = indexes[length];
		        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
		      }
		      return array;
		    }
	
		    /**
		     * Sets metadata for `func`.
		     *
		     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
		     * period of time, it will trip its breaker and transition to an identity
		     * function to avoid garbage collection pauses in V8. See
		     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
		     * for more details.
		     *
		     * @private
		     * @param {Function} func The function to associate metadata with.
		     * @param {*} data The metadata.
		     * @returns {Function} Returns `func`.
		     */
		    var setData = shortOut(baseSetData);
	
		    /**
		     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).
		     *
		     * @private
		     * @param {Function} func The function to delay.
		     * @param {number} wait The number of milliseconds to delay invocation.
		     * @returns {number|Object} Returns the timer id or timeout object.
		     */
		    var setTimeout = ctxSetTimeout || function(func, wait) {
		      return root.setTimeout(func, wait);
		    };
	
		    /**
		     * Sets the `toString` method of `func` to return `string`.
		     *
		     * @private
		     * @param {Function} func The function to modify.
		     * @param {Function} string The `toString` result.
		     * @returns {Function} Returns `func`.
		     */
		    var setToString = shortOut(baseSetToString);
	
		    /**
		     * Sets the `toString` method of `wrapper` to mimic the source of `reference`
		     * with wrapper details in a comment at the top of the source body.
		     *
		     * @private
		     * @param {Function} wrapper The function to modify.
		     * @param {Function} reference The reference function.
		     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
		     * @returns {Function} Returns `wrapper`.
		     */
		    function setWrapToString(wrapper, reference, bitmask) {
		      var source = (reference + '');
		      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
		    }
	
		    /**
		     * Creates a function that'll short out and invoke `identity` instead
		     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
		     * milliseconds.
		     *
		     * @private
		     * @param {Function} func The function to restrict.
		     * @returns {Function} Returns the new shortable function.
		     */
		    function shortOut(func) {
		      var count = 0,
		          lastCalled = 0;
	
		      return function() {
		        var stamp = nativeNow(),
		            remaining = HOT_SPAN - (stamp - lastCalled);
	
		        lastCalled = stamp;
		        if (remaining > 0) {
		          if (++count >= HOT_COUNT) {
		            return arguments[0];
		          }
		        } else {
		          count = 0;
		        }
		        return func.apply(undefined, arguments);
		      };
		    }
	
		    /**
		     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.
		     *
		     * @private
		     * @param {Array} array The array to shuffle.
		     * @param {number} [size=array.length] The size of `array`.
		     * @returns {Array} Returns `array`.
		     */
		    function shuffleSelf(array, size) {
		      var index = -1,
		          length = array.length,
		          lastIndex = length - 1;
	
		      size = size === undefined ? length : size;
		      while (++index < size) {
		        var rand = baseRandom(index, lastIndex),
		            value = array[rand];
	
		        array[rand] = array[index];
		        array[index] = value;
		      }
		      array.length = size;
		      return array;
		    }
	
		    /**
		     * Converts `string` to a property path array.
		     *
		     * @private
		     * @param {string} string The string to convert.
		     * @returns {Array} Returns the property path array.
		     */
		    var stringToPath = memoizeCapped(function(string) {
		      var result = [];
		      if (reLeadingDot.test(string)) {
		        result.push('');
		      }
		      string.replace(rePropName, function(match, number, quote, string) {
		        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));
		      });
		      return result;
		    });
	
		    /**
		     * Converts `value` to a string key if it's not a string or symbol.
		     *
		     * @private
		     * @param {*} value The value to inspect.
		     * @returns {string|symbol} Returns the key.
		     */
		    function toKey(value) {
		      if (typeof value == 'string' || isSymbol(value)) {
		        return value;
		      }
		      var result = (value + '');
		      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
		    }
	
		    /**
		     * Converts `func` to its source code.
		     *
		     * @private
		     * @param {Function} func The function to convert.
		     * @returns {string} Returns the source code.
		     */
		    function toSource(func) {
		      if (func != null) {
		        try {
		          return funcToString.call(func);
		        } catch (e) {}
		        try {
		          return (func + '');
		        } catch (e) {}
		      }
		      return '';
		    }
	
		    /**
		     * Updates wrapper `details` based on `bitmask` flags.
		     *
		     * @private
		     * @returns {Array} details The details to modify.
		     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
		     * @returns {Array} Returns `details`.
		     */
		    function updateWrapDetails(details, bitmask) {
		      arrayEach(wrapFlags, function(pair) {
		        var value = '_.' + pair[0];
		        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {
		          details.push(value);
		        }
		      });
		      return details.sort();
		    }
	
		    /**
		     * Creates a clone of `wrapper`.
		     *
		     * @private
		     * @param {Object} wrapper The wrapper to clone.
		     * @returns {Object} Returns the cloned wrapper.
		     */
		    function wrapperClone(wrapper) {
		      if (wrapper instanceof LazyWrapper) {
		        return wrapper.clone();
		      }
		      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
		      result.__actions__ = copyArray(wrapper.__actions__);
		      result.__index__  = wrapper.__index__;
		      result.__values__ = wrapper.__values__;
		      return result;
		    }
	
		    /*------------------------------------------------------------------------*/
	
		    /**
		     * Creates an array of elements split into groups the length of `size`.
		     * If `array` can't be split evenly, the final chunk will be the remaining
		     * elements.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Array
		     * @param {Array} array The array to process.
		     * @param {number} [size=1] The length of each chunk
		     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		     * @returns {Array} Returns the new array of chunks.
		     * @example
		     *
		     * _.chunk(['a', 'b', 'c', 'd'], 2);
		     * // => [['a', 'b'], ['c', 'd']]
		     *
		     * _.chunk(['a', 'b', 'c', 'd'], 3);
		     * // => [['a', 'b', 'c'], ['d']]
		     */
		    function chunk(array, size, guard) {
		      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {
		        size = 1;
		      } else {
		        size = nativeMax(toInteger(size), 0);
		      }
		      var length = array == null ? 0 : array.length;
		      if (!length || size < 1) {
		        return [];
		      }
		      var index = 0,
		          resIndex = 0,
		          result = Array(nativeCeil(length / size));
	
		      while (index < length) {
		        result[resIndex++] = baseSlice(array, index, (index += size));
		      }
		      return result;
		    }
	
		    /**
		     * Creates an array with all falsey values removed. The values `false`, `null`,
		     * `0`, `""`, `undefined`, and `NaN` are falsey.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Array
		     * @param {Array} array The array to compact.
		     * @returns {Array} Returns the new array of filtered values.
		     * @example
		     *
		     * _.compact([0, 1, false, 2, '', 3]);
		     * // => [1, 2, 3]
		     */
		    function compact(array) {
		      var index = -1,
		          length = array == null ? 0 : array.length,
		          resIndex = 0,
		          result = [];
	
		      while (++index < length) {
		        var value = array[index];
		        if (value) {
		          result[resIndex++] = value;
		        }
		      }
		      return result;
		    }
	
		    /**
		     * Creates a new array concatenating `array` with any additional arrays
		     * and/or values.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Array
		     * @param {Array} array The array to concatenate.
		     * @param {...*} [values] The values to concatenate.
		     * @returns {Array} Returns the new concatenated array.
		     * @example
		     *
		     * var array = [1];
		     * var other = _.concat(array, 2, [3], [[4]]);
		     *
		     * console.log(other);
		     * // => [1, 2, 3, [4]]
		     *
		     * console.log(array);
		     * // => [1]
		     */
		    function concat() {
		      var length = arguments.length;
		      if (!length) {
		        return [];
		      }
		      var args = Array(length - 1),
		          array = arguments[0],
		          index = length;
	
		      while (index--) {
		        args[index - 1] = arguments[index];
		      }
		      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
		    }
	
		    /**
		     * Creates an array of `array` values not included in the other given arrays
		     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
		     * for equality comparisons. The order and references of result values are
		     * determined by the first array.
		     *
		     * **Note:** Unlike `_.pullAll`, this method returns a new array.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Array
		     * @param {Array} array The array to inspect.
		     * @param {...Array} [values] The values to exclude.
		     * @returns {Array} Returns the new array of filtered values.
		     * @see _.without, _.xor
		     * @example
		     *
		     * _.difference([2, 1], [2, 3]);
		     * // => [1]
		     */
		    var difference = baseRest(function(array, values) {
		      return isArrayLikeObject(array)
		        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))
		        : [];
		    });
	
		    /**
		     * This method is like `_.difference` except that it accepts `iteratee` which
		     * is invoked for each element of `array` and `values` to generate the criterion
		     * by which they're compared. The order and references of result values are
		     * determined by the first array. The iteratee is invoked with one argument:
		     * (value).
		     *
		     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Array
		     * @param {Array} array The array to inspect.
		     * @param {...Array} [values] The values to exclude.
		     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
		     * @returns {Array} Returns the new array of filtered values.
		     * @example
		     *
		     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);
		     * // => [1.2]
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
		     * // => [{ 'x': 2 }]
		     */
		    var differenceBy = baseRest(function(array, values) {
		      var iteratee = last(values);
		      if (isArrayLikeObject(iteratee)) {
		        iteratee = undefined;
		      }
		      return isArrayLikeObject(array)
		        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))
		        : [];
		    });
	
		    /**
		     * This method is like `_.difference` except that it accepts `comparator`
		     * which is invoked to compare elements of `array` to `values`. The order and
		     * references of result values are determined by the first array. The comparator
		     * is invoked with two arguments: (arrVal, othVal).
		     *
		     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Array
		     * @param {Array} array The array to inspect.
		     * @param {...Array} [values] The values to exclude.
		     * @param {Function} [comparator] The comparator invoked per element.
		     * @returns {Array} Returns the new array of filtered values.
		     * @example
		     *
		     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
		     *
		     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
		     * // => [{ 'x': 2, 'y': 1 }]
		     */
		    var differenceWith = baseRest(function(array, values) {
		      var comparator = last(values);
		      if (isArrayLikeObject(comparator)) {
		        comparator = undefined;
		      }
		      return isArrayLikeObject(array)
		        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)
		        : [];
		    });
	
		    /**
		     * Creates a slice of `array` with `n` elements dropped from the beginning.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.5.0
		     * @category Array
		     * @param {Array} array The array to query.
		     * @param {number} [n=1] The number of elements to drop.
		     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		     * @returns {Array} Returns the slice of `array`.
		     * @example
		     *
		     * _.drop([1, 2, 3]);
		     * // => [2, 3]
		     *
		     * _.drop([1, 2, 3], 2);
		     * // => [3]
		     *
		     * _.drop([1, 2, 3], 5);
		     * // => []
		     *
		     * _.drop([1, 2, 3], 0);
		     * // => [1, 2, 3]
		     */
		    function drop(array, n, guard) {
		      var length = array == null ? 0 : array.length;
		      if (!length) {
		        return [];
		      }
		      n = (guard || n === undefined) ? 1 : toInteger(n);
		      return baseSlice(array, n < 0 ? 0 : n, length);
		    }
	
		    /**
		     * Creates a slice of `array` with `n` elements dropped from the end.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Array
		     * @param {Array} array The array to query.
		     * @param {number} [n=1] The number of elements to drop.
		     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		     * @returns {Array} Returns the slice of `array`.
		     * @example
		     *
		     * _.dropRight([1, 2, 3]);
		     * // => [1, 2]
		     *
		     * _.dropRight([1, 2, 3], 2);
		     * // => [1]
		     *
		     * _.dropRight([1, 2, 3], 5);
		     * // => []
		     *
		     * _.dropRight([1, 2, 3], 0);
		     * // => [1, 2, 3]
		     */
		    function dropRight(array, n, guard) {
		      var length = array == null ? 0 : array.length;
		      if (!length) {
		        return [];
		      }
		      n = (guard || n === undefined) ? 1 : toInteger(n);
		      n = length - n;
		      return baseSlice(array, 0, n < 0 ? 0 : n);
		    }
	
		    /**
		     * Creates a slice of `array` excluding elements dropped from the end.
		     * Elements are dropped until `predicate` returns falsey. The predicate is
		     * invoked with three arguments: (value, index, array).
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Array
		     * @param {Array} array The array to query.
		     * @param {Function} [predicate=_.identity] The function invoked per iteration.
		     * @returns {Array} Returns the slice of `array`.
		     * @example
		     *
		     * var users = [
		     *   { 'user': 'barney',  'active': true },
		     *   { 'user': 'fred',    'active': false },
		     *   { 'user': 'pebbles', 'active': false }
		     * ];
		     *
		     * _.dropRightWhile(users, function(o) { return !o.active; });
		     * // => objects for ['barney']
		     *
		     * // The `_.matches` iteratee shorthand.
		     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
		     * // => objects for ['barney', 'fred']
		     *
		     * // The `_.matchesProperty` iteratee shorthand.
		     * _.dropRightWhile(users, ['active', false]);
		     * // => objects for ['barney']
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.dropRightWhile(users, 'active');
		     * // => objects for ['barney', 'fred', 'pebbles']
		     */
		    function dropRightWhile(array, predicate) {
		      return (array && array.length)
		        ? baseWhile(array, getIteratee(predicate, 3), true, true)
		        : [];
		    }
	
		    /**
		     * Creates a slice of `array` excluding elements dropped from the beginning.
		     * Elements are dropped until `predicate` returns falsey. The predicate is
		     * invoked with three arguments: (value, index, array).
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Array
		     * @param {Array} array The array to query.
		     * @param {Function} [predicate=_.identity] The function invoked per iteration.
		     * @returns {Array} Returns the slice of `array`.
		     * @example
		     *
		     * var users = [
		     *   { 'user': 'barney',  'active': false },
		     *   { 'user': 'fred',    'active': false },
		     *   { 'user': 'pebbles', 'active': true }
		     * ];
		     *
		     * _.dropWhile(users, function(o) { return !o.active; });
		     * // => objects for ['pebbles']
		     *
		     * // The `_.matches` iteratee shorthand.
		     * _.dropWhile(users, { 'user': 'barney', 'active': false });
		     * // => objects for ['fred', 'pebbles']
		     *
		     * // The `_.matchesProperty` iteratee shorthand.
		     * _.dropWhile(users, ['active', false]);
		     * // => objects for ['pebbles']
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.dropWhile(users, 'active');
		     * // => objects for ['barney', 'fred', 'pebbles']
		     */
		    function dropWhile(array, predicate) {
		      return (array && array.length)
		        ? baseWhile(array, getIteratee(predicate, 3), true)
		        : [];
		    }
	
		    /**
		     * Fills elements of `array` with `value` from `start` up to, but not
		     * including, `end`.
		     *
		     * **Note:** This method mutates `array`.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.2.0
		     * @category Array
		     * @param {Array} array The array to fill.
		     * @param {*} value The value to fill `array` with.
		     * @param {number} [start=0] The start position.
		     * @param {number} [end=array.length] The end position.
		     * @returns {Array} Returns `array`.
		     * @example
		     *
		     * var array = [1, 2, 3];
		     *
		     * _.fill(array, 'a');
		     * console.log(array);
		     * // => ['a', 'a', 'a']
		     *
		     * _.fill(Array(3), 2);
		     * // => [2, 2, 2]
		     *
		     * _.fill([4, 6, 8, 10], '*', 1, 3);
		     * // => [4, '*', '*', 10]
		     */
		    function fill(array, value, start, end) {
		      var length = array == null ? 0 : array.length;
		      if (!length) {
		        return [];
		      }
		      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
		        start = 0;
		        end = length;
		      }
		      return baseFill(array, value, start, end);
		    }
	
		    /**
		     * This method is like `_.find` except that it returns the index of the first
		     * element `predicate` returns truthy for instead of the element itself.
		     *
		     * @static
		     * @memberOf _
		     * @since 1.1.0
		     * @category Array
		     * @param {Array} array The array to inspect.
		     * @param {Function} [predicate=_.identity] The function invoked per iteration.
		     * @param {number} [fromIndex=0] The index to search from.
		     * @returns {number} Returns the index of the found element, else `-1`.
		     * @example
		     *
		     * var users = [
		     *   { 'user': 'barney',  'active': false },
		     *   { 'user': 'fred',    'active': false },
		     *   { 'user': 'pebbles', 'active': true }
		     * ];
		     *
		     * _.findIndex(users, function(o) { return o.user == 'barney'; });
		     * // => 0
		     *
		     * // The `_.matches` iteratee shorthand.
		     * _.findIndex(users, { 'user': 'fred', 'active': false });
		     * // => 1
		     *
		     * // The `_.matchesProperty` iteratee shorthand.
		     * _.findIndex(users, ['active', false]);
		     * // => 0
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.findIndex(users, 'active');
		     * // => 2
		     */
		    function findIndex(array, predicate, fromIndex) {
		      var length = array == null ? 0 : array.length;
		      if (!length) {
		        return -1;
		      }
		      var index = fromIndex == null ? 0 : toInteger(fromIndex);
		      if (index < 0) {
		        index = nativeMax(length + index, 0);
		      }
		      return baseFindIndex(array, getIteratee(predicate, 3), index);
		    }
	
		    /**
		     * This method is like `_.findIndex` except that it iterates over elements
		     * of `collection` from right to left.
		     *
		     * @static
		     * @memberOf _
		     * @since 2.0.0
		     * @category Array
		     * @param {Array} array The array to inspect.
		     * @param {Function} [predicate=_.identity] The function invoked per iteration.
		     * @param {number} [fromIndex=array.length-1] The index to search from.
		     * @returns {number} Returns the index of the found element, else `-1`.
		     * @example
		     *
		     * var users = [
		     *   { 'user': 'barney',  'active': true },
		     *   { 'user': 'fred',    'active': false },
		     *   { 'user': 'pebbles', 'active': false }
		     * ];
		     *
		     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
		     * // => 2
		     *
		     * // The `_.matches` iteratee shorthand.
		     * _.findLastIndex(users, { 'user': 'barney', 'active': true });
		     * // => 0
		     *
		     * // The `_.matchesProperty` iteratee shorthand.
		     * _.findLastIndex(users, ['active', false]);
		     * // => 2
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.findLastIndex(users, 'active');
		     * // => 0
		     */
		    function findLastIndex(array, predicate, fromIndex) {
		      var length = array == null ? 0 : array.length;
		      if (!length) {
		        return -1;
		      }
		      var index = length - 1;
		      if (fromIndex !== undefined) {
		        index = toInteger(fromIndex);
		        index = fromIndex < 0
		          ? nativeMax(length + index, 0)
		          : nativeMin(index, length - 1);
		      }
		      return baseFindIndex(array, getIteratee(predicate, 3), index, true);
		    }
	
		    /**
		     * Flattens `array` a single level deep.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Array
		     * @param {Array} array The array to flatten.
		     * @returns {Array} Returns the new flattened array.
		     * @example
		     *
		     * _.flatten([1, [2, [3, [4]], 5]]);
		     * // => [1, 2, [3, [4]], 5]
		     */
		    function flatten(array) {
		      var length = array == null ? 0 : array.length;
		      return length ? baseFlatten(array, 1) : [];
		    }
	
		    /**
		     * Recursively flattens `array`.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Array
		     * @param {Array} array The array to flatten.
		     * @returns {Array} Returns the new flattened array.
		     * @example
		     *
		     * _.flattenDeep([1, [2, [3, [4]], 5]]);
		     * // => [1, 2, 3, 4, 5]
		     */
		    function flattenDeep(array) {
		      var length = array == null ? 0 : array.length;
		      return length ? baseFlatten(array, INFINITY) : [];
		    }
	
		    /**
		     * Recursively flatten `array` up to `depth` times.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.4.0
		     * @category Array
		     * @param {Array} array The array to flatten.
		     * @param {number} [depth=1] The maximum recursion depth.
		     * @returns {Array} Returns the new flattened array.
		     * @example
		     *
		     * var array = [1, [2, [3, [4]], 5]];
		     *
		     * _.flattenDepth(array, 1);
		     * // => [1, 2, [3, [4]], 5]
		     *
		     * _.flattenDepth(array, 2);
		     * // => [1, 2, 3, [4], 5]
		     */
		    function flattenDepth(array, depth) {
		      var length = array == null ? 0 : array.length;
		      if (!length) {
		        return [];
		      }
		      depth = depth === undefined ? 1 : toInteger(depth);
		      return baseFlatten(array, depth);
		    }
	
		    /**
		     * The inverse of `_.toPairs`; this method returns an object composed
		     * from key-value `pairs`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Array
		     * @param {Array} pairs The key-value pairs.
		     * @returns {Object} Returns the new object.
		     * @example
		     *
		     * _.fromPairs([['a', 1], ['b', 2]]);
		     * // => { 'a': 1, 'b': 2 }
		     */
		    function fromPairs(pairs) {
		      var index = -1,
		          length = pairs == null ? 0 : pairs.length,
		          result = {};
	
		      while (++index < length) {
		        var pair = pairs[index];
		        result[pair[0]] = pair[1];
		      }
		      return result;
		    }
	
		    /**
		     * Gets the first element of `array`.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @alias first
		     * @category Array
		     * @param {Array} array The array to query.
		     * @returns {*} Returns the first element of `array`.
		     * @example
		     *
		     * _.head([1, 2, 3]);
		     * // => 1
		     *
		     * _.head([]);
		     * // => undefined
		     */
		    function head(array) {
		      return (array && array.length) ? array[0] : undefined;
		    }
	
		    /**
		     * Gets the index at which the first occurrence of `value` is found in `array`
		     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
		     * for equality comparisons. If `fromIndex` is negative, it's used as the
		     * offset from the end of `array`.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Array
		     * @param {Array} array The array to inspect.
		     * @param {*} value The value to search for.
		     * @param {number} [fromIndex=0] The index to search from.
		     * @returns {number} Returns the index of the matched value, else `-1`.
		     * @example
		     *
		     * _.indexOf([1, 2, 1, 2], 2);
		     * // => 1
		     *
		     * // Search from the `fromIndex`.
		     * _.indexOf([1, 2, 1, 2], 2, 2);
		     * // => 3
		     */
		    function indexOf(array, value, fromIndex) {
		      var length = array == null ? 0 : array.length;
		      if (!length) {
		        return -1;
		      }
		      var index = fromIndex == null ? 0 : toInteger(fromIndex);
		      if (index < 0) {
		        index = nativeMax(length + index, 0);
		      }
		      return baseIndexOf(array, value, index);
		    }
	
		    /**
		     * Gets all but the last element of `array`.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Array
		     * @param {Array} array The array to query.
		     * @returns {Array} Returns the slice of `array`.
		     * @example
		     *
		     * _.initial([1, 2, 3]);
		     * // => [1, 2]
		     */
		    function initial(array) {
		      var length = array == null ? 0 : array.length;
		      return length ? baseSlice(array, 0, -1) : [];
		    }
	
		    /**
		     * Creates an array of unique values that are included in all given arrays
		     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
		     * for equality comparisons. The order and references of result values are
		     * determined by the first array.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Array
		     * @param {...Array} [arrays] The arrays to inspect.
		     * @returns {Array} Returns the new array of intersecting values.
		     * @example
		     *
		     * _.intersection([2, 1], [2, 3]);
		     * // => [2]
		     */
		    var intersection = baseRest(function(arrays) {
		      var mapped = arrayMap(arrays, castArrayLikeObject);
		      return (mapped.length && mapped[0] === arrays[0])
		        ? baseIntersection(mapped)
		        : [];
		    });
	
		    /**
		     * This method is like `_.intersection` except that it accepts `iteratee`
		     * which is invoked for each element of each `arrays` to generate the criterion
		     * by which they're compared. The order and references of result values are
		     * determined by the first array. The iteratee is invoked with one argument:
		     * (value).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Array
		     * @param {...Array} [arrays] The arrays to inspect.
		     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
		     * @returns {Array} Returns the new array of intersecting values.
		     * @example
		     *
		     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);
		     * // => [2.1]
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
		     * // => [{ 'x': 1 }]
		     */
		    var intersectionBy = baseRest(function(arrays) {
		      var iteratee = last(arrays),
		          mapped = arrayMap(arrays, castArrayLikeObject);
	
		      if (iteratee === last(mapped)) {
		        iteratee = undefined;
		      } else {
		        mapped.pop();
		      }
		      return (mapped.length && mapped[0] === arrays[0])
		        ? baseIntersection(mapped, getIteratee(iteratee, 2))
		        : [];
		    });
	
		    /**
		     * This method is like `_.intersection` except that it accepts `comparator`
		     * which is invoked to compare elements of `arrays`. The order and references
		     * of result values are determined by the first array. The comparator is
		     * invoked with two arguments: (arrVal, othVal).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Array
		     * @param {...Array} [arrays] The arrays to inspect.
		     * @param {Function} [comparator] The comparator invoked per element.
		     * @returns {Array} Returns the new array of intersecting values.
		     * @example
		     *
		     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
		     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
		     *
		     * _.intersectionWith(objects, others, _.isEqual);
		     * // => [{ 'x': 1, 'y': 2 }]
		     */
		    var intersectionWith = baseRest(function(arrays) {
		      var comparator = last(arrays),
		          mapped = arrayMap(arrays, castArrayLikeObject);
	
		      comparator = typeof comparator == 'function' ? comparator : undefined;
		      if (comparator) {
		        mapped.pop();
		      }
		      return (mapped.length && mapped[0] === arrays[0])
		        ? baseIntersection(mapped, undefined, comparator)
		        : [];
		    });
	
		    /**
		     * Converts all elements in `array` into a string separated by `separator`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Array
		     * @param {Array} array The array to convert.
		     * @param {string} [separator=','] The element separator.
		     * @returns {string} Returns the joined string.
		     * @example
		     *
		     * _.join(['a', 'b', 'c'], '~');
		     * // => 'a~b~c'
		     */
		    function join(array, separator) {
		      return array == null ? '' : nativeJoin.call(array, separator);
		    }
	
		    /**
		     * Gets the last element of `array`.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Array
		     * @param {Array} array The array to query.
		     * @returns {*} Returns the last element of `array`.
		     * @example
		     *
		     * _.last([1, 2, 3]);
		     * // => 3
		     */
		    function last(array) {
		      var length = array == null ? 0 : array.length;
		      return length ? array[length - 1] : undefined;
		    }
	
		    /**
		     * This method is like `_.indexOf` except that it iterates over elements of
		     * `array` from right to left.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Array
		     * @param {Array} array The array to inspect.
		     * @param {*} value The value to search for.
		     * @param {number} [fromIndex=array.length-1] The index to search from.
		     * @returns {number} Returns the index of the matched value, else `-1`.
		     * @example
		     *
		     * _.lastIndexOf([1, 2, 1, 2], 2);
		     * // => 3
		     *
		     * // Search from the `fromIndex`.
		     * _.lastIndexOf([1, 2, 1, 2], 2, 2);
		     * // => 1
		     */
		    function lastIndexOf(array, value, fromIndex) {
		      var length = array == null ? 0 : array.length;
		      if (!length) {
		        return -1;
		      }
		      var index = length;
		      if (fromIndex !== undefined) {
		        index = toInteger(fromIndex);
		        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
		      }
		      return value === value
		        ? strictLastIndexOf(array, value, index)
		        : baseFindIndex(array, baseIsNaN, index, true);
		    }
	
		    /**
		     * Gets the element at index `n` of `array`. If `n` is negative, the nth
		     * element from the end is returned.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.11.0
		     * @category Array
		     * @param {Array} array The array to query.
		     * @param {number} [n=0] The index of the element to return.
		     * @returns {*} Returns the nth element of `array`.
		     * @example
		     *
		     * var array = ['a', 'b', 'c', 'd'];
		     *
		     * _.nth(array, 1);
		     * // => 'b'
		     *
		     * _.nth(array, -2);
		     * // => 'c';
		     */
		    function nth(array, n) {
		      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;
		    }
	
		    /**
		     * Removes all given values from `array` using
		     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
		     * for equality comparisons.
		     *
		     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
		     * to remove elements from an array by predicate.
		     *
		     * @static
		     * @memberOf _
		     * @since 2.0.0
		     * @category Array
		     * @param {Array} array The array to modify.
		     * @param {...*} [values] The values to remove.
		     * @returns {Array} Returns `array`.
		     * @example
		     *
		     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
		     *
		     * _.pull(array, 'a', 'c');
		     * console.log(array);
		     * // => ['b', 'b']
		     */
		    var pull = baseRest(pullAll);
	
		    /**
		     * This method is like `_.pull` except that it accepts an array of values to remove.
		     *
		     * **Note:** Unlike `_.difference`, this method mutates `array`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Array
		     * @param {Array} array The array to modify.
		     * @param {Array} values The values to remove.
		     * @returns {Array} Returns `array`.
		     * @example
		     *
		     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
		     *
		     * _.pullAll(array, ['a', 'c']);
		     * console.log(array);
		     * // => ['b', 'b']
		     */
		    function pullAll(array, values) {
		      return (array && array.length && values && values.length)
		        ? basePullAll(array, values)
		        : array;
		    }
	
		    /**
		     * This method is like `_.pullAll` except that it accepts `iteratee` which is
		     * invoked for each element of `array` and `values` to generate the criterion
		     * by which they're compared. The iteratee is invoked with one argument: (value).
		     *
		     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Array
		     * @param {Array} array The array to modify.
		     * @param {Array} values The values to remove.
		     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
		     * @returns {Array} Returns `array`.
		     * @example
		     *
		     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
		     *
		     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
		     * console.log(array);
		     * // => [{ 'x': 2 }]
		     */
		    function pullAllBy(array, values, iteratee) {
		      return (array && array.length && values && values.length)
		        ? basePullAll(array, values, getIteratee(iteratee, 2))
		        : array;
		    }
	
		    /**
		     * This method is like `_.pullAll` except that it accepts `comparator` which
		     * is invoked to compare elements of `array` to `values`. The comparator is
		     * invoked with two arguments: (arrVal, othVal).
		     *
		     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.6.0
		     * @category Array
		     * @param {Array} array The array to modify.
		     * @param {Array} values The values to remove.
		     * @param {Function} [comparator] The comparator invoked per element.
		     * @returns {Array} Returns `array`.
		     * @example
		     *
		     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
		     *
		     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
		     * console.log(array);
		     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
		     */
		    function pullAllWith(array, values, comparator) {
		      return (array && array.length && values && values.length)
		        ? basePullAll(array, values, undefined, comparator)
		        : array;
		    }
	
		    /**
		     * Removes elements from `array` corresponding to `indexes` and returns an
		     * array of removed elements.
		     *
		     * **Note:** Unlike `_.at`, this method mutates `array`.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Array
		     * @param {Array} array The array to modify.
		     * @param {...(number|number[])} [indexes] The indexes of elements to remove.
		     * @returns {Array} Returns the new array of removed elements.
		     * @example
		     *
		     * var array = ['a', 'b', 'c', 'd'];
		     * var pulled = _.pullAt(array, [1, 3]);
		     *
		     * console.log(array);
		     * // => ['a', 'c']
		     *
		     * console.log(pulled);
		     * // => ['b', 'd']
		     */
		    var pullAt = flatRest(function(array, indexes) {
		      var length = array == null ? 0 : array.length,
		          result = baseAt(array, indexes);
	
		      basePullAt(array, arrayMap(indexes, function(index) {
		        return isIndex(index, length) ? +index : index;
		      }).sort(compareAscending));
	
		      return result;
		    });
	
		    /**
		     * Removes all elements from `array` that `predicate` returns truthy for
		     * and returns an array of the removed elements. The predicate is invoked
		     * with three arguments: (value, index, array).
		     *
		     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
		     * to pull elements from an array by value.
		     *
		     * @static
		     * @memberOf _
		     * @since 2.0.0
		     * @category Array
		     * @param {Array} array The array to modify.
		     * @param {Function} [predicate=_.identity] The function invoked per iteration.
		     * @returns {Array} Returns the new array of removed elements.
		     * @example
		     *
		     * var array = [1, 2, 3, 4];
		     * var evens = _.remove(array, function(n) {
		     *   return n % 2 == 0;
		     * });
		     *
		     * console.log(array);
		     * // => [1, 3]
		     *
		     * console.log(evens);
		     * // => [2, 4]
		     */
		    function remove(array, predicate) {
		      var result = [];
		      if (!(array && array.length)) {
		        return result;
		      }
		      var index = -1,
		          indexes = [],
		          length = array.length;
	
		      predicate = getIteratee(predicate, 3);
		      while (++index < length) {
		        var value = array[index];
		        if (predicate(value, index, array)) {
		          result.push(value);
		          indexes.push(index);
		        }
		      }
		      basePullAt(array, indexes);
		      return result;
		    }
	
		    /**
		     * Reverses `array` so that the first element becomes the last, the second
		     * element becomes the second to last, and so on.
		     *
		     * **Note:** This method mutates `array` and is based on
		     * [`Array#reverse`](https://mdn.io/Array/reverse).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Array
		     * @param {Array} array The array to modify.
		     * @returns {Array} Returns `array`.
		     * @example
		     *
		     * var array = [1, 2, 3];
		     *
		     * _.reverse(array);
		     * // => [3, 2, 1]
		     *
		     * console.log(array);
		     * // => [3, 2, 1]
		     */
		    function reverse(array) {
		      return array == null ? array : nativeReverse.call(array);
		    }
	
		    /**
		     * Creates a slice of `array` from `start` up to, but not including, `end`.
		     *
		     * **Note:** This method is used instead of
		     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
		     * returned.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Array
		     * @param {Array} array The array to slice.
		     * @param {number} [start=0] The start position.
		     * @param {number} [end=array.length] The end position.
		     * @returns {Array} Returns the slice of `array`.
		     */
		    function slice(array, start, end) {
		      var length = array == null ? 0 : array.length;
		      if (!length) {
		        return [];
		      }
		      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
		        start = 0;
		        end = length;
		      }
		      else {
		        start = start == null ? 0 : toInteger(start);
		        end = end === undefined ? length : toInteger(end);
		      }
		      return baseSlice(array, start, end);
		    }
	
		    /**
		     * Uses a binary search to determine the lowest index at which `value`
		     * should be inserted into `array` in order to maintain its sort order.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Array
		     * @param {Array} array The sorted array to inspect.
		     * @param {*} value The value to evaluate.
		     * @returns {number} Returns the index at which `value` should be inserted
		     *  into `array`.
		     * @example
		     *
		     * _.sortedIndex([30, 50], 40);
		     * // => 1
		     */
		    function sortedIndex(array, value) {
		      return baseSortedIndex(array, value);
		    }
	
		    /**
		     * This method is like `_.sortedIndex` except that it accepts `iteratee`
		     * which is invoked for `value` and each element of `array` to compute their
		     * sort ranking. The iteratee is invoked with one argument: (value).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Array
		     * @param {Array} array The sorted array to inspect.
		     * @param {*} value The value to evaluate.
		     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
		     * @returns {number} Returns the index at which `value` should be inserted
		     *  into `array`.
		     * @example
		     *
		     * var objects = [{ 'x': 4 }, { 'x': 5 }];
		     *
		     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
		     * // => 0
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');
		     * // => 0
		     */
		    function sortedIndexBy(array, value, iteratee) {
		      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
		    }
	
		    /**
		     * This method is like `_.indexOf` except that it performs a binary
		     * search on a sorted `array`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Array
		     * @param {Array} array The array to inspect.
		     * @param {*} value The value to search for.
		     * @returns {number} Returns the index of the matched value, else `-1`.
		     * @example
		     *
		     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);
		     * // => 1
		     */
		    function sortedIndexOf(array, value) {
		      var length = array == null ? 0 : array.length;
		      if (length) {
		        var index = baseSortedIndex(array, value);
		        if (index < length && eq(array[index], value)) {
		          return index;
		        }
		      }
		      return -1;
		    }
	
		    /**
		     * This method is like `_.sortedIndex` except that it returns the highest
		     * index at which `value` should be inserted into `array` in order to
		     * maintain its sort order.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Array
		     * @param {Array} array The sorted array to inspect.
		     * @param {*} value The value to evaluate.
		     * @returns {number} Returns the index at which `value` should be inserted
		     *  into `array`.
		     * @example
		     *
		     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);
		     * // => 4
		     */
		    function sortedLastIndex(array, value) {
		      return baseSortedIndex(array, value, true);
		    }
	
		    /**
		     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
		     * which is invoked for `value` and each element of `array` to compute their
		     * sort ranking. The iteratee is invoked with one argument: (value).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Array
		     * @param {Array} array The sorted array to inspect.
		     * @param {*} value The value to evaluate.
		     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
		     * @returns {number} Returns the index at which `value` should be inserted
		     *  into `array`.
		     * @example
		     *
		     * var objects = [{ 'x': 4 }, { 'x': 5 }];
		     *
		     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
		     * // => 1
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');
		     * // => 1
		     */
		    function sortedLastIndexBy(array, value, iteratee) {
		      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);
		    }
	
		    /**
		     * This method is like `_.lastIndexOf` except that it performs a binary
		     * search on a sorted `array`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Array
		     * @param {Array} array The array to inspect.
		     * @param {*} value The value to search for.
		     * @returns {number} Returns the index of the matched value, else `-1`.
		     * @example
		     *
		     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);
		     * // => 3
		     */
		    function sortedLastIndexOf(array, value) {
		      var length = array == null ? 0 : array.length;
		      if (length) {
		        var index = baseSortedIndex(array, value, true) - 1;
		        if (eq(array[index], value)) {
		          return index;
		        }
		      }
		      return -1;
		    }
	
		    /**
		     * This method is like `_.uniq` except that it's designed and optimized
		     * for sorted arrays.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Array
		     * @param {Array} array The array to inspect.
		     * @returns {Array} Returns the new duplicate free array.
		     * @example
		     *
		     * _.sortedUniq([1, 1, 2]);
		     * // => [1, 2]
		     */
		    function sortedUniq(array) {
		      return (array && array.length)
		        ? baseSortedUniq(array)
		        : [];
		    }
	
		    /**
		     * This method is like `_.uniqBy` except that it's designed and optimized
		     * for sorted arrays.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Array
		     * @param {Array} array The array to inspect.
		     * @param {Function} [iteratee] The iteratee invoked per element.
		     * @returns {Array} Returns the new duplicate free array.
		     * @example
		     *
		     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
		     * // => [1.1, 2.3]
		     */
		    function sortedUniqBy(array, iteratee) {
		      return (array && array.length)
		        ? baseSortedUniq(array, getIteratee(iteratee, 2))
		        : [];
		    }
	
		    /**
		     * Gets all but the first element of `array`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Array
		     * @param {Array} array The array to query.
		     * @returns {Array} Returns the slice of `array`.
		     * @example
		     *
		     * _.tail([1, 2, 3]);
		     * // => [2, 3]
		     */
		    function tail(array) {
		      var length = array == null ? 0 : array.length;
		      return length ? baseSlice(array, 1, length) : [];
		    }
	
		    /**
		     * Creates a slice of `array` with `n` elements taken from the beginning.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Array
		     * @param {Array} array The array to query.
		     * @param {number} [n=1] The number of elements to take.
		     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		     * @returns {Array} Returns the slice of `array`.
		     * @example
		     *
		     * _.take([1, 2, 3]);
		     * // => [1]
		     *
		     * _.take([1, 2, 3], 2);
		     * // => [1, 2]
		     *
		     * _.take([1, 2, 3], 5);
		     * // => [1, 2, 3]
		     *
		     * _.take([1, 2, 3], 0);
		     * // => []
		     */
		    function take(array, n, guard) {
		      if (!(array && array.length)) {
		        return [];
		      }
		      n = (guard || n === undefined) ? 1 : toInteger(n);
		      return baseSlice(array, 0, n < 0 ? 0 : n);
		    }
	
		    /**
		     * Creates a slice of `array` with `n` elements taken from the end.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Array
		     * @param {Array} array The array to query.
		     * @param {number} [n=1] The number of elements to take.
		     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		     * @returns {Array} Returns the slice of `array`.
		     * @example
		     *
		     * _.takeRight([1, 2, 3]);
		     * // => [3]
		     *
		     * _.takeRight([1, 2, 3], 2);
		     * // => [2, 3]
		     *
		     * _.takeRight([1, 2, 3], 5);
		     * // => [1, 2, 3]
		     *
		     * _.takeRight([1, 2, 3], 0);
		     * // => []
		     */
		    function takeRight(array, n, guard) {
		      var length = array == null ? 0 : array.length;
		      if (!length) {
		        return [];
		      }
		      n = (guard || n === undefined) ? 1 : toInteger(n);
		      n = length - n;
		      return baseSlice(array, n < 0 ? 0 : n, length);
		    }
	
		    /**
		     * Creates a slice of `array` with elements taken from the end. Elements are
		     * taken until `predicate` returns falsey. The predicate is invoked with
		     * three arguments: (value, index, array).
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Array
		     * @param {Array} array The array to query.
		     * @param {Function} [predicate=_.identity] The function invoked per iteration.
		     * @returns {Array} Returns the slice of `array`.
		     * @example
		     *
		     * var users = [
		     *   { 'user': 'barney',  'active': true },
		     *   { 'user': 'fred',    'active': false },
		     *   { 'user': 'pebbles', 'active': false }
		     * ];
		     *
		     * _.takeRightWhile(users, function(o) { return !o.active; });
		     * // => objects for ['fred', 'pebbles']
		     *
		     * // The `_.matches` iteratee shorthand.
		     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
		     * // => objects for ['pebbles']
		     *
		     * // The `_.matchesProperty` iteratee shorthand.
		     * _.takeRightWhile(users, ['active', false]);
		     * // => objects for ['fred', 'pebbles']
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.takeRightWhile(users, 'active');
		     * // => []
		     */
		    function takeRightWhile(array, predicate) {
		      return (array && array.length)
		        ? baseWhile(array, getIteratee(predicate, 3), false, true)
		        : [];
		    }
	
		    /**
		     * Creates a slice of `array` with elements taken from the beginning. Elements
		     * are taken until `predicate` returns falsey. The predicate is invoked with
		     * three arguments: (value, index, array).
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Array
		     * @param {Array} array The array to query.
		     * @param {Function} [predicate=_.identity] The function invoked per iteration.
		     * @returns {Array} Returns the slice of `array`.
		     * @example
		     *
		     * var users = [
		     *   { 'user': 'barney',  'active': false },
		     *   { 'user': 'fred',    'active': false },
		     *   { 'user': 'pebbles', 'active': true }
		     * ];
		     *
		     * _.takeWhile(users, function(o) { return !o.active; });
		     * // => objects for ['barney', 'fred']
		     *
		     * // The `_.matches` iteratee shorthand.
		     * _.takeWhile(users, { 'user': 'barney', 'active': false });
		     * // => objects for ['barney']
		     *
		     * // The `_.matchesProperty` iteratee shorthand.
		     * _.takeWhile(users, ['active', false]);
		     * // => objects for ['barney', 'fred']
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.takeWhile(users, 'active');
		     * // => []
		     */
		    function takeWhile(array, predicate) {
		      return (array && array.length)
		        ? baseWhile(array, getIteratee(predicate, 3))
		        : [];
		    }
	
		    /**
		     * Creates an array of unique values, in order, from all given arrays using
		     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
		     * for equality comparisons.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Array
		     * @param {...Array} [arrays] The arrays to inspect.
		     * @returns {Array} Returns the new array of combined values.
		     * @example
		     *
		     * _.union([2], [1, 2]);
		     * // => [2, 1]
		     */
		    var union = baseRest(function(arrays) {
		      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
		    });
	
		    /**
		     * This method is like `_.union` except that it accepts `iteratee` which is
		     * invoked for each element of each `arrays` to generate the criterion by
		     * which uniqueness is computed. Result values are chosen from the first
		     * array in which the value occurs. The iteratee is invoked with one argument:
		     * (value).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Array
		     * @param {...Array} [arrays] The arrays to inspect.
		     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
		     * @returns {Array} Returns the new array of combined values.
		     * @example
		     *
		     * _.unionBy([2.1], [1.2, 2.3], Math.floor);
		     * // => [2.1, 1.2]
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
		     * // => [{ 'x': 1 }, { 'x': 2 }]
		     */
		    var unionBy = baseRest(function(arrays) {
		      var iteratee = last(arrays);
		      if (isArrayLikeObject(iteratee)) {
		        iteratee = undefined;
		      }
		      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
		    });
	
		    /**
		     * This method is like `_.union` except that it accepts `comparator` which
		     * is invoked to compare elements of `arrays`. Result values are chosen from
		     * the first array in which the value occurs. The comparator is invoked
		     * with two arguments: (arrVal, othVal).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Array
		     * @param {...Array} [arrays] The arrays to inspect.
		     * @param {Function} [comparator] The comparator invoked per element.
		     * @returns {Array} Returns the new array of combined values.
		     * @example
		     *
		     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
		     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
		     *
		     * _.unionWith(objects, others, _.isEqual);
		     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
		     */
		    var unionWith = baseRest(function(arrays) {
		      var comparator = last(arrays);
		      comparator = typeof comparator == 'function' ? comparator : undefined;
		      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
		    });
	
		    /**
		     * Creates a duplicate-free version of an array, using
		     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
		     * for equality comparisons, in which only the first occurrence of each element
		     * is kept. The order of result values is determined by the order they occur
		     * in the array.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Array
		     * @param {Array} array The array to inspect.
		     * @returns {Array} Returns the new duplicate free array.
		     * @example
		     *
		     * _.uniq([2, 1, 2]);
		     * // => [2, 1]
		     */
		    function uniq(array) {
		      return (array && array.length) ? baseUniq(array) : [];
		    }
	
		    /**
		     * This method is like `_.uniq` except that it accepts `iteratee` which is
		     * invoked for each element in `array` to generate the criterion by which
		     * uniqueness is computed. The order of result values is determined by the
		     * order they occur in the array. The iteratee is invoked with one argument:
		     * (value).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Array
		     * @param {Array} array The array to inspect.
		     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
		     * @returns {Array} Returns the new duplicate free array.
		     * @example
		     *
		     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
		     * // => [2.1, 1.2]
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
		     * // => [{ 'x': 1 }, { 'x': 2 }]
		     */
		    function uniqBy(array, iteratee) {
		      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];
		    }
	
		    /**
		     * This method is like `_.uniq` except that it accepts `comparator` which
		     * is invoked to compare elements of `array`. The order of result values is
		     * determined by the order they occur in the array.The comparator is invoked
		     * with two arguments: (arrVal, othVal).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Array
		     * @param {Array} array The array to inspect.
		     * @param {Function} [comparator] The comparator invoked per element.
		     * @returns {Array} Returns the new duplicate free array.
		     * @example
		     *
		     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
		     *
		     * _.uniqWith(objects, _.isEqual);
		     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
		     */
		    function uniqWith(array, comparator) {
		      comparator = typeof comparator == 'function' ? comparator : undefined;
		      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];
		    }
	
		    /**
		     * This method is like `_.zip` except that it accepts an array of grouped
		     * elements and creates an array regrouping the elements to their pre-zip
		     * configuration.
		     *
		     * @static
		     * @memberOf _
		     * @since 1.2.0
		     * @category Array
		     * @param {Array} array The array of grouped elements to process.
		     * @returns {Array} Returns the new array of regrouped elements.
		     * @example
		     *
		     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);
		     * // => [['a', 1, true], ['b', 2, false]]
		     *
		     * _.unzip(zipped);
		     * // => [['a', 'b'], [1, 2], [true, false]]
		     */
		    function unzip(array) {
		      if (!(array && array.length)) {
		        return [];
		      }
		      var length = 0;
		      array = arrayFilter(array, function(group) {
		        if (isArrayLikeObject(group)) {
		          length = nativeMax(group.length, length);
		          return true;
		        }
		      });
		      return baseTimes(length, function(index) {
		        return arrayMap(array, baseProperty(index));
		      });
		    }
	
		    /**
		     * This method is like `_.unzip` except that it accepts `iteratee` to specify
		     * how regrouped values should be combined. The iteratee is invoked with the
		     * elements of each group: (...group).
		     *
		     * @static
		     * @memberOf _
		     * @since 3.8.0
		     * @category Array
		     * @param {Array} array The array of grouped elements to process.
		     * @param {Function} [iteratee=_.identity] The function to combine
		     *  regrouped values.
		     * @returns {Array} Returns the new array of regrouped elements.
		     * @example
		     *
		     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
		     * // => [[1, 10, 100], [2, 20, 200]]
		     *
		     * _.unzipWith(zipped, _.add);
		     * // => [3, 30, 300]
		     */
		    function unzipWith(array, iteratee) {
		      if (!(array && array.length)) {
		        return [];
		      }
		      var result = unzip(array);
		      if (iteratee == null) {
		        return result;
		      }
		      return arrayMap(result, function(group) {
		        return apply(iteratee, undefined, group);
		      });
		    }
	
		    /**
		     * Creates an array excluding all given values using
		     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
		     * for equality comparisons.
		     *
		     * **Note:** Unlike `_.pull`, this method returns a new array.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Array
		     * @param {Array} array The array to inspect.
		     * @param {...*} [values] The values to exclude.
		     * @returns {Array} Returns the new array of filtered values.
		     * @see _.difference, _.xor
		     * @example
		     *
		     * _.without([2, 1, 2, 3], 1, 2);
		     * // => [3]
		     */
		    var without = baseRest(function(array, values) {
		      return isArrayLikeObject(array)
		        ? baseDifference(array, values)
		        : [];
		    });
	
		    /**
		     * Creates an array of unique values that is the
		     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
		     * of the given arrays. The order of result values is determined by the order
		     * they occur in the arrays.
		     *
		     * @static
		     * @memberOf _
		     * @since 2.4.0
		     * @category Array
		     * @param {...Array} [arrays] The arrays to inspect.
		     * @returns {Array} Returns the new array of filtered values.
		     * @see _.difference, _.without
		     * @example
		     *
		     * _.xor([2, 1], [2, 3]);
		     * // => [1, 3]
		     */
		    var xor = baseRest(function(arrays) {
		      return baseXor(arrayFilter(arrays, isArrayLikeObject));
		    });
	
		    /**
		     * This method is like `_.xor` except that it accepts `iteratee` which is
		     * invoked for each element of each `arrays` to generate the criterion by
		     * which by which they're compared. The order of result values is determined
		     * by the order they occur in the arrays. The iteratee is invoked with one
		     * argument: (value).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Array
		     * @param {...Array} [arrays] The arrays to inspect.
		     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
		     * @returns {Array} Returns the new array of filtered values.
		     * @example
		     *
		     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);
		     * // => [1.2, 3.4]
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
		     * // => [{ 'x': 2 }]
		     */
		    var xorBy = baseRest(function(arrays) {
		      var iteratee = last(arrays);
		      if (isArrayLikeObject(iteratee)) {
		        iteratee = undefined;
		      }
		      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
		    });
	
		    /**
		     * This method is like `_.xor` except that it accepts `comparator` which is
		     * invoked to compare elements of `arrays`. The order of result values is
		     * determined by the order they occur in the arrays. The comparator is invoked
		     * with two arguments: (arrVal, othVal).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Array
		     * @param {...Array} [arrays] The arrays to inspect.
		     * @param {Function} [comparator] The comparator invoked per element.
		     * @returns {Array} Returns the new array of filtered values.
		     * @example
		     *
		     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
		     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
		     *
		     * _.xorWith(objects, others, _.isEqual);
		     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
		     */
		    var xorWith = baseRest(function(arrays) {
		      var comparator = last(arrays);
		      comparator = typeof comparator == 'function' ? comparator : undefined;
		      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
		    });
	
		    /**
		     * Creates an array of grouped elements, the first of which contains the
		     * first elements of the given arrays, the second of which contains the
		     * second elements of the given arrays, and so on.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Array
		     * @param {...Array} [arrays] The arrays to process.
		     * @returns {Array} Returns the new array of grouped elements.
		     * @example
		     *
		     * _.zip(['a', 'b'], [1, 2], [true, false]);
		     * // => [['a', 1, true], ['b', 2, false]]
		     */
		    var zip = baseRest(unzip);
	
		    /**
		     * This method is like `_.fromPairs` except that it accepts two arrays,
		     * one of property identifiers and one of corresponding values.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.4.0
		     * @category Array
		     * @param {Array} [props=[]] The property identifiers.
		     * @param {Array} [values=[]] The property values.
		     * @returns {Object} Returns the new object.
		     * @example
		     *
		     * _.zipObject(['a', 'b'], [1, 2]);
		     * // => { 'a': 1, 'b': 2 }
		     */
		    function zipObject(props, values) {
		      return baseZipObject(props || [], values || [], assignValue);
		    }
	
		    /**
		     * This method is like `_.zipObject` except that it supports property paths.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.1.0
		     * @category Array
		     * @param {Array} [props=[]] The property identifiers.
		     * @param {Array} [values=[]] The property values.
		     * @returns {Object} Returns the new object.
		     * @example
		     *
		     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
		     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
		     */
		    function zipObjectDeep(props, values) {
		      return baseZipObject(props || [], values || [], baseSet);
		    }
	
		    /**
		     * This method is like `_.zip` except that it accepts `iteratee` to specify
		     * how grouped values should be combined. The iteratee is invoked with the
		     * elements of each group: (...group).
		     *
		     * @static
		     * @memberOf _
		     * @since 3.8.0
		     * @category Array
		     * @param {...Array} [arrays] The arrays to process.
		     * @param {Function} [iteratee=_.identity] The function to combine
		     *  grouped values.
		     * @returns {Array} Returns the new array of grouped elements.
		     * @example
		     *
		     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
		     *   return a + b + c;
		     * });
		     * // => [111, 222]
		     */
		    var zipWith = baseRest(function(arrays) {
		      var length = arrays.length,
		          iteratee = length > 1 ? arrays[length - 1] : undefined;
	
		      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
		      return unzipWith(arrays, iteratee);
		    });
	
		    /*------------------------------------------------------------------------*/
	
		    /**
		     * Creates a `lodash` wrapper instance that wraps `value` with explicit method
		     * chain sequences enabled. The result of such sequences must be unwrapped
		     * with `_#value`.
		     *
		     * @static
		     * @memberOf _
		     * @since 1.3.0
		     * @category Seq
		     * @param {*} value The value to wrap.
		     * @returns {Object} Returns the new `lodash` wrapper instance.
		     * @example
		     *
		     * var users = [
		     *   { 'user': 'barney',  'age': 36 },
		     *   { 'user': 'fred',    'age': 40 },
		     *   { 'user': 'pebbles', 'age': 1 }
		     * ];
		     *
		     * var youngest = _
		     *   .chain(users)
		     *   .sortBy('age')
		     *   .map(function(o) {
		     *     return o.user + ' is ' + o.age;
		     *   })
		     *   .head()
		     *   .value();
		     * // => 'pebbles is 1'
		     */
		    function chain(value) {
		      var result = lodash(value);
		      result.__chain__ = true;
		      return result;
		    }
	
		    /**
		     * This method invokes `interceptor` and returns `value`. The interceptor
		     * is invoked with one argument; (value). The purpose of this method is to
		     * "tap into" a method chain sequence in order to modify intermediate results.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Seq
		     * @param {*} value The value to provide to `interceptor`.
		     * @param {Function} interceptor The function to invoke.
		     * @returns {*} Returns `value`.
		     * @example
		     *
		     * _([1, 2, 3])
		     *  .tap(function(array) {
		     *    // Mutate input array.
		     *    array.pop();
		     *  })
		     *  .reverse()
		     *  .value();
		     * // => [2, 1]
		     */
		    function tap(value, interceptor) {
		      interceptor(value);
		      return value;
		    }
	
		    /**
		     * This method is like `_.tap` except that it returns the result of `interceptor`.
		     * The purpose of this method is to "pass thru" values replacing intermediate
		     * results in a method chain sequence.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Seq
		     * @param {*} value The value to provide to `interceptor`.
		     * @param {Function} interceptor The function to invoke.
		     * @returns {*} Returns the result of `interceptor`.
		     * @example
		     *
		     * _('  abc  ')
		     *  .chain()
		     *  .trim()
		     *  .thru(function(value) {
		     *    return [value];
		     *  })
		     *  .value();
		     * // => ['abc']
		     */
		    function thru(value, interceptor) {
		      return interceptor(value);
		    }
	
		    /**
		     * This method is the wrapper version of `_.at`.
		     *
		     * @name at
		     * @memberOf _
		     * @since 1.0.0
		     * @category Seq
		     * @param {...(string|string[])} [paths] The property paths to pick.
		     * @returns {Object} Returns the new `lodash` wrapper instance.
		     * @example
		     *
		     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
		     *
		     * _(object).at(['a[0].b.c', 'a[1]']).value();
		     * // => [3, 4]
		     */
		    var wrapperAt = flatRest(function(paths) {
		      var length = paths.length,
		          start = length ? paths[0] : 0,
		          value = this.__wrapped__,
		          interceptor = function(object) { return baseAt(object, paths); };
	
		      if (length > 1 || this.__actions__.length ||
		          !(value instanceof LazyWrapper) || !isIndex(start)) {
		        return this.thru(interceptor);
		      }
		      value = value.slice(start, +start + (length ? 1 : 0));
		      value.__actions__.push({
		        'func': thru,
		        'args': [interceptor],
		        'thisArg': undefined
		      });
		      return new LodashWrapper(value, this.__chain__).thru(function(array) {
		        if (length && !array.length) {
		          array.push(undefined);
		        }
		        return array;
		      });
		    });
	
		    /**
		     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
		     *
		     * @name chain
		     * @memberOf _
		     * @since 0.1.0
		     * @category Seq
		     * @returns {Object} Returns the new `lodash` wrapper instance.
		     * @example
		     *
		     * var users = [
		     *   { 'user': 'barney', 'age': 36 },
		     *   { 'user': 'fred',   'age': 40 }
		     * ];
		     *
		     * // A sequence without explicit chaining.
		     * _(users).head();
		     * // => { 'user': 'barney', 'age': 36 }
		     *
		     * // A sequence with explicit chaining.
		     * _(users)
		     *   .chain()
		     *   .head()
		     *   .pick('user')
		     *   .value();
		     * // => { 'user': 'barney' }
		     */
		    function wrapperChain() {
		      return chain(this);
		    }
	
		    /**
		     * Executes the chain sequence and returns the wrapped result.
		     *
		     * @name commit
		     * @memberOf _
		     * @since 3.2.0
		     * @category Seq
		     * @returns {Object} Returns the new `lodash` wrapper instance.
		     * @example
		     *
		     * var array = [1, 2];
		     * var wrapped = _(array).push(3);
		     *
		     * console.log(array);
		     * // => [1, 2]
		     *
		     * wrapped = wrapped.commit();
		     * console.log(array);
		     * // => [1, 2, 3]
		     *
		     * wrapped.last();
		     * // => 3
		     *
		     * console.log(array);
		     * // => [1, 2, 3]
		     */
		    function wrapperCommit() {
		      return new LodashWrapper(this.value(), this.__chain__);
		    }
	
		    /**
		     * Gets the next value on a wrapped object following the
		     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
		     *
		     * @name next
		     * @memberOf _
		     * @since 4.0.0
		     * @category Seq
		     * @returns {Object} Returns the next iterator value.
		     * @example
		     *
		     * var wrapped = _([1, 2]);
		     *
		     * wrapped.next();
		     * // => { 'done': false, 'value': 1 }
		     *
		     * wrapped.next();
		     * // => { 'done': false, 'value': 2 }
		     *
		     * wrapped.next();
		     * // => { 'done': true, 'value': undefined }
		     */
		    function wrapperNext() {
		      if (this.__values__ === undefined) {
		        this.__values__ = toArray(this.value());
		      }
		      var done = this.__index__ >= this.__values__.length,
		          value = done ? undefined : this.__values__[this.__index__++];
	
		      return { 'done': done, 'value': value };
		    }
	
		    /**
		     * Enables the wrapper to be iterable.
		     *
		     * @name Symbol.iterator
		     * @memberOf _
		     * @since 4.0.0
		     * @category Seq
		     * @returns {Object} Returns the wrapper object.
		     * @example
		     *
		     * var wrapped = _([1, 2]);
		     *
		     * wrapped[Symbol.iterator]() === wrapped;
		     * // => true
		     *
		     * Array.from(wrapped);
		     * // => [1, 2]
		     */
		    function wrapperToIterator() {
		      return this;
		    }
	
		    /**
		     * Creates a clone of the chain sequence planting `value` as the wrapped value.
		     *
		     * @name plant
		     * @memberOf _
		     * @since 3.2.0
		     * @category Seq
		     * @param {*} value The value to plant.
		     * @returns {Object} Returns the new `lodash` wrapper instance.
		     * @example
		     *
		     * function square(n) {
		     *   return n * n;
		     * }
		     *
		     * var wrapped = _([1, 2]).map(square);
		     * var other = wrapped.plant([3, 4]);
		     *
		     * other.value();
		     * // => [9, 16]
		     *
		     * wrapped.value();
		     * // => [1, 4]
		     */
		    function wrapperPlant(value) {
		      var result,
		          parent = this;
	
		      while (parent instanceof baseLodash) {
		        var clone = wrapperClone(parent);
		        clone.__index__ = 0;
		        clone.__values__ = undefined;
		        if (result) {
		          previous.__wrapped__ = clone;
		        } else {
		          result = clone;
		        }
		        var previous = clone;
		        parent = parent.__wrapped__;
		      }
		      previous.__wrapped__ = value;
		      return result;
		    }
	
		    /**
		     * This method is the wrapper version of `_.reverse`.
		     *
		     * **Note:** This method mutates the wrapped array.
		     *
		     * @name reverse
		     * @memberOf _
		     * @since 0.1.0
		     * @category Seq
		     * @returns {Object} Returns the new `lodash` wrapper instance.
		     * @example
		     *
		     * var array = [1, 2, 3];
		     *
		     * _(array).reverse().value()
		     * // => [3, 2, 1]
		     *
		     * console.log(array);
		     * // => [3, 2, 1]
		     */
		    function wrapperReverse() {
		      var value = this.__wrapped__;
		      if (value instanceof LazyWrapper) {
		        var wrapped = value;
		        if (this.__actions__.length) {
		          wrapped = new LazyWrapper(this);
		        }
		        wrapped = wrapped.reverse();
		        wrapped.__actions__.push({
		          'func': thru,
		          'args': [reverse],
		          'thisArg': undefined
		        });
		        return new LodashWrapper(wrapped, this.__chain__);
		      }
		      return this.thru(reverse);
		    }
	
		    /**
		     * Executes the chain sequence to resolve the unwrapped value.
		     *
		     * @name value
		     * @memberOf _
		     * @since 0.1.0
		     * @alias toJSON, valueOf
		     * @category Seq
		     * @returns {*} Returns the resolved unwrapped value.
		     * @example
		     *
		     * _([1, 2, 3]).value();
		     * // => [1, 2, 3]
		     */
		    function wrapperValue() {
		      return baseWrapperValue(this.__wrapped__, this.__actions__);
		    }
	
		    /*------------------------------------------------------------------------*/
	
		    /**
		     * Creates an object composed of keys generated from the results of running
		     * each element of `collection` thru `iteratee`. The corresponding value of
		     * each key is the number of times the key was returned by `iteratee`. The
		     * iteratee is invoked with one argument: (value).
		     *
		     * @static
		     * @memberOf _
		     * @since 0.5.0
		     * @category Collection
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
		     * @returns {Object} Returns the composed aggregate object.
		     * @example
		     *
		     * _.countBy([6.1, 4.2, 6.3], Math.floor);
		     * // => { '4': 1, '6': 2 }
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.countBy(['one', 'two', 'three'], 'length');
		     * // => { '3': 2, '5': 1 }
		     */
		    var countBy = createAggregator(function(result, value, key) {
		      if (hasOwnProperty.call(result, key)) {
		        ++result[key];
		      } else {
		        baseAssignValue(result, key, 1);
		      }
		    });
	
		    /**
		     * Checks if `predicate` returns truthy for **all** elements of `collection`.
		     * Iteration is stopped once `predicate` returns falsey. The predicate is
		     * invoked with three arguments: (value, index|key, collection).
		     *
		     * **Note:** This method returns `true` for
		     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
		     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
		     * elements of empty collections.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Collection
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Function} [predicate=_.identity] The function invoked per iteration.
		     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		     * @returns {boolean} Returns `true` if all elements pass the predicate check,
		     *  else `false`.
		     * @example
		     *
		     * _.every([true, 1, null, 'yes'], Boolean);
		     * // => false
		     *
		     * var users = [
		     *   { 'user': 'barney', 'age': 36, 'active': false },
		     *   { 'user': 'fred',   'age': 40, 'active': false }
		     * ];
		     *
		     * // The `_.matches` iteratee shorthand.
		     * _.every(users, { 'user': 'barney', 'active': false });
		     * // => false
		     *
		     * // The `_.matchesProperty` iteratee shorthand.
		     * _.every(users, ['active', false]);
		     * // => true
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.every(users, 'active');
		     * // => false
		     */
		    function every(collection, predicate, guard) {
		      var func = isArray(collection) ? arrayEvery : baseEvery;
		      if (guard && isIterateeCall(collection, predicate, guard)) {
		        predicate = undefined;
		      }
		      return func(collection, getIteratee(predicate, 3));
		    }
	
		    /**
		     * Iterates over elements of `collection`, returning an array of all elements
		     * `predicate` returns truthy for. The predicate is invoked with three
		     * arguments: (value, index|key, collection).
		     *
		     * **Note:** Unlike `_.remove`, this method returns a new array.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Collection
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Function} [predicate=_.identity] The function invoked per iteration.
		     * @returns {Array} Returns the new filtered array.
		     * @see _.reject
		     * @example
		     *
		     * var users = [
		     *   { 'user': 'barney', 'age': 36, 'active': true },
		     *   { 'user': 'fred',   'age': 40, 'active': false }
		     * ];
		     *
		     * _.filter(users, function(o) { return !o.active; });
		     * // => objects for ['fred']
		     *
		     * // The `_.matches` iteratee shorthand.
		     * _.filter(users, { 'age': 36, 'active': true });
		     * // => objects for ['barney']
		     *
		     * // The `_.matchesProperty` iteratee shorthand.
		     * _.filter(users, ['active', false]);
		     * // => objects for ['fred']
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.filter(users, 'active');
		     * // => objects for ['barney']
		     */
		    function filter(collection, predicate) {
		      var func = isArray(collection) ? arrayFilter : baseFilter;
		      return func(collection, getIteratee(predicate, 3));
		    }
	
		    /**
		     * Iterates over elements of `collection`, returning the first element
		     * `predicate` returns truthy for. The predicate is invoked with three
		     * arguments: (value, index|key, collection).
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Collection
		     * @param {Array|Object} collection The collection to inspect.
		     * @param {Function} [predicate=_.identity] The function invoked per iteration.
		     * @param {number} [fromIndex=0] The index to search from.
		     * @returns {*} Returns the matched element, else `undefined`.
		     * @example
		     *
		     * var users = [
		     *   { 'user': 'barney',  'age': 36, 'active': true },
		     *   { 'user': 'fred',    'age': 40, 'active': false },
		     *   { 'user': 'pebbles', 'age': 1,  'active': true }
		     * ];
		     *
		     * _.find(users, function(o) { return o.age < 40; });
		     * // => object for 'barney'
		     *
		     * // The `_.matches` iteratee shorthand.
		     * _.find(users, { 'age': 1, 'active': true });
		     * // => object for 'pebbles'
		     *
		     * // The `_.matchesProperty` iteratee shorthand.
		     * _.find(users, ['active', false]);
		     * // => object for 'fred'
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.find(users, 'active');
		     * // => object for 'barney'
		     */
		    var find = createFind(findIndex);
	
		    /**
		     * This method is like `_.find` except that it iterates over elements of
		     * `collection` from right to left.
		     *
		     * @static
		     * @memberOf _
		     * @since 2.0.0
		     * @category Collection
		     * @param {Array|Object} collection The collection to inspect.
		     * @param {Function} [predicate=_.identity] The function invoked per iteration.
		     * @param {number} [fromIndex=collection.length-1] The index to search from.
		     * @returns {*} Returns the matched element, else `undefined`.
		     * @example
		     *
		     * _.findLast([1, 2, 3, 4], function(n) {
		     *   return n % 2 == 1;
		     * });
		     * // => 3
		     */
		    var findLast = createFind(findLastIndex);
	
		    /**
		     * Creates a flattened array of values by running each element in `collection`
		     * thru `iteratee` and flattening the mapped results. The iteratee is invoked
		     * with three arguments: (value, index|key, collection).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Collection
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
		     * @returns {Array} Returns the new flattened array.
		     * @example
		     *
		     * function duplicate(n) {
		     *   return [n, n];
		     * }
		     *
		     * _.flatMap([1, 2], duplicate);
		     * // => [1, 1, 2, 2]
		     */
		    function flatMap(collection, iteratee) {
		      return baseFlatten(map(collection, iteratee), 1);
		    }
	
		    /**
		     * This method is like `_.flatMap` except that it recursively flattens the
		     * mapped results.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.7.0
		     * @category Collection
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
		     * @returns {Array} Returns the new flattened array.
		     * @example
		     *
		     * function duplicate(n) {
		     *   return [[[n, n]]];
		     * }
		     *
		     * _.flatMapDeep([1, 2], duplicate);
		     * // => [1, 1, 2, 2]
		     */
		    function flatMapDeep(collection, iteratee) {
		      return baseFlatten(map(collection, iteratee), INFINITY);
		    }
	
		    /**
		     * This method is like `_.flatMap` except that it recursively flattens the
		     * mapped results up to `depth` times.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.7.0
		     * @category Collection
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
		     * @param {number} [depth=1] The maximum recursion depth.
		     * @returns {Array} Returns the new flattened array.
		     * @example
		     *
		     * function duplicate(n) {
		     *   return [[[n, n]]];
		     * }
		     *
		     * _.flatMapDepth([1, 2], duplicate, 2);
		     * // => [[1, 1], [2, 2]]
		     */
		    function flatMapDepth(collection, iteratee, depth) {
		      depth = depth === undefined ? 1 : toInteger(depth);
		      return baseFlatten(map(collection, iteratee), depth);
		    }
	
		    /**
		     * Iterates over elements of `collection` and invokes `iteratee` for each element.
		     * The iteratee is invoked with three arguments: (value, index|key, collection).
		     * Iteratee functions may exit iteration early by explicitly returning `false`.
		     *
		     * **Note:** As with other "Collections" methods, objects with a "length"
		     * property are iterated like arrays. To avoid this behavior use `_.forIn`
		     * or `_.forOwn` for object iteration.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @alias each
		     * @category Collection
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
		     * @returns {Array|Object} Returns `collection`.
		     * @see _.forEachRight
		     * @example
		     *
		     * _.forEach([1, 2], function(value) {
		     *   console.log(value);
		     * });
		     * // => Logs `1` then `2`.
		     *
		     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
		     *   console.log(key);
		     * });
		     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
		     */
		    function forEach(collection, iteratee) {
		      var func = isArray(collection) ? arrayEach : baseEach;
		      return func(collection, getIteratee(iteratee, 3));
		    }
	
		    /**
		     * This method is like `_.forEach` except that it iterates over elements of
		     * `collection` from right to left.
		     *
		     * @static
		     * @memberOf _
		     * @since 2.0.0
		     * @alias eachRight
		     * @category Collection
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
		     * @returns {Array|Object} Returns `collection`.
		     * @see _.forEach
		     * @example
		     *
		     * _.forEachRight([1, 2], function(value) {
		     *   console.log(value);
		     * });
		     * // => Logs `2` then `1`.
		     */
		    function forEachRight(collection, iteratee) {
		      var func = isArray(collection) ? arrayEachRight : baseEachRight;
		      return func(collection, getIteratee(iteratee, 3));
		    }
	
		    /**
		     * Creates an object composed of keys generated from the results of running
		     * each element of `collection` thru `iteratee`. The order of grouped values
		     * is determined by the order they occur in `collection`. The corresponding
		     * value of each key is an array of elements responsible for generating the
		     * key. The iteratee is invoked with one argument: (value).
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Collection
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
		     * @returns {Object} Returns the composed aggregate object.
		     * @example
		     *
		     * _.groupBy([6.1, 4.2, 6.3], Math.floor);
		     * // => { '4': [4.2], '6': [6.1, 6.3] }
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.groupBy(['one', 'two', 'three'], 'length');
		     * // => { '3': ['one', 'two'], '5': ['three'] }
		     */
		    var groupBy = createAggregator(function(result, value, key) {
		      if (hasOwnProperty.call(result, key)) {
		        result[key].push(value);
		      } else {
		        baseAssignValue(result, key, [value]);
		      }
		    });
	
		    /**
		     * Checks if `value` is in `collection`. If `collection` is a string, it's
		     * checked for a substring of `value`, otherwise
		     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
		     * is used for equality comparisons. If `fromIndex` is negative, it's used as
		     * the offset from the end of `collection`.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Collection
		     * @param {Array|Object|string} collection The collection to inspect.
		     * @param {*} value The value to search for.
		     * @param {number} [fromIndex=0] The index to search from.
		     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
		     * @returns {boolean} Returns `true` if `value` is found, else `false`.
		     * @example
		     *
		     * _.includes([1, 2, 3], 1);
		     * // => true
		     *
		     * _.includes([1, 2, 3], 1, 2);
		     * // => false
		     *
		     * _.includes({ 'a': 1, 'b': 2 }, 1);
		     * // => true
		     *
		     * _.includes('abcd', 'bc');
		     * // => true
		     */
		    function includes(collection, value, fromIndex, guard) {
		      collection = isArrayLike(collection) ? collection : values(collection);
		      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;
	
		      var length = collection.length;
		      if (fromIndex < 0) {
		        fromIndex = nativeMax(length + fromIndex, 0);
		      }
		      return isString(collection)
		        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
		        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
		    }
	
		    /**
		     * Invokes the method at `path` of each element in `collection`, returning
		     * an array of the results of each invoked method. Any additional arguments
		     * are provided to each invoked method. If `path` is a function, it's invoked
		     * for, and `this` bound to, each element in `collection`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Collection
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Array|Function|string} path The path of the method to invoke or
		     *  the function invoked per iteration.
		     * @param {...*} [args] The arguments to invoke each method with.
		     * @returns {Array} Returns the array of results.
		     * @example
		     *
		     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
		     * // => [[1, 5, 7], [1, 2, 3]]
		     *
		     * _.invokeMap([123, 456], String.prototype.split, '');
		     * // => [['1', '2', '3'], ['4', '5', '6']]
		     */
		    var invokeMap = baseRest(function(collection, path, args) {
		      var index = -1,
		          isFunc = typeof path == 'function',
		          result = isArrayLike(collection) ? Array(collection.length) : [];
	
		      baseEach(collection, function(value) {
		        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
		      });
		      return result;
		    });
	
		    /**
		     * Creates an object composed of keys generated from the results of running
		     * each element of `collection` thru `iteratee`. The corresponding value of
		     * each key is the last element responsible for generating the key. The
		     * iteratee is invoked with one argument: (value).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Collection
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
		     * @returns {Object} Returns the composed aggregate object.
		     * @example
		     *
		     * var array = [
		     *   { 'dir': 'left', 'code': 97 },
		     *   { 'dir': 'right', 'code': 100 }
		     * ];
		     *
		     * _.keyBy(array, function(o) {
		     *   return String.fromCharCode(o.code);
		     * });
		     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
		     *
		     * _.keyBy(array, 'dir');
		     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
		     */
		    var keyBy = createAggregator(function(result, value, key) {
		      baseAssignValue(result, key, value);
		    });
	
		    /**
		     * Creates an array of values by running each element in `collection` thru
		     * `iteratee`. The iteratee is invoked with three arguments:
		     * (value, index|key, collection).
		     *
		     * Many lodash methods are guarded to work as iteratees for methods like
		     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
		     *
		     * The guarded methods are:
		     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
		     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
		     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
		     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Collection
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
		     * @returns {Array} Returns the new mapped array.
		     * @example
		     *
		     * function square(n) {
		     *   return n * n;
		     * }
		     *
		     * _.map([4, 8], square);
		     * // => [16, 64]
		     *
		     * _.map({ 'a': 4, 'b': 8 }, square);
		     * // => [16, 64] (iteration order is not guaranteed)
		     *
		     * var users = [
		     *   { 'user': 'barney' },
		     *   { 'user': 'fred' }
		     * ];
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.map(users, 'user');
		     * // => ['barney', 'fred']
		     */
		    function map(collection, iteratee) {
		      var func = isArray(collection) ? arrayMap : baseMap;
		      return func(collection, getIteratee(iteratee, 3));
		    }
	
		    /**
		     * This method is like `_.sortBy` except that it allows specifying the sort
		     * orders of the iteratees to sort by. If `orders` is unspecified, all values
		     * are sorted in ascending order. Otherwise, specify an order of "desc" for
		     * descending or "asc" for ascending sort order of corresponding values.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Collection
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
		     *  The iteratees to sort by.
		     * @param {string[]} [orders] The sort orders of `iteratees`.
		     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
		     * @returns {Array} Returns the new sorted array.
		     * @example
		     *
		     * var users = [
		     *   { 'user': 'fred',   'age': 48 },
		     *   { 'user': 'barney', 'age': 34 },
		     *   { 'user': 'fred',   'age': 40 },
		     *   { 'user': 'barney', 'age': 36 }
		     * ];
		     *
		     * // Sort by `user` in ascending order and by `age` in descending order.
		     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
		     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
		     */
		    function orderBy(collection, iteratees, orders, guard) {
		      if (collection == null) {
		        return [];
		      }
		      if (!isArray(iteratees)) {
		        iteratees = iteratees == null ? [] : [iteratees];
		      }
		      orders = guard ? undefined : orders;
		      if (!isArray(orders)) {
		        orders = orders == null ? [] : [orders];
		      }
		      return baseOrderBy(collection, iteratees, orders);
		    }
	
		    /**
		     * Creates an array of elements split into two groups, the first of which
		     * contains elements `predicate` returns truthy for, the second of which
		     * contains elements `predicate` returns falsey for. The predicate is
		     * invoked with one argument: (value).
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Collection
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Function} [predicate=_.identity] The function invoked per iteration.
		     * @returns {Array} Returns the array of grouped elements.
		     * @example
		     *
		     * var users = [
		     *   { 'user': 'barney',  'age': 36, 'active': false },
		     *   { 'user': 'fred',    'age': 40, 'active': true },
		     *   { 'user': 'pebbles', 'age': 1,  'active': false }
		     * ];
		     *
		     * _.partition(users, function(o) { return o.active; });
		     * // => objects for [['fred'], ['barney', 'pebbles']]
		     *
		     * // The `_.matches` iteratee shorthand.
		     * _.partition(users, { 'age': 1, 'active': false });
		     * // => objects for [['pebbles'], ['barney', 'fred']]
		     *
		     * // The `_.matchesProperty` iteratee shorthand.
		     * _.partition(users, ['active', false]);
		     * // => objects for [['barney', 'pebbles'], ['fred']]
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.partition(users, 'active');
		     * // => objects for [['fred'], ['barney', 'pebbles']]
		     */
		    var partition = createAggregator(function(result, value, key) {
		      result[key ? 0 : 1].push(value);
		    }, function() { return [[], []]; });
	
		    /**
		     * Reduces `collection` to a value which is the accumulated result of running
		     * each element in `collection` thru `iteratee`, where each successive
		     * invocation is supplied the return value of the previous. If `accumulator`
		     * is not given, the first element of `collection` is used as the initial
		     * value. The iteratee is invoked with four arguments:
		     * (accumulator, value, index|key, collection).
		     *
		     * Many lodash methods are guarded to work as iteratees for methods like
		     * `_.reduce`, `_.reduceRight`, and `_.transform`.
		     *
		     * The guarded methods are:
		     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
		     * and `sortBy`
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Collection
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
		     * @param {*} [accumulator] The initial value.
		     * @returns {*} Returns the accumulated value.
		     * @see _.reduceRight
		     * @example
		     *
		     * _.reduce([1, 2], function(sum, n) {
		     *   return sum + n;
		     * }, 0);
		     * // => 3
		     *
		     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
		     *   (result[value] || (result[value] = [])).push(key);
		     *   return result;
		     * }, {});
		     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
		     */
		    function reduce(collection, iteratee, accumulator) {
		      var func = isArray(collection) ? arrayReduce : baseReduce,
		          initAccum = arguments.length < 3;
	
		      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
		    }
	
		    /**
		     * This method is like `_.reduce` except that it iterates over elements of
		     * `collection` from right to left.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Collection
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
		     * @param {*} [accumulator] The initial value.
		     * @returns {*} Returns the accumulated value.
		     * @see _.reduce
		     * @example
		     *
		     * var array = [[0, 1], [2, 3], [4, 5]];
		     *
		     * _.reduceRight(array, function(flattened, other) {
		     *   return flattened.concat(other);
		     * }, []);
		     * // => [4, 5, 2, 3, 0, 1]
		     */
		    function reduceRight(collection, iteratee, accumulator) {
		      var func = isArray(collection) ? arrayReduceRight : baseReduce,
		          initAccum = arguments.length < 3;
	
		      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
		    }
	
		    /**
		     * The opposite of `_.filter`; this method returns the elements of `collection`
		     * that `predicate` does **not** return truthy for.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Collection
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Function} [predicate=_.identity] The function invoked per iteration.
		     * @returns {Array} Returns the new filtered array.
		     * @see _.filter
		     * @example
		     *
		     * var users = [
		     *   { 'user': 'barney', 'age': 36, 'active': false },
		     *   { 'user': 'fred',   'age': 40, 'active': true }
		     * ];
		     *
		     * _.reject(users, function(o) { return !o.active; });
		     * // => objects for ['fred']
		     *
		     * // The `_.matches` iteratee shorthand.
		     * _.reject(users, { 'age': 40, 'active': true });
		     * // => objects for ['barney']
		     *
		     * // The `_.matchesProperty` iteratee shorthand.
		     * _.reject(users, ['active', false]);
		     * // => objects for ['fred']
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.reject(users, 'active');
		     * // => objects for ['barney']
		     */
		    function reject(collection, predicate) {
		      var func = isArray(collection) ? arrayFilter : baseFilter;
		      return func(collection, negate(getIteratee(predicate, 3)));
		    }
	
		    /**
		     * Gets a random element from `collection`.
		     *
		     * @static
		     * @memberOf _
		     * @since 2.0.0
		     * @category Collection
		     * @param {Array|Object} collection The collection to sample.
		     * @returns {*} Returns the random element.
		     * @example
		     *
		     * _.sample([1, 2, 3, 4]);
		     * // => 2
		     */
		    function sample(collection) {
		      var func = isArray(collection) ? arraySample : baseSample;
		      return func(collection);
		    }
	
		    /**
		     * Gets `n` random elements at unique keys from `collection` up to the
		     * size of `collection`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Collection
		     * @param {Array|Object} collection The collection to sample.
		     * @param {number} [n=1] The number of elements to sample.
		     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		     * @returns {Array} Returns the random elements.
		     * @example
		     *
		     * _.sampleSize([1, 2, 3], 2);
		     * // => [3, 1]
		     *
		     * _.sampleSize([1, 2, 3], 4);
		     * // => [2, 3, 1]
		     */
		    function sampleSize(collection, n, guard) {
		      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {
		        n = 1;
		      } else {
		        n = toInteger(n);
		      }
		      var func = isArray(collection) ? arraySampleSize : baseSampleSize;
		      return func(collection, n);
		    }
	
		    /**
		     * Creates an array of shuffled values, using a version of the
		     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Collection
		     * @param {Array|Object} collection The collection to shuffle.
		     * @returns {Array} Returns the new shuffled array.
		     * @example
		     *
		     * _.shuffle([1, 2, 3, 4]);
		     * // => [4, 1, 3, 2]
		     */
		    function shuffle(collection) {
		      var func = isArray(collection) ? arrayShuffle : baseShuffle;
		      return func(collection);
		    }
	
		    /**
		     * Gets the size of `collection` by returning its length for array-like
		     * values or the number of own enumerable string keyed properties for objects.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Collection
		     * @param {Array|Object|string} collection The collection to inspect.
		     * @returns {number} Returns the collection size.
		     * @example
		     *
		     * _.size([1, 2, 3]);
		     * // => 3
		     *
		     * _.size({ 'a': 1, 'b': 2 });
		     * // => 2
		     *
		     * _.size('pebbles');
		     * // => 7
		     */
		    function size(collection) {
		      if (collection == null) {
		        return 0;
		      }
		      if (isArrayLike(collection)) {
		        return isString(collection) ? stringSize(collection) : collection.length;
		      }
		      var tag = getTag(collection);
		      if (tag == mapTag || tag == setTag) {
		        return collection.size;
		      }
		      return baseKeys(collection).length;
		    }
	
		    /**
		     * Checks if `predicate` returns truthy for **any** element of `collection`.
		     * Iteration is stopped once `predicate` returns truthy. The predicate is
		     * invoked with three arguments: (value, index|key, collection).
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Collection
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Function} [predicate=_.identity] The function invoked per iteration.
		     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		     * @returns {boolean} Returns `true` if any element passes the predicate check,
		     *  else `false`.
		     * @example
		     *
		     * _.some([null, 0, 'yes', false], Boolean);
		     * // => true
		     *
		     * var users = [
		     *   { 'user': 'barney', 'active': true },
		     *   { 'user': 'fred',   'active': false }
		     * ];
		     *
		     * // The `_.matches` iteratee shorthand.
		     * _.some(users, { 'user': 'barney', 'active': false });
		     * // => false
		     *
		     * // The `_.matchesProperty` iteratee shorthand.
		     * _.some(users, ['active', false]);
		     * // => true
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.some(users, 'active');
		     * // => true
		     */
		    function some(collection, predicate, guard) {
		      var func = isArray(collection) ? arraySome : baseSome;
		      if (guard && isIterateeCall(collection, predicate, guard)) {
		        predicate = undefined;
		      }
		      return func(collection, getIteratee(predicate, 3));
		    }
	
		    /**
		     * Creates an array of elements, sorted in ascending order by the results of
		     * running each element in a collection thru each iteratee. This method
		     * performs a stable sort, that is, it preserves the original sort order of
		     * equal elements. The iteratees are invoked with one argument: (value).
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Collection
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {...(Function|Function[])} [iteratees=[_.identity]]
		     *  The iteratees to sort by.
		     * @returns {Array} Returns the new sorted array.
		     * @example
		     *
		     * var users = [
		     *   { 'user': 'fred',   'age': 48 },
		     *   { 'user': 'barney', 'age': 36 },
		     *   { 'user': 'fred',   'age': 40 },
		     *   { 'user': 'barney', 'age': 34 }
		     * ];
		     *
		     * _.sortBy(users, [function(o) { return o.user; }]);
		     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
		     *
		     * _.sortBy(users, ['user', 'age']);
		     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]
		     */
		    var sortBy = baseRest(function(collection, iteratees) {
		      if (collection == null) {
		        return [];
		      }
		      var length = iteratees.length;
		      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
		        iteratees = [];
		      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
		        iteratees = [iteratees[0]];
		      }
		      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
		    });
	
		    /*------------------------------------------------------------------------*/
	
		    /**
		     * Gets the timestamp of the number of milliseconds that have elapsed since
		     * the Unix epoch (1 January 1970 00:00:00 UTC).
		     *
		     * @static
		     * @memberOf _
		     * @since 2.4.0
		     * @category Date
		     * @returns {number} Returns the timestamp.
		     * @example
		     *
		     * _.defer(function(stamp) {
		     *   console.log(_.now() - stamp);
		     * }, _.now());
		     * // => Logs the number of milliseconds it took for the deferred invocation.
		     */
		    var now = ctxNow || function() {
		      return root.Date.now();
		    };
	
		    /*------------------------------------------------------------------------*/
	
		    /**
		     * The opposite of `_.before`; this method creates a function that invokes
		     * `func` once it's called `n` or more times.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Function
		     * @param {number} n The number of calls before `func` is invoked.
		     * @param {Function} func The function to restrict.
		     * @returns {Function} Returns the new restricted function.
		     * @example
		     *
		     * var saves = ['profile', 'settings'];
		     *
		     * var done = _.after(saves.length, function() {
		     *   console.log('done saving!');
		     * });
		     *
		     * _.forEach(saves, function(type) {
		     *   asyncSave({ 'type': type, 'complete': done });
		     * });
		     * // => Logs 'done saving!' after the two async saves have completed.
		     */
		    function after(n, func) {
		      if (typeof func != 'function') {
		        throw new TypeError(FUNC_ERROR_TEXT);
		      }
		      n = toInteger(n);
		      return function() {
		        if (--n < 1) {
		          return func.apply(this, arguments);
		        }
		      };
		    }
	
		    /**
		     * Creates a function that invokes `func`, with up to `n` arguments,
		     * ignoring any additional arguments.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Function
		     * @param {Function} func The function to cap arguments for.
		     * @param {number} [n=func.length] The arity cap.
		     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		     * @returns {Function} Returns the new capped function.
		     * @example
		     *
		     * _.map(['6', '8', '10'], _.ary(parseInt, 1));
		     * // => [6, 8, 10]
		     */
		    function ary(func, n, guard) {
		      n = guard ? undefined : n;
		      n = (func && n == null) ? func.length : n;
		      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
		    }
	
		    /**
		     * Creates a function that invokes `func`, with the `this` binding and arguments
		     * of the created function, while it's called less than `n` times. Subsequent
		     * calls to the created function return the result of the last `func` invocation.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Function
		     * @param {number} n The number of calls at which `func` is no longer invoked.
		     * @param {Function} func The function to restrict.
		     * @returns {Function} Returns the new restricted function.
		     * @example
		     *
		     * jQuery(element).on('click', _.before(5, addContactToList));
		     * // => Allows adding up to 4 contacts to the list.
		     */
		    function before(n, func) {
		      var result;
		      if (typeof func != 'function') {
		        throw new TypeError(FUNC_ERROR_TEXT);
		      }
		      n = toInteger(n);
		      return function() {
		        if (--n > 0) {
		          result = func.apply(this, arguments);
		        }
		        if (n <= 1) {
		          func = undefined;
		        }
		        return result;
		      };
		    }
	
		    /**
		     * Creates a function that invokes `func` with the `this` binding of `thisArg`
		     * and `partials` prepended to the arguments it receives.
		     *
		     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
		     * may be used as a placeholder for partially applied arguments.
		     *
		     * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
		     * property of bound functions.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Function
		     * @param {Function} func The function to bind.
		     * @param {*} thisArg The `this` binding of `func`.
		     * @param {...*} [partials] The arguments to be partially applied.
		     * @returns {Function} Returns the new bound function.
		     * @example
		     *
		     * function greet(greeting, punctuation) {
		     *   return greeting + ' ' + this.user + punctuation;
		     * }
		     *
		     * var object = { 'user': 'fred' };
		     *
		     * var bound = _.bind(greet, object, 'hi');
		     * bound('!');
		     * // => 'hi fred!'
		     *
		     * // Bound with placeholders.
		     * var bound = _.bind(greet, object, _, '!');
		     * bound('hi');
		     * // => 'hi fred!'
		     */
		    var bind = baseRest(function(func, thisArg, partials) {
		      var bitmask = WRAP_BIND_FLAG;
		      if (partials.length) {
		        var holders = replaceHolders(partials, getHolder(bind));
		        bitmask |= WRAP_PARTIAL_FLAG;
		      }
		      return createWrap(func, bitmask, thisArg, partials, holders);
		    });
	
		    /**
		     * Creates a function that invokes the method at `object[key]` with `partials`
		     * prepended to the arguments it receives.
		     *
		     * This method differs from `_.bind` by allowing bound functions to reference
		     * methods that may be redefined or don't yet exist. See
		     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
		     * for more details.
		     *
		     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
		     * builds, may be used as a placeholder for partially applied arguments.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.10.0
		     * @category Function
		     * @param {Object} object The object to invoke the method on.
		     * @param {string} key The key of the method.
		     * @param {...*} [partials] The arguments to be partially applied.
		     * @returns {Function} Returns the new bound function.
		     * @example
		     *
		     * var object = {
		     *   'user': 'fred',
		     *   'greet': function(greeting, punctuation) {
		     *     return greeting + ' ' + this.user + punctuation;
		     *   }
		     * };
		     *
		     * var bound = _.bindKey(object, 'greet', 'hi');
		     * bound('!');
		     * // => 'hi fred!'
		     *
		     * object.greet = function(greeting, punctuation) {
		     *   return greeting + 'ya ' + this.user + punctuation;
		     * };
		     *
		     * bound('!');
		     * // => 'hiya fred!'
		     *
		     * // Bound with placeholders.
		     * var bound = _.bindKey(object, 'greet', _, '!');
		     * bound('hi');
		     * // => 'hiya fred!'
		     */
		    var bindKey = baseRest(function(object, key, partials) {
		      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
		      if (partials.length) {
		        var holders = replaceHolders(partials, getHolder(bindKey));
		        bitmask |= WRAP_PARTIAL_FLAG;
		      }
		      return createWrap(key, bitmask, object, partials, holders);
		    });
	
		    /**
		     * Creates a function that accepts arguments of `func` and either invokes
		     * `func` returning its result, if at least `arity` number of arguments have
		     * been provided, or returns a function that accepts the remaining `func`
		     * arguments, and so on. The arity of `func` may be specified if `func.length`
		     * is not sufficient.
		     *
		     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
		     * may be used as a placeholder for provided arguments.
		     *
		     * **Note:** This method doesn't set the "length" property of curried functions.
		     *
		     * @static
		     * @memberOf _
		     * @since 2.0.0
		     * @category Function
		     * @param {Function} func The function to curry.
		     * @param {number} [arity=func.length] The arity of `func`.
		     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		     * @returns {Function} Returns the new curried function.
		     * @example
		     *
		     * var abc = function(a, b, c) {
		     *   return [a, b, c];
		     * };
		     *
		     * var curried = _.curry(abc);
		     *
		     * curried(1)(2)(3);
		     * // => [1, 2, 3]
		     *
		     * curried(1, 2)(3);
		     * // => [1, 2, 3]
		     *
		     * curried(1, 2, 3);
		     * // => [1, 2, 3]
		     *
		     * // Curried with placeholders.
		     * curried(1)(_, 3)(2);
		     * // => [1, 2, 3]
		     */
		    function curry(func, arity, guard) {
		      arity = guard ? undefined : arity;
		      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
		      result.placeholder = curry.placeholder;
		      return result;
		    }
	
		    /**
		     * This method is like `_.curry` except that arguments are applied to `func`
		     * in the manner of `_.partialRight` instead of `_.partial`.
		     *
		     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
		     * builds, may be used as a placeholder for provided arguments.
		     *
		     * **Note:** This method doesn't set the "length" property of curried functions.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Function
		     * @param {Function} func The function to curry.
		     * @param {number} [arity=func.length] The arity of `func`.
		     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		     * @returns {Function} Returns the new curried function.
		     * @example
		     *
		     * var abc = function(a, b, c) {
		     *   return [a, b, c];
		     * };
		     *
		     * var curried = _.curryRight(abc);
		     *
		     * curried(3)(2)(1);
		     * // => [1, 2, 3]
		     *
		     * curried(2, 3)(1);
		     * // => [1, 2, 3]
		     *
		     * curried(1, 2, 3);
		     * // => [1, 2, 3]
		     *
		     * // Curried with placeholders.
		     * curried(3)(1, _)(2);
		     * // => [1, 2, 3]
		     */
		    function curryRight(func, arity, guard) {
		      arity = guard ? undefined : arity;
		      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
		      result.placeholder = curryRight.placeholder;
		      return result;
		    }
	
		    /**
		     * Creates a debounced function that delays invoking `func` until after `wait`
		     * milliseconds have elapsed since the last time the debounced function was
		     * invoked. The debounced function comes with a `cancel` method to cancel
		     * delayed `func` invocations and a `flush` method to immediately invoke them.
		     * Provide `options` to indicate whether `func` should be invoked on the
		     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
		     * with the last arguments provided to the debounced function. Subsequent
		     * calls to the debounced function return the result of the last `func`
		     * invocation.
		     *
		     * **Note:** If `leading` and `trailing` options are `true`, `func` is
		     * invoked on the trailing edge of the timeout only if the debounced function
		     * is invoked more than once during the `wait` timeout.
		     *
		     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
		     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
		     *
		     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
		     * for details over the differences between `_.debounce` and `_.throttle`.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Function
		     * @param {Function} func The function to debounce.
		     * @param {number} [wait=0] The number of milliseconds to delay.
		     * @param {Object} [options={}] The options object.
		     * @param {boolean} [options.leading=false]
		     *  Specify invoking on the leading edge of the timeout.
		     * @param {number} [options.maxWait]
		     *  The maximum time `func` is allowed to be delayed before it's invoked.
		     * @param {boolean} [options.trailing=true]
		     *  Specify invoking on the trailing edge of the timeout.
		     * @returns {Function} Returns the new debounced function.
		     * @example
		     *
		     * // Avoid costly calculations while the window size is in flux.
		     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
		     *
		     * // Invoke `sendMail` when clicked, debouncing subsequent calls.
		     * jQuery(element).on('click', _.debounce(sendMail, 300, {
		     *   'leading': true,
		     *   'trailing': false
		     * }));
		     *
		     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
		     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
		     * var source = new EventSource('/stream');
		     * jQuery(source).on('message', debounced);
		     *
		     * // Cancel the trailing debounced invocation.
		     * jQuery(window).on('popstate', debounced.cancel);
		     */
		    function debounce(func, wait, options) {
		      var lastArgs,
		          lastThis,
		          maxWait,
		          result,
		          timerId,
		          lastCallTime,
		          lastInvokeTime = 0,
		          leading = false,
		          maxing = false,
		          trailing = true;
	
		      if (typeof func != 'function') {
		        throw new TypeError(FUNC_ERROR_TEXT);
		      }
		      wait = toNumber(wait) || 0;
		      if (isObject(options)) {
		        leading = !!options.leading;
		        maxing = 'maxWait' in options;
		        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
		        trailing = 'trailing' in options ? !!options.trailing : trailing;
		      }
	
		      function invokeFunc(time) {
		        var args = lastArgs,
		            thisArg = lastThis;
	
		        lastArgs = lastThis = undefined;
		        lastInvokeTime = time;
		        result = func.apply(thisArg, args);
		        return result;
		      }
	
		      function leadingEdge(time) {
		        // Reset any `maxWait` timer.
		        lastInvokeTime = time;
		        // Start the timer for the trailing edge.
		        timerId = setTimeout(timerExpired, wait);
		        // Invoke the leading edge.
		        return leading ? invokeFunc(time) : result;
		      }
	
		      function remainingWait(time) {
		        var timeSinceLastCall = time - lastCallTime,
		            timeSinceLastInvoke = time - lastInvokeTime,
		            result = wait - timeSinceLastCall;
	
		        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
		      }
	
		      function shouldInvoke(time) {
		        var timeSinceLastCall = time - lastCallTime,
		            timeSinceLastInvoke = time - lastInvokeTime;
	
		        // Either this is the first call, activity has stopped and we're at the
		        // trailing edge, the system time has gone backwards and we're treating
		        // it as the trailing edge, or we've hit the `maxWait` limit.
		        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
		          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
		      }
	
		      function timerExpired() {
		        var time = now();
		        if (shouldInvoke(time)) {
		          return trailingEdge(time);
		        }
		        // Restart the timer.
		        timerId = setTimeout(timerExpired, remainingWait(time));
		      }
	
		      function trailingEdge(time) {
		        timerId = undefined;
	
		        // Only invoke if we have `lastArgs` which means `func` has been
		        // debounced at least once.
		        if (trailing && lastArgs) {
		          return invokeFunc(time);
		        }
		        lastArgs = lastThis = undefined;
		        return result;
		      }
	
		      function cancel() {
		        if (timerId !== undefined) {
		          clearTimeout(timerId);
		        }
		        lastInvokeTime = 0;
		        lastArgs = lastCallTime = lastThis = timerId = undefined;
		      }
	
		      function flush() {
		        return timerId === undefined ? result : trailingEdge(now());
		      }
	
		      function debounced() {
		        var time = now(),
		            isInvoking = shouldInvoke(time);
	
		        lastArgs = arguments;
		        lastThis = this;
		        lastCallTime = time;
	
		        if (isInvoking) {
		          if (timerId === undefined) {
		            return leadingEdge(lastCallTime);
		          }
		          if (maxing) {
		            // Handle invocations in a tight loop.
		            timerId = setTimeout(timerExpired, wait);
		            return invokeFunc(lastCallTime);
		          }
		        }
		        if (timerId === undefined) {
		          timerId = setTimeout(timerExpired, wait);
		        }
		        return result;
		      }
		      debounced.cancel = cancel;
		      debounced.flush = flush;
		      return debounced;
		    }
	
		    /**
		     * Defers invoking the `func` until the current call stack has cleared. Any
		     * additional arguments are provided to `func` when it's invoked.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Function
		     * @param {Function} func The function to defer.
		     * @param {...*} [args] The arguments to invoke `func` with.
		     * @returns {number} Returns the timer id.
		     * @example
		     *
		     * _.defer(function(text) {
		     *   console.log(text);
		     * }, 'deferred');
		     * // => Logs 'deferred' after one millisecond.
		     */
		    var defer = baseRest(function(func, args) {
		      return baseDelay(func, 1, args);
		    });
	
		    /**
		     * Invokes `func` after `wait` milliseconds. Any additional arguments are
		     * provided to `func` when it's invoked.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Function
		     * @param {Function} func The function to delay.
		     * @param {number} wait The number of milliseconds to delay invocation.
		     * @param {...*} [args] The arguments to invoke `func` with.
		     * @returns {number} Returns the timer id.
		     * @example
		     *
		     * _.delay(function(text) {
		     *   console.log(text);
		     * }, 1000, 'later');
		     * // => Logs 'later' after one second.
		     */
		    var delay = baseRest(function(func, wait, args) {
		      return baseDelay(func, toNumber(wait) || 0, args);
		    });
	
		    /**
		     * Creates a function that invokes `func` with arguments reversed.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Function
		     * @param {Function} func The function to flip arguments for.
		     * @returns {Function} Returns the new flipped function.
		     * @example
		     *
		     * var flipped = _.flip(function() {
		     *   return _.toArray(arguments);
		     * });
		     *
		     * flipped('a', 'b', 'c', 'd');
		     * // => ['d', 'c', 'b', 'a']
		     */
		    function flip(func) {
		      return createWrap(func, WRAP_FLIP_FLAG);
		    }
	
		    /**
		     * Creates a function that memoizes the result of `func`. If `resolver` is
		     * provided, it determines the cache key for storing the result based on the
		     * arguments provided to the memoized function. By default, the first argument
		     * provided to the memoized function is used as the map cache key. The `func`
		     * is invoked with the `this` binding of the memoized function.
		     *
		     * **Note:** The cache is exposed as the `cache` property on the memoized
		     * function. Its creation may be customized by replacing the `_.memoize.Cache`
		     * constructor with one whose instances implement the
		     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
		     * method interface of `clear`, `delete`, `get`, `has`, and `set`.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Function
		     * @param {Function} func The function to have its output memoized.
		     * @param {Function} [resolver] The function to resolve the cache key.
		     * @returns {Function} Returns the new memoized function.
		     * @example
		     *
		     * var object = { 'a': 1, 'b': 2 };
		     * var other = { 'c': 3, 'd': 4 };
		     *
		     * var values = _.memoize(_.values);
		     * values(object);
		     * // => [1, 2]
		     *
		     * values(other);
		     * // => [3, 4]
		     *
		     * object.a = 2;
		     * values(object);
		     * // => [1, 2]
		     *
		     * // Modify the result cache.
		     * values.cache.set(object, ['a', 'b']);
		     * values(object);
		     * // => ['a', 'b']
		     *
		     * // Replace `_.memoize.Cache`.
		     * _.memoize.Cache = WeakMap;
		     */
		    function memoize(func, resolver) {
		      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
		        throw new TypeError(FUNC_ERROR_TEXT);
		      }
		      var memoized = function() {
		        var args = arguments,
		            key = resolver ? resolver.apply(this, args) : args[0],
		            cache = memoized.cache;
	
		        if (cache.has(key)) {
		          return cache.get(key);
		        }
		        var result = func.apply(this, args);
		        memoized.cache = cache.set(key, result) || cache;
		        return result;
		      };
		      memoized.cache = new (memoize.Cache || MapCache);
		      return memoized;
		    }
	
		    // Expose `MapCache`.
		    memoize.Cache = MapCache;
	
		    /**
		     * Creates a function that negates the result of the predicate `func`. The
		     * `func` predicate is invoked with the `this` binding and arguments of the
		     * created function.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Function
		     * @param {Function} predicate The predicate to negate.
		     * @returns {Function} Returns the new negated function.
		     * @example
		     *
		     * function isEven(n) {
		     *   return n % 2 == 0;
		     * }
		     *
		     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
		     * // => [1, 3, 5]
		     */
		    function negate(predicate) {
		      if (typeof predicate != 'function') {
		        throw new TypeError(FUNC_ERROR_TEXT);
		      }
		      return function() {
		        var args = arguments;
		        switch (args.length) {
		          case 0: return !predicate.call(this);
		          case 1: return !predicate.call(this, args[0]);
		          case 2: return !predicate.call(this, args[0], args[1]);
		          case 3: return !predicate.call(this, args[0], args[1], args[2]);
		        }
		        return !predicate.apply(this, args);
		      };
		    }
	
		    /**
		     * Creates a function that is restricted to invoking `func` once. Repeat calls
		     * to the function return the value of the first invocation. The `func` is
		     * invoked with the `this` binding and arguments of the created function.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Function
		     * @param {Function} func The function to restrict.
		     * @returns {Function} Returns the new restricted function.
		     * @example
		     *
		     * var initialize = _.once(createApplication);
		     * initialize();
		     * initialize();
		     * // => `createApplication` is invoked once
		     */
		    function once(func) {
		      return before(2, func);
		    }
	
		    /**
		     * Creates a function that invokes `func` with its arguments transformed.
		     *
		     * @static
		     * @since 4.0.0
		     * @memberOf _
		     * @category Function
		     * @param {Function} func The function to wrap.
		     * @param {...(Function|Function[])} [transforms=[_.identity]]
		     *  The argument transforms.
		     * @returns {Function} Returns the new function.
		     * @example
		     *
		     * function doubled(n) {
		     *   return n * 2;
		     * }
		     *
		     * function square(n) {
		     *   return n * n;
		     * }
		     *
		     * var func = _.overArgs(function(x, y) {
		     *   return [x, y];
		     * }, [square, doubled]);
		     *
		     * func(9, 3);
		     * // => [81, 6]
		     *
		     * func(10, 5);
		     * // => [100, 10]
		     */
		    var overArgs = castRest(function(func, transforms) {
		      transforms = (transforms.length == 1 && isArray(transforms[0]))
		        ? arrayMap(transforms[0], baseUnary(getIteratee()))
		        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));
	
		      var funcsLength = transforms.length;
		      return baseRest(function(args) {
		        var index = -1,
		            length = nativeMin(args.length, funcsLength);
	
		        while (++index < length) {
		          args[index] = transforms[index].call(this, args[index]);
		        }
		        return apply(func, this, args);
		      });
		    });
	
		    /**
		     * Creates a function that invokes `func` with `partials` prepended to the
		     * arguments it receives. This method is like `_.bind` except it does **not**
		     * alter the `this` binding.
		     *
		     * The `_.partial.placeholder` value, which defaults to `_` in monolithic
		     * builds, may be used as a placeholder for partially applied arguments.
		     *
		     * **Note:** This method doesn't set the "length" property of partially
		     * applied functions.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.2.0
		     * @category Function
		     * @param {Function} func The function to partially apply arguments to.
		     * @param {...*} [partials] The arguments to be partially applied.
		     * @returns {Function} Returns the new partially applied function.
		     * @example
		     *
		     * function greet(greeting, name) {
		     *   return greeting + ' ' + name;
		     * }
		     *
		     * var sayHelloTo = _.partial(greet, 'hello');
		     * sayHelloTo('fred');
		     * // => 'hello fred'
		     *
		     * // Partially applied with placeholders.
		     * var greetFred = _.partial(greet, _, 'fred');
		     * greetFred('hi');
		     * // => 'hi fred'
		     */
		    var partial = baseRest(function(func, partials) {
		      var holders = replaceHolders(partials, getHolder(partial));
		      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
		    });
	
		    /**
		     * This method is like `_.partial` except that partially applied arguments
		     * are appended to the arguments it receives.
		     *
		     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
		     * builds, may be used as a placeholder for partially applied arguments.
		     *
		     * **Note:** This method doesn't set the "length" property of partially
		     * applied functions.
		     *
		     * @static
		     * @memberOf _
		     * @since 1.0.0
		     * @category Function
		     * @param {Function} func The function to partially apply arguments to.
		     * @param {...*} [partials] The arguments to be partially applied.
		     * @returns {Function} Returns the new partially applied function.
		     * @example
		     *
		     * function greet(greeting, name) {
		     *   return greeting + ' ' + name;
		     * }
		     *
		     * var greetFred = _.partialRight(greet, 'fred');
		     * greetFred('hi');
		     * // => 'hi fred'
		     *
		     * // Partially applied with placeholders.
		     * var sayHelloTo = _.partialRight(greet, 'hello', _);
		     * sayHelloTo('fred');
		     * // => 'hello fred'
		     */
		    var partialRight = baseRest(function(func, partials) {
		      var holders = replaceHolders(partials, getHolder(partialRight));
		      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
		    });
	
		    /**
		     * Creates a function that invokes `func` with arguments arranged according
		     * to the specified `indexes` where the argument value at the first index is
		     * provided as the first argument, the argument value at the second index is
		     * provided as the second argument, and so on.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Function
		     * @param {Function} func The function to rearrange arguments for.
		     * @param {...(number|number[])} indexes The arranged argument indexes.
		     * @returns {Function} Returns the new function.
		     * @example
		     *
		     * var rearged = _.rearg(function(a, b, c) {
		     *   return [a, b, c];
		     * }, [2, 0, 1]);
		     *
		     * rearged('b', 'c', 'a')
		     * // => ['a', 'b', 'c']
		     */
		    var rearg = flatRest(function(func, indexes) {
		      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
		    });
	
		    /**
		     * Creates a function that invokes `func` with the `this` binding of the
		     * created function and arguments from `start` and beyond provided as
		     * an array.
		     *
		     * **Note:** This method is based on the
		     * [rest parameter](https://mdn.io/rest_parameters).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Function
		     * @param {Function} func The function to apply a rest parameter to.
		     * @param {number} [start=func.length-1] The start position of the rest parameter.
		     * @returns {Function} Returns the new function.
		     * @example
		     *
		     * var say = _.rest(function(what, names) {
		     *   return what + ' ' + _.initial(names).join(', ') +
		     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
		     * });
		     *
		     * say('hello', 'fred', 'barney', 'pebbles');
		     * // => 'hello fred, barney, & pebbles'
		     */
		    function rest(func, start) {
		      if (typeof func != 'function') {
		        throw new TypeError(FUNC_ERROR_TEXT);
		      }
		      start = start === undefined ? start : toInteger(start);
		      return baseRest(func, start);
		    }
	
		    /**
		     * Creates a function that invokes `func` with the `this` binding of the
		     * create function and an array of arguments much like
		     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).
		     *
		     * **Note:** This method is based on the
		     * [spread operator](https://mdn.io/spread_operator).
		     *
		     * @static
		     * @memberOf _
		     * @since 3.2.0
		     * @category Function
		     * @param {Function} func The function to spread arguments over.
		     * @param {number} [start=0] The start position of the spread.
		     * @returns {Function} Returns the new function.
		     * @example
		     *
		     * var say = _.spread(function(who, what) {
		     *   return who + ' says ' + what;
		     * });
		     *
		     * say(['fred', 'hello']);
		     * // => 'fred says hello'
		     *
		     * var numbers = Promise.all([
		     *   Promise.resolve(40),
		     *   Promise.resolve(36)
		     * ]);
		     *
		     * numbers.then(_.spread(function(x, y) {
		     *   return x + y;
		     * }));
		     * // => a Promise of 76
		     */
		    function spread(func, start) {
		      if (typeof func != 'function') {
		        throw new TypeError(FUNC_ERROR_TEXT);
		      }
		      start = start == null ? 0 : nativeMax(toInteger(start), 0);
		      return baseRest(function(args) {
		        var array = args[start],
		            otherArgs = castSlice(args, 0, start);
	
		        if (array) {
		          arrayPush(otherArgs, array);
		        }
		        return apply(func, this, otherArgs);
		      });
		    }
	
		    /**
		     * Creates a throttled function that only invokes `func` at most once per
		     * every `wait` milliseconds. The throttled function comes with a `cancel`
		     * method to cancel delayed `func` invocations and a `flush` method to
		     * immediately invoke them. Provide `options` to indicate whether `func`
		     * should be invoked on the leading and/or trailing edge of the `wait`
		     * timeout. The `func` is invoked with the last arguments provided to the
		     * throttled function. Subsequent calls to the throttled function return the
		     * result of the last `func` invocation.
		     *
		     * **Note:** If `leading` and `trailing` options are `true`, `func` is
		     * invoked on the trailing edge of the timeout only if the throttled function
		     * is invoked more than once during the `wait` timeout.
		     *
		     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
		     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
		     *
		     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
		     * for details over the differences between `_.throttle` and `_.debounce`.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Function
		     * @param {Function} func The function to throttle.
		     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
		     * @param {Object} [options={}] The options object.
		     * @param {boolean} [options.leading=true]
		     *  Specify invoking on the leading edge of the timeout.
		     * @param {boolean} [options.trailing=true]
		     *  Specify invoking on the trailing edge of the timeout.
		     * @returns {Function} Returns the new throttled function.
		     * @example
		     *
		     * // Avoid excessively updating the position while scrolling.
		     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
		     *
		     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
		     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
		     * jQuery(element).on('click', throttled);
		     *
		     * // Cancel the trailing throttled invocation.
		     * jQuery(window).on('popstate', throttled.cancel);
		     */
		    function throttle(func, wait, options) {
		      var leading = true,
		          trailing = true;
	
		      if (typeof func != 'function') {
		        throw new TypeError(FUNC_ERROR_TEXT);
		      }
		      if (isObject(options)) {
		        leading = 'leading' in options ? !!options.leading : leading;
		        trailing = 'trailing' in options ? !!options.trailing : trailing;
		      }
		      return debounce(func, wait, {
		        'leading': leading,
		        'maxWait': wait,
		        'trailing': trailing
		      });
		    }
	
		    /**
		     * Creates a function that accepts up to one argument, ignoring any
		     * additional arguments.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Function
		     * @param {Function} func The function to cap arguments for.
		     * @returns {Function} Returns the new capped function.
		     * @example
		     *
		     * _.map(['6', '8', '10'], _.unary(parseInt));
		     * // => [6, 8, 10]
		     */
		    function unary(func) {
		      return ary(func, 1);
		    }
	
		    /**
		     * Creates a function that provides `value` to `wrapper` as its first
		     * argument. Any additional arguments provided to the function are appended
		     * to those provided to the `wrapper`. The wrapper is invoked with the `this`
		     * binding of the created function.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Function
		     * @param {*} value The value to wrap.
		     * @param {Function} [wrapper=identity] The wrapper function.
		     * @returns {Function} Returns the new function.
		     * @example
		     *
		     * var p = _.wrap(_.escape, function(func, text) {
		     *   return '<p>' + func(text) + '</p>';
		     * });
		     *
		     * p('fred, barney, & pebbles');
		     * // => '<p>fred, barney, &amp; pebbles</p>'
		     */
		    function wrap(value, wrapper) {
		      return partial(castFunction(wrapper), value);
		    }
	
		    /*------------------------------------------------------------------------*/
	
		    /**
		     * Casts `value` as an array if it's not one.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.4.0
		     * @category Lang
		     * @param {*} value The value to inspect.
		     * @returns {Array} Returns the cast array.
		     * @example
		     *
		     * _.castArray(1);
		     * // => [1]
		     *
		     * _.castArray({ 'a': 1 });
		     * // => [{ 'a': 1 }]
		     *
		     * _.castArray('abc');
		     * // => ['abc']
		     *
		     * _.castArray(null);
		     * // => [null]
		     *
		     * _.castArray(undefined);
		     * // => [undefined]
		     *
		     * _.castArray();
		     * // => []
		     *
		     * var array = [1, 2, 3];
		     * console.log(_.castArray(array) === array);
		     * // => true
		     */
		    function castArray() {
		      if (!arguments.length) {
		        return [];
		      }
		      var value = arguments[0];
		      return isArray(value) ? value : [value];
		    }
	
		    /**
		     * Creates a shallow clone of `value`.
		     *
		     * **Note:** This method is loosely based on the
		     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
		     * and supports cloning arrays, array buffers, booleans, date objects, maps,
		     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
		     * arrays. The own enumerable properties of `arguments` objects are cloned
		     * as plain objects. An empty object is returned for uncloneable values such
		     * as error objects, functions, DOM nodes, and WeakMaps.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Lang
		     * @param {*} value The value to clone.
		     * @returns {*} Returns the cloned value.
		     * @see _.cloneDeep
		     * @example
		     *
		     * var objects = [{ 'a': 1 }, { 'b': 2 }];
		     *
		     * var shallow = _.clone(objects);
		     * console.log(shallow[0] === objects[0]);
		     * // => true
		     */
		    function clone(value) {
		      return baseClone(value, CLONE_SYMBOLS_FLAG);
		    }
	
		    /**
		     * This method is like `_.clone` except that it accepts `customizer` which
		     * is invoked to produce the cloned value. If `customizer` returns `undefined`,
		     * cloning is handled by the method instead. The `customizer` is invoked with
		     * up to four arguments; (value [, index|key, object, stack]).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Lang
		     * @param {*} value The value to clone.
		     * @param {Function} [customizer] The function to customize cloning.
		     * @returns {*} Returns the cloned value.
		     * @see _.cloneDeepWith
		     * @example
		     *
		     * function customizer(value) {
		     *   if (_.isElement(value)) {
		     *     return value.cloneNode(false);
		     *   }
		     * }
		     *
		     * var el = _.cloneWith(document.body, customizer);
		     *
		     * console.log(el === document.body);
		     * // => false
		     * console.log(el.nodeName);
		     * // => 'BODY'
		     * console.log(el.childNodes.length);
		     * // => 0
		     */
		    function cloneWith(value, customizer) {
		      customizer = typeof customizer == 'function' ? customizer : undefined;
		      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
		    }
	
		    /**
		     * This method is like `_.clone` except that it recursively clones `value`.
		     *
		     * @static
		     * @memberOf _
		     * @since 1.0.0
		     * @category Lang
		     * @param {*} value The value to recursively clone.
		     * @returns {*} Returns the deep cloned value.
		     * @see _.clone
		     * @example
		     *
		     * var objects = [{ 'a': 1 }, { 'b': 2 }];
		     *
		     * var deep = _.cloneDeep(objects);
		     * console.log(deep[0] === objects[0]);
		     * // => false
		     */
		    function cloneDeep(value) {
		      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
		    }
	
		    /**
		     * This method is like `_.cloneWith` except that it recursively clones `value`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Lang
		     * @param {*} value The value to recursively clone.
		     * @param {Function} [customizer] The function to customize cloning.
		     * @returns {*} Returns the deep cloned value.
		     * @see _.cloneWith
		     * @example
		     *
		     * function customizer(value) {
		     *   if (_.isElement(value)) {
		     *     return value.cloneNode(true);
		     *   }
		     * }
		     *
		     * var el = _.cloneDeepWith(document.body, customizer);
		     *
		     * console.log(el === document.body);
		     * // => false
		     * console.log(el.nodeName);
		     * // => 'BODY'
		     * console.log(el.childNodes.length);
		     * // => 20
		     */
		    function cloneDeepWith(value, customizer) {
		      customizer = typeof customizer == 'function' ? customizer : undefined;
		      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
		    }
	
		    /**
		     * Checks if `object` conforms to `source` by invoking the predicate
		     * properties of `source` with the corresponding property values of `object`.
		     *
		     * **Note:** This method is equivalent to `_.conforms` when `source` is
		     * partially applied.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.14.0
		     * @category Lang
		     * @param {Object} object The object to inspect.
		     * @param {Object} source The object of property predicates to conform to.
		     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
		     * @example
		     *
		     * var object = { 'a': 1, 'b': 2 };
		     *
		     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });
		     * // => true
		     *
		     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });
		     * // => false
		     */
		    function conformsTo(object, source) {
		      return source == null || baseConformsTo(object, source, keys(source));
		    }
	
		    /**
		     * Performs a
		     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
		     * comparison between two values to determine if they are equivalent.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Lang
		     * @param {*} value The value to compare.
		     * @param {*} other The other value to compare.
		     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
		     * @example
		     *
		     * var object = { 'a': 1 };
		     * var other = { 'a': 1 };
		     *
		     * _.eq(object, object);
		     * // => true
		     *
		     * _.eq(object, other);
		     * // => false
		     *
		     * _.eq('a', 'a');
		     * // => true
		     *
		     * _.eq('a', Object('a'));
		     * // => false
		     *
		     * _.eq(NaN, NaN);
		     * // => true
		     */
		    function eq(value, other) {
		      return value === other || (value !== value && other !== other);
		    }
	
		    /**
		     * Checks if `value` is greater than `other`.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.9.0
		     * @category Lang
		     * @param {*} value The value to compare.
		     * @param {*} other The other value to compare.
		     * @returns {boolean} Returns `true` if `value` is greater than `other`,
		     *  else `false`.
		     * @see _.lt
		     * @example
		     *
		     * _.gt(3, 1);
		     * // => true
		     *
		     * _.gt(3, 3);
		     * // => false
		     *
		     * _.gt(1, 3);
		     * // => false
		     */
		    var gt = createRelationalOperation(baseGt);
	
		    /**
		     * Checks if `value` is greater than or equal to `other`.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.9.0
		     * @category Lang
		     * @param {*} value The value to compare.
		     * @param {*} other The other value to compare.
		     * @returns {boolean} Returns `true` if `value` is greater than or equal to
		     *  `other`, else `false`.
		     * @see _.lte
		     * @example
		     *
		     * _.gte(3, 1);
		     * // => true
		     *
		     * _.gte(3, 3);
		     * // => true
		     *
		     * _.gte(1, 3);
		     * // => false
		     */
		    var gte = createRelationalOperation(function(value, other) {
		      return value >= other;
		    });
	
		    /**
		     * Checks if `value` is likely an `arguments` object.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
		     *  else `false`.
		     * @example
		     *
		     * _.isArguments(function() { return arguments; }());
		     * // => true
		     *
		     * _.isArguments([1, 2, 3]);
		     * // => false
		     */
		    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
		      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
		        !propertyIsEnumerable.call(value, 'callee');
		    };
	
		    /**
		     * Checks if `value` is classified as an `Array` object.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is an array, else `false`.
		     * @example
		     *
		     * _.isArray([1, 2, 3]);
		     * // => true
		     *
		     * _.isArray(document.body.children);
		     * // => false
		     *
		     * _.isArray('abc');
		     * // => false
		     *
		     * _.isArray(_.noop);
		     * // => false
		     */
		    var isArray = Array.isArray;
	
		    /**
		     * Checks if `value` is classified as an `ArrayBuffer` object.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.3.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
		     * @example
		     *
		     * _.isArrayBuffer(new ArrayBuffer(2));
		     * // => true
		     *
		     * _.isArrayBuffer(new Array(2));
		     * // => false
		     */
		    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;
	
		    /**
		     * Checks if `value` is array-like. A value is considered array-like if it's
		     * not a function and has a `value.length` that's an integer greater than or
		     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
		     * @example
		     *
		     * _.isArrayLike([1, 2, 3]);
		     * // => true
		     *
		     * _.isArrayLike(document.body.children);
		     * // => true
		     *
		     * _.isArrayLike('abc');
		     * // => true
		     *
		     * _.isArrayLike(_.noop);
		     * // => false
		     */
		    function isArrayLike(value) {
		      return value != null && isLength(value.length) && !isFunction(value);
		    }
	
		    /**
		     * This method is like `_.isArrayLike` except that it also checks if `value`
		     * is an object.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is an array-like object,
		     *  else `false`.
		     * @example
		     *
		     * _.isArrayLikeObject([1, 2, 3]);
		     * // => true
		     *
		     * _.isArrayLikeObject(document.body.children);
		     * // => true
		     *
		     * _.isArrayLikeObject('abc');
		     * // => false
		     *
		     * _.isArrayLikeObject(_.noop);
		     * // => false
		     */
		    function isArrayLikeObject(value) {
		      return isObjectLike(value) && isArrayLike(value);
		    }
	
		    /**
		     * Checks if `value` is classified as a boolean primitive or object.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
		     * @example
		     *
		     * _.isBoolean(false);
		     * // => true
		     *
		     * _.isBoolean(null);
		     * // => false
		     */
		    function isBoolean(value) {
		      return value === true || value === false ||
		        (isObjectLike(value) && baseGetTag(value) == boolTag);
		    }
	
		    /**
		     * Checks if `value` is a buffer.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.3.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
		     * @example
		     *
		     * _.isBuffer(new Buffer(2));
		     * // => true
		     *
		     * _.isBuffer(new Uint8Array(2));
		     * // => false
		     */
		    var isBuffer = nativeIsBuffer || stubFalse;
	
		    /**
		     * Checks if `value` is classified as a `Date` object.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
		     * @example
		     *
		     * _.isDate(new Date);
		     * // => true
		     *
		     * _.isDate('Mon April 23 2012');
		     * // => false
		     */
		    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;
	
		    /**
		     * Checks if `value` is likely a DOM element.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
		     * @example
		     *
		     * _.isElement(document.body);
		     * // => true
		     *
		     * _.isElement('<body>');
		     * // => false
		     */
		    function isElement(value) {
		      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
		    }
	
		    /**
		     * Checks if `value` is an empty object, collection, map, or set.
		     *
		     * Objects are considered empty if they have no own enumerable string keyed
		     * properties.
		     *
		     * Array-like values such as `arguments` objects, arrays, buffers, strings, or
		     * jQuery-like collections are considered empty if they have a `length` of `0`.
		     * Similarly, maps and sets are considered empty if they have a `size` of `0`.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is empty, else `false`.
		     * @example
		     *
		     * _.isEmpty(null);
		     * // => true
		     *
		     * _.isEmpty(true);
		     * // => true
		     *
		     * _.isEmpty(1);
		     * // => true
		     *
		     * _.isEmpty([1, 2, 3]);
		     * // => false
		     *
		     * _.isEmpty({ 'a': 1 });
		     * // => false
		     */
		    function isEmpty(value) {
		      if (value == null) {
		        return true;
		      }
		      if (isArrayLike(value) &&
		          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||
		            isBuffer(value) || isTypedArray(value) || isArguments(value))) {
		        return !value.length;
		      }
		      var tag = getTag(value);
		      if (tag == mapTag || tag == setTag) {
		        return !value.size;
		      }
		      if (isPrototype(value)) {
		        return !baseKeys(value).length;
		      }
		      for (var key in value) {
		        if (hasOwnProperty.call(value, key)) {
		          return false;
		        }
		      }
		      return true;
		    }
	
		    /**
		     * Performs a deep comparison between two values to determine if they are
		     * equivalent.
		     *
		     * **Note:** This method supports comparing arrays, array buffers, booleans,
		     * date objects, error objects, maps, numbers, `Object` objects, regexes,
		     * sets, strings, symbols, and typed arrays. `Object` objects are compared
		     * by their own, not inherited, enumerable properties. Functions and DOM
		     * nodes are compared by strict equality, i.e. `===`.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Lang
		     * @param {*} value The value to compare.
		     * @param {*} other The other value to compare.
		     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
		     * @example
		     *
		     * var object = { 'a': 1 };
		     * var other = { 'a': 1 };
		     *
		     * _.isEqual(object, other);
		     * // => true
		     *
		     * object === other;
		     * // => false
		     */
		    function isEqual(value, other) {
		      return baseIsEqual(value, other);
		    }
	
		    /**
		     * This method is like `_.isEqual` except that it accepts `customizer` which
		     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
		     * are handled by the method instead. The `customizer` is invoked with up to
		     * six arguments: (objValue, othValue [, index|key, object, other, stack]).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Lang
		     * @param {*} value The value to compare.
		     * @param {*} other The other value to compare.
		     * @param {Function} [customizer] The function to customize comparisons.
		     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
		     * @example
		     *
		     * function isGreeting(value) {
		     *   return /^h(?:i|ello)$/.test(value);
		     * }
		     *
		     * function customizer(objValue, othValue) {
		     *   if (isGreeting(objValue) && isGreeting(othValue)) {
		     *     return true;
		     *   }
		     * }
		     *
		     * var array = ['hello', 'goodbye'];
		     * var other = ['hi', 'goodbye'];
		     *
		     * _.isEqualWith(array, other, customizer);
		     * // => true
		     */
		    function isEqualWith(value, other, customizer) {
		      customizer = typeof customizer == 'function' ? customizer : undefined;
		      var result = customizer ? customizer(value, other) : undefined;
		      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;
		    }
	
		    /**
		     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
		     * `SyntaxError`, `TypeError`, or `URIError` object.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
		     * @example
		     *
		     * _.isError(new Error);
		     * // => true
		     *
		     * _.isError(Error);
		     * // => false
		     */
		    function isError(value) {
		      if (!isObjectLike(value)) {
		        return false;
		      }
		      var tag = baseGetTag(value);
		      return tag == errorTag || tag == domExcTag ||
		        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));
		    }
	
		    /**
		     * Checks if `value` is a finite primitive number.
		     *
		     * **Note:** This method is based on
		     * [`Number.isFinite`](https://mdn.io/Number/isFinite).
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
		     * @example
		     *
		     * _.isFinite(3);
		     * // => true
		     *
		     * _.isFinite(Number.MIN_VALUE);
		     * // => true
		     *
		     * _.isFinite(Infinity);
		     * // => false
		     *
		     * _.isFinite('3');
		     * // => false
		     */
		    function isFinite(value) {
		      return typeof value == 'number' && nativeIsFinite(value);
		    }
	
		    /**
		     * Checks if `value` is classified as a `Function` object.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is a function, else `false`.
		     * @example
		     *
		     * _.isFunction(_);
		     * // => true
		     *
		     * _.isFunction(/abc/);
		     * // => false
		     */
		    function isFunction(value) {
		      if (!isObject(value)) {
		        return false;
		      }
		      // The use of `Object#toString` avoids issues with the `typeof` operator
		      // in Safari 9 which returns 'object' for typed arrays and other constructors.
		      var tag = baseGetTag(value);
		      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
		    }
	
		    /**
		     * Checks if `value` is an integer.
		     *
		     * **Note:** This method is based on
		     * [`Number.isInteger`](https://mdn.io/Number/isInteger).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
		     * @example
		     *
		     * _.isInteger(3);
		     * // => true
		     *
		     * _.isInteger(Number.MIN_VALUE);
		     * // => false
		     *
		     * _.isInteger(Infinity);
		     * // => false
		     *
		     * _.isInteger('3');
		     * // => false
		     */
		    function isInteger(value) {
		      return typeof value == 'number' && value == toInteger(value);
		    }
	
		    /**
		     * Checks if `value` is a valid array-like length.
		     *
		     * **Note:** This method is loosely based on
		     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
		     * @example
		     *
		     * _.isLength(3);
		     * // => true
		     *
		     * _.isLength(Number.MIN_VALUE);
		     * // => false
		     *
		     * _.isLength(Infinity);
		     * // => false
		     *
		     * _.isLength('3');
		     * // => false
		     */
		    function isLength(value) {
		      return typeof value == 'number' &&
		        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
		    }
	
		    /**
		     * Checks if `value` is the
		     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
		     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
		     * @example
		     *
		     * _.isObject({});
		     * // => true
		     *
		     * _.isObject([1, 2, 3]);
		     * // => true
		     *
		     * _.isObject(_.noop);
		     * // => true
		     *
		     * _.isObject(null);
		     * // => false
		     */
		    function isObject(value) {
		      var type = typeof value;
		      return value != null && (type == 'object' || type == 'function');
		    }
	
		    /**
		     * Checks if `value` is object-like. A value is object-like if it's not `null`
		     * and has a `typeof` result of "object".
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
		     * @example
		     *
		     * _.isObjectLike({});
		     * // => true
		     *
		     * _.isObjectLike([1, 2, 3]);
		     * // => true
		     *
		     * _.isObjectLike(_.noop);
		     * // => false
		     *
		     * _.isObjectLike(null);
		     * // => false
		     */
		    function isObjectLike(value) {
		      return value != null && typeof value == 'object';
		    }
	
		    /**
		     * Checks if `value` is classified as a `Map` object.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.3.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
		     * @example
		     *
		     * _.isMap(new Map);
		     * // => true
		     *
		     * _.isMap(new WeakMap);
		     * // => false
		     */
		    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;
	
		    /**
		     * Performs a partial deep comparison between `object` and `source` to
		     * determine if `object` contains equivalent property values.
		     *
		     * **Note:** This method is equivalent to `_.matches` when `source` is
		     * partially applied.
		     *
		     * Partial comparisons will match empty array and empty object `source`
		     * values against any array or object value, respectively. See `_.isEqual`
		     * for a list of supported value comparisons.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Lang
		     * @param {Object} object The object to inspect.
		     * @param {Object} source The object of property values to match.
		     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
		     * @example
		     *
		     * var object = { 'a': 1, 'b': 2 };
		     *
		     * _.isMatch(object, { 'b': 2 });
		     * // => true
		     *
		     * _.isMatch(object, { 'b': 1 });
		     * // => false
		     */
		    function isMatch(object, source) {
		      return object === source || baseIsMatch(object, source, getMatchData(source));
		    }
	
		    /**
		     * This method is like `_.isMatch` except that it accepts `customizer` which
		     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
		     * are handled by the method instead. The `customizer` is invoked with five
		     * arguments: (objValue, srcValue, index|key, object, source).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Lang
		     * @param {Object} object The object to inspect.
		     * @param {Object} source The object of property values to match.
		     * @param {Function} [customizer] The function to customize comparisons.
		     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
		     * @example
		     *
		     * function isGreeting(value) {
		     *   return /^h(?:i|ello)$/.test(value);
		     * }
		     *
		     * function customizer(objValue, srcValue) {
		     *   if (isGreeting(objValue) && isGreeting(srcValue)) {
		     *     return true;
		     *   }
		     * }
		     *
		     * var object = { 'greeting': 'hello' };
		     * var source = { 'greeting': 'hi' };
		     *
		     * _.isMatchWith(object, source, customizer);
		     * // => true
		     */
		    function isMatchWith(object, source, customizer) {
		      customizer = typeof customizer == 'function' ? customizer : undefined;
		      return baseIsMatch(object, source, getMatchData(source), customizer);
		    }
	
		    /**
		     * Checks if `value` is `NaN`.
		     *
		     * **Note:** This method is based on
		     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
		     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
		     * `undefined` and other non-number values.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
		     * @example
		     *
		     * _.isNaN(NaN);
		     * // => true
		     *
		     * _.isNaN(new Number(NaN));
		     * // => true
		     *
		     * isNaN(undefined);
		     * // => true
		     *
		     * _.isNaN(undefined);
		     * // => false
		     */
		    function isNaN(value) {
		      // An `NaN` primitive is the only value that is not equal to itself.
		      // Perform the `toStringTag` check first to avoid errors with some
		      // ActiveX objects in IE.
		      return isNumber(value) && value != +value;
		    }
	
		    /**
		     * Checks if `value` is a pristine native function.
		     *
		     * **Note:** This method can't reliably detect native functions in the presence
		     * of the core-js package because core-js circumvents this kind of detection.
		     * Despite multiple requests, the core-js maintainer has made it clear: any
		     * attempt to fix the detection will be obstructed. As a result, we're left
		     * with little choice but to throw an error. Unfortunately, this also affects
		     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),
		     * which rely on core-js.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is a native function,
		     *  else `false`.
		     * @example
		     *
		     * _.isNative(Array.prototype.push);
		     * // => true
		     *
		     * _.isNative(_);
		     * // => false
		     */
		    function isNative(value) {
		      if (isMaskable(value)) {
		        throw new Error(CORE_ERROR_TEXT);
		      }
		      return baseIsNative(value);
		    }
	
		    /**
		     * Checks if `value` is `null`.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
		     * @example
		     *
		     * _.isNull(null);
		     * // => true
		     *
		     * _.isNull(void 0);
		     * // => false
		     */
		    function isNull(value) {
		      return value === null;
		    }
	
		    /**
		     * Checks if `value` is `null` or `undefined`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
		     * @example
		     *
		     * _.isNil(null);
		     * // => true
		     *
		     * _.isNil(void 0);
		     * // => true
		     *
		     * _.isNil(NaN);
		     * // => false
		     */
		    function isNil(value) {
		      return value == null;
		    }
	
		    /**
		     * Checks if `value` is classified as a `Number` primitive or object.
		     *
		     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
		     * classified as numbers, use the `_.isFinite` method.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is a number, else `false`.
		     * @example
		     *
		     * _.isNumber(3);
		     * // => true
		     *
		     * _.isNumber(Number.MIN_VALUE);
		     * // => true
		     *
		     * _.isNumber(Infinity);
		     * // => true
		     *
		     * _.isNumber('3');
		     * // => false
		     */
		    function isNumber(value) {
		      return typeof value == 'number' ||
		        (isObjectLike(value) && baseGetTag(value) == numberTag);
		    }
	
		    /**
		     * Checks if `value` is a plain object, that is, an object created by the
		     * `Object` constructor or one with a `[[Prototype]]` of `null`.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.8.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
		     * @example
		     *
		     * function Foo() {
		     *   this.a = 1;
		     * }
		     *
		     * _.isPlainObject(new Foo);
		     * // => false
		     *
		     * _.isPlainObject([1, 2, 3]);
		     * // => false
		     *
		     * _.isPlainObject({ 'x': 0, 'y': 0 });
		     * // => true
		     *
		     * _.isPlainObject(Object.create(null));
		     * // => true
		     */
		    function isPlainObject(value) {
		      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
		        return false;
		      }
		      var proto = getPrototype(value);
		      if (proto === null) {
		        return true;
		      }
		      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
		      return typeof Ctor == 'function' && Ctor instanceof Ctor &&
		        funcToString.call(Ctor) == objectCtorString;
		    }
	
		    /**
		     * Checks if `value` is classified as a `RegExp` object.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
		     * @example
		     *
		     * _.isRegExp(/abc/);
		     * // => true
		     *
		     * _.isRegExp('/abc/');
		     * // => false
		     */
		    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;
	
		    /**
		     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
		     * double precision number which isn't the result of a rounded unsafe integer.
		     *
		     * **Note:** This method is based on
		     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.
		     * @example
		     *
		     * _.isSafeInteger(3);
		     * // => true
		     *
		     * _.isSafeInteger(Number.MIN_VALUE);
		     * // => false
		     *
		     * _.isSafeInteger(Infinity);
		     * // => false
		     *
		     * _.isSafeInteger('3');
		     * // => false
		     */
		    function isSafeInteger(value) {
		      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
		    }
	
		    /**
		     * Checks if `value` is classified as a `Set` object.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.3.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
		     * @example
		     *
		     * _.isSet(new Set);
		     * // => true
		     *
		     * _.isSet(new WeakSet);
		     * // => false
		     */
		    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;
	
		    /**
		     * Checks if `value` is classified as a `String` primitive or object.
		     *
		     * @static
		     * @since 0.1.0
		     * @memberOf _
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is a string, else `false`.
		     * @example
		     *
		     * _.isString('abc');
		     * // => true
		     *
		     * _.isString(1);
		     * // => false
		     */
		    function isString(value) {
		      return typeof value == 'string' ||
		        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);
		    }
	
		    /**
		     * Checks if `value` is classified as a `Symbol` primitive or object.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
		     * @example
		     *
		     * _.isSymbol(Symbol.iterator);
		     * // => true
		     *
		     * _.isSymbol('abc');
		     * // => false
		     */
		    function isSymbol(value) {
		      return typeof value == 'symbol' ||
		        (isObjectLike(value) && baseGetTag(value) == symbolTag);
		    }
	
		    /**
		     * Checks if `value` is classified as a typed array.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
		     * @example
		     *
		     * _.isTypedArray(new Uint8Array);
		     * // => true
		     *
		     * _.isTypedArray([]);
		     * // => false
		     */
		    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
	
		    /**
		     * Checks if `value` is `undefined`.
		     *
		     * @static
		     * @since 0.1.0
		     * @memberOf _
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
		     * @example
		     *
		     * _.isUndefined(void 0);
		     * // => true
		     *
		     * _.isUndefined(null);
		     * // => false
		     */
		    function isUndefined(value) {
		      return value === undefined;
		    }
	
		    /**
		     * Checks if `value` is classified as a `WeakMap` object.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.3.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
		     * @example
		     *
		     * _.isWeakMap(new WeakMap);
		     * // => true
		     *
		     * _.isWeakMap(new Map);
		     * // => false
		     */
		    function isWeakMap(value) {
		      return isObjectLike(value) && getTag(value) == weakMapTag;
		    }
	
		    /**
		     * Checks if `value` is classified as a `WeakSet` object.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.3.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.
		     * @example
		     *
		     * _.isWeakSet(new WeakSet);
		     * // => true
		     *
		     * _.isWeakSet(new Set);
		     * // => false
		     */
		    function isWeakSet(value) {
		      return isObjectLike(value) && baseGetTag(value) == weakSetTag;
		    }
	
		    /**
		     * Checks if `value` is less than `other`.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.9.0
		     * @category Lang
		     * @param {*} value The value to compare.
		     * @param {*} other The other value to compare.
		     * @returns {boolean} Returns `true` if `value` is less than `other`,
		     *  else `false`.
		     * @see _.gt
		     * @example
		     *
		     * _.lt(1, 3);
		     * // => true
		     *
		     * _.lt(3, 3);
		     * // => false
		     *
		     * _.lt(3, 1);
		     * // => false
		     */
		    var lt = createRelationalOperation(baseLt);
	
		    /**
		     * Checks if `value` is less than or equal to `other`.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.9.0
		     * @category Lang
		     * @param {*} value The value to compare.
		     * @param {*} other The other value to compare.
		     * @returns {boolean} Returns `true` if `value` is less than or equal to
		     *  `other`, else `false`.
		     * @see _.gte
		     * @example
		     *
		     * _.lte(1, 3);
		     * // => true
		     *
		     * _.lte(3, 3);
		     * // => true
		     *
		     * _.lte(3, 1);
		     * // => false
		     */
		    var lte = createRelationalOperation(function(value, other) {
		      return value <= other;
		    });
	
		    /**
		     * Converts `value` to an array.
		     *
		     * @static
		     * @since 0.1.0
		     * @memberOf _
		     * @category Lang
		     * @param {*} value The value to convert.
		     * @returns {Array} Returns the converted array.
		     * @example
		     *
		     * _.toArray({ 'a': 1, 'b': 2 });
		     * // => [1, 2]
		     *
		     * _.toArray('abc');
		     * // => ['a', 'b', 'c']
		     *
		     * _.toArray(1);
		     * // => []
		     *
		     * _.toArray(null);
		     * // => []
		     */
		    function toArray(value) {
		      if (!value) {
		        return [];
		      }
		      if (isArrayLike(value)) {
		        return isString(value) ? stringToArray(value) : copyArray(value);
		      }
		      if (symIterator && value[symIterator]) {
		        return iteratorToArray(value[symIterator]());
		      }
		      var tag = getTag(value),
		          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);
	
		      return func(value);
		    }
	
		    /**
		     * Converts `value` to a finite number.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.12.0
		     * @category Lang
		     * @param {*} value The value to convert.
		     * @returns {number} Returns the converted number.
		     * @example
		     *
		     * _.toFinite(3.2);
		     * // => 3.2
		     *
		     * _.toFinite(Number.MIN_VALUE);
		     * // => 5e-324
		     *
		     * _.toFinite(Infinity);
		     * // => 1.7976931348623157e+308
		     *
		     * _.toFinite('3.2');
		     * // => 3.2
		     */
		    function toFinite(value) {
		      if (!value) {
		        return value === 0 ? value : 0;
		      }
		      value = toNumber(value);
		      if (value === INFINITY || value === -INFINITY) {
		        var sign = (value < 0 ? -1 : 1);
		        return sign * MAX_INTEGER;
		      }
		      return value === value ? value : 0;
		    }
	
		    /**
		     * Converts `value` to an integer.
		     *
		     * **Note:** This method is loosely based on
		     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Lang
		     * @param {*} value The value to convert.
		     * @returns {number} Returns the converted integer.
		     * @example
		     *
		     * _.toInteger(3.2);
		     * // => 3
		     *
		     * _.toInteger(Number.MIN_VALUE);
		     * // => 0
		     *
		     * _.toInteger(Infinity);
		     * // => 1.7976931348623157e+308
		     *
		     * _.toInteger('3.2');
		     * // => 3
		     */
		    function toInteger(value) {
		      var result = toFinite(value),
		          remainder = result % 1;
	
		      return result === result ? (remainder ? result - remainder : result) : 0;
		    }
	
		    /**
		     * Converts `value` to an integer suitable for use as the length of an
		     * array-like object.
		     *
		     * **Note:** This method is based on
		     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Lang
		     * @param {*} value The value to convert.
		     * @returns {number} Returns the converted integer.
		     * @example
		     *
		     * _.toLength(3.2);
		     * // => 3
		     *
		     * _.toLength(Number.MIN_VALUE);
		     * // => 0
		     *
		     * _.toLength(Infinity);
		     * // => 4294967295
		     *
		     * _.toLength('3.2');
		     * // => 3
		     */
		    function toLength(value) {
		      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
		    }
	
		    /**
		     * Converts `value` to a number.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Lang
		     * @param {*} value The value to process.
		     * @returns {number} Returns the number.
		     * @example
		     *
		     * _.toNumber(3.2);
		     * // => 3.2
		     *
		     * _.toNumber(Number.MIN_VALUE);
		     * // => 5e-324
		     *
		     * _.toNumber(Infinity);
		     * // => Infinity
		     *
		     * _.toNumber('3.2');
		     * // => 3.2
		     */
		    function toNumber(value) {
		      if (typeof value == 'number') {
		        return value;
		      }
		      if (isSymbol(value)) {
		        return NAN;
		      }
		      if (isObject(value)) {
		        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
		        value = isObject(other) ? (other + '') : other;
		      }
		      if (typeof value != 'string') {
		        return value === 0 ? value : +value;
		      }
		      value = value.replace(reTrim, '');
		      var isBinary = reIsBinary.test(value);
		      return (isBinary || reIsOctal.test(value))
		        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
		        : (reIsBadHex.test(value) ? NAN : +value);
		    }
	
		    /**
		     * Converts `value` to a plain object flattening inherited enumerable string
		     * keyed properties of `value` to own properties of the plain object.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Lang
		     * @param {*} value The value to convert.
		     * @returns {Object} Returns the converted plain object.
		     * @example
		     *
		     * function Foo() {
		     *   this.b = 2;
		     * }
		     *
		     * Foo.prototype.c = 3;
		     *
		     * _.assign({ 'a': 1 }, new Foo);
		     * // => { 'a': 1, 'b': 2 }
		     *
		     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
		     * // => { 'a': 1, 'b': 2, 'c': 3 }
		     */
		    function toPlainObject(value) {
		      return copyObject(value, keysIn(value));
		    }
	
		    /**
		     * Converts `value` to a safe integer. A safe integer can be compared and
		     * represented correctly.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Lang
		     * @param {*} value The value to convert.
		     * @returns {number} Returns the converted integer.
		     * @example
		     *
		     * _.toSafeInteger(3.2);
		     * // => 3
		     *
		     * _.toSafeInteger(Number.MIN_VALUE);
		     * // => 0
		     *
		     * _.toSafeInteger(Infinity);
		     * // => 9007199254740991
		     *
		     * _.toSafeInteger('3.2');
		     * // => 3
		     */
		    function toSafeInteger(value) {
		      return value
		        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)
		        : (value === 0 ? value : 0);
		    }
	
		    /**
		     * Converts `value` to a string. An empty string is returned for `null`
		     * and `undefined` values. The sign of `-0` is preserved.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Lang
		     * @param {*} value The value to convert.
		     * @returns {string} Returns the converted string.
		     * @example
		     *
		     * _.toString(null);
		     * // => ''
		     *
		     * _.toString(-0);
		     * // => '-0'
		     *
		     * _.toString([1, 2, 3]);
		     * // => '1,2,3'
		     */
		    function toString(value) {
		      return value == null ? '' : baseToString(value);
		    }
	
		    /*------------------------------------------------------------------------*/
	
		    /**
		     * Assigns own enumerable string keyed properties of source objects to the
		     * destination object. Source objects are applied from left to right.
		     * Subsequent sources overwrite property assignments of previous sources.
		     *
		     * **Note:** This method mutates `object` and is loosely based on
		     * [`Object.assign`](https://mdn.io/Object/assign).
		     *
		     * @static
		     * @memberOf _
		     * @since 0.10.0
		     * @category Object
		     * @param {Object} object The destination object.
		     * @param {...Object} [sources] The source objects.
		     * @returns {Object} Returns `object`.
		     * @see _.assignIn
		     * @example
		     *
		     * function Foo() {
		     *   this.a = 1;
		     * }
		     *
		     * function Bar() {
		     *   this.c = 3;
		     * }
		     *
		     * Foo.prototype.b = 2;
		     * Bar.prototype.d = 4;
		     *
		     * _.assign({ 'a': 0 }, new Foo, new Bar);
		     * // => { 'a': 1, 'c': 3 }
		     */
		    var assign = createAssigner(function(object, source) {
		      if (isPrototype(source) || isArrayLike(source)) {
		        copyObject(source, keys(source), object);
		        return;
		      }
		      for (var key in source) {
		        if (hasOwnProperty.call(source, key)) {
		          assignValue(object, key, source[key]);
		        }
		      }
		    });
	
		    /**
		     * This method is like `_.assign` except that it iterates over own and
		     * inherited source properties.
		     *
		     * **Note:** This method mutates `object`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @alias extend
		     * @category Object
		     * @param {Object} object The destination object.
		     * @param {...Object} [sources] The source objects.
		     * @returns {Object} Returns `object`.
		     * @see _.assign
		     * @example
		     *
		     * function Foo() {
		     *   this.a = 1;
		     * }
		     *
		     * function Bar() {
		     *   this.c = 3;
		     * }
		     *
		     * Foo.prototype.b = 2;
		     * Bar.prototype.d = 4;
		     *
		     * _.assignIn({ 'a': 0 }, new Foo, new Bar);
		     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
		     */
		    var assignIn = createAssigner(function(object, source) {
		      copyObject(source, keysIn(source), object);
		    });
	
		    /**
		     * This method is like `_.assignIn` except that it accepts `customizer`
		     * which is invoked to produce the assigned values. If `customizer` returns
		     * `undefined`, assignment is handled by the method instead. The `customizer`
		     * is invoked with five arguments: (objValue, srcValue, key, object, source).
		     *
		     * **Note:** This method mutates `object`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @alias extendWith
		     * @category Object
		     * @param {Object} object The destination object.
		     * @param {...Object} sources The source objects.
		     * @param {Function} [customizer] The function to customize assigned values.
		     * @returns {Object} Returns `object`.
		     * @see _.assignWith
		     * @example
		     *
		     * function customizer(objValue, srcValue) {
		     *   return _.isUndefined(objValue) ? srcValue : objValue;
		     * }
		     *
		     * var defaults = _.partialRight(_.assignInWith, customizer);
		     *
		     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
		     * // => { 'a': 1, 'b': 2 }
		     */
		    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
		      copyObject(source, keysIn(source), object, customizer);
		    });
	
		    /**
		     * This method is like `_.assign` except that it accepts `customizer`
		     * which is invoked to produce the assigned values. If `customizer` returns
		     * `undefined`, assignment is handled by the method instead. The `customizer`
		     * is invoked with five arguments: (objValue, srcValue, key, object, source).
		     *
		     * **Note:** This method mutates `object`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Object
		     * @param {Object} object The destination object.
		     * @param {...Object} sources The source objects.
		     * @param {Function} [customizer] The function to customize assigned values.
		     * @returns {Object} Returns `object`.
		     * @see _.assignInWith
		     * @example
		     *
		     * function customizer(objValue, srcValue) {
		     *   return _.isUndefined(objValue) ? srcValue : objValue;
		     * }
		     *
		     * var defaults = _.partialRight(_.assignWith, customizer);
		     *
		     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
		     * // => { 'a': 1, 'b': 2 }
		     */
		    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
		      copyObject(source, keys(source), object, customizer);
		    });
	
		    /**
		     * Creates an array of values corresponding to `paths` of `object`.
		     *
		     * @static
		     * @memberOf _
		     * @since 1.0.0
		     * @category Object
		     * @param {Object} object The object to iterate over.
		     * @param {...(string|string[])} [paths] The property paths to pick.
		     * @returns {Array} Returns the picked values.
		     * @example
		     *
		     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
		     *
		     * _.at(object, ['a[0].b.c', 'a[1]']);
		     * // => [3, 4]
		     */
		    var at = flatRest(baseAt);
	
		    /**
		     * Creates an object that inherits from the `prototype` object. If a
		     * `properties` object is given, its own enumerable string keyed properties
		     * are assigned to the created object.
		     *
		     * @static
		     * @memberOf _
		     * @since 2.3.0
		     * @category Object
		     * @param {Object} prototype The object to inherit from.
		     * @param {Object} [properties] The properties to assign to the object.
		     * @returns {Object} Returns the new object.
		     * @example
		     *
		     * function Shape() {
		     *   this.x = 0;
		     *   this.y = 0;
		     * }
		     *
		     * function Circle() {
		     *   Shape.call(this);
		     * }
		     *
		     * Circle.prototype = _.create(Shape.prototype, {
		     *   'constructor': Circle
		     * });
		     *
		     * var circle = new Circle;
		     * circle instanceof Circle;
		     * // => true
		     *
		     * circle instanceof Shape;
		     * // => true
		     */
		    function create(prototype, properties) {
		      var result = baseCreate(prototype);
		      return properties == null ? result : baseAssign(result, properties);
		    }
	
		    /**
		     * Assigns own and inherited enumerable string keyed properties of source
		     * objects to the destination object for all destination properties that
		     * resolve to `undefined`. Source objects are applied from left to right.
		     * Once a property is set, additional values of the same property are ignored.
		     *
		     * **Note:** This method mutates `object`.
		     *
		     * @static
		     * @since 0.1.0
		     * @memberOf _
		     * @category Object
		     * @param {Object} object The destination object.
		     * @param {...Object} [sources] The source objects.
		     * @returns {Object} Returns `object`.
		     * @see _.defaultsDeep
		     * @example
		     *
		     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
		     * // => { 'a': 1, 'b': 2 }
		     */
		    var defaults = baseRest(function(args) {
		      args.push(undefined, customDefaultsAssignIn);
		      return apply(assignInWith, undefined, args);
		    });
	
		    /**
		     * This method is like `_.defaults` except that it recursively assigns
		     * default properties.
		     *
		     * **Note:** This method mutates `object`.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.10.0
		     * @category Object
		     * @param {Object} object The destination object.
		     * @param {...Object} [sources] The source objects.
		     * @returns {Object} Returns `object`.
		     * @see _.defaults
		     * @example
		     *
		     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });
		     * // => { 'a': { 'b': 2, 'c': 3 } }
		     */
		    var defaultsDeep = baseRest(function(args) {
		      args.push(undefined, customDefaultsMerge);
		      return apply(mergeWith, undefined, args);
		    });
	
		    /**
		     * This method is like `_.find` except that it returns the key of the first
		     * element `predicate` returns truthy for instead of the element itself.
		     *
		     * @static
		     * @memberOf _
		     * @since 1.1.0
		     * @category Object
		     * @param {Object} object The object to inspect.
		     * @param {Function} [predicate=_.identity] The function invoked per iteration.
		     * @returns {string|undefined} Returns the key of the matched element,
		     *  else `undefined`.
		     * @example
		     *
		     * var users = {
		     *   'barney':  { 'age': 36, 'active': true },
		     *   'fred':    { 'age': 40, 'active': false },
		     *   'pebbles': { 'age': 1,  'active': true }
		     * };
		     *
		     * _.findKey(users, function(o) { return o.age < 40; });
		     * // => 'barney' (iteration order is not guaranteed)
		     *
		     * // The `_.matches` iteratee shorthand.
		     * _.findKey(users, { 'age': 1, 'active': true });
		     * // => 'pebbles'
		     *
		     * // The `_.matchesProperty` iteratee shorthand.
		     * _.findKey(users, ['active', false]);
		     * // => 'fred'
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.findKey(users, 'active');
		     * // => 'barney'
		     */
		    function findKey(object, predicate) {
		      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
		    }
	
		    /**
		     * This method is like `_.findKey` except that it iterates over elements of
		     * a collection in the opposite order.
		     *
		     * @static
		     * @memberOf _
		     * @since 2.0.0
		     * @category Object
		     * @param {Object} object The object to inspect.
		     * @param {Function} [predicate=_.identity] The function invoked per iteration.
		     * @returns {string|undefined} Returns the key of the matched element,
		     *  else `undefined`.
		     * @example
		     *
		     * var users = {
		     *   'barney':  { 'age': 36, 'active': true },
		     *   'fred':    { 'age': 40, 'active': false },
		     *   'pebbles': { 'age': 1,  'active': true }
		     * };
		     *
		     * _.findLastKey(users, function(o) { return o.age < 40; });
		     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
		     *
		     * // The `_.matches` iteratee shorthand.
		     * _.findLastKey(users, { 'age': 36, 'active': true });
		     * // => 'barney'
		     *
		     * // The `_.matchesProperty` iteratee shorthand.
		     * _.findLastKey(users, ['active', false]);
		     * // => 'fred'
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.findLastKey(users, 'active');
		     * // => 'pebbles'
		     */
		    function findLastKey(object, predicate) {
		      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
		    }
	
		    /**
		     * Iterates over own and inherited enumerable string keyed properties of an
		     * object and invokes `iteratee` for each property. The iteratee is invoked
		     * with three arguments: (value, key, object). Iteratee functions may exit
		     * iteration early by explicitly returning `false`.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.3.0
		     * @category Object
		     * @param {Object} object The object to iterate over.
		     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
		     * @returns {Object} Returns `object`.
		     * @see _.forInRight
		     * @example
		     *
		     * function Foo() {
		     *   this.a = 1;
		     *   this.b = 2;
		     * }
		     *
		     * Foo.prototype.c = 3;
		     *
		     * _.forIn(new Foo, function(value, key) {
		     *   console.log(key);
		     * });
		     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
		     */
		    function forIn(object, iteratee) {
		      return object == null
		        ? object
		        : baseFor(object, getIteratee(iteratee, 3), keysIn);
		    }
	
		    /**
		     * This method is like `_.forIn` except that it iterates over properties of
		     * `object` in the opposite order.
		     *
		     * @static
		     * @memberOf _
		     * @since 2.0.0
		     * @category Object
		     * @param {Object} object The object to iterate over.
		     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
		     * @returns {Object} Returns `object`.
		     * @see _.forIn
		     * @example
		     *
		     * function Foo() {
		     *   this.a = 1;
		     *   this.b = 2;
		     * }
		     *
		     * Foo.prototype.c = 3;
		     *
		     * _.forInRight(new Foo, function(value, key) {
		     *   console.log(key);
		     * });
		     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
		     */
		    function forInRight(object, iteratee) {
		      return object == null
		        ? object
		        : baseForRight(object, getIteratee(iteratee, 3), keysIn);
		    }
	
		    /**
		     * Iterates over own enumerable string keyed properties of an object and
		     * invokes `iteratee` for each property. The iteratee is invoked with three
		     * arguments: (value, key, object). Iteratee functions may exit iteration
		     * early by explicitly returning `false`.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.3.0
		     * @category Object
		     * @param {Object} object The object to iterate over.
		     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
		     * @returns {Object} Returns `object`.
		     * @see _.forOwnRight
		     * @example
		     *
		     * function Foo() {
		     *   this.a = 1;
		     *   this.b = 2;
		     * }
		     *
		     * Foo.prototype.c = 3;
		     *
		     * _.forOwn(new Foo, function(value, key) {
		     *   console.log(key);
		     * });
		     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
		     */
		    function forOwn(object, iteratee) {
		      return object && baseForOwn(object, getIteratee(iteratee, 3));
		    }
	
		    /**
		     * This method is like `_.forOwn` except that it iterates over properties of
		     * `object` in the opposite order.
		     *
		     * @static
		     * @memberOf _
		     * @since 2.0.0
		     * @category Object
		     * @param {Object} object The object to iterate over.
		     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
		     * @returns {Object} Returns `object`.
		     * @see _.forOwn
		     * @example
		     *
		     * function Foo() {
		     *   this.a = 1;
		     *   this.b = 2;
		     * }
		     *
		     * Foo.prototype.c = 3;
		     *
		     * _.forOwnRight(new Foo, function(value, key) {
		     *   console.log(key);
		     * });
		     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
		     */
		    function forOwnRight(object, iteratee) {
		      return object && baseForOwnRight(object, getIteratee(iteratee, 3));
		    }
	
		    /**
		     * Creates an array of function property names from own enumerable properties
		     * of `object`.
		     *
		     * @static
		     * @since 0.1.0
		     * @memberOf _
		     * @category Object
		     * @param {Object} object The object to inspect.
		     * @returns {Array} Returns the function names.
		     * @see _.functionsIn
		     * @example
		     *
		     * function Foo() {
		     *   this.a = _.constant('a');
		     *   this.b = _.constant('b');
		     * }
		     *
		     * Foo.prototype.c = _.constant('c');
		     *
		     * _.functions(new Foo);
		     * // => ['a', 'b']
		     */
		    function functions(object) {
		      return object == null ? [] : baseFunctions(object, keys(object));
		    }
	
		    /**
		     * Creates an array of function property names from own and inherited
		     * enumerable properties of `object`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Object
		     * @param {Object} object The object to inspect.
		     * @returns {Array} Returns the function names.
		     * @see _.functions
		     * @example
		     *
		     * function Foo() {
		     *   this.a = _.constant('a');
		     *   this.b = _.constant('b');
		     * }
		     *
		     * Foo.prototype.c = _.constant('c');
		     *
		     * _.functionsIn(new Foo);
		     * // => ['a', 'b', 'c']
		     */
		    function functionsIn(object) {
		      return object == null ? [] : baseFunctions(object, keysIn(object));
		    }
	
		    /**
		     * Gets the value at `path` of `object`. If the resolved value is
		     * `undefined`, the `defaultValue` is returned in its place.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.7.0
		     * @category Object
		     * @param {Object} object The object to query.
		     * @param {Array|string} path The path of the property to get.
		     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
		     * @returns {*} Returns the resolved value.
		     * @example
		     *
		     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
		     *
		     * _.get(object, 'a[0].b.c');
		     * // => 3
		     *
		     * _.get(object, ['a', '0', 'b', 'c']);
		     * // => 3
		     *
		     * _.get(object, 'a.b.c', 'default');
		     * // => 'default'
		     */
		    function get(object, path, defaultValue) {
		      var result = object == null ? undefined : baseGet(object, path);
		      return result === undefined ? defaultValue : result;
		    }
	
		    /**
		     * Checks if `path` is a direct property of `object`.
		     *
		     * @static
		     * @since 0.1.0
		     * @memberOf _
		     * @category Object
		     * @param {Object} object The object to query.
		     * @param {Array|string} path The path to check.
		     * @returns {boolean} Returns `true` if `path` exists, else `false`.
		     * @example
		     *
		     * var object = { 'a': { 'b': 2 } };
		     * var other = _.create({ 'a': _.create({ 'b': 2 }) });
		     *
		     * _.has(object, 'a');
		     * // => true
		     *
		     * _.has(object, 'a.b');
		     * // => true
		     *
		     * _.has(object, ['a', 'b']);
		     * // => true
		     *
		     * _.has(other, 'a');
		     * // => false
		     */
		    function has(object, path) {
		      return object != null && hasPath(object, path, baseHas);
		    }
	
		    /**
		     * Checks if `path` is a direct or inherited property of `object`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Object
		     * @param {Object} object The object to query.
		     * @param {Array|string} path The path to check.
		     * @returns {boolean} Returns `true` if `path` exists, else `false`.
		     * @example
		     *
		     * var object = _.create({ 'a': _.create({ 'b': 2 }) });
		     *
		     * _.hasIn(object, 'a');
		     * // => true
		     *
		     * _.hasIn(object, 'a.b');
		     * // => true
		     *
		     * _.hasIn(object, ['a', 'b']);
		     * // => true
		     *
		     * _.hasIn(object, 'b');
		     * // => false
		     */
		    function hasIn(object, path) {
		      return object != null && hasPath(object, path, baseHasIn);
		    }
	
		    /**
		     * Creates an object composed of the inverted keys and values of `object`.
		     * If `object` contains duplicate values, subsequent values overwrite
		     * property assignments of previous values.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.7.0
		     * @category Object
		     * @param {Object} object The object to invert.
		     * @returns {Object} Returns the new inverted object.
		     * @example
		     *
		     * var object = { 'a': 1, 'b': 2, 'c': 1 };
		     *
		     * _.invert(object);
		     * // => { '1': 'c', '2': 'b' }
		     */
		    var invert = createInverter(function(result, value, key) {
		      result[value] = key;
		    }, constant(identity));
	
		    /**
		     * This method is like `_.invert` except that the inverted object is generated
		     * from the results of running each element of `object` thru `iteratee`. The
		     * corresponding inverted value of each inverted key is an array of keys
		     * responsible for generating the inverted value. The iteratee is invoked
		     * with one argument: (value).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.1.0
		     * @category Object
		     * @param {Object} object The object to invert.
		     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
		     * @returns {Object} Returns the new inverted object.
		     * @example
		     *
		     * var object = { 'a': 1, 'b': 2, 'c': 1 };
		     *
		     * _.invertBy(object);
		     * // => { '1': ['a', 'c'], '2': ['b'] }
		     *
		     * _.invertBy(object, function(value) {
		     *   return 'group' + value;
		     * });
		     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
		     */
		    var invertBy = createInverter(function(result, value, key) {
		      if (hasOwnProperty.call(result, value)) {
		        result[value].push(key);
		      } else {
		        result[value] = [key];
		      }
		    }, getIteratee);
	
		    /**
		     * Invokes the method at `path` of `object`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Object
		     * @param {Object} object The object to query.
		     * @param {Array|string} path The path of the method to invoke.
		     * @param {...*} [args] The arguments to invoke the method with.
		     * @returns {*} Returns the result of the invoked method.
		     * @example
		     *
		     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
		     *
		     * _.invoke(object, 'a[0].b.c.slice', 1, 3);
		     * // => [2, 3]
		     */
		    var invoke = baseRest(baseInvoke);
	
		    /**
		     * Creates an array of the own enumerable property names of `object`.
		     *
		     * **Note:** Non-object values are coerced to objects. See the
		     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
		     * for more details.
		     *
		     * @static
		     * @since 0.1.0
		     * @memberOf _
		     * @category Object
		     * @param {Object} object The object to query.
		     * @returns {Array} Returns the array of property names.
		     * @example
		     *
		     * function Foo() {
		     *   this.a = 1;
		     *   this.b = 2;
		     * }
		     *
		     * Foo.prototype.c = 3;
		     *
		     * _.keys(new Foo);
		     * // => ['a', 'b'] (iteration order is not guaranteed)
		     *
		     * _.keys('hi');
		     * // => ['0', '1']
		     */
		    function keys(object) {
		      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
		    }
	
		    /**
		     * Creates an array of the own and inherited enumerable property names of `object`.
		     *
		     * **Note:** Non-object values are coerced to objects.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Object
		     * @param {Object} object The object to query.
		     * @returns {Array} Returns the array of property names.
		     * @example
		     *
		     * function Foo() {
		     *   this.a = 1;
		     *   this.b = 2;
		     * }
		     *
		     * Foo.prototype.c = 3;
		     *
		     * _.keysIn(new Foo);
		     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
		     */
		    function keysIn(object) {
		      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
		    }
	
		    /**
		     * The opposite of `_.mapValues`; this method creates an object with the
		     * same values as `object` and keys generated by running each own enumerable
		     * string keyed property of `object` thru `iteratee`. The iteratee is invoked
		     * with three arguments: (value, key, object).
		     *
		     * @static
		     * @memberOf _
		     * @since 3.8.0
		     * @category Object
		     * @param {Object} object The object to iterate over.
		     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
		     * @returns {Object} Returns the new mapped object.
		     * @see _.mapValues
		     * @example
		     *
		     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
		     *   return key + value;
		     * });
		     * // => { 'a1': 1, 'b2': 2 }
		     */
		    function mapKeys(object, iteratee) {
		      var result = {};
		      iteratee = getIteratee(iteratee, 3);
	
		      baseForOwn(object, function(value, key, object) {
		        baseAssignValue(result, iteratee(value, key, object), value);
		      });
		      return result;
		    }
	
		    /**
		     * Creates an object with the same keys as `object` and values generated
		     * by running each own enumerable string keyed property of `object` thru
		     * `iteratee`. The iteratee is invoked with three arguments:
		     * (value, key, object).
		     *
		     * @static
		     * @memberOf _
		     * @since 2.4.0
		     * @category Object
		     * @param {Object} object The object to iterate over.
		     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
		     * @returns {Object} Returns the new mapped object.
		     * @see _.mapKeys
		     * @example
		     *
		     * var users = {
		     *   'fred':    { 'user': 'fred',    'age': 40 },
		     *   'pebbles': { 'user': 'pebbles', 'age': 1 }
		     * };
		     *
		     * _.mapValues(users, function(o) { return o.age; });
		     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.mapValues(users, 'age');
		     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
		     */
		    function mapValues(object, iteratee) {
		      var result = {};
		      iteratee = getIteratee(iteratee, 3);
	
		      baseForOwn(object, function(value, key, object) {
		        baseAssignValue(result, key, iteratee(value, key, object));
		      });
		      return result;
		    }
	
		    /**
		     * This method is like `_.assign` except that it recursively merges own and
		     * inherited enumerable string keyed properties of source objects into the
		     * destination object. Source properties that resolve to `undefined` are
		     * skipped if a destination value exists. Array and plain object properties
		     * are merged recursively. Other objects and value types are overridden by
		     * assignment. Source objects are applied from left to right. Subsequent
		     * sources overwrite property assignments of previous sources.
		     *
		     * **Note:** This method mutates `object`.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.5.0
		     * @category Object
		     * @param {Object} object The destination object.
		     * @param {...Object} [sources] The source objects.
		     * @returns {Object} Returns `object`.
		     * @example
		     *
		     * var object = {
		     *   'a': [{ 'b': 2 }, { 'd': 4 }]
		     * };
		     *
		     * var other = {
		     *   'a': [{ 'c': 3 }, { 'e': 5 }]
		     * };
		     *
		     * _.merge(object, other);
		     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
		     */
		    var merge = createAssigner(function(object, source, srcIndex) {
		      baseMerge(object, source, srcIndex);
		    });
	
		    /**
		     * This method is like `_.merge` except that it accepts `customizer` which
		     * is invoked to produce the merged values of the destination and source
		     * properties. If `customizer` returns `undefined`, merging is handled by the
		     * method instead. The `customizer` is invoked with six arguments:
		     * (objValue, srcValue, key, object, source, stack).
		     *
		     * **Note:** This method mutates `object`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Object
		     * @param {Object} object The destination object.
		     * @param {...Object} sources The source objects.
		     * @param {Function} customizer The function to customize assigned values.
		     * @returns {Object} Returns `object`.
		     * @example
		     *
		     * function customizer(objValue, srcValue) {
		     *   if (_.isArray(objValue)) {
		     *     return objValue.concat(srcValue);
		     *   }
		     * }
		     *
		     * var object = { 'a': [1], 'b': [2] };
		     * var other = { 'a': [3], 'b': [4] };
		     *
		     * _.mergeWith(object, other, customizer);
		     * // => { 'a': [1, 3], 'b': [2, 4] }
		     */
		    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
		      baseMerge(object, source, srcIndex, customizer);
		    });
	
		    /**
		     * The opposite of `_.pick`; this method creates an object composed of the
		     * own and inherited enumerable property paths of `object` that are not omitted.
		     *
		     * **Note:** This method is considerably slower than `_.pick`.
		     *
		     * @static
		     * @since 0.1.0
		     * @memberOf _
		     * @category Object
		     * @param {Object} object The source object.
		     * @param {...(string|string[])} [paths] The property paths to omit.
		     * @returns {Object} Returns the new object.
		     * @example
		     *
		     * var object = { 'a': 1, 'b': '2', 'c': 3 };
		     *
		     * _.omit(object, ['a', 'c']);
		     * // => { 'b': '2' }
		     */
		    var omit = flatRest(function(object, paths) {
		      var result = {};
		      if (object == null) {
		        return result;
		      }
		      var isDeep = false;
		      paths = arrayMap(paths, function(path) {
		        path = castPath(path, object);
		        isDeep || (isDeep = path.length > 1);
		        return path;
		      });
		      copyObject(object, getAllKeysIn(object), result);
		      if (isDeep) {
		        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
		      }
		      var length = paths.length;
		      while (length--) {
		        baseUnset(result, paths[length]);
		      }
		      return result;
		    });
	
		    /**
		     * The opposite of `_.pickBy`; this method creates an object composed of
		     * the own and inherited enumerable string keyed properties of `object` that
		     * `predicate` doesn't return truthy for. The predicate is invoked with two
		     * arguments: (value, key).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Object
		     * @param {Object} object The source object.
		     * @param {Function} [predicate=_.identity] The function invoked per property.
		     * @returns {Object} Returns the new object.
		     * @example
		     *
		     * var object = { 'a': 1, 'b': '2', 'c': 3 };
		     *
		     * _.omitBy(object, _.isNumber);
		     * // => { 'b': '2' }
		     */
		    function omitBy(object, predicate) {
		      return pickBy(object, negate(getIteratee(predicate)));
		    }
	
		    /**
		     * Creates an object composed of the picked `object` properties.
		     *
		     * @static
		     * @since 0.1.0
		     * @memberOf _
		     * @category Object
		     * @param {Object} object The source object.
		     * @param {...(string|string[])} [paths] The property paths to pick.
		     * @returns {Object} Returns the new object.
		     * @example
		     *
		     * var object = { 'a': 1, 'b': '2', 'c': 3 };
		     *
		     * _.pick(object, ['a', 'c']);
		     * // => { 'a': 1, 'c': 3 }
		     */
		    var pick = flatRest(function(object, paths) {
		      return object == null ? {} : basePick(object, paths);
		    });
	
		    /**
		     * Creates an object composed of the `object` properties `predicate` returns
		     * truthy for. The predicate is invoked with two arguments: (value, key).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Object
		     * @param {Object} object The source object.
		     * @param {Function} [predicate=_.identity] The function invoked per property.
		     * @returns {Object} Returns the new object.
		     * @example
		     *
		     * var object = { 'a': 1, 'b': '2', 'c': 3 };
		     *
		     * _.pickBy(object, _.isNumber);
		     * // => { 'a': 1, 'c': 3 }
		     */
		    function pickBy(object, predicate) {
		      if (object == null) {
		        return {};
		      }
		      var props = arrayMap(getAllKeysIn(object), function(prop) {
		        return [prop];
		      });
		      predicate = getIteratee(predicate);
		      return basePickBy(object, props, function(value, path) {
		        return predicate(value, path[0]);
		      });
		    }
	
		    /**
		     * This method is like `_.get` except that if the resolved value is a
		     * function it's invoked with the `this` binding of its parent object and
		     * its result is returned.
		     *
		     * @static
		     * @since 0.1.0
		     * @memberOf _
		     * @category Object
		     * @param {Object} object The object to query.
		     * @param {Array|string} path The path of the property to resolve.
		     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
		     * @returns {*} Returns the resolved value.
		     * @example
		     *
		     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
		     *
		     * _.result(object, 'a[0].b.c1');
		     * // => 3
		     *
		     * _.result(object, 'a[0].b.c2');
		     * // => 4
		     *
		     * _.result(object, 'a[0].b.c3', 'default');
		     * // => 'default'
		     *
		     * _.result(object, 'a[0].b.c3', _.constant('default'));
		     * // => 'default'
		     */
		    function result(object, path, defaultValue) {
		      path = castPath(path, object);
	
		      var index = -1,
		          length = path.length;
	
		      // Ensure the loop is entered when path is empty.
		      if (!length) {
		        length = 1;
		        object = undefined;
		      }
		      while (++index < length) {
		        var value = object == null ? undefined : object[toKey(path[index])];
		        if (value === undefined) {
		          index = length;
		          value = defaultValue;
		        }
		        object = isFunction(value) ? value.call(object) : value;
		      }
		      return object;
		    }
	
		    /**
		     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
		     * it's created. Arrays are created for missing index properties while objects
		     * are created for all other missing properties. Use `_.setWith` to customize
		     * `path` creation.
		     *
		     * **Note:** This method mutates `object`.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.7.0
		     * @category Object
		     * @param {Object} object The object to modify.
		     * @param {Array|string} path The path of the property to set.
		     * @param {*} value The value to set.
		     * @returns {Object} Returns `object`.
		     * @example
		     *
		     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
		     *
		     * _.set(object, 'a[0].b.c', 4);
		     * console.log(object.a[0].b.c);
		     * // => 4
		     *
		     * _.set(object, ['x', '0', 'y', 'z'], 5);
		     * console.log(object.x[0].y.z);
		     * // => 5
		     */
		    function set(object, path, value) {
		      return object == null ? object : baseSet(object, path, value);
		    }
	
		    /**
		     * This method is like `_.set` except that it accepts `customizer` which is
		     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
		     * path creation is handled by the method instead. The `customizer` is invoked
		     * with three arguments: (nsValue, key, nsObject).
		     *
		     * **Note:** This method mutates `object`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Object
		     * @param {Object} object The object to modify.
		     * @param {Array|string} path The path of the property to set.
		     * @param {*} value The value to set.
		     * @param {Function} [customizer] The function to customize assigned values.
		     * @returns {Object} Returns `object`.
		     * @example
		     *
		     * var object = {};
		     *
		     * _.setWith(object, '[0][1]', 'a', Object);
		     * // => { '0': { '1': 'a' } }
		     */
		    function setWith(object, path, value, customizer) {
		      customizer = typeof customizer == 'function' ? customizer : undefined;
		      return object == null ? object : baseSet(object, path, value, customizer);
		    }
	
		    /**
		     * Creates an array of own enumerable string keyed-value pairs for `object`
		     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
		     * entries are returned.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @alias entries
		     * @category Object
		     * @param {Object} object The object to query.
		     * @returns {Array} Returns the key-value pairs.
		     * @example
		     *
		     * function Foo() {
		     *   this.a = 1;
		     *   this.b = 2;
		     * }
		     *
		     * Foo.prototype.c = 3;
		     *
		     * _.toPairs(new Foo);
		     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
		     */
		    var toPairs = createToPairs(keys);
	
		    /**
		     * Creates an array of own and inherited enumerable string keyed-value pairs
		     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map
		     * or set, its entries are returned.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @alias entriesIn
		     * @category Object
		     * @param {Object} object The object to query.
		     * @returns {Array} Returns the key-value pairs.
		     * @example
		     *
		     * function Foo() {
		     *   this.a = 1;
		     *   this.b = 2;
		     * }
		     *
		     * Foo.prototype.c = 3;
		     *
		     * _.toPairsIn(new Foo);
		     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
		     */
		    var toPairsIn = createToPairs(keysIn);
	
		    /**
		     * An alternative to `_.reduce`; this method transforms `object` to a new
		     * `accumulator` object which is the result of running each of its own
		     * enumerable string keyed properties thru `iteratee`, with each invocation
		     * potentially mutating the `accumulator` object. If `accumulator` is not
		     * provided, a new object with the same `[[Prototype]]` will be used. The
		     * iteratee is invoked with four arguments: (accumulator, value, key, object).
		     * Iteratee functions may exit iteration early by explicitly returning `false`.
		     *
		     * @static
		     * @memberOf _
		     * @since 1.3.0
		     * @category Object
		     * @param {Object} object The object to iterate over.
		     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
		     * @param {*} [accumulator] The custom accumulator value.
		     * @returns {*} Returns the accumulated value.
		     * @example
		     *
		     * _.transform([2, 3, 4], function(result, n) {
		     *   result.push(n *= n);
		     *   return n % 2 == 0;
		     * }, []);
		     * // => [4, 9]
		     *
		     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
		     *   (result[value] || (result[value] = [])).push(key);
		     * }, {});
		     * // => { '1': ['a', 'c'], '2': ['b'] }
		     */
		    function transform(object, iteratee, accumulator) {
		      var isArr = isArray(object),
		          isArrLike = isArr || isBuffer(object) || isTypedArray(object);
	
		      iteratee = getIteratee(iteratee, 4);
		      if (accumulator == null) {
		        var Ctor = object && object.constructor;
		        if (isArrLike) {
		          accumulator = isArr ? new Ctor : [];
		        }
		        else if (isObject(object)) {
		          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
		        }
		        else {
		          accumulator = {};
		        }
		      }
		      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {
		        return iteratee(accumulator, value, index, object);
		      });
		      return accumulator;
		    }
	
		    /**
		     * Removes the property at `path` of `object`.
		     *
		     * **Note:** This method mutates `object`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Object
		     * @param {Object} object The object to modify.
		     * @param {Array|string} path The path of the property to unset.
		     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
		     * @example
		     *
		     * var object = { 'a': [{ 'b': { 'c': 7 } }] };
		     * _.unset(object, 'a[0].b.c');
		     * // => true
		     *
		     * console.log(object);
		     * // => { 'a': [{ 'b': {} }] };
		     *
		     * _.unset(object, ['a', '0', 'b', 'c']);
		     * // => true
		     *
		     * console.log(object);
		     * // => { 'a': [{ 'b': {} }] };
		     */
		    function unset(object, path) {
		      return object == null ? true : baseUnset(object, path);
		    }
	
		    /**
		     * This method is like `_.set` except that accepts `updater` to produce the
		     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
		     * is invoked with one argument: (value).
		     *
		     * **Note:** This method mutates `object`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.6.0
		     * @category Object
		     * @param {Object} object The object to modify.
		     * @param {Array|string} path The path of the property to set.
		     * @param {Function} updater The function to produce the updated value.
		     * @returns {Object} Returns `object`.
		     * @example
		     *
		     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
		     *
		     * _.update(object, 'a[0].b.c', function(n) { return n * n; });
		     * console.log(object.a[0].b.c);
		     * // => 9
		     *
		     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
		     * console.log(object.x[0].y.z);
		     * // => 0
		     */
		    function update(object, path, updater) {
		      return object == null ? object : baseUpdate(object, path, castFunction(updater));
		    }
	
		    /**
		     * This method is like `_.update` except that it accepts `customizer` which is
		     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
		     * path creation is handled by the method instead. The `customizer` is invoked
		     * with three arguments: (nsValue, key, nsObject).
		     *
		     * **Note:** This method mutates `object`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.6.0
		     * @category Object
		     * @param {Object} object The object to modify.
		     * @param {Array|string} path The path of the property to set.
		     * @param {Function} updater The function to produce the updated value.
		     * @param {Function} [customizer] The function to customize assigned values.
		     * @returns {Object} Returns `object`.
		     * @example
		     *
		     * var object = {};
		     *
		     * _.updateWith(object, '[0][1]', _.constant('a'), Object);
		     * // => { '0': { '1': 'a' } }
		     */
		    function updateWith(object, path, updater, customizer) {
		      customizer = typeof customizer == 'function' ? customizer : undefined;
		      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
		    }
	
		    /**
		     * Creates an array of the own enumerable string keyed property values of `object`.
		     *
		     * **Note:** Non-object values are coerced to objects.
		     *
		     * @static
		     * @since 0.1.0
		     * @memberOf _
		     * @category Object
		     * @param {Object} object The object to query.
		     * @returns {Array} Returns the array of property values.
		     * @example
		     *
		     * function Foo() {
		     *   this.a = 1;
		     *   this.b = 2;
		     * }
		     *
		     * Foo.prototype.c = 3;
		     *
		     * _.values(new Foo);
		     * // => [1, 2] (iteration order is not guaranteed)
		     *
		     * _.values('hi');
		     * // => ['h', 'i']
		     */
		    function values(object) {
		      return object == null ? [] : baseValues(object, keys(object));
		    }
	
		    /**
		     * Creates an array of the own and inherited enumerable string keyed property
		     * values of `object`.
		     *
		     * **Note:** Non-object values are coerced to objects.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Object
		     * @param {Object} object The object to query.
		     * @returns {Array} Returns the array of property values.
		     * @example
		     *
		     * function Foo() {
		     *   this.a = 1;
		     *   this.b = 2;
		     * }
		     *
		     * Foo.prototype.c = 3;
		     *
		     * _.valuesIn(new Foo);
		     * // => [1, 2, 3] (iteration order is not guaranteed)
		     */
		    function valuesIn(object) {
		      return object == null ? [] : baseValues(object, keysIn(object));
		    }
	
		    /*------------------------------------------------------------------------*/
	
		    /**
		     * Clamps `number` within the inclusive `lower` and `upper` bounds.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Number
		     * @param {number} number The number to clamp.
		     * @param {number} [lower] The lower bound.
		     * @param {number} upper The upper bound.
		     * @returns {number} Returns the clamped number.
		     * @example
		     *
		     * _.clamp(-10, -5, 5);
		     * // => -5
		     *
		     * _.clamp(10, -5, 5);
		     * // => 5
		     */
		    function clamp(number, lower, upper) {
		      if (upper === undefined) {
		        upper = lower;
		        lower = undefined;
		      }
		      if (upper !== undefined) {
		        upper = toNumber(upper);
		        upper = upper === upper ? upper : 0;
		      }
		      if (lower !== undefined) {
		        lower = toNumber(lower);
		        lower = lower === lower ? lower : 0;
		      }
		      return baseClamp(toNumber(number), lower, upper);
		    }
	
		    /**
		     * Checks if `n` is between `start` and up to, but not including, `end`. If
		     * `end` is not specified, it's set to `start` with `start` then set to `0`.
		     * If `start` is greater than `end` the params are swapped to support
		     * negative ranges.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.3.0
		     * @category Number
		     * @param {number} number The number to check.
		     * @param {number} [start=0] The start of the range.
		     * @param {number} end The end of the range.
		     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
		     * @see _.range, _.rangeRight
		     * @example
		     *
		     * _.inRange(3, 2, 4);
		     * // => true
		     *
		     * _.inRange(4, 8);
		     * // => true
		     *
		     * _.inRange(4, 2);
		     * // => false
		     *
		     * _.inRange(2, 2);
		     * // => false
		     *
		     * _.inRange(1.2, 2);
		     * // => true
		     *
		     * _.inRange(5.2, 4);
		     * // => false
		     *
		     * _.inRange(-3, -2, -6);
		     * // => true
		     */
		    function inRange(number, start, end) {
		      start = toFinite(start);
		      if (end === undefined) {
		        end = start;
		        start = 0;
		      } else {
		        end = toFinite(end);
		      }
		      number = toNumber(number);
		      return baseInRange(number, start, end);
		    }
	
		    /**
		     * Produces a random number between the inclusive `lower` and `upper` bounds.
		     * If only one argument is provided a number between `0` and the given number
		     * is returned. If `floating` is `true`, or either `lower` or `upper` are
		     * floats, a floating-point number is returned instead of an integer.
		     *
		     * **Note:** JavaScript follows the IEEE-754 standard for resolving
		     * floating-point values which can produce unexpected results.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.7.0
		     * @category Number
		     * @param {number} [lower=0] The lower bound.
		     * @param {number} [upper=1] The upper bound.
		     * @param {boolean} [floating] Specify returning a floating-point number.
		     * @returns {number} Returns the random number.
		     * @example
		     *
		     * _.random(0, 5);
		     * // => an integer between 0 and 5
		     *
		     * _.random(5);
		     * // => also an integer between 0 and 5
		     *
		     * _.random(5, true);
		     * // => a floating-point number between 0 and 5
		     *
		     * _.random(1.2, 5.2);
		     * // => a floating-point number between 1.2 and 5.2
		     */
		    function random(lower, upper, floating) {
		      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {
		        upper = floating = undefined;
		      }
		      if (floating === undefined) {
		        if (typeof upper == 'boolean') {
		          floating = upper;
		          upper = undefined;
		        }
		        else if (typeof lower == 'boolean') {
		          floating = lower;
		          lower = undefined;
		        }
		      }
		      if (lower === undefined && upper === undefined) {
		        lower = 0;
		        upper = 1;
		      }
		      else {
		        lower = toFinite(lower);
		        if (upper === undefined) {
		          upper = lower;
		          lower = 0;
		        } else {
		          upper = toFinite(upper);
		        }
		      }
		      if (lower > upper) {
		        var temp = lower;
		        lower = upper;
		        upper = temp;
		      }
		      if (floating || lower % 1 || upper % 1) {
		        var rand = nativeRandom();
		        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);
		      }
		      return baseRandom(lower, upper);
		    }
	
		    /*------------------------------------------------------------------------*/
	
		    /**
		     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category String
		     * @param {string} [string=''] The string to convert.
		     * @returns {string} Returns the camel cased string.
		     * @example
		     *
		     * _.camelCase('Foo Bar');
		     * // => 'fooBar'
		     *
		     * _.camelCase('--foo-bar--');
		     * // => 'fooBar'
		     *
		     * _.camelCase('__FOO_BAR__');
		     * // => 'fooBar'
		     */
		    var camelCase = createCompounder(function(result, word, index) {
		      word = word.toLowerCase();
		      return result + (index ? capitalize(word) : word);
		    });
	
		    /**
		     * Converts the first character of `string` to upper case and the remaining
		     * to lower case.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category String
		     * @param {string} [string=''] The string to capitalize.
		     * @returns {string} Returns the capitalized string.
		     * @example
		     *
		     * _.capitalize('FRED');
		     * // => 'Fred'
		     */
		    function capitalize(string) {
		      return upperFirst(toString(string).toLowerCase());
		    }
	
		    /**
		     * Deburrs `string` by converting
		     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
		     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
		     * letters to basic Latin letters and removing
		     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category String
		     * @param {string} [string=''] The string to deburr.
		     * @returns {string} Returns the deburred string.
		     * @example
		     *
		     * _.deburr('déjà vu');
		     * // => 'deja vu'
		     */
		    function deburr(string) {
		      string = toString(string);
		      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
		    }
	
		    /**
		     * Checks if `string` ends with the given target string.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category String
		     * @param {string} [string=''] The string to inspect.
		     * @param {string} [target] The string to search for.
		     * @param {number} [position=string.length] The position to search up to.
		     * @returns {boolean} Returns `true` if `string` ends with `target`,
		     *  else `false`.
		     * @example
		     *
		     * _.endsWith('abc', 'c');
		     * // => true
		     *
		     * _.endsWith('abc', 'b');
		     * // => false
		     *
		     * _.endsWith('abc', 'b', 2);
		     * // => true
		     */
		    function endsWith(string, target, position) {
		      string = toString(string);
		      target = baseToString(target);
	
		      var length = string.length;
		      position = position === undefined
		        ? length
		        : baseClamp(toInteger(position), 0, length);
	
		      var end = position;
		      position -= target.length;
		      return position >= 0 && string.slice(position, end) == target;
		    }
	
		    /**
		     * Converts the characters "&", "<", ">", '"', and "'" in `string` to their
		     * corresponding HTML entities.
		     *
		     * **Note:** No other characters are escaped. To escape additional
		     * characters use a third-party library like [_he_](https://mths.be/he).
		     *
		     * Though the ">" character is escaped for symmetry, characters like
		     * ">" and "/" don't need escaping in HTML and have no special meaning
		     * unless they're part of a tag or unquoted attribute value. See
		     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
		     * (under "semi-related fun fact") for more details.
		     *
		     * When working with HTML you should always
		     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
		     * XSS vectors.
		     *
		     * @static
		     * @since 0.1.0
		     * @memberOf _
		     * @category String
		     * @param {string} [string=''] The string to escape.
		     * @returns {string} Returns the escaped string.
		     * @example
		     *
		     * _.escape('fred, barney, & pebbles');
		     * // => 'fred, barney, &amp; pebbles'
		     */
		    function escape(string) {
		      string = toString(string);
		      return (string && reHasUnescapedHtml.test(string))
		        ? string.replace(reUnescapedHtml, escapeHtmlChar)
		        : string;
		    }
	
		    /**
		     * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
		     * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category String
		     * @param {string} [string=''] The string to escape.
		     * @returns {string} Returns the escaped string.
		     * @example
		     *
		     * _.escapeRegExp('[lodash](https://lodash.com/)');
		     * // => '\[lodash\]\(https://lodash\.com/\)'
		     */
		    function escapeRegExp(string) {
		      string = toString(string);
		      return (string && reHasRegExpChar.test(string))
		        ? string.replace(reRegExpChar, '\\$&')
		        : string;
		    }
	
		    /**
		     * Converts `string` to
		     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category String
		     * @param {string} [string=''] The string to convert.
		     * @returns {string} Returns the kebab cased string.
		     * @example
		     *
		     * _.kebabCase('Foo Bar');
		     * // => 'foo-bar'
		     *
		     * _.kebabCase('fooBar');
		     * // => 'foo-bar'
		     *
		     * _.kebabCase('__FOO_BAR__');
		     * // => 'foo-bar'
		     */
		    var kebabCase = createCompounder(function(result, word, index) {
		      return result + (index ? '-' : '') + word.toLowerCase();
		    });
	
		    /**
		     * Converts `string`, as space separated words, to lower case.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category String
		     * @param {string} [string=''] The string to convert.
		     * @returns {string} Returns the lower cased string.
		     * @example
		     *
		     * _.lowerCase('--Foo-Bar--');
		     * // => 'foo bar'
		     *
		     * _.lowerCase('fooBar');
		     * // => 'foo bar'
		     *
		     * _.lowerCase('__FOO_BAR__');
		     * // => 'foo bar'
		     */
		    var lowerCase = createCompounder(function(result, word, index) {
		      return result + (index ? ' ' : '') + word.toLowerCase();
		    });
	
		    /**
		     * Converts the first character of `string` to lower case.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category String
		     * @param {string} [string=''] The string to convert.
		     * @returns {string} Returns the converted string.
		     * @example
		     *
		     * _.lowerFirst('Fred');
		     * // => 'fred'
		     *
		     * _.lowerFirst('FRED');
		     * // => 'fRED'
		     */
		    var lowerFirst = createCaseFirst('toLowerCase');
	
		    /**
		     * Pads `string` on the left and right sides if it's shorter than `length`.
		     * Padding characters are truncated if they can't be evenly divided by `length`.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category String
		     * @param {string} [string=''] The string to pad.
		     * @param {number} [length=0] The padding length.
		     * @param {string} [chars=' '] The string used as padding.
		     * @returns {string} Returns the padded string.
		     * @example
		     *
		     * _.pad('abc', 8);
		     * // => '  abc   '
		     *
		     * _.pad('abc', 8, '_-');
		     * // => '_-abc_-_'
		     *
		     * _.pad('abc', 3);
		     * // => 'abc'
		     */
		    function pad(string, length, chars) {
		      string = toString(string);
		      length = toInteger(length);
	
		      var strLength = length ? stringSize(string) : 0;
		      if (!length || strLength >= length) {
		        return string;
		      }
		      var mid = (length - strLength) / 2;
		      return (
		        createPadding(nativeFloor(mid), chars) +
		        string +
		        createPadding(nativeCeil(mid), chars)
		      );
		    }
	
		    /**
		     * Pads `string` on the right side if it's shorter than `length`. Padding
		     * characters are truncated if they exceed `length`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category String
		     * @param {string} [string=''] The string to pad.
		     * @param {number} [length=0] The padding length.
		     * @param {string} [chars=' '] The string used as padding.
		     * @returns {string} Returns the padded string.
		     * @example
		     *
		     * _.padEnd('abc', 6);
		     * // => 'abc   '
		     *
		     * _.padEnd('abc', 6, '_-');
		     * // => 'abc_-_'
		     *
		     * _.padEnd('abc', 3);
		     * // => 'abc'
		     */
		    function padEnd(string, length, chars) {
		      string = toString(string);
		      length = toInteger(length);
	
		      var strLength = length ? stringSize(string) : 0;
		      return (length && strLength < length)
		        ? (string + createPadding(length - strLength, chars))
		        : string;
		    }
	
		    /**
		     * Pads `string` on the left side if it's shorter than `length`. Padding
		     * characters are truncated if they exceed `length`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category String
		     * @param {string} [string=''] The string to pad.
		     * @param {number} [length=0] The padding length.
		     * @param {string} [chars=' '] The string used as padding.
		     * @returns {string} Returns the padded string.
		     * @example
		     *
		     * _.padStart('abc', 6);
		     * // => '   abc'
		     *
		     * _.padStart('abc', 6, '_-');
		     * // => '_-_abc'
		     *
		     * _.padStart('abc', 3);
		     * // => 'abc'
		     */
		    function padStart(string, length, chars) {
		      string = toString(string);
		      length = toInteger(length);
	
		      var strLength = length ? stringSize(string) : 0;
		      return (length && strLength < length)
		        ? (createPadding(length - strLength, chars) + string)
		        : string;
		    }
	
		    /**
		     * Converts `string` to an integer of the specified radix. If `radix` is
		     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
		     * hexadecimal, in which case a `radix` of `16` is used.
		     *
		     * **Note:** This method aligns with the
		     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
		     *
		     * @static
		     * @memberOf _
		     * @since 1.1.0
		     * @category String
		     * @param {string} string The string to convert.
		     * @param {number} [radix=10] The radix to interpret `value` by.
		     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		     * @returns {number} Returns the converted integer.
		     * @example
		     *
		     * _.parseInt('08');
		     * // => 8
		     *
		     * _.map(['6', '08', '10'], _.parseInt);
		     * // => [6, 8, 10]
		     */
		    function parseInt(string, radix, guard) {
		      if (guard || radix == null) {
		        radix = 0;
		      } else if (radix) {
		        radix = +radix;
		      }
		      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);
		    }
	
		    /**
		     * Repeats the given string `n` times.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category String
		     * @param {string} [string=''] The string to repeat.
		     * @param {number} [n=1] The number of times to repeat the string.
		     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		     * @returns {string} Returns the repeated string.
		     * @example
		     *
		     * _.repeat('*', 3);
		     * // => '***'
		     *
		     * _.repeat('abc', 2);
		     * // => 'abcabc'
		     *
		     * _.repeat('abc', 0);
		     * // => ''
		     */
		    function repeat(string, n, guard) {
		      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {
		        n = 1;
		      } else {
		        n = toInteger(n);
		      }
		      return baseRepeat(toString(string), n);
		    }
	
		    /**
		     * Replaces matches for `pattern` in `string` with `replacement`.
		     *
		     * **Note:** This method is based on
		     * [`String#replace`](https://mdn.io/String/replace).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category String
		     * @param {string} [string=''] The string to modify.
		     * @param {RegExp|string} pattern The pattern to replace.
		     * @param {Function|string} replacement The match replacement.
		     * @returns {string} Returns the modified string.
		     * @example
		     *
		     * _.replace('Hi Fred', 'Fred', 'Barney');
		     * // => 'Hi Barney'
		     */
		    function replace() {
		      var args = arguments,
		          string = toString(args[0]);
	
		      return args.length < 3 ? string : string.replace(args[1], args[2]);
		    }
	
		    /**
		     * Converts `string` to
		     * [snake case](https://en.wikipedia.org/wiki/Snake_case).
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category String
		     * @param {string} [string=''] The string to convert.
		     * @returns {string} Returns the snake cased string.
		     * @example
		     *
		     * _.snakeCase('Foo Bar');
		     * // => 'foo_bar'
		     *
		     * _.snakeCase('fooBar');
		     * // => 'foo_bar'
		     *
		     * _.snakeCase('--FOO-BAR--');
		     * // => 'foo_bar'
		     */
		    var snakeCase = createCompounder(function(result, word, index) {
		      return result + (index ? '_' : '') + word.toLowerCase();
		    });
	
		    /**
		     * Splits `string` by `separator`.
		     *
		     * **Note:** This method is based on
		     * [`String#split`](https://mdn.io/String/split).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category String
		     * @param {string} [string=''] The string to split.
		     * @param {RegExp|string} separator The separator pattern to split by.
		     * @param {number} [limit] The length to truncate results to.
		     * @returns {Array} Returns the string segments.
		     * @example
		     *
		     * _.split('a-b-c', '-', 2);
		     * // => ['a', 'b']
		     */
		    function split(string, separator, limit) {
		      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {
		        separator = limit = undefined;
		      }
		      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;
		      if (!limit) {
		        return [];
		      }
		      string = toString(string);
		      if (string && (
		            typeof separator == 'string' ||
		            (separator != null && !isRegExp(separator))
		          )) {
		        separator = baseToString(separator);
		        if (!separator && hasUnicode(string)) {
		          return castSlice(stringToArray(string), 0, limit);
		        }
		      }
		      return string.split(separator, limit);
		    }
	
		    /**
		     * Converts `string` to
		     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
		     *
		     * @static
		     * @memberOf _
		     * @since 3.1.0
		     * @category String
		     * @param {string} [string=''] The string to convert.
		     * @returns {string} Returns the start cased string.
		     * @example
		     *
		     * _.startCase('--foo-bar--');
		     * // => 'Foo Bar'
		     *
		     * _.startCase('fooBar');
		     * // => 'Foo Bar'
		     *
		     * _.startCase('__FOO_BAR__');
		     * // => 'FOO BAR'
		     */
		    var startCase = createCompounder(function(result, word, index) {
		      return result + (index ? ' ' : '') + upperFirst(word);
		    });
	
		    /**
		     * Checks if `string` starts with the given target string.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category String
		     * @param {string} [string=''] The string to inspect.
		     * @param {string} [target] The string to search for.
		     * @param {number} [position=0] The position to search from.
		     * @returns {boolean} Returns `true` if `string` starts with `target`,
		     *  else `false`.
		     * @example
		     *
		     * _.startsWith('abc', 'a');
		     * // => true
		     *
		     * _.startsWith('abc', 'b');
		     * // => false
		     *
		     * _.startsWith('abc', 'b', 1);
		     * // => true
		     */
		    function startsWith(string, target, position) {
		      string = toString(string);
		      position = position == null
		        ? 0
		        : baseClamp(toInteger(position), 0, string.length);
	
		      target = baseToString(target);
		      return string.slice(position, position + target.length) == target;
		    }
	
		    /**
		     * Creates a compiled template function that can interpolate data properties
		     * in "interpolate" delimiters, HTML-escape interpolated data properties in
		     * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
		     * properties may be accessed as free variables in the template. If a setting
		     * object is given, it takes precedence over `_.templateSettings` values.
		     *
		     * **Note:** In the development build `_.template` utilizes
		     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
		     * for easier debugging.
		     *
		     * For more information on precompiling templates see
		     * [lodash's custom builds documentation](https://lodash.com/custom-builds).
		     *
		     * For more information on Chrome extension sandboxes see
		     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
		     *
		     * @static
		     * @since 0.1.0
		     * @memberOf _
		     * @category String
		     * @param {string} [string=''] The template string.
		     * @param {Object} [options={}] The options object.
		     * @param {RegExp} [options.escape=_.templateSettings.escape]
		     *  The HTML "escape" delimiter.
		     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
		     *  The "evaluate" delimiter.
		     * @param {Object} [options.imports=_.templateSettings.imports]
		     *  An object to import into the template as free variables.
		     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
		     *  The "interpolate" delimiter.
		     * @param {string} [options.sourceURL='lodash.templateSources[n]']
		     *  The sourceURL of the compiled template.
		     * @param {string} [options.variable='obj']
		     *  The data object variable name.
		     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		     * @returns {Function} Returns the compiled template function.
		     * @example
		     *
		     * // Use the "interpolate" delimiter to create a compiled template.
		     * var compiled = _.template('hello <%= user %>!');
		     * compiled({ 'user': 'fred' });
		     * // => 'hello fred!'
		     *
		     * // Use the HTML "escape" delimiter to escape data property values.
		     * var compiled = _.template('<b><%- value %></b>');
		     * compiled({ 'value': '<script>' });
		     * // => '<b>&lt;script&gt;</b>'
		     *
		     * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
		     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
		     * compiled({ 'users': ['fred', 'barney'] });
		     * // => '<li>fred</li><li>barney</li>'
		     *
		     * // Use the internal `print` function in "evaluate" delimiters.
		     * var compiled = _.template('<% print("hello " + user); %>!');
		     * compiled({ 'user': 'barney' });
		     * // => 'hello barney!'
		     *
		     * // Use the ES template literal delimiter as an "interpolate" delimiter.
		     * // Disable support by replacing the "interpolate" delimiter.
		     * var compiled = _.template('hello ${ user }!');
		     * compiled({ 'user': 'pebbles' });
		     * // => 'hello pebbles!'
		     *
		     * // Use backslashes to treat delimiters as plain text.
		     * var compiled = _.template('<%= "\\<%- value %\\>" %>');
		     * compiled({ 'value': 'ignored' });
		     * // => '<%- value %>'
		     *
		     * // Use the `imports` option to import `jQuery` as `jq`.
		     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
		     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
		     * compiled({ 'users': ['fred', 'barney'] });
		     * // => '<li>fred</li><li>barney</li>'
		     *
		     * // Use the `sourceURL` option to specify a custom sourceURL for the template.
		     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
		     * compiled(data);
		     * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
		     *
		     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
		     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
		     * compiled.source;
		     * // => function(data) {
		     * //   var __t, __p = '';
		     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
		     * //   return __p;
		     * // }
		     *
		     * // Use custom template delimiters.
		     * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
		     * var compiled = _.template('hello {{ user }}!');
		     * compiled({ 'user': 'mustache' });
		     * // => 'hello mustache!'
		     *
		     * // Use the `source` property to inline compiled templates for meaningful
		     * // line numbers in error messages and stack traces.
		     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\
		     *   var JST = {\
		     *     "main": ' + _.template(mainText).source + '\
		     *   };\
		     * ');
		     */
		    function template(string, options, guard) {
		      // Based on John Resig's `tmpl` implementation
		      // (http://ejohn.org/blog/javascript-micro-templating/)
		      // and Laura Doktorova's doT.js (https://github.com/olado/doT).
		      var settings = lodash.templateSettings;
	
		      if (guard && isIterateeCall(string, options, guard)) {
		        options = undefined;
		      }
		      string = toString(string);
		      options = assignInWith({}, options, settings, customDefaultsAssignIn);
	
		      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),
		          importsKeys = keys(imports),
		          importsValues = baseValues(imports, importsKeys);
	
		      var isEscaping,
		          isEvaluating,
		          index = 0,
		          interpolate = options.interpolate || reNoMatch,
		          source = "__p += '";
	
		      // Compile the regexp to match each delimiter.
		      var reDelimiters = RegExp(
		        (options.escape || reNoMatch).source + '|' +
		        interpolate.source + '|' +
		        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +
		        (options.evaluate || reNoMatch).source + '|$'
		      , 'g');
	
		      // Use a sourceURL for easier debugging.
		      var sourceURL = '//# sourceURL=' +
		        ('sourceURL' in options
		          ? options.sourceURL
		          : ('lodash.templateSources[' + (++templateCounter) + ']')
		        ) + '\n';
	
		      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
		        interpolateValue || (interpolateValue = esTemplateValue);
	
		        // Escape characters that can't be included in string literals.
		        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);
	
		        // Replace delimiters with snippets.
		        if (escapeValue) {
		          isEscaping = true;
		          source += "' +\n__e(" + escapeValue + ") +\n'";
		        }
		        if (evaluateValue) {
		          isEvaluating = true;
		          source += "';\n" + evaluateValue + ";\n__p += '";
		        }
		        if (interpolateValue) {
		          source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
		        }
		        index = offset + match.length;
	
		        // The JS engine embedded in Adobe products needs `match` returned in
		        // order to produce the correct `offset` value.
		        return match;
		      });
	
		      source += "';\n";
	
		      // If `variable` is not specified wrap a with-statement around the generated
		      // code to add the data object to the top of the scope chain.
		      var variable = options.variable;
		      if (!variable) {
		        source = 'with (obj) {\n' + source + '\n}\n';
		      }
		      // Cleanup code by stripping empty strings.
		      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)
		        .replace(reEmptyStringMiddle, '$1')
		        .replace(reEmptyStringTrailing, '$1;');
	
		      // Frame code as the function body.
		      source = 'function(' + (variable || 'obj') + ') {\n' +
		        (variable
		          ? ''
		          : 'obj || (obj = {});\n'
		        ) +
		        "var __t, __p = ''" +
		        (isEscaping
		           ? ', __e = _.escape'
		           : ''
		        ) +
		        (isEvaluating
		          ? ', __j = Array.prototype.join;\n' +
		            "function print() { __p += __j.call(arguments, '') }\n"
		          : ';\n'
		        ) +
		        source +
		        'return __p\n}';
	
		      var result = attempt(function() {
		        return Function(importsKeys, sourceURL + 'return ' + source)
		          .apply(undefined, importsValues);
		      });
	
		      // Provide the compiled function's source by its `toString` method or
		      // the `source` property as a convenience for inlining compiled templates.
		      result.source = source;
		      if (isError(result)) {
		        throw result;
		      }
		      return result;
		    }
	
		    /**
		     * Converts `string`, as a whole, to lower case just like
		     * [String#toLowerCase](https://mdn.io/toLowerCase).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category String
		     * @param {string} [string=''] The string to convert.
		     * @returns {string} Returns the lower cased string.
		     * @example
		     *
		     * _.toLower('--Foo-Bar--');
		     * // => '--foo-bar--'
		     *
		     * _.toLower('fooBar');
		     * // => 'foobar'
		     *
		     * _.toLower('__FOO_BAR__');
		     * // => '__foo_bar__'
		     */
		    function toLower(value) {
		      return toString(value).toLowerCase();
		    }
	
		    /**
		     * Converts `string`, as a whole, to upper case just like
		     * [String#toUpperCase](https://mdn.io/toUpperCase).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category String
		     * @param {string} [string=''] The string to convert.
		     * @returns {string} Returns the upper cased string.
		     * @example
		     *
		     * _.toUpper('--foo-bar--');
		     * // => '--FOO-BAR--'
		     *
		     * _.toUpper('fooBar');
		     * // => 'FOOBAR'
		     *
		     * _.toUpper('__foo_bar__');
		     * // => '__FOO_BAR__'
		     */
		    function toUpper(value) {
		      return toString(value).toUpperCase();
		    }
	
		    /**
		     * Removes leading and trailing whitespace or specified characters from `string`.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category String
		     * @param {string} [string=''] The string to trim.
		     * @param {string} [chars=whitespace] The characters to trim.
		     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		     * @returns {string} Returns the trimmed string.
		     * @example
		     *
		     * _.trim('  abc  ');
		     * // => 'abc'
		     *
		     * _.trim('-_-abc-_-', '_-');
		     * // => 'abc'
		     *
		     * _.map(['  foo  ', '  bar  '], _.trim);
		     * // => ['foo', 'bar']
		     */
		    function trim(string, chars, guard) {
		      string = toString(string);
		      if (string && (guard || chars === undefined)) {
		        return string.replace(reTrim, '');
		      }
		      if (!string || !(chars = baseToString(chars))) {
		        return string;
		      }
		      var strSymbols = stringToArray(string),
		          chrSymbols = stringToArray(chars),
		          start = charsStartIndex(strSymbols, chrSymbols),
		          end = charsEndIndex(strSymbols, chrSymbols) + 1;
	
		      return castSlice(strSymbols, start, end).join('');
		    }
	
		    /**
		     * Removes trailing whitespace or specified characters from `string`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category String
		     * @param {string} [string=''] The string to trim.
		     * @param {string} [chars=whitespace] The characters to trim.
		     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		     * @returns {string} Returns the trimmed string.
		     * @example
		     *
		     * _.trimEnd('  abc  ');
		     * // => '  abc'
		     *
		     * _.trimEnd('-_-abc-_-', '_-');
		     * // => '-_-abc'
		     */
		    function trimEnd(string, chars, guard) {
		      string = toString(string);
		      if (string && (guard || chars === undefined)) {
		        return string.replace(reTrimEnd, '');
		      }
		      if (!string || !(chars = baseToString(chars))) {
		        return string;
		      }
		      var strSymbols = stringToArray(string),
		          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;
	
		      return castSlice(strSymbols, 0, end).join('');
		    }
	
		    /**
		     * Removes leading whitespace or specified characters from `string`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category String
		     * @param {string} [string=''] The string to trim.
		     * @param {string} [chars=whitespace] The characters to trim.
		     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		     * @returns {string} Returns the trimmed string.
		     * @example
		     *
		     * _.trimStart('  abc  ');
		     * // => 'abc  '
		     *
		     * _.trimStart('-_-abc-_-', '_-');
		     * // => 'abc-_-'
		     */
		    function trimStart(string, chars, guard) {
		      string = toString(string);
		      if (string && (guard || chars === undefined)) {
		        return string.replace(reTrimStart, '');
		      }
		      if (!string || !(chars = baseToString(chars))) {
		        return string;
		      }
		      var strSymbols = stringToArray(string),
		          start = charsStartIndex(strSymbols, stringToArray(chars));
	
		      return castSlice(strSymbols, start).join('');
		    }
	
		    /**
		     * Truncates `string` if it's longer than the given maximum string length.
		     * The last characters of the truncated string are replaced with the omission
		     * string which defaults to "...".
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category String
		     * @param {string} [string=''] The string to truncate.
		     * @param {Object} [options={}] The options object.
		     * @param {number} [options.length=30] The maximum string length.
		     * @param {string} [options.omission='...'] The string to indicate text is omitted.
		     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
		     * @returns {string} Returns the truncated string.
		     * @example
		     *
		     * _.truncate('hi-diddly-ho there, neighborino');
		     * // => 'hi-diddly-ho there, neighbo...'
		     *
		     * _.truncate('hi-diddly-ho there, neighborino', {
		     *   'length': 24,
		     *   'separator': ' '
		     * });
		     * // => 'hi-diddly-ho there,...'
		     *
		     * _.truncate('hi-diddly-ho there, neighborino', {
		     *   'length': 24,
		     *   'separator': /,? +/
		     * });
		     * // => 'hi-diddly-ho there...'
		     *
		     * _.truncate('hi-diddly-ho there, neighborino', {
		     *   'omission': ' [...]'
		     * });
		     * // => 'hi-diddly-ho there, neig [...]'
		     */
		    function truncate(string, options) {
		      var length = DEFAULT_TRUNC_LENGTH,
		          omission = DEFAULT_TRUNC_OMISSION;
	
		      if (isObject(options)) {
		        var separator = 'separator' in options ? options.separator : separator;
		        length = 'length' in options ? toInteger(options.length) : length;
		        omission = 'omission' in options ? baseToString(options.omission) : omission;
		      }
		      string = toString(string);
	
		      var strLength = string.length;
		      if (hasUnicode(string)) {
		        var strSymbols = stringToArray(string);
		        strLength = strSymbols.length;
		      }
		      if (length >= strLength) {
		        return string;
		      }
		      var end = length - stringSize(omission);
		      if (end < 1) {
		        return omission;
		      }
		      var result = strSymbols
		        ? castSlice(strSymbols, 0, end).join('')
		        : string.slice(0, end);
	
		      if (separator === undefined) {
		        return result + omission;
		      }
		      if (strSymbols) {
		        end += (result.length - end);
		      }
		      if (isRegExp(separator)) {
		        if (string.slice(end).search(separator)) {
		          var match,
		              substring = result;
	
		          if (!separator.global) {
		            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');
		          }
		          separator.lastIndex = 0;
		          while ((match = separator.exec(substring))) {
		            var newEnd = match.index;
		          }
		          result = result.slice(0, newEnd === undefined ? end : newEnd);
		        }
		      } else if (string.indexOf(baseToString(separator), end) != end) {
		        var index = result.lastIndexOf(separator);
		        if (index > -1) {
		          result = result.slice(0, index);
		        }
		      }
		      return result + omission;
		    }
	
		    /**
		     * The inverse of `_.escape`; this method converts the HTML entities
		     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to
		     * their corresponding characters.
		     *
		     * **Note:** No other HTML entities are unescaped. To unescape additional
		     * HTML entities use a third-party library like [_he_](https://mths.be/he).
		     *
		     * @static
		     * @memberOf _
		     * @since 0.6.0
		     * @category String
		     * @param {string} [string=''] The string to unescape.
		     * @returns {string} Returns the unescaped string.
		     * @example
		     *
		     * _.unescape('fred, barney, &amp; pebbles');
		     * // => 'fred, barney, & pebbles'
		     */
		    function unescape(string) {
		      string = toString(string);
		      return (string && reHasEscapedHtml.test(string))
		        ? string.replace(reEscapedHtml, unescapeHtmlChar)
		        : string;
		    }
	
		    /**
		     * Converts `string`, as space separated words, to upper case.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category String
		     * @param {string} [string=''] The string to convert.
		     * @returns {string} Returns the upper cased string.
		     * @example
		     *
		     * _.upperCase('--foo-bar');
		     * // => 'FOO BAR'
		     *
		     * _.upperCase('fooBar');
		     * // => 'FOO BAR'
		     *
		     * _.upperCase('__foo_bar__');
		     * // => 'FOO BAR'
		     */
		    var upperCase = createCompounder(function(result, word, index) {
		      return result + (index ? ' ' : '') + word.toUpperCase();
		    });
	
		    /**
		     * Converts the first character of `string` to upper case.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category String
		     * @param {string} [string=''] The string to convert.
		     * @returns {string} Returns the converted string.
		     * @example
		     *
		     * _.upperFirst('fred');
		     * // => 'Fred'
		     *
		     * _.upperFirst('FRED');
		     * // => 'FRED'
		     */
		    var upperFirst = createCaseFirst('toUpperCase');
	
		    /**
		     * Splits `string` into an array of its words.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category String
		     * @param {string} [string=''] The string to inspect.
		     * @param {RegExp|string} [pattern] The pattern to match words.
		     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		     * @returns {Array} Returns the words of `string`.
		     * @example
		     *
		     * _.words('fred, barney, & pebbles');
		     * // => ['fred', 'barney', 'pebbles']
		     *
		     * _.words('fred, barney, & pebbles', /[^, ]+/g);
		     * // => ['fred', 'barney', '&', 'pebbles']
		     */
		    function words(string, pattern, guard) {
		      string = toString(string);
		      pattern = guard ? undefined : pattern;
	
		      if (pattern === undefined) {
		        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
		      }
		      return string.match(pattern) || [];
		    }
	
		    /*------------------------------------------------------------------------*/
	
		    /**
		     * Attempts to invoke `func`, returning either the result or the caught error
		     * object. Any additional arguments are provided to `func` when it's invoked.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Util
		     * @param {Function} func The function to attempt.
		     * @param {...*} [args] The arguments to invoke `func` with.
		     * @returns {*} Returns the `func` result or error object.
		     * @example
		     *
		     * // Avoid throwing errors for invalid selectors.
		     * var elements = _.attempt(function(selector) {
		     *   return document.querySelectorAll(selector);
		     * }, '>_>');
		     *
		     * if (_.isError(elements)) {
		     *   elements = [];
		     * }
		     */
		    var attempt = baseRest(function(func, args) {
		      try {
		        return apply(func, undefined, args);
		      } catch (e) {
		        return isError(e) ? e : new Error(e);
		      }
		    });
	
		    /**
		     * Binds methods of an object to the object itself, overwriting the existing
		     * method.
		     *
		     * **Note:** This method doesn't set the "length" property of bound functions.
		     *
		     * @static
		     * @since 0.1.0
		     * @memberOf _
		     * @category Util
		     * @param {Object} object The object to bind and assign the bound methods to.
		     * @param {...(string|string[])} methodNames The object method names to bind.
		     * @returns {Object} Returns `object`.
		     * @example
		     *
		     * var view = {
		     *   'label': 'docs',
		     *   'click': function() {
		     *     console.log('clicked ' + this.label);
		     *   }
		     * };
		     *
		     * _.bindAll(view, ['click']);
		     * jQuery(element).on('click', view.click);
		     * // => Logs 'clicked docs' when clicked.
		     */
		    var bindAll = flatRest(function(object, methodNames) {
		      arrayEach(methodNames, function(key) {
		        key = toKey(key);
		        baseAssignValue(object, key, bind(object[key], object));
		      });
		      return object;
		    });
	
		    /**
		     * Creates a function that iterates over `pairs` and invokes the corresponding
		     * function of the first predicate to return truthy. The predicate-function
		     * pairs are invoked with the `this` binding and arguments of the created
		     * function.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Util
		     * @param {Array} pairs The predicate-function pairs.
		     * @returns {Function} Returns the new composite function.
		     * @example
		     *
		     * var func = _.cond([
		     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
		     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
		     *   [_.stubTrue,                      _.constant('no match')]
		     * ]);
		     *
		     * func({ 'a': 1, 'b': 2 });
		     * // => 'matches A'
		     *
		     * func({ 'a': 0, 'b': 1 });
		     * // => 'matches B'
		     *
		     * func({ 'a': '1', 'b': '2' });
		     * // => 'no match'
		     */
		    function cond(pairs) {
		      var length = pairs == null ? 0 : pairs.length,
		          toIteratee = getIteratee();
	
		      pairs = !length ? [] : arrayMap(pairs, function(pair) {
		        if (typeof pair[1] != 'function') {
		          throw new TypeError(FUNC_ERROR_TEXT);
		        }
		        return [toIteratee(pair[0]), pair[1]];
		      });
	
		      return baseRest(function(args) {
		        var index = -1;
		        while (++index < length) {
		          var pair = pairs[index];
		          if (apply(pair[0], this, args)) {
		            return apply(pair[1], this, args);
		          }
		        }
		      });
		    }
	
		    /**
		     * Creates a function that invokes the predicate properties of `source` with
		     * the corresponding property values of a given object, returning `true` if
		     * all predicates return truthy, else `false`.
		     *
		     * **Note:** The created function is equivalent to `_.conformsTo` with
		     * `source` partially applied.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Util
		     * @param {Object} source The object of property predicates to conform to.
		     * @returns {Function} Returns the new spec function.
		     * @example
		     *
		     * var objects = [
		     *   { 'a': 2, 'b': 1 },
		     *   { 'a': 1, 'b': 2 }
		     * ];
		     *
		     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));
		     * // => [{ 'a': 1, 'b': 2 }]
		     */
		    function conforms(source) {
		      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
		    }
	
		    /**
		     * Creates a function that returns `value`.
		     *
		     * @static
		     * @memberOf _
		     * @since 2.4.0
		     * @category Util
		     * @param {*} value The value to return from the new function.
		     * @returns {Function} Returns the new constant function.
		     * @example
		     *
		     * var objects = _.times(2, _.constant({ 'a': 1 }));
		     *
		     * console.log(objects);
		     * // => [{ 'a': 1 }, { 'a': 1 }]
		     *
		     * console.log(objects[0] === objects[1]);
		     * // => true
		     */
		    function constant(value) {
		      return function() {
		        return value;
		      };
		    }
	
		    /**
		     * Checks `value` to determine whether a default value should be returned in
		     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,
		     * or `undefined`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.14.0
		     * @category Util
		     * @param {*} value The value to check.
		     * @param {*} defaultValue The default value.
		     * @returns {*} Returns the resolved value.
		     * @example
		     *
		     * _.defaultTo(1, 10);
		     * // => 1
		     *
		     * _.defaultTo(undefined, 10);
		     * // => 10
		     */
		    function defaultTo(value, defaultValue) {
		      return (value == null || value !== value) ? defaultValue : value;
		    }
	
		    /**
		     * Creates a function that returns the result of invoking the given functions
		     * with the `this` binding of the created function, where each successive
		     * invocation is supplied the return value of the previous.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Util
		     * @param {...(Function|Function[])} [funcs] The functions to invoke.
		     * @returns {Function} Returns the new composite function.
		     * @see _.flowRight
		     * @example
		     *
		     * function square(n) {
		     *   return n * n;
		     * }
		     *
		     * var addSquare = _.flow([_.add, square]);
		     * addSquare(1, 2);
		     * // => 9
		     */
		    var flow = createFlow();
	
		    /**
		     * This method is like `_.flow` except that it creates a function that
		     * invokes the given functions from right to left.
		     *
		     * @static
		     * @since 3.0.0
		     * @memberOf _
		     * @category Util
		     * @param {...(Function|Function[])} [funcs] The functions to invoke.
		     * @returns {Function} Returns the new composite function.
		     * @see _.flow
		     * @example
		     *
		     * function square(n) {
		     *   return n * n;
		     * }
		     *
		     * var addSquare = _.flowRight([square, _.add]);
		     * addSquare(1, 2);
		     * // => 9
		     */
		    var flowRight = createFlow(true);
	
		    /**
		     * This method returns the first argument it receives.
		     *
		     * @static
		     * @since 0.1.0
		     * @memberOf _
		     * @category Util
		     * @param {*} value Any value.
		     * @returns {*} Returns `value`.
		     * @example
		     *
		     * var object = { 'a': 1 };
		     *
		     * console.log(_.identity(object) === object);
		     * // => true
		     */
		    function identity(value) {
		      return value;
		    }
	
		    /**
		     * Creates a function that invokes `func` with the arguments of the created
		     * function. If `func` is a property name, the created function returns the
		     * property value for a given element. If `func` is an array or object, the
		     * created function returns `true` for elements that contain the equivalent
		     * source properties, otherwise it returns `false`.
		     *
		     * @static
		     * @since 4.0.0
		     * @memberOf _
		     * @category Util
		     * @param {*} [func=_.identity] The value to convert to a callback.
		     * @returns {Function} Returns the callback.
		     * @example
		     *
		     * var users = [
		     *   { 'user': 'barney', 'age': 36, 'active': true },
		     *   { 'user': 'fred',   'age': 40, 'active': false }
		     * ];
		     *
		     * // The `_.matches` iteratee shorthand.
		     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
		     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
		     *
		     * // The `_.matchesProperty` iteratee shorthand.
		     * _.filter(users, _.iteratee(['user', 'fred']));
		     * // => [{ 'user': 'fred', 'age': 40 }]
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.map(users, _.iteratee('user'));
		     * // => ['barney', 'fred']
		     *
		     * // Create custom iteratee shorthands.
		     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
		     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
		     *     return func.test(string);
		     *   };
		     * });
		     *
		     * _.filter(['abc', 'def'], /ef/);
		     * // => ['def']
		     */
		    function iteratee(func) {
		      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));
		    }
	
		    /**
		     * Creates a function that performs a partial deep comparison between a given
		     * object and `source`, returning `true` if the given object has equivalent
		     * property values, else `false`.
		     *
		     * **Note:** The created function is equivalent to `_.isMatch` with `source`
		     * partially applied.
		     *
		     * Partial comparisons will match empty array and empty object `source`
		     * values against any array or object value, respectively. See `_.isEqual`
		     * for a list of supported value comparisons.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Util
		     * @param {Object} source The object of property values to match.
		     * @returns {Function} Returns the new spec function.
		     * @example
		     *
		     * var objects = [
		     *   { 'a': 1, 'b': 2, 'c': 3 },
		     *   { 'a': 4, 'b': 5, 'c': 6 }
		     * ];
		     *
		     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));
		     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]
		     */
		    function matches(source) {
		      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
		    }
	
		    /**
		     * Creates a function that performs a partial deep comparison between the
		     * value at `path` of a given object to `srcValue`, returning `true` if the
		     * object value is equivalent, else `false`.
		     *
		     * **Note:** Partial comparisons will match empty array and empty object
		     * `srcValue` values against any array or object value, respectively. See
		     * `_.isEqual` for a list of supported value comparisons.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.2.0
		     * @category Util
		     * @param {Array|string} path The path of the property to get.
		     * @param {*} srcValue The value to match.
		     * @returns {Function} Returns the new spec function.
		     * @example
		     *
		     * var objects = [
		     *   { 'a': 1, 'b': 2, 'c': 3 },
		     *   { 'a': 4, 'b': 5, 'c': 6 }
		     * ];
		     *
		     * _.find(objects, _.matchesProperty('a', 4));
		     * // => { 'a': 4, 'b': 5, 'c': 6 }
		     */
		    function matchesProperty(path, srcValue) {
		      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
		    }
	
		    /**
		     * Creates a function that invokes the method at `path` of a given object.
		     * Any additional arguments are provided to the invoked method.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.7.0
		     * @category Util
		     * @param {Array|string} path The path of the method to invoke.
		     * @param {...*} [args] The arguments to invoke the method with.
		     * @returns {Function} Returns the new invoker function.
		     * @example
		     *
		     * var objects = [
		     *   { 'a': { 'b': _.constant(2) } },
		     *   { 'a': { 'b': _.constant(1) } }
		     * ];
		     *
		     * _.map(objects, _.method('a.b'));
		     * // => [2, 1]
		     *
		     * _.map(objects, _.method(['a', 'b']));
		     * // => [2, 1]
		     */
		    var method = baseRest(function(path, args) {
		      return function(object) {
		        return baseInvoke(object, path, args);
		      };
		    });
	
		    /**
		     * The opposite of `_.method`; this method creates a function that invokes
		     * the method at a given path of `object`. Any additional arguments are
		     * provided to the invoked method.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.7.0
		     * @category Util
		     * @param {Object} object The object to query.
		     * @param {...*} [args] The arguments to invoke the method with.
		     * @returns {Function} Returns the new invoker function.
		     * @example
		     *
		     * var array = _.times(3, _.constant),
		     *     object = { 'a': array, 'b': array, 'c': array };
		     *
		     * _.map(['a[2]', 'c[0]'], _.methodOf(object));
		     * // => [2, 0]
		     *
		     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
		     * // => [2, 0]
		     */
		    var methodOf = baseRest(function(object, args) {
		      return function(path) {
		        return baseInvoke(object, path, args);
		      };
		    });
	
		    /**
		     * Adds all own enumerable string keyed function properties of a source
		     * object to the destination object. If `object` is a function, then methods
		     * are added to its prototype as well.
		     *
		     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
		     * avoid conflicts caused by modifying the original.
		     *
		     * @static
		     * @since 0.1.0
		     * @memberOf _
		     * @category Util
		     * @param {Function|Object} [object=lodash] The destination object.
		     * @param {Object} source The object of functions to add.
		     * @param {Object} [options={}] The options object.
		     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
		     * @returns {Function|Object} Returns `object`.
		     * @example
		     *
		     * function vowels(string) {
		     *   return _.filter(string, function(v) {
		     *     return /[aeiou]/i.test(v);
		     *   });
		     * }
		     *
		     * _.mixin({ 'vowels': vowels });
		     * _.vowels('fred');
		     * // => ['e']
		     *
		     * _('fred').vowels().value();
		     * // => ['e']
		     *
		     * _.mixin({ 'vowels': vowels }, { 'chain': false });
		     * _('fred').vowels();
		     * // => ['e']
		     */
		    function mixin(object, source, options) {
		      var props = keys(source),
		          methodNames = baseFunctions(source, props);
	
		      if (options == null &&
		          !(isObject(source) && (methodNames.length || !props.length))) {
		        options = source;
		        source = object;
		        object = this;
		        methodNames = baseFunctions(source, keys(source));
		      }
		      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,
		          isFunc = isFunction(object);
	
		      arrayEach(methodNames, function(methodName) {
		        var func = source[methodName];
		        object[methodName] = func;
		        if (isFunc) {
		          object.prototype[methodName] = function() {
		            var chainAll = this.__chain__;
		            if (chain || chainAll) {
		              var result = object(this.__wrapped__),
		                  actions = result.__actions__ = copyArray(this.__actions__);
	
		              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });
		              result.__chain__ = chainAll;
		              return result;
		            }
		            return func.apply(object, arrayPush([this.value()], arguments));
		          };
		        }
		      });
	
		      return object;
		    }
	
		    /**
		     * Reverts the `_` variable to its previous value and returns a reference to
		     * the `lodash` function.
		     *
		     * @static
		     * @since 0.1.0
		     * @memberOf _
		     * @category Util
		     * @returns {Function} Returns the `lodash` function.
		     * @example
		     *
		     * var lodash = _.noConflict();
		     */
		    function noConflict() {
		      if (root._ === this) {
		        root._ = oldDash;
		      }
		      return this;
		    }
	
		    /**
		     * This method returns `undefined`.
		     *
		     * @static
		     * @memberOf _
		     * @since 2.3.0
		     * @category Util
		     * @example
		     *
		     * _.times(2, _.noop);
		     * // => [undefined, undefined]
		     */
		    function noop() {
		      // No operation performed.
		    }
	
		    /**
		     * Creates a function that gets the argument at index `n`. If `n` is negative,
		     * the nth argument from the end is returned.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Util
		     * @param {number} [n=0] The index of the argument to return.
		     * @returns {Function} Returns the new pass-thru function.
		     * @example
		     *
		     * var func = _.nthArg(1);
		     * func('a', 'b', 'c', 'd');
		     * // => 'b'
		     *
		     * var func = _.nthArg(-2);
		     * func('a', 'b', 'c', 'd');
		     * // => 'c'
		     */
		    function nthArg(n) {
		      n = toInteger(n);
		      return baseRest(function(args) {
		        return baseNth(args, n);
		      });
		    }
	
		    /**
		     * Creates a function that invokes `iteratees` with the arguments it receives
		     * and returns their results.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Util
		     * @param {...(Function|Function[])} [iteratees=[_.identity]]
		     *  The iteratees to invoke.
		     * @returns {Function} Returns the new function.
		     * @example
		     *
		     * var func = _.over([Math.max, Math.min]);
		     *
		     * func(1, 2, 3, 4);
		     * // => [4, 1]
		     */
		    var over = createOver(arrayMap);
	
		    /**
		     * Creates a function that checks if **all** of the `predicates` return
		     * truthy when invoked with the arguments it receives.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Util
		     * @param {...(Function|Function[])} [predicates=[_.identity]]
		     *  The predicates to check.
		     * @returns {Function} Returns the new function.
		     * @example
		     *
		     * var func = _.overEvery([Boolean, isFinite]);
		     *
		     * func('1');
		     * // => true
		     *
		     * func(null);
		     * // => false
		     *
		     * func(NaN);
		     * // => false
		     */
		    var overEvery = createOver(arrayEvery);
	
		    /**
		     * Creates a function that checks if **any** of the `predicates` return
		     * truthy when invoked with the arguments it receives.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Util
		     * @param {...(Function|Function[])} [predicates=[_.identity]]
		     *  The predicates to check.
		     * @returns {Function} Returns the new function.
		     * @example
		     *
		     * var func = _.overSome([Boolean, isFinite]);
		     *
		     * func('1');
		     * // => true
		     *
		     * func(null);
		     * // => true
		     *
		     * func(NaN);
		     * // => false
		     */
		    var overSome = createOver(arraySome);
	
		    /**
		     * Creates a function that returns the value at `path` of a given object.
		     *
		     * @static
		     * @memberOf _
		     * @since 2.4.0
		     * @category Util
		     * @param {Array|string} path The path of the property to get.
		     * @returns {Function} Returns the new accessor function.
		     * @example
		     *
		     * var objects = [
		     *   { 'a': { 'b': 2 } },
		     *   { 'a': { 'b': 1 } }
		     * ];
		     *
		     * _.map(objects, _.property('a.b'));
		     * // => [2, 1]
		     *
		     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
		     * // => [1, 2]
		     */
		    function property(path) {
		      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
		    }
	
		    /**
		     * The opposite of `_.property`; this method creates a function that returns
		     * the value at a given path of `object`.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Util
		     * @param {Object} object The object to query.
		     * @returns {Function} Returns the new accessor function.
		     * @example
		     *
		     * var array = [0, 1, 2],
		     *     object = { 'a': array, 'b': array, 'c': array };
		     *
		     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
		     * // => [2, 0]
		     *
		     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
		     * // => [2, 0]
		     */
		    function propertyOf(object) {
		      return function(path) {
		        return object == null ? undefined : baseGet(object, path);
		      };
		    }
	
		    /**
		     * Creates an array of numbers (positive and/or negative) progressing from
		     * `start` up to, but not including, `end`. A step of `-1` is used if a negative
		     * `start` is specified without an `end` or `step`. If `end` is not specified,
		     * it's set to `start` with `start` then set to `0`.
		     *
		     * **Note:** JavaScript follows the IEEE-754 standard for resolving
		     * floating-point values which can produce unexpected results.
		     *
		     * @static
		     * @since 0.1.0
		     * @memberOf _
		     * @category Util
		     * @param {number} [start=0] The start of the range.
		     * @param {number} end The end of the range.
		     * @param {number} [step=1] The value to increment or decrement by.
		     * @returns {Array} Returns the range of numbers.
		     * @see _.inRange, _.rangeRight
		     * @example
		     *
		     * _.range(4);
		     * // => [0, 1, 2, 3]
		     *
		     * _.range(-4);
		     * // => [0, -1, -2, -3]
		     *
		     * _.range(1, 5);
		     * // => [1, 2, 3, 4]
		     *
		     * _.range(0, 20, 5);
		     * // => [0, 5, 10, 15]
		     *
		     * _.range(0, -4, -1);
		     * // => [0, -1, -2, -3]
		     *
		     * _.range(1, 4, 0);
		     * // => [1, 1, 1]
		     *
		     * _.range(0);
		     * // => []
		     */
		    var range = createRange();
	
		    /**
		     * This method is like `_.range` except that it populates values in
		     * descending order.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Util
		     * @param {number} [start=0] The start of the range.
		     * @param {number} end The end of the range.
		     * @param {number} [step=1] The value to increment or decrement by.
		     * @returns {Array} Returns the range of numbers.
		     * @see _.inRange, _.range
		     * @example
		     *
		     * _.rangeRight(4);
		     * // => [3, 2, 1, 0]
		     *
		     * _.rangeRight(-4);
		     * // => [-3, -2, -1, 0]
		     *
		     * _.rangeRight(1, 5);
		     * // => [4, 3, 2, 1]
		     *
		     * _.rangeRight(0, 20, 5);
		     * // => [15, 10, 5, 0]
		     *
		     * _.rangeRight(0, -4, -1);
		     * // => [-3, -2, -1, 0]
		     *
		     * _.rangeRight(1, 4, 0);
		     * // => [1, 1, 1]
		     *
		     * _.rangeRight(0);
		     * // => []
		     */
		    var rangeRight = createRange(true);
	
		    /**
		     * This method returns a new empty array.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.13.0
		     * @category Util
		     * @returns {Array} Returns the new empty array.
		     * @example
		     *
		     * var arrays = _.times(2, _.stubArray);
		     *
		     * console.log(arrays);
		     * // => [[], []]
		     *
		     * console.log(arrays[0] === arrays[1]);
		     * // => false
		     */
		    function stubArray() {
		      return [];
		    }
	
		    /**
		     * This method returns `false`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.13.0
		     * @category Util
		     * @returns {boolean} Returns `false`.
		     * @example
		     *
		     * _.times(2, _.stubFalse);
		     * // => [false, false]
		     */
		    function stubFalse() {
		      return false;
		    }
	
		    /**
		     * This method returns a new empty object.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.13.0
		     * @category Util
		     * @returns {Object} Returns the new empty object.
		     * @example
		     *
		     * var objects = _.times(2, _.stubObject);
		     *
		     * console.log(objects);
		     * // => [{}, {}]
		     *
		     * console.log(objects[0] === objects[1]);
		     * // => false
		     */
		    function stubObject() {
		      return {};
		    }
	
		    /**
		     * This method returns an empty string.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.13.0
		     * @category Util
		     * @returns {string} Returns the empty string.
		     * @example
		     *
		     * _.times(2, _.stubString);
		     * // => ['', '']
		     */
		    function stubString() {
		      return '';
		    }
	
		    /**
		     * This method returns `true`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.13.0
		     * @category Util
		     * @returns {boolean} Returns `true`.
		     * @example
		     *
		     * _.times(2, _.stubTrue);
		     * // => [true, true]
		     */
		    function stubTrue() {
		      return true;
		    }
	
		    /**
		     * Invokes the iteratee `n` times, returning an array of the results of
		     * each invocation. The iteratee is invoked with one argument; (index).
		     *
		     * @static
		     * @since 0.1.0
		     * @memberOf _
		     * @category Util
		     * @param {number} n The number of times to invoke `iteratee`.
		     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
		     * @returns {Array} Returns the array of results.
		     * @example
		     *
		     * _.times(3, String);
		     * // => ['0', '1', '2']
		     *
		     *  _.times(4, _.constant(0));
		     * // => [0, 0, 0, 0]
		     */
		    function times(n, iteratee) {
		      n = toInteger(n);
		      if (n < 1 || n > MAX_SAFE_INTEGER) {
		        return [];
		      }
		      var index = MAX_ARRAY_LENGTH,
		          length = nativeMin(n, MAX_ARRAY_LENGTH);
	
		      iteratee = getIteratee(iteratee);
		      n -= MAX_ARRAY_LENGTH;
	
		      var result = baseTimes(length, iteratee);
		      while (++index < n) {
		        iteratee(index);
		      }
		      return result;
		    }
	
		    /**
		     * Converts `value` to a property path array.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Util
		     * @param {*} value The value to convert.
		     * @returns {Array} Returns the new property path array.
		     * @example
		     *
		     * _.toPath('a.b.c');
		     * // => ['a', 'b', 'c']
		     *
		     * _.toPath('a[0].b.c');
		     * // => ['a', '0', 'b', 'c']
		     */
		    function toPath(value) {
		      if (isArray(value)) {
		        return arrayMap(value, toKey);
		      }
		      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
		    }
	
		    /**
		     * Generates a unique ID. If `prefix` is given, the ID is appended to it.
		     *
		     * @static
		     * @since 0.1.0
		     * @memberOf _
		     * @category Util
		     * @param {string} [prefix=''] The value to prefix the ID with.
		     * @returns {string} Returns the unique ID.
		     * @example
		     *
		     * _.uniqueId('contact_');
		     * // => 'contact_104'
		     *
		     * _.uniqueId();
		     * // => '105'
		     */
		    function uniqueId(prefix) {
		      var id = ++idCounter;
		      return toString(prefix) + id;
		    }
	
		    /*------------------------------------------------------------------------*/
	
		    /**
		     * Adds two numbers.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.4.0
		     * @category Math
		     * @param {number} augend The first number in an addition.
		     * @param {number} addend The second number in an addition.
		     * @returns {number} Returns the total.
		     * @example
		     *
		     * _.add(6, 4);
		     * // => 10
		     */
		    var add = createMathOperation(function(augend, addend) {
		      return augend + addend;
		    }, 0);
	
		    /**
		     * Computes `number` rounded up to `precision`.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.10.0
		     * @category Math
		     * @param {number} number The number to round up.
		     * @param {number} [precision=0] The precision to round up to.
		     * @returns {number} Returns the rounded up number.
		     * @example
		     *
		     * _.ceil(4.006);
		     * // => 5
		     *
		     * _.ceil(6.004, 2);
		     * // => 6.01
		     *
		     * _.ceil(6040, -2);
		     * // => 6100
		     */
		    var ceil = createRound('ceil');
	
		    /**
		     * Divide two numbers.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.7.0
		     * @category Math
		     * @param {number} dividend The first number in a division.
		     * @param {number} divisor The second number in a division.
		     * @returns {number} Returns the quotient.
		     * @example
		     *
		     * _.divide(6, 4);
		     * // => 1.5
		     */
		    var divide = createMathOperation(function(dividend, divisor) {
		      return dividend / divisor;
		    }, 1);
	
		    /**
		     * Computes `number` rounded down to `precision`.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.10.0
		     * @category Math
		     * @param {number} number The number to round down.
		     * @param {number} [precision=0] The precision to round down to.
		     * @returns {number} Returns the rounded down number.
		     * @example
		     *
		     * _.floor(4.006);
		     * // => 4
		     *
		     * _.floor(0.046, 2);
		     * // => 0.04
		     *
		     * _.floor(4060, -2);
		     * // => 4000
		     */
		    var floor = createRound('floor');
	
		    /**
		     * Computes the maximum value of `array`. If `array` is empty or falsey,
		     * `undefined` is returned.
		     *
		     * @static
		     * @since 0.1.0
		     * @memberOf _
		     * @category Math
		     * @param {Array} array The array to iterate over.
		     * @returns {*} Returns the maximum value.
		     * @example
		     *
		     * _.max([4, 2, 8, 6]);
		     * // => 8
		     *
		     * _.max([]);
		     * // => undefined
		     */
		    function max(array) {
		      return (array && array.length)
		        ? baseExtremum(array, identity, baseGt)
		        : undefined;
		    }
	
		    /**
		     * This method is like `_.max` except that it accepts `iteratee` which is
		     * invoked for each element in `array` to generate the criterion by which
		     * the value is ranked. The iteratee is invoked with one argument: (value).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Math
		     * @param {Array} array The array to iterate over.
		     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
		     * @returns {*} Returns the maximum value.
		     * @example
		     *
		     * var objects = [{ 'n': 1 }, { 'n': 2 }];
		     *
		     * _.maxBy(objects, function(o) { return o.n; });
		     * // => { 'n': 2 }
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.maxBy(objects, 'n');
		     * // => { 'n': 2 }
		     */
		    function maxBy(array, iteratee) {
		      return (array && array.length)
		        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)
		        : undefined;
		    }
	
		    /**
		     * Computes the mean of the values in `array`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Math
		     * @param {Array} array The array to iterate over.
		     * @returns {number} Returns the mean.
		     * @example
		     *
		     * _.mean([4, 2, 8, 6]);
		     * // => 5
		     */
		    function mean(array) {
		      return baseMean(array, identity);
		    }
	
		    /**
		     * This method is like `_.mean` except that it accepts `iteratee` which is
		     * invoked for each element in `array` to generate the value to be averaged.
		     * The iteratee is invoked with one argument: (value).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.7.0
		     * @category Math
		     * @param {Array} array The array to iterate over.
		     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
		     * @returns {number} Returns the mean.
		     * @example
		     *
		     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
		     *
		     * _.meanBy(objects, function(o) { return o.n; });
		     * // => 5
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.meanBy(objects, 'n');
		     * // => 5
		     */
		    function meanBy(array, iteratee) {
		      return baseMean(array, getIteratee(iteratee, 2));
		    }
	
		    /**
		     * Computes the minimum value of `array`. If `array` is empty or falsey,
		     * `undefined` is returned.
		     *
		     * @static
		     * @since 0.1.0
		     * @memberOf _
		     * @category Math
		     * @param {Array} array The array to iterate over.
		     * @returns {*} Returns the minimum value.
		     * @example
		     *
		     * _.min([4, 2, 8, 6]);
		     * // => 2
		     *
		     * _.min([]);
		     * // => undefined
		     */
		    function min(array) {
		      return (array && array.length)
		        ? baseExtremum(array, identity, baseLt)
		        : undefined;
		    }
	
		    /**
		     * This method is like `_.min` except that it accepts `iteratee` which is
		     * invoked for each element in `array` to generate the criterion by which
		     * the value is ranked. The iteratee is invoked with one argument: (value).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Math
		     * @param {Array} array The array to iterate over.
		     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
		     * @returns {*} Returns the minimum value.
		     * @example
		     *
		     * var objects = [{ 'n': 1 }, { 'n': 2 }];
		     *
		     * _.minBy(objects, function(o) { return o.n; });
		     * // => { 'n': 1 }
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.minBy(objects, 'n');
		     * // => { 'n': 1 }
		     */
		    function minBy(array, iteratee) {
		      return (array && array.length)
		        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)
		        : undefined;
		    }
	
		    /**
		     * Multiply two numbers.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.7.0
		     * @category Math
		     * @param {number} multiplier The first number in a multiplication.
		     * @param {number} multiplicand The second number in a multiplication.
		     * @returns {number} Returns the product.
		     * @example
		     *
		     * _.multiply(6, 4);
		     * // => 24
		     */
		    var multiply = createMathOperation(function(multiplier, multiplicand) {
		      return multiplier * multiplicand;
		    }, 1);
	
		    /**
		     * Computes `number` rounded to `precision`.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.10.0
		     * @category Math
		     * @param {number} number The number to round.
		     * @param {number} [precision=0] The precision to round to.
		     * @returns {number} Returns the rounded number.
		     * @example
		     *
		     * _.round(4.006);
		     * // => 4
		     *
		     * _.round(4.006, 2);
		     * // => 4.01
		     *
		     * _.round(4060, -2);
		     * // => 4100
		     */
		    var round = createRound('round');
	
		    /**
		     * Subtract two numbers.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Math
		     * @param {number} minuend The first number in a subtraction.
		     * @param {number} subtrahend The second number in a subtraction.
		     * @returns {number} Returns the difference.
		     * @example
		     *
		     * _.subtract(6, 4);
		     * // => 2
		     */
		    var subtract = createMathOperation(function(minuend, subtrahend) {
		      return minuend - subtrahend;
		    }, 0);
	
		    /**
		     * Computes the sum of the values in `array`.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.4.0
		     * @category Math
		     * @param {Array} array The array to iterate over.
		     * @returns {number} Returns the sum.
		     * @example
		     *
		     * _.sum([4, 2, 8, 6]);
		     * // => 20
		     */
		    function sum(array) {
		      return (array && array.length)
		        ? baseSum(array, identity)
		        : 0;
		    }
	
		    /**
		     * This method is like `_.sum` except that it accepts `iteratee` which is
		     * invoked for each element in `array` to generate the value to be summed.
		     * The iteratee is invoked with one argument: (value).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Math
		     * @param {Array} array The array to iterate over.
		     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
		     * @returns {number} Returns the sum.
		     * @example
		     *
		     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
		     *
		     * _.sumBy(objects, function(o) { return o.n; });
		     * // => 20
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.sumBy(objects, 'n');
		     * // => 20
		     */
		    function sumBy(array, iteratee) {
		      return (array && array.length)
		        ? baseSum(array, getIteratee(iteratee, 2))
		        : 0;
		    }
	
		    /*------------------------------------------------------------------------*/
	
		    // Add methods that return wrapped values in chain sequences.
		    lodash.after = after;
		    lodash.ary = ary;
		    lodash.assign = assign;
		    lodash.assignIn = assignIn;
		    lodash.assignInWith = assignInWith;
		    lodash.assignWith = assignWith;
		    lodash.at = at;
		    lodash.before = before;
		    lodash.bind = bind;
		    lodash.bindAll = bindAll;
		    lodash.bindKey = bindKey;
		    lodash.castArray = castArray;
		    lodash.chain = chain;
		    lodash.chunk = chunk;
		    lodash.compact = compact;
		    lodash.concat = concat;
		    lodash.cond = cond;
		    lodash.conforms = conforms;
		    lodash.constant = constant;
		    lodash.countBy = countBy;
		    lodash.create = create;
		    lodash.curry = curry;
		    lodash.curryRight = curryRight;
		    lodash.debounce = debounce;
		    lodash.defaults = defaults;
		    lodash.defaultsDeep = defaultsDeep;
		    lodash.defer = defer;
		    lodash.delay = delay;
		    lodash.difference = difference;
		    lodash.differenceBy = differenceBy;
		    lodash.differenceWith = differenceWith;
		    lodash.drop = drop;
		    lodash.dropRight = dropRight;
		    lodash.dropRightWhile = dropRightWhile;
		    lodash.dropWhile = dropWhile;
		    lodash.fill = fill;
		    lodash.filter = filter;
		    lodash.flatMap = flatMap;
		    lodash.flatMapDeep = flatMapDeep;
		    lodash.flatMapDepth = flatMapDepth;
		    lodash.flatten = flatten;
		    lodash.flattenDeep = flattenDeep;
		    lodash.flattenDepth = flattenDepth;
		    lodash.flip = flip;
		    lodash.flow = flow;
		    lodash.flowRight = flowRight;
		    lodash.fromPairs = fromPairs;
		    lodash.functions = functions;
		    lodash.functionsIn = functionsIn;
		    lodash.groupBy = groupBy;
		    lodash.initial = initial;
		    lodash.intersection = intersection;
		    lodash.intersectionBy = intersectionBy;
		    lodash.intersectionWith = intersectionWith;
		    lodash.invert = invert;
		    lodash.invertBy = invertBy;
		    lodash.invokeMap = invokeMap;
		    lodash.iteratee = iteratee;
		    lodash.keyBy = keyBy;
		    lodash.keys = keys;
		    lodash.keysIn = keysIn;
		    lodash.map = map;
		    lodash.mapKeys = mapKeys;
		    lodash.mapValues = mapValues;
		    lodash.matches = matches;
		    lodash.matchesProperty = matchesProperty;
		    lodash.memoize = memoize;
		    lodash.merge = merge;
		    lodash.mergeWith = mergeWith;
		    lodash.method = method;
		    lodash.methodOf = methodOf;
		    lodash.mixin = mixin;
		    lodash.negate = negate;
		    lodash.nthArg = nthArg;
		    lodash.omit = omit;
		    lodash.omitBy = omitBy;
		    lodash.once = once;
		    lodash.orderBy = orderBy;
		    lodash.over = over;
		    lodash.overArgs = overArgs;
		    lodash.overEvery = overEvery;
		    lodash.overSome = overSome;
		    lodash.partial = partial;
		    lodash.partialRight = partialRight;
		    lodash.partition = partition;
		    lodash.pick = pick;
		    lodash.pickBy = pickBy;
		    lodash.property = property;
		    lodash.propertyOf = propertyOf;
		    lodash.pull = pull;
		    lodash.pullAll = pullAll;
		    lodash.pullAllBy = pullAllBy;
		    lodash.pullAllWith = pullAllWith;
		    lodash.pullAt = pullAt;
		    lodash.range = range;
		    lodash.rangeRight = rangeRight;
		    lodash.rearg = rearg;
		    lodash.reject = reject;
		    lodash.remove = remove;
		    lodash.rest = rest;
		    lodash.reverse = reverse;
		    lodash.sampleSize = sampleSize;
		    lodash.set = set;
		    lodash.setWith = setWith;
		    lodash.shuffle = shuffle;
		    lodash.slice = slice;
		    lodash.sortBy = sortBy;
		    lodash.sortedUniq = sortedUniq;
		    lodash.sortedUniqBy = sortedUniqBy;
		    lodash.split = split;
		    lodash.spread = spread;
		    lodash.tail = tail;
		    lodash.take = take;
		    lodash.takeRight = takeRight;
		    lodash.takeRightWhile = takeRightWhile;
		    lodash.takeWhile = takeWhile;
		    lodash.tap = tap;
		    lodash.throttle = throttle;
		    lodash.thru = thru;
		    lodash.toArray = toArray;
		    lodash.toPairs = toPairs;
		    lodash.toPairsIn = toPairsIn;
		    lodash.toPath = toPath;
		    lodash.toPlainObject = toPlainObject;
		    lodash.transform = transform;
		    lodash.unary = unary;
		    lodash.union = union;
		    lodash.unionBy = unionBy;
		    lodash.unionWith = unionWith;
		    lodash.uniq = uniq;
		    lodash.uniqBy = uniqBy;
		    lodash.uniqWith = uniqWith;
		    lodash.unset = unset;
		    lodash.unzip = unzip;
		    lodash.unzipWith = unzipWith;
		    lodash.update = update;
		    lodash.updateWith = updateWith;
		    lodash.values = values;
		    lodash.valuesIn = valuesIn;
		    lodash.without = without;
		    lodash.words = words;
		    lodash.wrap = wrap;
		    lodash.xor = xor;
		    lodash.xorBy = xorBy;
		    lodash.xorWith = xorWith;
		    lodash.zip = zip;
		    lodash.zipObject = zipObject;
		    lodash.zipObjectDeep = zipObjectDeep;
		    lodash.zipWith = zipWith;
	
		    // Add aliases.
		    lodash.entries = toPairs;
		    lodash.entriesIn = toPairsIn;
		    lodash.extend = assignIn;
		    lodash.extendWith = assignInWith;
	
		    // Add methods to `lodash.prototype`.
		    mixin(lodash, lodash);
	
		    /*------------------------------------------------------------------------*/
	
		    // Add methods that return unwrapped values in chain sequences.
		    lodash.add = add;
		    lodash.attempt = attempt;
		    lodash.camelCase = camelCase;
		    lodash.capitalize = capitalize;
		    lodash.ceil = ceil;
		    lodash.clamp = clamp;
		    lodash.clone = clone;
		    lodash.cloneDeep = cloneDeep;
		    lodash.cloneDeepWith = cloneDeepWith;
		    lodash.cloneWith = cloneWith;
		    lodash.conformsTo = conformsTo;
		    lodash.deburr = deburr;
		    lodash.defaultTo = defaultTo;
		    lodash.divide = divide;
		    lodash.endsWith = endsWith;
		    lodash.eq = eq;
		    lodash.escape = escape;
		    lodash.escapeRegExp = escapeRegExp;
		    lodash.every = every;
		    lodash.find = find;
		    lodash.findIndex = findIndex;
		    lodash.findKey = findKey;
		    lodash.findLast = findLast;
		    lodash.findLastIndex = findLastIndex;
		    lodash.findLastKey = findLastKey;
		    lodash.floor = floor;
		    lodash.forEach = forEach;
		    lodash.forEachRight = forEachRight;
		    lodash.forIn = forIn;
		    lodash.forInRight = forInRight;
		    lodash.forOwn = forOwn;
		    lodash.forOwnRight = forOwnRight;
		    lodash.get = get;
		    lodash.gt = gt;
		    lodash.gte = gte;
		    lodash.has = has;
		    lodash.hasIn = hasIn;
		    lodash.head = head;
		    lodash.identity = identity;
		    lodash.includes = includes;
		    lodash.indexOf = indexOf;
		    lodash.inRange = inRange;
		    lodash.invoke = invoke;
		    lodash.isArguments = isArguments;
		    lodash.isArray = isArray;
		    lodash.isArrayBuffer = isArrayBuffer;
		    lodash.isArrayLike = isArrayLike;
		    lodash.isArrayLikeObject = isArrayLikeObject;
		    lodash.isBoolean = isBoolean;
		    lodash.isBuffer = isBuffer;
		    lodash.isDate = isDate;
		    lodash.isElement = isElement;
		    lodash.isEmpty = isEmpty;
		    lodash.isEqual = isEqual;
		    lodash.isEqualWith = isEqualWith;
		    lodash.isError = isError;
		    lodash.isFinite = isFinite;
		    lodash.isFunction = isFunction;
		    lodash.isInteger = isInteger;
		    lodash.isLength = isLength;
		    lodash.isMap = isMap;
		    lodash.isMatch = isMatch;
		    lodash.isMatchWith = isMatchWith;
		    lodash.isNaN = isNaN;
		    lodash.isNative = isNative;
		    lodash.isNil = isNil;
		    lodash.isNull = isNull;
		    lodash.isNumber = isNumber;
		    lodash.isObject = isObject;
		    lodash.isObjectLike = isObjectLike;
		    lodash.isPlainObject = isPlainObject;
		    lodash.isRegExp = isRegExp;
		    lodash.isSafeInteger = isSafeInteger;
		    lodash.isSet = isSet;
		    lodash.isString = isString;
		    lodash.isSymbol = isSymbol;
		    lodash.isTypedArray = isTypedArray;
		    lodash.isUndefined = isUndefined;
		    lodash.isWeakMap = isWeakMap;
		    lodash.isWeakSet = isWeakSet;
		    lodash.join = join;
		    lodash.kebabCase = kebabCase;
		    lodash.last = last;
		    lodash.lastIndexOf = lastIndexOf;
		    lodash.lowerCase = lowerCase;
		    lodash.lowerFirst = lowerFirst;
		    lodash.lt = lt;
		    lodash.lte = lte;
		    lodash.max = max;
		    lodash.maxBy = maxBy;
		    lodash.mean = mean;
		    lodash.meanBy = meanBy;
		    lodash.min = min;
		    lodash.minBy = minBy;
		    lodash.stubArray = stubArray;
		    lodash.stubFalse = stubFalse;
		    lodash.stubObject = stubObject;
		    lodash.stubString = stubString;
		    lodash.stubTrue = stubTrue;
		    lodash.multiply = multiply;
		    lodash.nth = nth;
		    lodash.noConflict = noConflict;
		    lodash.noop = noop;
		    lodash.now = now;
		    lodash.pad = pad;
		    lodash.padEnd = padEnd;
		    lodash.padStart = padStart;
		    lodash.parseInt = parseInt;
		    lodash.random = random;
		    lodash.reduce = reduce;
		    lodash.reduceRight = reduceRight;
		    lodash.repeat = repeat;
		    lodash.replace = replace;
		    lodash.result = result;
		    lodash.round = round;
		    lodash.runInContext = runInContext;
		    lodash.sample = sample;
		    lodash.size = size;
		    lodash.snakeCase = snakeCase;
		    lodash.some = some;
		    lodash.sortedIndex = sortedIndex;
		    lodash.sortedIndexBy = sortedIndexBy;
		    lodash.sortedIndexOf = sortedIndexOf;
		    lodash.sortedLastIndex = sortedLastIndex;
		    lodash.sortedLastIndexBy = sortedLastIndexBy;
		    lodash.sortedLastIndexOf = sortedLastIndexOf;
		    lodash.startCase = startCase;
		    lodash.startsWith = startsWith;
		    lodash.subtract = subtract;
		    lodash.sum = sum;
		    lodash.sumBy = sumBy;
		    lodash.template = template;
		    lodash.times = times;
		    lodash.toFinite = toFinite;
		    lodash.toInteger = toInteger;
		    lodash.toLength = toLength;
		    lodash.toLower = toLower;
		    lodash.toNumber = toNumber;
		    lodash.toSafeInteger = toSafeInteger;
		    lodash.toString = toString;
		    lodash.toUpper = toUpper;
		    lodash.trim = trim;
		    lodash.trimEnd = trimEnd;
		    lodash.trimStart = trimStart;
		    lodash.truncate = truncate;
		    lodash.unescape = unescape;
		    lodash.uniqueId = uniqueId;
		    lodash.upperCase = upperCase;
		    lodash.upperFirst = upperFirst;
	
		    // Add aliases.
		    lodash.each = forEach;
		    lodash.eachRight = forEachRight;
		    lodash.first = head;
	
		    mixin(lodash, (function() {
		      var source = {};
		      baseForOwn(lodash, function(func, methodName) {
		        if (!hasOwnProperty.call(lodash.prototype, methodName)) {
		          source[methodName] = func;
		        }
		      });
		      return source;
		    }()), { 'chain': false });
	
		    /*------------------------------------------------------------------------*/
	
		    /**
		     * The semantic version number.
		     *
		     * @static
		     * @memberOf _
		     * @type {string}
		     */
		    lodash.VERSION = VERSION;
	
		    // Assign default placeholders.
		    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {
		      lodash[methodName].placeholder = lodash;
		    });
	
		    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
		    arrayEach(['drop', 'take'], function(methodName, index) {
		      LazyWrapper.prototype[methodName] = function(n) {
		        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);
	
		        var result = (this.__filtered__ && !index)
		          ? new LazyWrapper(this)
		          : this.clone();
	
		        if (result.__filtered__) {
		          result.__takeCount__ = nativeMin(n, result.__takeCount__);
		        } else {
		          result.__views__.push({
		            'size': nativeMin(n, MAX_ARRAY_LENGTH),
		            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
		          });
		        }
		        return result;
		      };
	
		      LazyWrapper.prototype[methodName + 'Right'] = function(n) {
		        return this.reverse()[methodName](n).reverse();
		      };
		    });
	
		    // Add `LazyWrapper` methods that accept an `iteratee` value.
		    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {
		      var type = index + 1,
		          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;
	
		      LazyWrapper.prototype[methodName] = function(iteratee) {
		        var result = this.clone();
		        result.__iteratees__.push({
		          'iteratee': getIteratee(iteratee, 3),
		          'type': type
		        });
		        result.__filtered__ = result.__filtered__ || isFilter;
		        return result;
		      };
		    });
	
		    // Add `LazyWrapper` methods for `_.head` and `_.last`.
		    arrayEach(['head', 'last'], function(methodName, index) {
		      var takeName = 'take' + (index ? 'Right' : '');
	
		      LazyWrapper.prototype[methodName] = function() {
		        return this[takeName](1).value()[0];
		      };
		    });
	
		    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.
		    arrayEach(['initial', 'tail'], function(methodName, index) {
		      var dropName = 'drop' + (index ? '' : 'Right');
	
		      LazyWrapper.prototype[methodName] = function() {
		        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
		      };
		    });
	
		    LazyWrapper.prototype.compact = function() {
		      return this.filter(identity);
		    };
	
		    LazyWrapper.prototype.find = function(predicate) {
		      return this.filter(predicate).head();
		    };
	
		    LazyWrapper.prototype.findLast = function(predicate) {
		      return this.reverse().find(predicate);
		    };
	
		    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {
		      if (typeof path == 'function') {
		        return new LazyWrapper(this);
		      }
		      return this.map(function(value) {
		        return baseInvoke(value, path, args);
		      });
		    });
	
		    LazyWrapper.prototype.reject = function(predicate) {
		      return this.filter(negate(getIteratee(predicate)));
		    };
	
		    LazyWrapper.prototype.slice = function(start, end) {
		      start = toInteger(start);
	
		      var result = this;
		      if (result.__filtered__ && (start > 0 || end < 0)) {
		        return new LazyWrapper(result);
		      }
		      if (start < 0) {
		        result = result.takeRight(-start);
		      } else if (start) {
		        result = result.drop(start);
		      }
		      if (end !== undefined) {
		        end = toInteger(end);
		        result = end < 0 ? result.dropRight(-end) : result.take(end - start);
		      }
		      return result;
		    };
	
		    LazyWrapper.prototype.takeRightWhile = function(predicate) {
		      return this.reverse().takeWhile(predicate).reverse();
		    };
	
		    LazyWrapper.prototype.toArray = function() {
		      return this.take(MAX_ARRAY_LENGTH);
		    };
	
		    // Add `LazyWrapper` methods to `lodash.prototype`.
		    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
		      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
		          isTaker = /^(?:head|last)$/.test(methodName),
		          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],
		          retUnwrapped = isTaker || /^find/.test(methodName);
	
		      if (!lodashFunc) {
		        return;
		      }
		      lodash.prototype[methodName] = function() {
		        var value = this.__wrapped__,
		            args = isTaker ? [1] : arguments,
		            isLazy = value instanceof LazyWrapper,
		            iteratee = args[0],
		            useLazy = isLazy || isArray(value);
	
		        var interceptor = function(value) {
		          var result = lodashFunc.apply(lodash, arrayPush([value], args));
		          return (isTaker && chainAll) ? result[0] : result;
		        };
	
		        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
		          // Avoid lazy use if the iteratee has a "length" value other than `1`.
		          isLazy = useLazy = false;
		        }
		        var chainAll = this.__chain__,
		            isHybrid = !!this.__actions__.length,
		            isUnwrapped = retUnwrapped && !chainAll,
		            onlyLazy = isLazy && !isHybrid;
	
		        if (!retUnwrapped && useLazy) {
		          value = onlyLazy ? value : new LazyWrapper(this);
		          var result = func.apply(value, args);
		          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });
		          return new LodashWrapper(result, chainAll);
		        }
		        if (isUnwrapped && onlyLazy) {
		          return func.apply(this, args);
		        }
		        result = this.thru(interceptor);
		        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;
		      };
		    });
	
		    // Add `Array` methods to `lodash.prototype`.
		    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {
		      var func = arrayProto[methodName],
		          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
		          retUnwrapped = /^(?:pop|shift)$/.test(methodName);
	
		      lodash.prototype[methodName] = function() {
		        var args = arguments;
		        if (retUnwrapped && !this.__chain__) {
		          var value = this.value();
		          return func.apply(isArray(value) ? value : [], args);
		        }
		        return this[chainName](function(value) {
		          return func.apply(isArray(value) ? value : [], args);
		        });
		      };
		    });
	
		    // Map minified method names to their real names.
		    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
		      var lodashFunc = lodash[methodName];
		      if (lodashFunc) {
		        var key = (lodashFunc.name + ''),
		            names = realNames[key] || (realNames[key] = []);
	
		        names.push({ 'name': methodName, 'func': lodashFunc });
		      }
		    });
	
		    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{
		      'name': 'wrapper',
		      'func': undefined
		    }];
	
		    // Add methods to `LazyWrapper`.
		    LazyWrapper.prototype.clone = lazyClone;
		    LazyWrapper.prototype.reverse = lazyReverse;
		    LazyWrapper.prototype.value = lazyValue;
	
		    // Add chain sequence methods to the `lodash` wrapper.
		    lodash.prototype.at = wrapperAt;
		    lodash.prototype.chain = wrapperChain;
		    lodash.prototype.commit = wrapperCommit;
		    lodash.prototype.next = wrapperNext;
		    lodash.prototype.plant = wrapperPlant;
		    lodash.prototype.reverse = wrapperReverse;
		    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;
	
		    // Add lazy aliases.
		    lodash.prototype.first = lodash.prototype.head;
	
		    if (symIterator) {
		      lodash.prototype[symIterator] = wrapperToIterator;
		    }
		    return lodash;
		  });
	
		  /*--------------------------------------------------------------------------*/
	
		  // Export lodash.
		  var _ = runInContext();
	
		  // Some AMD build optimizers, like r.js, check for condition patterns like:
		  if (true) {
		    // Expose Lodash on the global object to prevent errors when Lodash is
		    // loaded by a script tag in the presence of an AMD loader.
		    // See http://requirejs.org/docs/errors.html#mismatch for more details.
		    // Use `_.noConflict` to remove Lodash from the global object.
		    root._ = _;
	
		    // Define as an anonymous module so, through path mapping, it can be
		    // referenced as the "underscore" module.
		    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {
		      return _;
		    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		  }
		  // Check for `exports` after `define` in case a build optimizer adds it.
		  else if (freeModule) {
		    // Export for Node.js.
		    (freeModule.exports = _)._ = _;
		    // Export for CommonJS support.
		    freeExports._ = _;
		  }
		  else {
		    // Export to the global object.
		    root._ = _;
		  }
		}.call(this));
	
		/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(2)(module)))
	
	/***/ },
	/* 610 */
	/***/ function(module, exports) {
	
		'use strict';
	
		Object.defineProperty(exports, "__esModule", {
			value: true
		});
	
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
		var FilterOptionsRepository = function () {
			function FilterOptionsRepository() {
				_classCallCheck(this, FilterOptionsRepository);
			}
	
			_createClass(FilterOptionsRepository, [{
				key: 'getSelectOptionsForKnowledgeHub',
				value: function getSelectOptionsForKnowledgeHub() {
	
					return $.ajax({
						type: "GET",
						url: document.getElementById('app-knowledge-hub').dataset.urlGetarticlesortbylist,
						dataType: 'json',
						cache: false,
						success: function success(data) {},
						error: function error(xhr, status, err) {}
					});
				}
			}, {
				key: 'getSelectOptionsForPressCenter',
				value: function getSelectOptionsForPressCenter(options) {
	
					return $.ajax({
						type: "GET",
						url: document.getElementById('app-press-center').dataset.urlGetyears,
						data: options ? $.param(options) : undefined,
						dataType: 'json',
						cache: false,
						success: function success(data) {},
						error: function error(xhr, status, err) {}
					});
				}
			}, {
				key: 'getSelectOptionsForCalendar',
				value: function getSelectOptionsForCalendar(options) {
	
					return $.ajax({
						type: "GET",
						url: document.getElementById('app-calendar').dataset.urlGetyears,
						data: options ? $.param(options) : undefined,
						dataType: 'json',
						cache: false,
						success: function success(data) {},
						error: function error(xhr, status, err) {}
					});
				}
			}]);
	
			return FilterOptionsRepository;
		}();
	
		exports.default = FilterOptionsRepository;
	
	/***/ },
	/* 611 */
	/***/ function(module, exports) {
	
		"use strict";
	
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
	
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
		var CalendarRepository = function () {
		    function CalendarRepository() {
		        _classCallCheck(this, CalendarRepository);
		    }
	
		    _createClass(CalendarRepository, [{
		        key: "getEventIcs",
		        value: function getEventIcs(eventOptions) {
	
		            var exportEventLink = "";
	
		            if (eventOptions.EventId) {
		                exportEventLink = "https://sit.zurich.com/zwpapi/CalendarEvent/AddtoMyCalendar";
		            } else {
		                exportEventLink = "https://sit.zurich.com/zwpapi/CalendarEvent/AddAllEventstoMyCalendar";
		            }
	
		            return $.ajax({
		                type: "POST",
		                url: exportEventLink,
		                data: eventOptions ? $.param(eventOptions) : undefined,
		                dataType: 'text',
		                cache: false,
		                success: function success(data) {},
		                error: function error(xhr, status, err) {}
		            });
		        }
		    }, {
		        key: "getContent",
		        value: function getContent(filterOptions) {
		            //note: only for test using with jQuery
		            return $.ajax({
		                type: "POST",
		                url: document.getElementById('app-calendar').dataset.urlSearch,
		                data: filterOptions ? $.param(filterOptions) : undefined,
		                dataType: 'json',
		                cache: false,
		                success: function success(data) {},
		                error: function error(xhr, status, err) {}
		            });
		        }
		    }]);
	
		    return CalendarRepository;
		}();
	
		exports.default = CalendarRepository;
	
	/***/ },
	/* 612 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
	
		var $ = __webpack_require__(4);
	
	
		function FilterSection() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.FilterSection = module.exports = inherit(FilterSection, BaseModule, {
	
			busEvents: {},
	
			domEvents: {},
	
			init: function () {
	
			}
	
		});
	
	/***/ },
	/* 613 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
	
		var $ = __webpack_require__(4);
	
	
		function GlobalFilter() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.GlobalFilter = module.exports = inherit(GlobalFilter, BaseModule, {
	
			busEvents: {},
	
			domEvents: {},
	
			init: function () {
	
			}
	
		});
	
	/***/ },
	/* 614 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
	
		if(document.getElementById('app-knowledge-hub')) {
			var KnowledgeHubApp = __webpack_require__(615);
		}
	
	/***/ },
	/* 615 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		__webpack_require__(266);
	
		var _react = __webpack_require__(68);
	
		var _react2 = _interopRequireDefault(_react);
	
		var _reactDom = __webpack_require__(99);
	
		var _reactDom2 = _interopRequireDefault(_reactDom);
	
		var _ResultList = __webpack_require__(591);
	
		var _ResultList2 = _interopRequireDefault(_ResultList);
	
		var _GlobalFilter = __webpack_require__(605);
	
		var _GlobalFilter2 = _interopRequireDefault(_GlobalFilter);
	
		var _SortSection = __webpack_require__(594);
	
		var _SortSection2 = _interopRequireDefault(_SortSection);
	
		var _ArticleListItem = __webpack_require__(616);
	
		var _ArticleListItem2 = _interopRequireDefault(_ArticleListItem);
	
		var _articleRepository = __webpack_require__(617);
	
		var _articleRepository2 = _interopRequireDefault(_articleRepository);
	
		var _filterOptionsRepository = __webpack_require__(610);
	
		var _filterOptionsRepository2 = _interopRequireDefault(_filterOptionsRepository);
	
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
		function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
		var filterOptionsRepository = new _filterOptionsRepository2.default();
		var articleRepository = new _articleRepository2.default();
	
		var KnowledgeHub = _react2.default.createClass({
			displayName: 'KnowledgeHub',
	
	
			getInitialState: function getInitialState() {
				return {
					selectedFilters: [],
					results: [],
					categories: [],
					totalResults: 0,
					currentPage: 1,
					selectedSortOption: '',
					sortBy: -1,
					searchValue: '',
					facets: [],
					refreshScrolling: true,
					showNextResults: false,
					isLoading: true,
					i18n: JSON.parse($("#i18n").html()),
					pageId: document.getElementById('app-knowledge-hub').dataset.pageid,
					absoluteUrl: ""
				};
			},
	
			componentDidMount: function componentDidMount() {
				this.setInitialContentState();
			},
	
	
			setInitialContentState: function setInitialContentState() {
				var parameter = {
					"Facets": null,
					"PageNumber": 1,
					"SearchValue": "",
					"SortBy": 0,
					"PageId": this.state.pageId
				};
	
				articleRepository.getContent(parameter).done(function (data) {
					this.setState({
						results: data.Articles,
						categories: data.Categories,
						totalResults: data.TotalResults,
						currentPage: data.CurrentPageIndex,
						refreshScrolling: true,
						isLoading: false,
						absoluteUrl: document.getElementById('app-knowledge-hub').dataset.absoluteurl ? document.getElementById('app-knowledge-hub').dataset.absoluteurl : ""
					});
				}.bind(this));
			},
	
			filterResult: function filterResult(category, selectedFilters) {
				if (this.state.isLoading) {
					return;
				}
				var hasFilterSet = selectedFilters.length > 0;
				var facetsSearchList = [];
				var _iteratorNormalCompletion = true;
				var _didIteratorError = false;
				var _iteratorError = undefined;
	
				try {
					for (var _iterator = selectedFilters[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
						var filter = _step.value;
	
						facetsSearchList.push({ Value: filter.key, Type: filter.categoryType });
					}
				} catch (err) {
					_didIteratorError = true;
					_iteratorError = err;
				} finally {
					try {
						if (!_iteratorNormalCompletion && _iterator.return) {
							_iterator.return();
						}
					} finally {
						if (_didIteratorError) {
							throw _iteratorError;
						}
					}
				}
	
				if (!hasFilterSet) {
					this.handleClearFilter();
				} else {
					this.setState({ isLoading: true });
	
					articleRepository.getContent({
						"Facets": facetsSearchList,
						"PageNumber": 1,
						"SearchValue": this.state.searchValue,
						"SortBy": this.state.sortBy,
						"PageId": this.state.pageId
	
					}).then(function (data) {
						this.setState({
							results: data.Articles,
							categories: data.Categories,
							totalResults: data.TotalResults,
							currentPage: data.CurrentPageIndex + 1,
							facets: facetsSearchList,
							refreshScrolling: true,
							showNextResults: false,
							isLoading: false
						});
					}.bind(this));
				}
			},
	
			filterOptionsChanged: function filterOptionsChanged(e) {
				var sortBy = 0;
				switch (e.target.value) {
					case 'Date':
						sortBy = 0;
						break;
					case 'Most popular':
						sortBy = 1;
						break;
					default:
						sortBy = 0;
				}
				var parameter = {
					"Facets": this.state.facets,
					"PageNumber": 1,
					"SearchValue": this.state.searchValue,
					"SortBy": sortBy,
					"PageId": this.state.pageId
				};
	
				if (!this.state.isLoading) {
					articleRepository.getContent(parameter).done(function (data) {
						this.setState({
							results: data.Articles,
							categories: data.Categories,
							totalResults: data.TotalResults,
							currentPage: data.CurrentPageIndex + 1,
							sortBy: sortBy,
							showNextResults: false,
							isLoading: false
						});
					}.bind(this));
	
					this.setState({
						selectedSortOption: e.target.value,
						isLoading: true
					});
				}
			},
	
			searchArticlesByTextInput: function searchArticlesByTextInput(searchValue) {
				var parameter = {
					"Facets": this.state.facets,
					"PageNumber": 1,
					"SearchValue": searchValue ? searchValue : "",
					"SortBy": this.state.sortBy,
					"PageId": this.state.pageId
				};
	
				this.setState({ isLoading: true });
	
				articleRepository.getContent(parameter).then(function (data) {
					this.setState({
						results: data.Articles,
						categories: data.Categories,
						totalResults: data.TotalResults,
						currentPage: data.CurrentPageIndex + 1,
						searchValue: parameter.SearchValue,
						refreshScrolling: true,
						showNextResults: false,
						isLoading: false
					});
				}.bind(this));
			},
	
			handleClearFilter: function handleClearFilter() {
				this.setState({
					isLoading: true,
					selectedSortOption: 0,
					searchValue: ""
				});
	
				var parameter = {
					"PageNumber": 1,
					"SearchValue": "",
					"SortBy": 0,
					"PageId": this.state.pageId
				};
				articleRepository.getContent(parameter).then(function (data) {
					this.setState({
						results: data.Articles,
						categories: data.Categories,
						totalResults: data.TotalResults,
						currentPage: data.CurrentPageIndex + 1,
						facets: null,
						showNextResults: false,
						isLoading: false
					});
				}.bind(this));
			},
	
			handleTextChange: function handleTextChange(e) {
				this.setState({ searchValue: e.target.value });
			},
	
	
			handleMoreArticlesForShowing: function handleMoreArticlesForShowing(e) {
				e.preventDefault();
				this.setState({ showNextResults: true, currentPage: 1 });
			},
	
			loadNextArticles: function loadNextArticles() {
				var nextPageNumber = this.state.currentPage + 1;
	
				console.log(nextPageNumber);
	
				articleRepository.getContent({
					"Facets": this.state.facets,
					"PageNumber": nextPageNumber,
					"SearchValue": this.state.searchValue,
					"SortBy": this.state.sortBy,
					"PageId": this.state.pageId
	
				}).then(function (data) {
					var results = this.state.results;
					this.setState({
						results: [].concat(_toConsumableArray(results), _toConsumableArray(data.Articles)),
						categories: data.Categories,
						totalResults: data.TotalResults,
						currentPage: nextPageNumber,
						showNextResults: true
					});
				}.bind(this));
			},
	
			render: function render() {
				return _react2.default.createElement(
					'div',
					{ className: 'row' },
					_react2.default.createElement(
						'div',
						{ className: 'col-sm-6 col-md-4' },
						_react2.default.createElement(
							'div',
							{ className: 'mod mod-navigation-drawer right', 'data-t-name': 'NavigationDrawer' },
							_react2.default.createElement(
								'div',
								{ className: 'mod-navigation-drawer__inlay' },
								_react2.default.createElement(
									'div',
									{ className: 'mod-navigation-drawer--sticky' },
									_react2.default.createElement(
										'a',
										{ href: '#', className: 'mod-navigation-drawer__close hidden-sm-up' },
										_react2.default.createElement('span', { className: 'icon icon--arrow-slider-left', 'aria-hidden': 'true' }),
										this.state.i18n.HideFilterOnMobile
									)
								),
								_react2.default.createElement(
									'div',
									{ className: 'mod-navigation-drawer--scroll-content' },
									_react2.default.createElement(_GlobalFilter2.default, { categories: this.state.categories ? this.state.categories : [],
										filterResult: this.filterResult,
										handleClearFilter: this.handleClearFilter,
										isLoading: this.state.isLoading,
										i18n: this.state.i18n,
										hasSearch: this.state.searchValue ? true : false,
										hasSorted: this.state.selectedSortOption ? true : false
									})
								)
							)
						)
					),
					_react2.default.createElement(
						'div',
						{ className: 'col-sm-6 col-md-8' },
						_react2.default.createElement(_SortSection2.default, {
							filterOptions: filterOptionsRepository.getSelectOptionsForKnowledgeHub(),
							filterOptionsChanged: this.filterOptionsChanged,
							onTextInputChange: this.handleTextChange,
							selectedValue: this.state.selectedSortOption,
							handleSearchInput: this.searchArticlesByTextInput,
							searchValue: this.state.searchValue,
							i18n: this.state.i18n,
							reactAppName: 'knowledgehub'
						}),
						_react2.default.createElement(
							_ResultList2.default,
							{
								itemsPerPage: '25',
								results: this.state.results ? this.state.results : [],
								totalResults: this.state.totalResults,
								currentPage: this.state.currentPage,
								handleMoreResultsForShowing: this.handleMoreArticlesForShowing,
								loadNextResults: this.loadNextArticles,
								showNextResults: this.state.showNextResults,
								isLoading: this.state.isLoading,
								i18n: this.state.i18n
							},
							this.state.results ? this.state.results.map(function (key, idx) {
								return _react2.default.createElement(_ArticleListItem2.default, {
									key: idx,
									articleDate: key.ArticleDate,
									contentUrl: key.ContentUrl,
									headline: key.Headline,
									imageUrl: key.ImageUrl,
									imageAltText: key.ImageAltText,
									showTopStory: key.ShowTopStory,
									summary: key.Summary,
									typeTag: key.TypeTag,
									absoluteUrl: this.state.absoluteUrl
								});
							}.bind(this)) : ''
						)
					)
				);
			}
		});
	
		_reactDom2.default.render(_react2.default.createElement(KnowledgeHub, null), document.getElementById('app-knowledge-hub'));
	
	/***/ },
	/* 616 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
	
		var _react = __webpack_require__(68);
	
		var _react2 = _interopRequireDefault(_react);
	
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
		var ArticleListItem = _react2.default.createClass({
			displayName: "ArticleListItem",
			handleImage: function handleImage() {
				return _react2.default.createElement(
					"a",
					{ className: "mod-result-list__link", href: this.props.contentUrl },
					_react2.default.createElement(
						"figure",
						null,
						_react2.default.createElement(
							"div",
							{ className: "flexembed flexembed--16by9" },
							_react2.default.createElement("img", { src: this.props.absoluteUrl + this.props.imageUrl, alt: this.props.imageAltText, className: "img-responsive" })
						)
					)
				);
			},
	
	
			render: function render() {
				return _react2.default.createElement(
					"article",
					{ className: "mod mod-result-list__item" },
					_react2.default.createElement(
						"div",
						{ className: "mod-result-list__media" },
						this.props.imageUrl && this.handleImage()
					),
					_react2.default.createElement(
						"div",
						{ className: "mod-result-list__meta" },
						this.props.showTopStory && _react2.default.createElement(
							"span",
							{ className: "mod-result-list__label" },
							_react2.default.createElement(
								"span",
								{ className: "label label--default" },
								"Top Story"
							)
						),
						this.props.articleDate && _react2.default.createElement(
							"span",
							{ className: "mod-result-list__info" },
							_react2.default.createElement("span", { className: "icon icon--calendar" }),
							" ",
							this.props.articleDate,
							" "
						),
						this.props.typeTag && _react2.default.createElement(
							"span",
							{ className: "mod-result-list__info" },
							_react2.default.createElement("span", { className: "icon icon--folder" }),
							" ",
							this.props.typeTag,
							" "
						)
					),
					_react2.default.createElement(
						"div",
						{ className: "mod-result-list__content" },
						_react2.default.createElement(
							"h3",
							null,
							_react2.default.createElement(
								"a",
								{ className: "link link-copy", href: this.props.contentUrl },
								this.props.headline
							)
						),
						_react2.default.createElement(
							"p",
							null,
							this.props.summary
						)
					)
				);
			}
		});
	
		module.exports = ArticleListItem;
	
	/***/ },
	/* 617 */
	/***/ function(module, exports) {
	
		'use strict';
	
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
	
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
		/**
		 * Created by andre.fehrmann on 07.04.2017.
		 */
	
		var ArticleRepository = function () {
		    function ArticleRepository() {
		        _classCallCheck(this, ArticleRepository);
		    }
	
		    _createClass(ArticleRepository, [{
		        key: 'getContent',
		        value: function getContent(filterOptions) {
		            /*
		                    return axios.post("https://sit.zurich.com/zwpapi/knowledgehubsearch/KnowledgeHub/Search/", filterOptions ? JSON.stringify({ Facets: filterOptions.Facets, PageNumber: filterOptions.PageNumber, SearchValue: filterOptions.SearchValue, SortBy: filterOptions.SortBy }) : undefined);
		              */
		            //note: only for test using with jQuery
		            return $.ajax({
		                type: "POST",
		                url: document.getElementById('app-knowledge-hub').dataset.urlSearch,
		                data: filterOptions ? $.param(filterOptions) : undefined,
		                dataType: 'json',
		                cache: false,
		                success: function success(data) {},
		                error: function error(xhr, status, err) {}
		            });
		        }
		    }]);
	
		    return ArticleRepository;
		}();
	
		exports.default = ArticleRepository;
	
	/***/ },
	/* 618 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
	
		var $ = __webpack_require__(4);
	
	
		function NavigationDrawer() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.NavigationDrawer = module.exports = inherit(NavigationDrawer, BaseModule, {
	
			busEvents: {
				'toggleNavigationDrawer': 'toggleNav'
			},
	
			domEvents: {},
	
			init: function () {
				this.$body = $('body');
				this.$nav = this.find('.mod-navigation-drawer__inlay');
				this.classOpened = 'show-navigation-drawer';
				this.isOpen = false;
	
				// close dialog on overlay click
				// NOTE: disabled because of react!
				//this.$nav.on('click', this.onNavClick.bind(this));
				//this.$ctx.on('click', this.toggleNav.bind(this));
	
				this.find('.mod-navigation-drawer__close').on('click', function(event){
					event.preventDefault();
		            this._events.emit('toggleNavigationDrawer');
				}.bind(this));
	
				// tmp for demo
				$('.js-nav-drawer-trigger').on('click', function(event){
					event.preventDefault();
					this._events.emit('toggleNavigationDrawer');
				}.bind(this));
			},
	
			onNavClick: function(event) {
				event.stopPropagation();
			},
	
			toggleNav: function () {
	
				if(this.isOpen) {
					this.$body.removeClass(this.classOpened);
		        }
				else {
		            this.$body.addClass(this.classOpened);
				}
				this.isOpen = !this.isOpen;
	
			}
	
		});
	
	/***/ },
	/* 619 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
	
		if(document.getElementById('app-press-center')) {
			var KnowledgeHubApp = __webpack_require__(620);
		}
	
	/***/ },
	/* 620 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		Object.defineProperty(exports, "__esModule", {
			value: true
		});
	
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
		__webpack_require__(266);
	
		var _react = __webpack_require__(68);
	
		var _react2 = _interopRequireDefault(_react);
	
		var _reactDom = __webpack_require__(99);
	
		var _reactDom2 = _interopRequireDefault(_reactDom);
	
		var _ResultList = __webpack_require__(591);
	
		var _ResultList2 = _interopRequireDefault(_ResultList);
	
		var _PressCenterListItem = __webpack_require__(621);
	
		var _PressCenterListItem2 = _interopRequireDefault(_PressCenterListItem);
	
		var _SortSection = __webpack_require__(594);
	
		var _SortSection2 = _interopRequireDefault(_SortSection);
	
		var _GlobalFilter = __webpack_require__(605);
	
		var _GlobalFilter2 = _interopRequireDefault(_GlobalFilter);
	
		var _filterOptionsRepository = __webpack_require__(610);
	
		var _filterOptionsRepository2 = _interopRequireDefault(_filterOptionsRepository);
	
		var _pressCenterRepository = __webpack_require__(622);
	
		var _pressCenterRepository2 = _interopRequireDefault(_pressCenterRepository);
	
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
		var pressCenterRepository = new _pressCenterRepository2.default();
		var filterOptionsRepository = new _filterOptionsRepository2.default();
		var itemsPerPage = 25;
	
		var PressCenter = function (_React$Component) {
			_inherits(PressCenter, _React$Component);
	
			function PressCenter() {
				_classCallCheck(this, PressCenter);
	
				var _this = _possibleConstructorReturn(this, (PressCenter.__proto__ || Object.getPrototypeOf(PressCenter)).call(this));
	
				_this.state = {
					year: [],
					facets: [],
					results: [],
					allNews: [],
					categories: [],
					headline: [],
					searchValue: '',
					searchSubmit: '',
					isLoading: true,
					selectedFilters: [],
					refreshScrolling: true,
					showNextResults: false,
					switchText: [],
					contextLang: [],
					contextLangUrl: [],
					switchLang: [],
					switchLangUrl: [],
					i18n: JSON.parse($("#i18n").html()),
					pageId: document.getElementById('app-press-center').dataset.pageid
				};
	
				return _this;
			}
	
			_createClass(PressCenter, [{
				key: 'componentDidMount',
				value: function componentDidMount() {
					this.setInitialContentState();
				}
			}, {
				key: 'setInitialContentState',
				value: function setInitialContentState() {
					var decodeUri = decodeURIComponent(this.getUrlParam('q'));
	
					var defaultYear = document.getElementById('app-press-center').dataset.defaultYear;
					if (!defaultYear.length) {
						filterOptionsRepository.getSelectOptionsForPressCenter({ "pageid": this.state.pageId }).then(function (data) {
							defaultYear = data[1];
						}.bind(this));
					}
	
					var parameter = {
						"Year": defaultYear,
						"Facets": null,
						"PageNumber": 1,
						"SearchValue": decodeUri !== "undefined" ? decodeUri : "",
						"SortBy": 0,
						"PageId": this.state.pageId
					};
	
					pressCenterRepository.getContent(parameter).then(function (data) {
	
						this.setState({
							allNews: data.News,
							headline: data.PageHeadline,
							categories: data.Categories,
							totalResults: data.TotalResults,
							currentPage: data.CurrentPageIndex,
							switchText: data.LanguageSwitchText,
							contextLang: data.ContextLanguage,
							contextLangUrl: data.ContextLanguageUrl,
							switchLang: data.SwitchLanguage,
							switchLangUrl: data.SwitchLanguageUrl,
							searchValue: decodeUri !== "undefined" ? decodeUri : "",
							searchSubmit: decodeUri !== "undefined" ? decodeUri : "",
							refreshScrolling: true,
							showNextResults: false,
							isLoading: false
						});
	
						this.loadNextNews();
						this.setYear(data.Year);
					}.bind(this));
				}
			}, {
				key: 'getUrlParam',
				value: function getUrlParam(name) {
					var results = new RegExp(name + '=([^\^;\n\&\#]*)').exec(window.location.href);
					if (results !== 'undefined' && results !== null) {
						return results[1] || '';
					}
				}
			}, {
				key: 'setYear',
				value: function setYear(year) {
					var defaultYear = document.getElementById('app-press-center').dataset.defaultYear;
	
					if (defaultYear.length) {
						this.setState({ year: defaultYear });
					} else if (year) {
						this.setState({ year: year });
					} else {
						filterOptionsRepository.getSelectOptionsForPressCenter({ "pageid": this.state.pageId }).then(function (data) {
							this.setState({ year: data[1] });
						}.bind(this));
					}
				}
			}, {
				key: 'loadNextNews',
				value: function loadNextNews() {
					if (this.state.totalResults <= this.state.results.length) return;
	
					var countedNews = this.state.results;
	
					for (var i = itemsPerPage * (this.state.currentPage - 1); i < itemsPerPage * this.state.currentPage; i++) {
						if (typeof this.state.allNews[i] !== "undefined") {
							countedNews.push(this.state.allNews[i]);
						}
					}
	
					this.setState({
						results: countedNews,
						currentPage: this.state.currentPage + 1,
						isLoading: false
					});
				}
			}, {
				key: 'filterResult',
				value: function filterResult(categories, selectedFilters) {
	
					if (this.state.isLoading) {
						return;
					}
	
					var hasFilterSet = selectedFilters.length > 0;
					var facetsSearchList = [];
	
					var _iteratorNormalCompletion = true;
					var _didIteratorError = false;
					var _iteratorError = undefined;
	
					try {
						for (var _iterator = selectedFilters[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
							var filter = _step.value;
	
							facetsSearchList.push({ Type: filter.categoryType, Value: filter.key });
						}
					} catch (err) {
						_didIteratorError = true;
						_iteratorError = err;
					} finally {
						try {
							if (!_iteratorNormalCompletion && _iterator.return) {
								_iterator.return();
							}
						} finally {
							if (_didIteratorError) {
								throw _iteratorError;
							}
						}
					}
	
					if (!hasFilterSet) {
						this.handleUnselectFilter();
					} else {
						this.setState({ isLoading: true });
	
						pressCenterRepository.getContent({
							"Facets": facetsSearchList,
							"PageNumber": 1,
							"SearchValue": this.state.searchValue,
							"Year": this.state.year,
							"PageId": this.state.pageId
	
						}).then(function (data) {
							this.setState({
								results: [],
								allNews: data.News,
								categories: data.Categories,
								headline: data.PageHeadline,
								totalResults: data.TotalResults,
								currentPage: data.CurrentPageIndex,
								switchText: data.LanguageSwitchText,
								contextLang: data.ContextLanguage,
								contextLangUrl: data.ContextLanguageUrl,
								switchLang: data.SwitchLanguage,
								switchLangUrl: data.SwitchLanguageUrl,
								facets: facetsSearchList,
								refreshScrolling: true,
								showNextResults: false,
								isLoading: false
							});
	
							this.loadNextNews();
						}.bind(this));
					}
				}
			}, {
				key: 'filterOptionsChanged',
				value: function filterOptionsChanged(e) {
					var parameter = {
						"Facets": null,
						"PageNumber": 1,
						"SearchValue": this.state.searchValue,
						"PageId": this.state.pageId,
						"Year": e.target.value
					};
	
					if (!this.state.isLoading) {
						pressCenterRepository.getContent(parameter).then(function (data) {
	
							this.setState({
								results: [],
								allNews: data.News,
								headline: data.PageHeadline,
								categories: data.Categories,
								totalResults: data.TotalResults,
								currentPage: data.CurrentPageIndex,
								switchText: data.LanguageSwitchText,
								contextLang: data.ContextLanguage,
								contextLangUrl: data.ContextLanguageUrl,
								switchLang: data.SwitchLanguage,
								switchLangUrl: data.SwitchLanguageUrl,
								showNextResults: false,
								isLoading: false,
								year: parameter.Year
							});
	
							this.loadNextNews();
						}.bind(this));
	
						this.setState({
							selectedSortOption: e.target.value,
							isLoading: true
						});
					}
				}
			}, {
				key: 'searchArticlesByTextInput',
				value: function searchArticlesByTextInput(searchValue) {
					var parameter = {
						"Facets": this.state.facets,
						"PageNumber": 1,
						"SearchValue": searchValue ? searchValue : "",
						"Year": this.state.year,
						"PageId": this.state.pageId
					};
	
					this.setState({ isLoading: true });
	
					pressCenterRepository.getContent(parameter).then(function (data) {
	
						this.setState({
							results: [],
							allNews: data.News,
							categories: data.Categories,
							totalResults: data.TotalResults,
							currentPage: data.CurrentPageIndex,
							switchText: data.LanguageSwitchText,
							contextLang: data.ContextLanguage,
							contextLangUrl: data.ContextLanguageUrl,
							switchLang: data.SwitchLanguage,
							switchLangUrl: data.SwitchLanguageUrl,
							searchSubmit: parameter.SearchValue,
							refreshScrolling: true,
							showNextResults: false,
							isLoading: false
						});
	
						this.loadNextNews();
					}.bind(this));
				}
			}, {
				key: 'handleClearFilter',
				value: function handleClearFilter() {
					var defaultYear = document.getElementById('app-press-center').dataset.defaultYear;
	
					if (!defaultYear.length) {
						filterOptionsRepository.getSelectOptionsForPressCenter({ "pageid": this.state.pageId }).then(function (data) {
							this.setState({
								isLoading: false,
								selectedSortOption: 0,
								selectedFilters: [],
								searchValue: "",
								searchSubmit: "",
								year: data[1]
							});
						}.bind(this));
					} else {
						this.setState({
							isLoading: false,
							selectedSortOption: 0,
							selectedFilters: [],
							searchValue: "",
							searchSubmit: "",
							year: defaultYear
						});
					}
	
					var parameter = {
						"Facets": null,
						"PageNumber": 1,
						"SearchValue": "",
						"Year": defaultYear,
						"PageId": this.state.pageId
					};
	
					pressCenterRepository.getContent(parameter).then(function (data) {
	
						this.setState({
							results: [],
							allNews: data.News,
							categories: data.Categories,
							totalResults: data.TotalResults,
							currentPage: data.CurrentPageIndex,
							switchText: data.LanguageSwitchText,
							contextLang: data.ContextLanguage,
							contextLangUrl: data.ContextLanguageUrl,
							switchLang: data.SwitchLanguage,
							switchLangUrl: data.SwitchLanguageUrl,
							facets: null,
							showNextResults: false,
							isLoading: false
						});
	
						this.loadNextNews();
					}.bind(this));
				}
			}, {
				key: 'handleUnselectFilter',
				value: function handleUnselectFilter() {
	
					this.setState({
						isLoading: false,
						selectedSortOption: 0,
						selectedFilters: [],
						searchValue: this.state.searchValue,
						searchSubmit: this.state.searchSubmit
					});
	
					var parameter = {
						"Facets": null,
						"PageNumber": 1,
						"SearchValue": this.state.searchValue,
						"Year": this.state.year,
						"PageId": this.state.pageId
					};
	
					pressCenterRepository.getContent(parameter).then(function (data) {
	
						this.setState({
							results: [],
							allNews: data.News,
							categories: data.Categories,
							totalResults: data.TotalResults,
							currentPage: data.CurrentPageIndex,
							switchText: data.LanguageSwitchText,
							contextLang: data.ContextLanguage,
							contextLangUrl: data.ContextLanguageUrl,
							switchLang: data.SwitchLanguage,
							switchLangUrl: data.SwitchLanguageUrl,
							facets: null,
							showNextResults: false,
							isLoading: false
						});
	
						this.loadNextNews();
					}.bind(this));
				}
			}, {
				key: 'handleTextChange',
				value: function handleTextChange(e) {
					this.setState({ searchValue: e.target.value });
				}
			}, {
				key: 'handleMoreArticlesForShowing',
				value: function handleMoreArticlesForShowing(e) {
					e.preventDefault();
					this.setState({ showNextResults: true });
				}
			}, {
				key: 'render',
				value: function render() {
					var _this2 = this;
	
					return _react2.default.createElement(
						'div',
						{ className: 'mod-press-center__inlay' },
						_react2.default.createElement(
							'div',
							{ className: 'row' },
							_react2.default.createElement(
								'div',
								{ className: 'col-xs-12' },
								_react2.default.createElement(
									'div',
									{ className: 'mod mod-headline mod-headline--extended' },
									_react2.default.createElement(
										'h1',
										null,
										this.state.headline
									)
								)
							)
						),
						_react2.default.createElement(
							'div',
							{ className: 'row' },
							_react2.default.createElement(
								'div',
								{ className: 'col-sm-6 col-md-4' },
								_react2.default.createElement(
									'div',
									{ className: 'mod mod-navigation-drawer right', 'data-t-name': 'NavigationDrawer' },
									_react2.default.createElement(
										'div',
										{ className: 'mod-navigation-drawer__inlay' },
										_react2.default.createElement(
											'div',
											{ className: 'mod-navigation-drawer--sticky' },
											_react2.default.createElement(
												'a',
												{ href: '#', className: 'mod-navigation-drawer__close hidden-sm-up' },
												_react2.default.createElement('span', { className: 'icon icon--arrow-slider-left', 'aria-hidden': 'true' }),
												this.state.i18n.HideFilterOnMobile
											)
										),
										_react2.default.createElement(
											'div',
											{ className: 'mod-navigation-drawer--scroll-content' },
											_react2.default.createElement(_GlobalFilter2.default, { categories: this.state.categories ? this.state.categories : [],
												filterResult: this.filterResult.bind(this),
												handleClearFilter: this.handleClearFilter.bind(this),
												handleUnselectFilter: this.handleUnselectFilter.bind(this),
												isLoading: this.state.isLoading,
												i18n: this.state.i18n,
												switchYear: this.state.selectedSortOption,
												hasSearch: this.state.searchValue ? true : false,
												hasSorted: this.state.selectedSortOption ? true : false,
												reactAppName: 'presscenter'
											})
										)
									)
								)
							),
							_react2.default.createElement(
								'div',
								{ className: 'col-sm-6 col-md-8' },
								_react2.default.createElement(_SortSection2.default, {
									filterOptions: filterOptionsRepository.getSelectOptionsForPressCenter({ "pageid": this.state.pageId }),
									defaultYear: this.state.year,
									filterOptionsChanged: function filterOptionsChanged(e) {
										return _this2.filterOptionsChanged(e);
									},
									onTextInputChange: function onTextInputChange(e) {
										return _this2.handleTextChange(e);
									},
									selectedValue: this.state.selectedSortOption,
									handleSearchInput: function handleSearchInput(e) {
										return _this2.searchArticlesByTextInput(e);
									},
									searchValue: this.state.searchValue,
									i18n: this.state.i18n,
									reactAppName: 'presscenter'
								}),
								_react2.default.createElement(
									_ResultList2.default,
									{
										showLanguageSwitch: 'true',
										selectedFilter: this.state.selectedFilters,
										switchText: this.state.switchText,
										contextLang: this.state.contextLang,
										contextLangUrl: this.state.contextLangUrl,
										switchLang: this.state.switchLang,
										switchLangUrl: this.state.switchLangUrl,
										itemsPerPage: itemsPerPage,
										results: this.state.results ? this.state.results : [],
										totalResults: this.state.totalResults,
										currentPage: this.state.currentPage,
										handleMoreResultsForShowing: function handleMoreResultsForShowing(e) {
											return _this2.handleMoreArticlesForShowing(e);
										},
										loadNextResults: function loadNextResults(e) {
											return _this2.loadNextNews(e);
										},
										showNextResults: this.state.showNextResults,
										isLoading: this.state.isLoading,
										i18n: this.state.i18n,
										year: this.state.year,
										searchValue: this.state.searchSubmit,
										reactAppName: 'presscenter'
									},
									this.state.results ? this.state.results.map(function (key, idx) {
										return _react2.default.createElement(_PressCenterListItem2.default, {
											key: idx,
											url: key.ContentUrl,
											date: key.Date,
											summary: key.Title,
											label: key.CategoryName
										});
									}) : ''
								)
							)
						)
					);
				}
			}]);
	
			return PressCenter;
		}(_react2.default.Component);
	
		exports.default = PressCenter;
	
	
		_reactDom2.default.render(_react2.default.createElement(PressCenter, null), document.getElementById('app-press-center'));
	
	/***/ },
	/* 621 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
	
		var _react = __webpack_require__(68);
	
		var _react2 = _interopRequireDefault(_react);
	
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
		var PressCenterListItem = _react2.default.createClass({
			displayName: "PressCenterListItem",
	
	
			breadcrumb: function breadcrumb() {
				var listElem = [];
	
				for (var i in this.props.breadCrumbs) {
					listElem.push(_react2.default.createElement(
						"li",
						{ key: i },
						_react2.default.createElement(
							"a",
							{ href: this.props.breadCrumbs[i].Url },
							this.props.breadCrumbs[i].Title
						)
					));
				}
				return _react2.default.createElement(
					"ol",
					{ className: "mod-press-center-list__levels" },
					listElem
				);
			},
	
			render: function render() {
				return _react2.default.createElement(
					"article",
					{ className: "mod mod-press-center-list" },
					_react2.default.createElement(
						"h4",
						{ className: "mod-press-center-list__overline" },
						_react2.default.createElement(
							"span",
							{ className: "label label--secondary" },
							this.props.label
						),
						" ",
						this.props.date
					),
					_react2.default.createElement(
						"h3",
						{ className: "mod-press-center-list__headline heading-h2" },
						_react2.default.createElement(
							"a",
							{ href: this.props.url },
							this.props.summary
						)
					),
					this.props.breadCrumbs && this.breadcrumb()
				);
			}
		});
	
		module.exports = PressCenterListItem;
	
	/***/ },
	/* 622 */
	/***/ function(module, exports) {
	
		'use strict';
	
		Object.defineProperty(exports, "__esModule", {
			value: true
		});
	
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
		var PressCenterRepository = function () {
			function PressCenterRepository() {
				_classCallCheck(this, PressCenterRepository);
			}
	
			_createClass(PressCenterRepository, [{
				key: 'getContent',
				value: function getContent(filterOptions) {
					/*note: this is for production using*/
					//return axios.post("https://sit.zurich.com/zwpapi/knowledgehubsearch/KnowledgeHub/Search/", filterOptions ? JSON.stringify({ Facets: filterOptions.Facets, PageNumber: filterOptions.PageNumber, SearchValue: filterOptions.SearchValue, SortBy: filterOptions.SortBy }) : undefined);
	
	
					//note: only for test using with jQuery
	
					return $.ajax({
						type: "POST",
						url: document.getElementById('app-press-center').dataset.urlSearch,
						data: filterOptions ? $.param(filterOptions) : undefined,
						dataType: 'json',
						cache: false,
						success: function success(data) {},
						error: function error(xhr, status, err) {}
					});
				}
			}]);
	
			return PressCenterRepository;
		}();
	
		exports.default = PressCenterRepository;
	
	/***/ },
	/* 623 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
	
		var $ = __webpack_require__(4);
	
	
		function ResultList() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.ResultList = module.exports = inherit(ResultList, BaseModule, {
	
			busEvents: {},
	
			domEvents: {},
	
			init: function () {
	
			}
	
		});
	
	/***/ },
	/* 624 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
	
		if(document.getElementById('app-site-search')) {
			var SiteSearch = __webpack_require__(625);
		}
	
	/***/ },
	/* 625 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		Object.defineProperty(exports, "__esModule", {
			value: true
		});
	
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
		__webpack_require__(266);
	
		var _react = __webpack_require__(68);
	
		var _react2 = _interopRequireDefault(_react);
	
		var _reactDom = __webpack_require__(99);
	
		var _reactDom2 = _interopRequireDefault(_reactDom);
	
		var _ResultList = __webpack_require__(591);
	
		var _ResultList2 = _interopRequireDefault(_ResultList);
	
		var _GlobalFilter = __webpack_require__(605);
	
		var _GlobalFilter2 = _interopRequireDefault(_GlobalFilter);
	
		var _SortSection = __webpack_require__(594);
	
		var _SortSection2 = _interopRequireDefault(_SortSection);
	
		var _ItemSwitch = __webpack_require__(626);
	
		var _ItemSwitch2 = _interopRequireDefault(_ItemSwitch);
	
		var _siteSearchRepository = __webpack_require__(629);
	
		var _siteSearchRepository2 = _interopRequireDefault(_siteSearchRepository);
	
		var _filterOptionsRepository = __webpack_require__(610);
	
		var _filterOptionsRepository2 = _interopRequireDefault(_filterOptionsRepository);
	
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
		function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
		var filterOptionsRepository = new _filterOptionsRepository2.default();
		var siteSearchRepository = new _siteSearchRepository2.default();
	
		var SiteSearch = function (_React$Component) {
			_inherits(SiteSearch, _React$Component);
	
			function SiteSearch() {
				_classCallCheck(this, SiteSearch);
	
				var _this = _possibleConstructorReturn(this, (SiteSearch.__proto__ || Object.getPrototypeOf(SiteSearch)).call(this));
	
				_this.state = {
					facets: [],
					results: [],
					sortBy: -1,
					categories: [],
					searchValue: '',
					searchSubmit: '',
					totalResults: 0,
					currentPage: 1,
					selectedFilters: [],
					refreshScrolling: true,
					showNextResults: false,
					isLoading: true,
					i18n: JSON.parse($("#i18n").html()),
					pageId: document.getElementById('app-site-search').dataset.pageid,
					absoluteUrl: document.getElementById('app-site-search').dataset.absoluteurl ? document.getElementById('app-site-search').dataset.absoluteurl : ""
				};
	
				_this.setInitialContentState();
				return _this;
			}
	
			_createClass(SiteSearch, [{
				key: 'setInitialContentState',
				value: function setInitialContentState() {
					var decodeUri = decodeURIComponent(this.getUrlParam('q'));
	
					var parameter = {
						"Facets": null,
						"PageNumber": 1,
						"SearchValue": decodeUri !== "undefined" ? decodeUri : "",
						"PageId": this.state.pageId
					};
	
					//use this to show agents
					/*const parameter = {
		   	"Facets":[{
		   		"Type":"contentType",
		   		"Value":"agenten"
		   	}],
		   	"PageNumber" : 1,
		   	"SearchValue" : "",
		   	"PageId": this.state.pageId
		   };*/
	
					siteSearchRepository.getContent(parameter).then(function (data) {
						this.setState({
							results: data.SiteSearchItem,
							categories: data.Categories,
							totalResults: data.TotalResults,
							//currentPage: data.CurrentPageIndex,
							searchValue: decodeUri !== "undefined" ? decodeUri : "",
							searchSubmit: decodeUri !== "undefined" ? decodeUri : "",
							refreshScrolling: true,
							showNextResults: false,
							isLoading: false
						});
						this.setUtag();
					}.bind(this)).fail(function () {
						this.setState({
							results: [],
							showNextResults: false,
							categories: [],
							totalResults: 0,
							isLoading: false
						});
					}.bind(this));
				}
			}, {
				key: 'getUrlParam',
				value: function getUrlParam(name) {
					var results = '';
	
					try {
						results = new RegExp(name + '=([^\^;\n\&\#]*)').exec(decodeURIComponent(window.location.href));
					} catch (ex) {
						results = null;
					}
	
					if (results !== 'undefined' && results !== null) {
						var result = results[1].replace(/\+/g, ' ');
						return result || false;
					}
				}
			}, {
				key: 'filterResult',
				value: function filterResult(categories, selectedFilters) {
					if (this.state.isLoading) {
						return;
					}
	
					var hasFilterSet = selectedFilters.length > 0;
					var facetsSearchList = [];
	
					var _iteratorNormalCompletion = true;
					var _didIteratorError = false;
					var _iteratorError = undefined;
	
					try {
						for (var _iterator = selectedFilters[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
							var filter = _step.value;
	
							facetsSearchList.push({ Type: filter.categoryType, Value: filter.title });
						}
					} catch (err) {
						_didIteratorError = true;
						_iteratorError = err;
					} finally {
						try {
							if (!_iteratorNormalCompletion && _iterator.return) {
								_iterator.return();
							}
						} finally {
							if (_didIteratorError) {
								throw _iteratorError;
							}
						}
					}
	
					if (!hasFilterSet) {
						this.handleClearFilter();
					} else {
						this.setState({
							isLoading: true,
							showNextResults: false
						});
	
						siteSearchRepository.getContent({
							"Facets": facetsSearchList,
							"PageNumber": 1,
							"SearchValue": this.state.searchValue,
							"PageId": this.state.pageId
						}).then(function (data) {
							this.setState({
								results: data.SiteSearchItem,
								categories: data.Categories,
								totalResults: data.TotalResults,
								currentPage: data.CurrentPageIndex + 1,
								facets: facetsSearchList,
								refreshScrolling: true,
								showNextResults: false,
								isLoading: false
							});
							this.setUtag(facetsSearchList);
						}.bind(this)).fail(function () {
							this.setState({
								results: [],
								showNextResults: false,
								categories: [],
								totalResults: 0,
								isLoading: false
							});
						}.bind(this));
					}
				}
			}, {
				key: 'filterOptionsChanged',
				value: function filterOptionsChanged(e) {
					var parameter = {
						"Facets": this.state.facets,
						"PageNumber": 1,
						"SearchValue": this.state.searchValue,
						"PageId": this.state.pageId
					};
	
					if (!this.state.isLoading) {
						siteSearchRepository.getContent(parameter).then(function (data) {
							this.setState({
								results: data.SiteSearchItem,
								categories: data.Categories,
								totalResults: data.TotalResults,
								currentPage: data.CurrentPageIndex + 1,
								showNextResults: false,
								isLoading: false
							});
							this.setUtag();
						}.bind(this));
	
						this.setState({ isLoading: true });
					}
				}
			}, {
				key: 'searchResultsByTextInput',
				value: function searchResultsByTextInput(searchValue) {
					var parameter = {
						"Facets": this.state.facets,
						"PageNumber": 1,
						"SearchValue": searchValue ? searchValue : "",
						"PageId": this.state.pageId
					};
	
					this.setState({ isLoading: true, showNextResults: false });
	
					siteSearchRepository.getContent(parameter).then(function (data) {
						this.setState({
							results: data.SiteSearchItem,
							categories: data.Categories,
							totalResults: data.TotalResults,
							currentPage: data.CurrentPageIndex + 1,
							searchValue: parameter.SearchValue,
							searchSubmit: parameter.SearchValue,
							refreshScrolling: true,
							showNextResults: false,
							isLoading: false
						});
						this.setUtag();
					}.bind(this)).fail(function () {
						this.setState({
							results: [],
							showNextResults: false,
							categories: [],
							totalResults: 0,
							isLoading: false
						});
					}.bind(this));
				}
			}, {
				key: 'handleClearFilter',
				value: function handleClearFilter() {
					this.setState({
						isLoading: true
					});
	
					var parameter = {
						"Facets": null,
						"PageNumber": 1,
						"SearchValue": this.state.searchValue,
						"PageId": this.state.pageId
					};
	
					siteSearchRepository.getContent(parameter).then(function (data) {
						this.setState({
							results: data.SiteSearchItem,
							categories: data.Categories,
							totalResults: data.TotalResults,
							currentPage: data.CurrentPageIndex + 1,
							facets: null,
							showNextResults: false,
							isLoading: false
						});
						this.setUtag();
					}.bind(this));
				}
			}, {
				key: 'handleTextChange',
				value: function handleTextChange(e) {
					this.setState({ searchValue: e.target.value });
				}
			}, {
				key: 'handleMoreResultsForShowing',
				value: function handleMoreResultsForShowing(e) {
					e.preventDefault();
					this.setState({ showNextResults: true });
				}
			}, {
				key: 'loadNextResults',
				value: function loadNextResults() {
					var nextPageNumber = this.state.currentPage + 1;
	
					siteSearchRepository.getContent({
						"Facets": this.state.facets,
						"PageNumber": nextPageNumber,
						"SearchValue": this.state.searchValue,
						"PageId": this.state.pageId
	
					}).then(function (data) {
						var _setState;
	
						var results = this.state.results;
						this.setState((_setState = {
							results: [].concat(_toConsumableArray(results), _toConsumableArray(data.SiteSearchItem)),
							totalResults: data.TotalResults,
							currentPage: nextPageNumber
						}, _defineProperty(_setState, 'currentPage', nextPageNumber), _defineProperty(_setState, 'showNextResults', true), _setState));
					}.bind(this));
				}
			}, {
				key: 'setUtag',
				value: function setUtag(facets) {
					if (typeof utag_data != "undefined") {
						var facetList = [];
						$(facets).each(function () {
							facetList.push(this.Value);
						});
						var filterType = facetList.join(',');
						if (filterType === '') filterType = 'general';
						utag_data.filter_result_numberReturned = this.state.totalResults.toString();
						utag_data.filter_filterInfo_term = this.state.searchValue;
						utag_data.filter_filterInfo_userInput = this.state.searchValue;
						if (this.state.totalResults > 0) {
							utag_data.filter_filterInfo_type = filterType;
						} else {
							delete utag_data.filter_filterInfo_type;
						}
					}
				}
			}, {
				key: 'render',
				value: function render() {
					var _this2 = this;
	
					return _react2.default.createElement(
						'div',
						{ className: 'row' },
						_react2.default.createElement(
							'div',
							{ className: 'col-sm-6 col-md-4' },
							_react2.default.createElement(
								'div',
								{ className: 'mod mod-navigation-drawer right', 'data-t-name': 'NavigationDrawer' },
								_react2.default.createElement(
									'div',
									{ className: 'mod-navigation-drawer__inlay' },
									_react2.default.createElement(
										'div',
										{ className: 'mod-navigation-drawer--sticky' },
										_react2.default.createElement(
											'a',
											{ href: '#', className: 'mod-navigation-drawer__close hidden-sm-up' },
											_react2.default.createElement('span', { className: 'icon icon--arrow-slider-left', 'aria-hidden': 'true' }),
											'Back'
										)
									),
									_react2.default.createElement(
										'div',
										{ className: 'mod-navigation-drawer--scroll-content' },
										_react2.default.createElement(_GlobalFilter2.default, { categories: this.state.categories ? this.state.categories : [],
											filterResult: this.filterResult.bind(this),
											handleClearFilter: this.handleClearFilter.bind(this),
											isLoading: this.state.isLoading,
											i18n: this.state.i18n,
											hasSearch: this.state.searchValue ? true : false,
											hasSorted: this.state.selectedSortOption ? true : false
										})
									)
								)
							)
						),
						_react2.default.createElement(
							'div',
							{ className: 'col-sm-6 col-md-8' },
							_react2.default.createElement(_SortSection2.default, {
								filterOptions: false,
								filterOptionsChanged: function filterOptionsChanged(e) {
									return _this2.filterOptionsChanged(e);
								},
								selectedValue: this.state.selectedSortOption,
								onTextInputChange: function onTextInputChange(e) {
									return _this2.handleTextChange(e);
								},
								handleSearchInput: function handleSearchInput(e) {
									return _this2.searchResultsByTextInput(e);
								},
								searchValue: this.state.searchValue,
								i18n: this.state.i18n
							}),
							_react2.default.createElement(
								_ResultList2.default,
								{
									itemsPerPage: '25',
									results: this.state.results ? this.state.results : [],
									totalResults: this.state.totalResults,
									currentPage: this.state.currentPage,
									handleMoreResultsForShowing: function handleMoreResultsForShowing(e) {
										return _this2.handleMoreResultsForShowing(e);
									},
									loadNextResults: function loadNextResults(e) {
										return _this2.loadNextResults(e);
									},
									showNextResults: this.state.showNextResults,
									isLoading: this.state.isLoading,
									i18n: this.state.i18n,
									selectedFilter: this.state.selectedFilters,
									searchValue: this.state.searchSubmit,
									reactAppName: 'sitesearch'
								},
								this.state.results ? this.state.results.map(function (key, idx) {
									return _react2.default.createElement(_ItemSwitch2.default, {
										key: idx,
										itemKey: idx,
										keys: key,
										articleProps: key.Article,
										eventProps: key.Event,
										newsProps: key.News,
										agentProps: key.Agent,
										absoluteUrl: this.state.absoluteUrl,
										breadCrumbs: key.BreadCrumbs,
										title: key.Title,
										url: key.Url,
										imageUrl: key.ImageUrl,
										contentType: key.ContentType,
										label: key.ContentLabel,
										i18n: this.state.i18n
									});
								}.bind(this)) : ''
							)
						)
					);
				}
			}]);
	
			return SiteSearch;
		}(_react2.default.Component);
	
		exports.default = SiteSearch;
	
	
		_reactDom2.default.render(_react2.default.createElement(SiteSearch, null), document.getElementById('app-site-search'));
	
	/***/ },
	/* 626 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var _react = __webpack_require__(68);
	
		var _react2 = _interopRequireDefault(_react);
	
		var _ArticleListItem = __webpack_require__(616);
	
		var _ArticleListItem2 = _interopRequireDefault(_ArticleListItem);
	
		var _PressCenterListItem = __webpack_require__(621);
	
		var _PressCenterListItem2 = _interopRequireDefault(_PressCenterListItem);
	
		var _CalendarListItem = __webpack_require__(593);
	
		var _CalendarListItem2 = _interopRequireDefault(_CalendarListItem);
	
		var _WebPageListItem = __webpack_require__(627);
	
		var _WebPageListItem2 = _interopRequireDefault(_WebPageListItem);
	
		var _AgentListItem = __webpack_require__(628);
	
		var _AgentListItem2 = _interopRequireDefault(_AgentListItem);
	
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
		var ItemSwitch = _react2.default.createClass({
			displayName: 'ItemSwitch',
	
	
			render: function render() {
				if (this.props.keys.Event) {
					return _react2.default.createElement(_CalendarListItem2.default, {
						key: this.props.itemKey,
						date: this.props.eventProps.Date,
						eventId: this.props.eventProps.ID,
						location: this.props.eventProps.Location,
						isDeparted: this.props.eventProps.EventDateCategory == "past" ? "past" : "",
						linkUrl: this.props.eventProps.Link,
						linkTarget: this.props.eventProps.LinkTarget,
						linkTitle: this.props.eventProps.LinkTitle,
						headline: this.props.eventProps.Title,
						summary: this.props.eventProps.Summary,
						typeName: this.props.eventProps.TypeName,
						linkText: this.props.i18n.AddThisEventToCalendar,
						addEvent: this.props.eventProps.DownloadEventCalendar
					});
				} else if (this.props.keys.News) {
					return _react2.default.createElement(_PressCenterListItem2.default, {
						key: this.props.itemKey,
						date: this.props.newsProps.Date,
						summary: this.props.newsProps.Title,
						label: this.props.contentType,
						breadCrumbs: this.props.breadCrumbs,
						url: this.props.newsProps.ContentUrl
					});
				} else if (this.props.keys.Article) {
					return _react2.default.createElement(_ArticleListItem2.default, {
						key: this.props.itemKey,
						articleDate: this.props.articleProps.ArticleDate,
						contentUrl: this.props.articleProps.ContentUrl,
						headline: this.props.articleProps.Headline,
						imageUrl: this.props.articleProps.ImageUrl,
						imageAltText: this.props.articleProps.ImageAltText,
						showTopStory: this.props.articleProps.ShowTopStory,
						summary: this.props.articleProps.Summary,
						typeTag: this.props.articleProps.TypeTag,
						absoluteUrl: this.props.absoluteUrl
					});
				} else if (this.props.keys.Agent) {
					return _react2.default.createElement(_AgentListItem2.default, {
						key: this.props.itemKey,
						title: this.props.agentProps.AgentName,
						agentName: this.props.agentProps.AgentFullName,
						agentPhone: this.props.agentProps.Telephone,
						agentPhoneLabel: this.props.agentProps.TelephoneLabel,
						agentFax: this.props.agentProps.Fax,
						agentFaxLabel: this.props.agentProps.FaxLabel,
						agentAddress: this.props.agentProps.AgentAddress,
						url: this.props.agentProps.NavigationUrl,
						imageUrl: this.props.agentProps.ImageUrl,
						absoluteUrl: this.props.absoluteUrl,
						isAgent: 'true'
					});
				} else {
					return _react2.default.createElement(_WebPageListItem2.default, {
						key: this.props.itemKey,
						breadCrumbs: this.props.breadCrumbs,
						title: this.props.title,
						url: this.props.url,
						imageUrl: this.props.imageUrl,
						absoluteUrl: this.props.absoluteUrl,
						label: this.props.label
					});
				}
			}
		});
	
		module.exports = ItemSwitch;
	
	/***/ },
	/* 627 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
	
		var _react = __webpack_require__(68);
	
		var _react2 = _interopRequireDefault(_react);
	
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
		var WebPageListItem = _react2.default.createClass({
			displayName: "WebPageListItem",
			image: function image() {
				return _react2.default.createElement(
					"div",
					{ className: "mod-site-search-list__media" },
					_react2.default.createElement(
						"a",
						{ className: "mod-site-search-list__link", href: this.props.url },
						_react2.default.createElement(
							"figure",
							null,
							_react2.default.createElement(
								"div",
								{ className: "flexembed flexembed--16by9" },
								_react2.default.createElement("img", { src: this.props.absoluteUrl + this.props.imageUrl, alt: this.props.title, className: "img-responsive" })
							)
						)
					)
				);
			},
			breadcrumb: function breadcrumb() {
				var listElem = [];
				for (var i in this.props.breadCrumbs) {
					listElem.push(_react2.default.createElement(
						"li",
						{ key: i },
						_react2.default.createElement(
							"a",
							{ href: this.props.breadCrumbs[i].Url },
							this.props.breadCrumbs[i].Title
						)
					));
				}
				return _react2.default.createElement(
					"ol",
					{ className: "mod-site-search-list__levels" },
					listElem
				);
			},
			label: function label() {
				return _react2.default.createElement(
					"h5",
					{ className: "mod-site-search-list__overline" },
					_react2.default.createElement(
						"span",
						{ className: "label label--secondary" },
						this.props.label
					)
				);
			},
			render: function render() {
	
				return _react2.default.createElement(
					"article",
					{ className: "mod mod-site-search-list", "data-t-name": "SiteSearch" },
					this.props.label && this.label(),
					_react2.default.createElement(
						"div",
						{ className: this.props.imageUrl ? 'mod-site-search-list__content--with-image' : 'mod-site-search-list__content' },
						this.props.imageUrl && this.image(),
						_react2.default.createElement(
							"div",
							{ className: "mod-site-search-list__text" },
							_react2.default.createElement(
								"h3",
								{ className: "heading-h2" },
								_react2.default.createElement(
									"a",
									{ href: this.props.url },
									this.props.title
								)
							),
							this.props.breadCrumbs && this.breadcrumb()
						)
					)
				);
			}
		});
	
		module.exports = WebPageListItem;
	
	/***/ },
	/* 628 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
	
		var _react = __webpack_require__(68);
	
		var _react2 = _interopRequireDefault(_react);
	
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
		var WebPageListItem = _react2.default.createClass({
			displayName: "WebPageListItem",
			image: function image() {
				return _react2.default.createElement(
					"div",
					{ className: "mod-site-search-list__agent__media" },
					_react2.default.createElement(
						"a",
						{ className: "mod-site-search-list__link", href: this.props.url },
						_react2.default.createElement(
							"figure",
							null,
							_react2.default.createElement(
								"div",
								{ className: "flexembed flexembed--16by9" },
								_react2.default.createElement("img", { src: this.props.absoluteUrl + this.props.imageUrl, alt: this.props.title, className: "img-responsive" })
							)
						)
					)
				);
			},
			breadcrumb: function breadcrumb() {
				var listElem = [];
				for (var i in this.props.breadCrumbs) {
					listElem.push(_react2.default.createElement(
						"li",
						{ key: i },
						_react2.default.createElement(
							"a",
							{ href: this.props.breadCrumbs[i].Url },
							this.props.breadCrumbs[i].Title
						)
					));
				}
				return _react2.default.createElement(
					"ol",
					{ className: "mod-site-search-list__agent__levels" },
					listElem
				);
			},
			agentList: function agentList() {
				return _react2.default.createElement(
					"div",
					{ className: "mod-site-search-list__agent__data" },
					_react2.default.createElement(
						"ul",
						{ className: "list-unstyled" },
						_react2.default.createElement(
							"li",
							null,
							this.props.agentName
						),
						_react2.default.createElement(
							"li",
							null,
							this.props.agentAddress.Street
						),
						_react2.default.createElement(
							"li",
							null,
							this.props.agentAddress.PostalCode,
							" ",
							this.props.agentAddress.City
						)
					),
					_react2.default.createElement(
						"ul",
						{ className: "list-unstyled" },
						_react2.default.createElement(
							"li",
							null,
							this.props.agentPhoneLabel,
							": ",
							this.props.agentPhone
						),
						_react2.default.createElement(
							"li",
							null,
							this.props.agentFaxLabel,
							": ",
							this.props.agentFax
						),
						_react2.default.createElement(
							"li",
							null,
							_react2.default.createElement(
								"a",
								{ href: this.props.url },
								_react2.default.createElement("span", { className: "icon icon--arrow", "aria-hidden": "true" }),
								" Webseite"
							)
						)
					)
				);
			},
			render: function render() {
				return _react2.default.createElement(
					"article",
					{ className: "mod mod-site-search-list__agent", "data-t-name": "SiteSearch" },
					this.props.imageUrl && this.image(),
					_react2.default.createElement(
						"div",
						{ className: "mod-site-search-list__agent__content" },
						_react2.default.createElement(
							"h3",
							{ className: "mod-site-search-list__agent__hl-agent" },
							_react2.default.createElement(
								"a",
								{ href: this.props.url },
								this.props.title
							)
						),
						this.props.breadCrumbs && this.breadcrumb(),
						this.props.isAgent && this.agentList()
					)
				);
			}
		});
	
		module.exports = WebPageListItem;
	
	/***/ },
	/* 629 */
	/***/ function(module, exports) {
	
		'use strict';
	
		Object.defineProperty(exports, "__esModule", {
			value: true
		});
	
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
		var SiteSearchRepository = function () {
			function SiteSearchRepository() {
				_classCallCheck(this, SiteSearchRepository);
			}
	
			_createClass(SiteSearchRepository, [{
				key: 'getContent',
				value: function getContent(filterOptions) {
					/*note: this is for production using*/
					//return axios.post("https://sit.zurich.com/zwpapi/knowledgehubsearch/KnowledgeHub/Search/", filterOptions ? JSON.stringify({ Facets: filterOptions.Facets, PageNumber: filterOptions.PageNumber, SearchValue: filterOptions.SearchValue, SortBy: filterOptions.SortBy }) : undefined);
	
	
					//note: only for test using with jQuery
	
					return $.ajax({
						type: "POST",
						url: document.getElementById('app-site-search').dataset.urlSearch,
						//url: "https://de-sit.zurich.com/zwpapi/SiteSearch/Search", //use this to show agents
						data: filterOptions ? $.param(filterOptions) : undefined,
						dataType: 'json',
						cache: false,
						success: function success(data) {},
						error: function error(xhr, status, err) {}
					});
				}
			}]);
	
			return SiteSearchRepository;
		}();
	
		exports.default = SiteSearchRepository;
	
	/***/ },
	/* 630 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
	
		var $ = __webpack_require__(4);
	
	
		function SortSection() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.SortSection = module.exports = inherit(SortSection, BaseModule, {
	
			busEvents: {},
	
			domEvents: {},
	
			init: function () {
	
			}
	
		});
	
	/***/ },
	/* 631 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
	
		var $ = __webpack_require__(4);
	
	
		function LinkedinComments() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.LinkedinComments = module.exports = inherit(LinkedinComments, BaseModule, {
	
			busEvents: {},
	
			domEvents: {
				'input .textfield__control' : 'countInputChars',
				'click .mod-linkedin-comments__login' : 'customLoginBtn',
				'click .mod-linkedin-comments__submit button' : 'formSubmit',
				'click .mod-linkedin-comments__user-delete' : 'deleteComment',
				'click .mod-linkedin-comments__prev' : 'prevPage',
				'click .mod-linkedin-comments__next' : 'nextPage',
				'click .mod-linkedin-comments__page-number' : 'goToPage'
			},
	
			totalResults : -1,
			commentsPageNumber : 1,
			loggedin : 'is-logged-in',
			userIsAuthorized : '',
			userLinkedinId : '',
	
			//template for user comment
			template : '.mod-linkedin-comments__template',
			userProfile: '.mod-linkedin-comments__user-image',
			userImage : '.mod-linkedin-comments__user-image img',
			userName : '.mod-linkedin-comments__user-name',
			userComment : '.mod-linkedin-comments__user-comment',
			userTimestamp: '.mod-linkedin-comments__user-timestamp',
	
	
			init: function () {
				this.api_key = this.$ctx.data('api_key');
	
				//appending areas msg & comments
				this.messageArea = this.find('.mod-linkedin-comments__message-area');
				this.commentsArea = this.find('.mod-linkedin-comments__comment-area');
				this.paginationArea = this.find('.mod-linkedin-comments__pagination');
	
				//hidden input identifier
				this.identifier = this.find("#identifier").val();
				this.comPerPage = this.find('#commentsPerPage').val();
				this.language = this.find('#language').val();
	
				//hidden input for linkedin share
				this.shareTitle = this.find('#shareTitle').val();
				this.serviceUrl = this.find('#serviceUrl').val();
				this.shareDescription = this.find('#shareDescription').val();
				this.shareImageUrl = this.find('#shareImageUrl').val();
	
				this.initLinkedinApi();
			},
	
			initLinkedinApi: function() {
				var that = this;
	
				$.getScript("//platform.linkedin.com/in.js?async=true", function() {
					IN.init({
						api_key: that.api_key,
						authorize: true,
						onLoad: that.linkedinIsLoaded()
						//scope:'rw_nus'
					});
				});
			},
	
			linkedinIsLoaded: function() {
				var that = this;
				IN.Event.on(IN, "auth", $.proxy(that.linkedinLogin, this));
				IN.Event.on(IN, "logout", $.proxy(that.linkedinLogout, this));
	
				this.requestComments(this.identifier); //load comments
			},
	
			customLoginBtn: function(event) {
				event.preventDefault();
				IN.User.authorize();
			},
	
			linkedinLogin: function() {
				var that = this;
				this.$ctx.addClass(this.loggedin);
				this.userIsAuthorized = IN.User.isAuthorized();
	
				IN.API.Raw("/people/~:(id,first-name,last-name,public-profile-url,picture-url)").result(function (result) {
					that.userLinkedinId = result.id;
					that.doLogoutArea(result);
					that.isUserComment(that.userLinkedinId); //check if there is any user comment
				});
			},
	
			linkedinLogout: function() {
				this.$ctx.removeClass(this.loggedin);
				this.userIsAuthorized = IN.User.isAuthorized();
				this.messageArea.html("");
				this.find('.mod-linkedin-comments__user-delete').remove();
			},
	
			formSubmit: function() {
				var that = this;
				var shareComment = this.find('.mod-linkedin-comments__add-comment .textfield__control').val();
	
				if(this.userIsAuthorized && shareComment) {
					IN.API.Raw("/people/~:(id,first-name,last-name,public-profile-url,picture-url)").result(function (result) {
						that.saveComment(that.identifier, result.id, shareComment, result.firstName, result.lastName, result.pictureUrl, result.publicProfileUrl);
					});
				}
			},
	
			formClear: function() {
				this.find('.mod-linkedin-comments__add-comment .textfield__control').val('');
				this.find('.mod-linkedin-comments__submit .checkbox__control').prop('checked', false);
				this.find('.mod-linkedin-comments__char-count').text('0');
			},
	
			//get comments
			requestComments: function(identifier) {
				var that = this;
	
				$.ajax({
					type: "POST",
					url: this.serviceUrl + "/GetCommentList",
					data: '{"pageID":"'+ encodeURIComponent(identifier) +'","pageNumber":"' + encodeURIComponent(that.commentsPageNumber) + '","perPage":"' + encodeURIComponent(that.comPerPage) + '","language":"' + encodeURIComponent(that.language) +'"}',
					contentType: "application/json; charset=utf-8",
					dataType: "json",
					statusCode: {
						401: function () { console.log("Timed out"); }
					},
					success: function (data) {
						that.totalResults = data.d.totalResults;
						that.showComments(data.d.comments);
						that.isUserComment(that.userLinkedinId);
					},
					error: function (jqXHR, exception) {
						console.log("errorThrown: " + jqXHR.status);
					}
				});
			},
	
			//save comments
			saveComment: function(id, inUserKey, comment, firstName, lastName, pictureUrl, profileUrl) {
				if(this.userIsAuthorized) {
					var that = this;
					var shareChecked = this.find('.mod-linkedin-comments__submit .checkbox__control').is(':checked');
	
					$.ajax({
						type        : "POST",
						url         : this.serviceUrl + "/AtomicAddComment",
						data        : '{"pageID":"' + encodeURIComponent(id) + '","comment":"' + encodeURIComponent(comment) + '","key":"' + encodeURIComponent(inUserKey) + '","firstName":"' + encodeURIComponent(firstName) + '","lastName":"' + encodeURIComponent(lastName) + '","profileUrl":"' + encodeURIComponent(profileUrl) + '","pictureUrl":"' + encodeURIComponent(pictureUrl) + '"}',
						contentType : "application/json; charset=utf-8",
						dataType    : "json",
						statusCode: {
							401: function () {console.log("Timed out")}
						},
						success: function (data) {
							if (data.d != 0) {
								that.success(false);
								that.formClear();
	
								if(shareChecked) {
									that.shareOnLinkedin(comment);
								}
							} else {
								that.error(false);
							}
						},
						error: function (jqXHR, exception) {
							console.log("errorThrown: " + jqXHR.status);
						}
					});
				}
			},
	
			// loop through requested comment list
			showComments: function(comments) {
				var that = this;
				comments = comments || false;
	
				if (this.commentsArea) {
					this.commentsArea.html('');
				}
	
				$.each(comments, function(index, value) {
					var temp = that.find(that.template).children().clone();
					that.commentsArea.append(temp);
					that.createComment(index, value);
				});
	
				this.createPagination();
			},
	
			createPagination: function() {
				var page = this.find('.mod-linkedin-comments__pages');
				var prev = this.find('.mod-linkedin-comments__prev');
				var next = this.find('.mod-linkedin-comments__next');
	
				if (this.totalResults > this.comPerPage) {
					this.paginationArea.show();
					page.html("");
	
					var pages = ~~(this.totalResults / this.comPerPage);
					if (this.totalResults % this.comPerPage > 0) { pages++; }
					if (this.commentsPageNumber <= 1) {
						prev.hide();
						next.show();
					}
					else if (this.commentsPageNumber >= pages) {
						prev.show();
						next.hide();
					}
					else {
						prev.show();
						next.show();
					}
	
					var start = (this.commentsPageNumber - 2) > 0 ? (this.commentsPageNumber - 2) : 1;
					var limit = (start + 4) > pages ? pages : (start + 4);
					if (limit > 4 && limit - start < 4) { start = limit - 4; }
					for (var i = start; i <= limit; i++) {
	
						if(this.commentsPageNumber == i) {
							page.append('<a class="mod-linkedin-comments__page-number is-active" href="#" data-goto-page="' + i + '"> ' + i + ' </a>');
						} else {
							page.append('<a class="mod-linkedin-comments__page-number" href="#" data-goto-page="' + i + '"> ' + i + ' </a>');
						}
					}
	
	
				}
			},
	
			prevPage: function(event) {
				event.preventDefault();
				this.commentsPageNumber--;
				this.requestComments(this.identifier);
			},
			nextPage: function(event) {
				event.preventDefault();
				this.commentsPageNumber++;
				this.requestComments(this.identifier);
			},
			goToPage: function(event) {
				event.preventDefault();
				this.commentsPageNumber = parseInt($(event.currentTarget).attr('data-goto-page'));
				this.requestComments(this.identifier);
			},
	
			//create each comment with template
			createComment: function(index, value) {
				var currElem = this.commentsArea.children().last();
	
					currElem.data('id', value.ID);
					currElem.attr('id', 'comment'+index);
					currElem.data('userKey', value.UserKey);
					currElem.find(this.userProfile).attr('href', decodeURIComponent(value.ProfileUrl));
					currElem.find(this.userImage).attr('src', decodeURIComponent(value.PictureUrl));
					currElem.find(this.userName).html(value.FirstName + ' ' + value.LastName);
					currElem.find(this.userComment).html(value.TextComment);
					currElem.find(this.userTimestamp).html(value.DateToString);
			},
	
			//delete comments
			deleteComment: function(event) {
				var that = this;
				var elemId = $(event.currentTarget).parent().data('id');
				var userId = $(event.currentTarget).parent().data('userKey');
	
				if(this.userIsAuthorized) {
					$.ajax({
						type        : "POST",
						url         : this.serviceUrl + "/DeleteComment",
						data        : '{"id":"'+ encodeURIComponent(elemId) +'","userKey":"'+ encodeURIComponent(userId) +'","pageID":"'+ that.identifier +'"}',
						contentType : "application/json; charset=utf-8",
						dataType    : "json",
						statusCode  : {
							401: function () {console.log("Timed out");}
						},
						success: function (data) {
							that.commentsPageNumber = 1;
							that.requestComments(that.identifier); //load comments new
						},
						error: function (jqXHR, exception) {
							console.log("errorThrown: " + jqXHR.status);
						}
					});
				}
			},
	
			//find comments from user and prepend delete button
			isUserComment: function(userKey) {
				var elem = this.commentsArea.children();
				$.each(elem, function(index, value) {
					if($(value).data('userKey') == userKey) {
						$(value).append('<button class="mod-linkedin-comments__user-delete"><span aria-hidden="true" class="icon icon--close"></span></button>');
					}
				});
			},
	
			doLogoutArea: function(userProfile) {
				this.find('.mod-linkedin-comments__user-image-linkedin').attr('src', userProfile.pictureUrl);
				this.find('.mod-linkedin-comments__user-profile').attr('href', userProfile.publicProfileUrl);
				this.find('.mod-linkedin-comments__firstname').html(userProfile.firstName);
				this.find('.mod-linkedin-comments__lastname').html(userProfile.lastName);
			},
	
			shareOnLinkedin: function(comment) {
				var that = this;
				var url = window.location.href;
				//var url = 'www.test.de'; //only for developing not to share localhost urls
	
				var shareJSON = {
					"comment" : comment,
					"content" : {
						"title" : this.shareTitle,
						"description" : this.shareDescription,
						"submitted-image-url": this.shareImageUrl,
						"submitted-url": url
					},
					"visibility" : {"code" : "anyone"}
				};
	
				IN.API.Raw("/people/~/shares?format=json")
					.method("POST")
					.body(JSON.stringify(shareJSON))
					.result(function(result) {that.success(true)})
					.error(function error(e) {that.error(true)});
			},
	
			//count textarea and show chars
			countInputChars: function(event) {
				var inputLength = $(event.currentTarget).val().length;
				var maxLength = parseInt(this.find('.mod-linkedin-comments__char-max').text());
	
				if(inputLength > 0 && inputLength <= maxLength) {
					this.find('.mod-linkedin-comments__char-count').text(inputLength);
				} else {
					this.find('.mod-linkedin-comments__char-count').text('0');
				}
			},
	
			//success & error messages
			success: function(linkedin) {
				var message = this.$ctx.data('successMessage');
				if(linkedin) {message = 'Comment posted succesfully on LinkedIn'}
				this.messageArea.empty().append('<p class="mod-linkedin-comments__success">'+message+'</p>');
			},
	
			error: function(linkedin) {
				var message = this.$ctx.data('errorMessage');
				if(linkedin) {message = 'The comment couldn\'t be posted on LinkedIn'}
				this.messageArea.empty().append('<p class="mod-linkedin-comments__error">'+message+'</p>');
			}
		});
	
	/***/ },
	/* 632 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
	
		var $ = __webpack_require__(4);
	
	
		function Menu() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.Menu = module.exports = inherit(Menu, BaseModule, {
	
			busEvents: {
				'closeMenu' : 'closeMenu'
			},
	
			domEvents: {
				'click .mod-menu__close' : 'closeMenu',
				'click .mod-menu__trigger' : 'toggleMenu'
			},
	
			init: function () {
				this.$trigger = this.find('.mod-menu__trigger');
				this.$menu = this.find('.mod-menu__menu');
	
				this.initMenu();
	
				this.$ctx.on('click', this.onModuleClick.bind(this));
			},
	
			onBodyClick : function() {
				this._events.emit('closeMenu');
			},
	
			onModuleClick : function(event) {
				event.stopPropagation();
			},
	
			initMenu: function () {
	
				this.$menu.hide();
	
				this.options = {
					my: 'left top+5',
					at: 'left bottom',
					collision: 'flip flip'
				};
	
				if(this.$menu.attr('class').indexOf('--bottom-left') > -1) {
					this.options.my = 'left top+5';
					this.options.at = 'left bottom';
				}
	
				if(this.$menu.attr('class').indexOf('--bottom-right') > -1) {
					this.options.my = 'right top+5';
					this.options.at = 'right bottom';
				}
	
				if(this.$menu.attr('class').indexOf('--top-left') > -1) {
					this.options.my = 'left bottom-5';
					this.options.at = 'left top';
				}
	
				if(this.$menu.attr('class').indexOf('--top-right') > -1) {
					this.options.my = 'right bottom-5';
					this.options.at = 'right top';
				}
	
			},
	
			toggleMenu: function (event) {
	
				if(event) {
					event.preventDefault();
				}
	
				if(this.$menu.is('.is-open')) {
					this.closeMenu();
				} else {
					this._events.emit('closeMenu');
					this.openMenu();
				}
			},
	
			openMenu: function () {
				this.$menu.show();
				this.setPosition();
				$(window).off('click.menu').on('click.menu', this.onBodyClick.bind(this));
			},
	
			closeMenu: function () {
				this.resetPosition();
				this.$menu.removeClass('is-open').hide();
			},
	
			setPosition: function () {
	
				this.$menu.position({
					my: this.options.my,
					at: this.options.at,
					of: this.$trigger,
					collision: this.options.collision,
					using: function( coords, feedback ) {
	
						$(this)
							.css({
								left: coords.left + 'px',
								top: coords.top + 'px'
							})
							.addClass( 'is-' + feedback.vertical )
							.addClass( 'is-' + feedback.horizontal )
							.addClass('is-open')
						;
					}
				});
	
			},
	
			resetPosition: function () {
	
				this.$menu.removeClass( function( index, css ) {
					return( css.match( /\bis-\w+/g ) || [] ).join( ' ' );
				});
	
			}
	
		});
	
	/***/ },
	/* 633 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
		var commons = __webpack_require__(23);
	
		var $ = __webpack_require__(4);
	
	
		function Modal() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.Modal = module.exports = inherit(Modal, BaseModule, {
	
			busEvents: {
				'showModal': 'showModal'
			},
	
			domEvents: {},
	
			init: function () {
				this.$body = $('body');
				this.classOpened = 'modal-open';
				this.classMeasure = 'modal-scrollbar-measure';
				this.modalClassOpened = 'is-open';
				this.modalClassClosed = 'is-closed';
				this.$dialog = this.find('.mod-modal__dialog');
				this.$triggerClose = this.find('.js-modal-close');
				this.animationLength = commons.getAnimationDuration(this.$dialog);
				this.isConditional = this.$ctx.data('conditional');
	
				// initially open
				if(this.$ctx.is('.' + this.modalClassOpened)) {
					this.openModal();
				}
	
				// close dialog on overlay click
				if(!this.isConditional) {
					this.$dialog.on('click', this.onDialogClick.bind(this));
					this.$ctx.on('click', this.closeModal.bind(this));
				}
	
				// esc key closes dialog
				$('document').on('keydown', function(event) {
					var keyCode = event.keyCode || event.which;
					if(keyCode === 27) {
						this.closeModal();
					}
				}.bind(this));
	
				this.$triggerClose.on('click', this.closeModal.bind(this));
			},
	
			onDialogClick: function(event) {
				event.stopPropagation();
			},
	
			showModal: function (data) {
				if(data.target === this.$ctx.attr('id')) {
					this.openModal();
				}
			},
	
			openModal: function () {
				this.originalBodyPadding = document.body.style.paddingRight || '';
				this.setScrollbar();
				this.$body.addClass(this.classOpened);
				this.$ctx.addClass(this.modalClassOpened).removeClass(this.modalClassClosed);
			},
	
			closeModal: function () {
				this.$ctx.addClass(this.modalClassClosed).removeClass(this.modalClassOpened);
	
				setTimeout(function() {
					this.$body.removeClass(this.classOpened);
					this.resetScrollbar();
				}.bind(this), this.animationLength);
			},
	
			setScrollbar: function () {
				var scrollbarWidth = this.getScrollbarWidth();
				document.body.style.paddingRight = (this.originalBodyPadding + scrollbarWidth + 'px');
			},
	
			resetScrollbar: function () {
				document.body.style.paddingRight = this.originalBodyPadding;
			},
	
			getScrollbarWidth: function () { // thx d.walsh
				// Create the measurement node
				var scrollDiv = document.createElement("div");
				scrollDiv.className = this.classMeasure;
				document.body.appendChild(scrollDiv);
	
				var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;
				document.body.removeChild(scrollDiv);
	
				return scrollbarWidth;
			}
	
		});
	
	/***/ },
	/* 634 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
	
		var $ = __webpack_require__(4);
	
	
		function NotificationTeaser() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.NotificationTeaser = module.exports = inherit(NotificationTeaser, BaseModule, {
	
			busEvents: {},
	
			domEvents: {
				'click .mod-notification-teaser__head button' : 'removeTeaser'
			},
	
			init: function () {
				if(this.$ctx.is('.js-auto-hide')) {
					setTimeout($.proxy(this.removeTeaser, this), 60000);
				}
			},
	
			removeTeaser: function() {
				this.$ctx.remove();
			}
	
		});
	
	/***/ },
	/* 635 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
		var commons = __webpack_require__(23);
	
		var $ = __webpack_require__(4);
	
	
		function Snackbar() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.Snackbar = module.exports = inherit(Snackbar, BaseModule, {
	
			busEvents: {
				'showSnackbar' : 'showSnackbar'
			},
	
			domEvents: {},
	
			init: function () {
				this.classActive = 'is-active';
				this.classInactive = 'is-inactive';
				this.$textElement = this.find('.mod-snackbar__text');
				this.$actionElement = this.find('.mod-snackbar__action').hide();
				this.queuedNotifications = [];
				this.animationLength = commons.getAnimationDuration(this.$ctx);
	
				this.resetData();
			},
	
			showSnackbar: function (data) {
	
				if (data === undefined) {
					throw new Error('Please provide a data object with at least a message to display.');
				}
				if (data.message === undefined) {
					throw new Error('Please provide a message to be displayed.');
				}
				if (data.actionHandler && !data.actionText) {
					throw new Error('Please provide action text with the handler.');
				}
	
				if (this.active) {
					this.queuedNotifications.push(data);
				} else {
					this.active = true;
					this.message = data.message;
					if (data.actionHandler) {
						this.actionHandler = data.actionHandler;
					}
					if (data.actionText) {
						this.actionText = data.actionText;
					}
					if (data.actionClass) {
						this.actionClass = data.actionClass;
					}
					if (data.timeout) {
						this.timeout = data.timeout;
					}
	
					this.displaySnackbar();
				}
	
			},
	
			displaySnackbar: function () {
	
				if (this.actionHandler) {
					this.$actionElement.text(this.actionText);
					this.$actionElement.addClass(this.actionClass);
					this.$actionElement.on('click', this.actionHandler);
					this.$actionElement.show();
				}
	
				this.$textElement.text(this.message);
				this.$ctx.removeClass(this.classInactive).addClass(this.classActive);
	
				setTimeout(this.cleanUpSnackbar.bind(this), this.timeout);
			},
	
			cleanUpSnackbar: function () {
				this.$ctx.removeClass(this.classActive).addClass(this.classInactive);
	
				setTimeout(function() {
					this.$textElement.text('');
					this.$actionElement
						.unbind('click', this.actionHandler)
						.removeClass(this.actionClass)
						.text('')
						.hide()
					;
	
					this.resetData();
					this.checkQueue();
	
				}.bind(this), this.animationLength);
			},
	
			checkQueue: function () {
				if (this.queuedNotifications.length > 0) {
					this.showSnackbar(this.queuedNotifications.shift());
				}
			},
	
			resetData: function () {
				this.active = false;
				this.message = undefined;
				this.actionHandler = undefined;
				this.actionText = undefined;
				this.timeout = 3000;
			}
	
		});
	
	/***/ },
	/* 636 */
	/***/ function(module, exports, __webpack_require__) {
	
		 'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
		var breakpointHelper = __webpack_require__(22);
		var commons = __webpack_require__(23);
	
		var $ = __webpack_require__(4);
	
	
		function StickyTab() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.StickyTab = module.exports = inherit(StickyTab, BaseModule, {
	
			busEvents: {
				'windowScroll' : 'onWindowScroll',
				'breakpointChange': 'onBreakpointChange',
				'windowResize' : 'onWindowResize',
				'newSearch' : 'onNewSearch'
			},
	
			domEvents: {
				'click .mod-sticky-tab__trigger' : ['slideToggle', 'toggleContent']
			},
	
			//tab&acc
			activeClass: 'is-open',
			triggerElem: '.mod-sticky-tab__trigger',
			isAccordion: false,
	
			//sticky
			moduleWrapper : '<div class="js-sticky-wrapper"></div>',
			stickyClass: 'mod-sticky-tab--is-sticky',
			openClass: 'mod-sticky-tab--is-open',
			htmlClass: 'has-open-sticky-tab',
			vpOffset: 50,
			isSticky: false,
			isOpen: false,
	
			init: function () {
				this.tabsBody = this.find('.mod-sticky-tab__body');
				this.tabsItem = this.find('.mod-sticky-tab__trigger');
				this.tabsContent = this.find('.mod-sticky-tab__content');
				this.$ctx.wrapInner(this.moduleWrapper);
	
				this.loadTabs();
				this.$ctx.on('click', this.onModuleClick.bind(this));
			},
	
			onBodyClick : function() {
				this.slideDownSticky();
			},
	
			onModuleClick : function(event) {
				event.stopPropagation();
			},
	
			calcHeights: function() {
				if (!breakpointHelper.isBreakpoint(mrm.config.breakpoints.XS)) {
					var contentHeight = this.$ctx.find('.mod-sticky-tab__inlay').height();
					this.$ctx.removeAttr('style').css('height' , contentHeight);
				} else {
					this.$ctx.removeAttr('style');
				}
			},
	
			findSlider: function() {
				var slider = this.$ctx.find('.mod-content-slider');
				slider.length > 0 && this._events.emit('reInitSlider');
			},
	
			/* start tab functions */
			loadTabs: function() {
				this.tabsContent.hide();
				this.tabsItem.first().addClass(this.activeClass);
				this.tabsContent.first().show();
			},
	
			openTab: function(hash) {
				this.find('a[href="'+hash+'"]').addClass(this.activeClass);
				this.isAccordion ? $(hash).slideDown() : $(hash).show();
	
				this.findSlider();
			},
	
			closeTab: function() {
				this.find(this.triggerElem).removeClass(this.activeClass);
				this.isAccordion ? this.tabsContent.slideUp() : this.tabsContent.hide();
			},
	
			toggleContent: function(event) {
				event.preventDefault();
	
				var curHash = event.currentTarget.hash;
				var curTarget = $(event.currentTarget);
	
				if(!curTarget.hasClass(this.activeClass)) {
					this.closeTab();
					this.openTab(curHash);
					this.calcHeights(); //set content height from active tab
				}
			},
	
			tabToAcc: function() {
				this.find(this.triggerElem).each(function() {
					var triggerElm = $(this).clone(true, true);
					var contentElm = $($(this).attr('href'));
	
					triggerElm.insertBefore(contentElm);
				});
			},
	
			accToTab: function() {
				var hash = this.find('.is-open').attr('href');
				if(typeof hash !== "undefined") {
					this.openTab(hash);
				}
				this.tabsBody.find(this.triggerElem).remove();
			},
	
			/* start sticky functions */
			toggleSticky: function() {
				if(!commons.isInViewport(this._ctx, this.vpOffset)) {
					this.doSticky();
				} else {
					this.undoSticky();
				}
			},
	
			doSticky: function() {
				this.isSticky = true;
				this.$ctx.addClass(this.stickyClass);
			},
	
			undoSticky: function() {
				this.isSticky = false;
				this.$ctx.removeClass(this.stickyClass);
			},
	
			slideToggle: function(event) {
				if(!commons.isInViewport(this._ctx, this.vpOffset) && !this.isOpen) {
					if (!breakpointHelper.isBreakpoint(mrm.config.breakpoints.XS)) {
						this.slideUpSticky();
					} else {
						this.slideToContent(event.currentTarget.hash);
					}
				} else if($(event.currentTarget).hasClass(this.activeClass) && this.isOpen) {
					this.slideDownSticky();
				}
			},
	
			slideToContent: function(target) {
				$('body,html').animate({'scrollTop': $(target).offset().top}, 2000);
				return false;
			},
	
			slideUpSticky: function() {
				this.isOpen = true;
				this.$ctx.addClass(this.openClass);
				$('html').addClass(this.htmlClass);
				$(window).off('click.stickyTab').on('click.stickyTab', this.onBodyClick.bind(this)); //body click & close
			},
	
			slideDownSticky: function() {
				this.isOpen = false;
				this.$ctx.removeClass(this.openClass);
				$('html').removeClass(this.htmlClass);
			},
	
			scrollToSticky: function () {
				var top = this.$ctx.offset().top;
				this.$ctx.scrollTop($(document).height());
			},
	
			//start events
			onBreakpointChange: function(breakpointData) {
				this.toggleSticky();
	
				if(breakpointData.isXs) {
					this.isAccordion = true;
					this.slideDownSticky();
					this.tabToAcc();
				} else {
					this.isAccordion = false;
					this.accToTab();
				}
			},
	
			onWindowResize: function() {
				this.calcHeights();
			},
	
			onWindowScroll: function() {
				this.toggleSticky();
			},
	
			onNewSearch: function() {
				this.calcHeights();
				this.scrollToSticky();
			}
		});
	
	/***/ },
	/* 637 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
	
		var $ = __webpack_require__(4);
		var Dropzone = __webpack_require__(1);
	
		function Upload() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.Upload = module.exports = inherit(Upload, BaseModule, {
	
			busEvents: {},
	
			domEvents: {},
	
			init: function () {
				var preview = this.find('.mod-upload__preview');
				var dropArea = this.find('.mod-upload__area');
	
				var template = preview.html();
				preview.empty();
	
				Dropzone.autoDiscover = false;
	
				dropArea.dropzone({
					url: this.$ctx.data('url'),
					parallelUploads: 20,
					autoQueue: false, // Make sure the files aren't queued until manually added
					previewTemplate: template,
					previewsContainer: '.mod-upload__preview',
					createImageThumbnails: false
				});
			}
		});
	
	/***/ },
	/* 638 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
		var $ = __webpack_require__(4);
	
		function Breadcrumb() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.Breadcrumb = inherit(Breadcrumb, BaseModule, {
	
			init: function () {
	
			},
	
			busEvents: {
	
			},
	
			domEvents: {
	
			}
		});
	
	/***/ },
	/* 639 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
	
		var $ = __webpack_require__(4);
		__webpack_require__(640);
	
		function ContentSlider() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.ContentSlider = module.exports = inherit(ContentSlider, BaseModule, {
	
			busEvents: {
				'reInitSlider' : 'reInitSlider'
			},
	
			domEvents: {},
	
			init: function () {
				this.items = this.find('.mod-content-slider__item');
				this.slider = this.find('.mod-content-slider__inlay');
	
				this.checkOddItems();
				this.initSlider();
			},
	
			checkOddItems: function() {
				if(this.items.length % 2 == 1) {
					this.items.first().addClass('is-first-slide');
					this.items.last().addClass('is-last-slide');
				}
			},
	
			initSlider: function() {
				this.slider.slick({
					dots: true,
					speed: 1200,
					cssEase: 'ease-in',
					slidesToShow: 2,
					slidesToScroll: 2
				});
			},
	
			reInitSlider: function() {
				this.slider.slick('unslick');
				this.initSlider();
			}
	
		});
	
	/***/ },
	/* 640 */
	/***/ function(module, exports, __webpack_require__) {
	
		module.exports = __webpack_require__(641);
	
	/***/ },
	/* 641 */
	/***/ function(module, exports, __webpack_require__) {
	
		var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*
		     _ _      _       _
		 ___| (_) ___| | __  (_)___
		/ __| | |/ __| |/ /  | / __|
		\__ \ | | (__|   < _ | \__ \
		|___/_|_|\___|_|\_(_)/ |___/
		                   |__/
	
		 Version: 1.7.1
		  Author: Ken Wheeler
		 Website: http://kenwheeler.github.io
		    Docs: http://kenwheeler.github.io/slick
		    Repo: http://github.com/kenwheeler/slick
		  Issues: http://github.com/kenwheeler/slick/issues
	
		 */
		/* global window, document, define, jQuery, setInterval, clearInterval */
		;(function(factory) {
		    'use strict';
		    if (true) {
		        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		    } else if (typeof exports !== 'undefined') {
		        module.exports = factory(require('jquery'));
		    } else {
		        factory(jQuery);
		    }
	
		}(function($) {
		    'use strict';
		    var Slick = window.Slick || {};
	
		    Slick = (function() {
	
		        var instanceUid = 0;
	
		        function Slick(element, settings) {
	
		            var _ = this, dataSettings;
	
		            _.defaults = {
		                accessibility: true,
		                adaptiveHeight: false,
		                appendArrows: $(element),
		                appendDots: $(element),
		                arrows: true,
		                asNavFor: null,
		                prevArrow: '<button class="slick-prev" aria-label="Previous" type="button">Previous</button>',
		                nextArrow: '<button class="slick-next" aria-label="Next" type="button">Next</button>',
		                autoplay: false,
		                autoplaySpeed: 3000,
		                centerMode: false,
		                centerPadding: '50px',
		                cssEase: 'ease',
		                customPaging: function(slider, i) {
		                    return $('<button type="button" />').text(i + 1);
		                },
		                dots: false,
		                dotsClass: 'slick-dots',
		                draggable: true,
		                easing: 'linear',
		                edgeFriction: 0.35,
		                fade: false,
		                focusOnSelect: false,
		                focusOnChange: false,
		                infinite: true,
		                initialSlide: 0,
		                lazyLoad: 'ondemand',
		                mobileFirst: false,
		                pauseOnHover: true,
		                pauseOnFocus: true,
		                pauseOnDotsHover: false,
		                respondTo: 'window',
		                responsive: null,
		                rows: 1,
		                rtl: false,
		                slide: '',
		                slidesPerRow: 1,
		                slidesToShow: 1,
		                slidesToScroll: 1,
		                speed: 500,
		                swipe: true,
		                swipeToSlide: false,
		                touchMove: true,
		                touchThreshold: 5,
		                useCSS: true,
		                useTransform: true,
		                variableWidth: false,
		                vertical: false,
		                verticalSwiping: false,
		                waitForAnimate: true,
		                zIndex: 1000
		            };
	
		            _.initials = {
		                animating: false,
		                dragging: false,
		                autoPlayTimer: null,
		                currentDirection: 0,
		                currentLeft: null,
		                currentSlide: 0,
		                direction: 1,
		                $dots: null,
		                listWidth: null,
		                listHeight: null,
		                loadIndex: 0,
		                $nextArrow: null,
		                $prevArrow: null,
		                scrolling: false,
		                slideCount: null,
		                slideWidth: null,
		                $slideTrack: null,
		                $slides: null,
		                sliding: false,
		                slideOffset: 0,
		                swipeLeft: null,
		                swiping: false,
		                $list: null,
		                touchObject: {},
		                transformsEnabled: false,
		                unslicked: false
		            };
	
		            $.extend(_, _.initials);
	
		            _.activeBreakpoint = null;
		            _.animType = null;
		            _.animProp = null;
		            _.breakpoints = [];
		            _.breakpointSettings = [];
		            _.cssTransitions = false;
		            _.focussed = false;
		            _.interrupted = false;
		            _.hidden = 'hidden';
		            _.paused = true;
		            _.positionProp = null;
		            _.respondTo = null;
		            _.rowCount = 1;
		            _.shouldClick = true;
		            _.$slider = $(element);
		            _.$slidesCache = null;
		            _.transformType = null;
		            _.transitionType = null;
		            _.visibilityChange = 'visibilitychange';
		            _.windowWidth = 0;
		            _.windowTimer = null;
	
		            dataSettings = $(element).data('slick') || {};
	
		            _.options = $.extend({}, _.defaults, settings, dataSettings);
	
		            _.currentSlide = _.options.initialSlide;
	
		            _.originalSettings = _.options;
	
		            if (typeof document.mozHidden !== 'undefined') {
		                _.hidden = 'mozHidden';
		                _.visibilityChange = 'mozvisibilitychange';
		            } else if (typeof document.webkitHidden !== 'undefined') {
		                _.hidden = 'webkitHidden';
		                _.visibilityChange = 'webkitvisibilitychange';
		            }
	
		            _.autoPlay = $.proxy(_.autoPlay, _);
		            _.autoPlayClear = $.proxy(_.autoPlayClear, _);
		            _.autoPlayIterator = $.proxy(_.autoPlayIterator, _);
		            _.changeSlide = $.proxy(_.changeSlide, _);
		            _.clickHandler = $.proxy(_.clickHandler, _);
		            _.selectHandler = $.proxy(_.selectHandler, _);
		            _.setPosition = $.proxy(_.setPosition, _);
		            _.swipeHandler = $.proxy(_.swipeHandler, _);
		            _.dragHandler = $.proxy(_.dragHandler, _);
		            _.keyHandler = $.proxy(_.keyHandler, _);
	
		            _.instanceUid = instanceUid++;
	
		            // A simple way to check for HTML strings
		            // Strict HTML recognition (must start with <)
		            // Extracted from jQuery v1.11 source
		            _.htmlExpr = /^(?:\s*(<[\w\W]+>)[^>]*)$/;
	
	
		            _.registerBreakpoints();
		            _.init(true);
	
		        }
	
		        return Slick;
	
		    }());
	
		    Slick.prototype.activateADA = function() {
		        var _ = this;
	
		        _.$slideTrack.find('.slick-active').attr({
		            'aria-hidden': 'false'
		        }).find('a, input, button, select').attr({
		            'tabindex': '0'
		        });
	
		    };
	
		    Slick.prototype.addSlide = Slick.prototype.slickAdd = function(markup, index, addBefore) {
	
		        var _ = this;
	
		        if (typeof(index) === 'boolean') {
		            addBefore = index;
		            index = null;
		        } else if (index < 0 || (index >= _.slideCount)) {
		            return false;
		        }
	
		        _.unload();
	
		        if (typeof(index) === 'number') {
		            if (index === 0 && _.$slides.length === 0) {
		                $(markup).appendTo(_.$slideTrack);
		            } else if (addBefore) {
		                $(markup).insertBefore(_.$slides.eq(index));
		            } else {
		                $(markup).insertAfter(_.$slides.eq(index));
		            }
		        } else {
		            if (addBefore === true) {
		                $(markup).prependTo(_.$slideTrack);
		            } else {
		                $(markup).appendTo(_.$slideTrack);
		            }
		        }
	
		        _.$slides = _.$slideTrack.children(this.options.slide);
	
		        _.$slideTrack.children(this.options.slide).detach();
	
		        _.$slideTrack.append(_.$slides);
	
		        _.$slides.each(function(index, element) {
		            $(element).attr('data-slick-index', index);
		        });
	
		        _.$slidesCache = _.$slides;
	
		        _.reinit();
	
		    };
	
		    Slick.prototype.animateHeight = function() {
		        var _ = this;
		        if (_.options.slidesToShow === 1 && _.options.adaptiveHeight === true && _.options.vertical === false) {
		            var targetHeight = _.$slides.eq(_.currentSlide).outerHeight(true);
		            _.$list.animate({
		                height: targetHeight
		            }, _.options.speed);
		        }
		    };
	
		    Slick.prototype.animateSlide = function(targetLeft, callback) {
	
		        var animProps = {},
		            _ = this;
	
		        _.animateHeight();
	
		        if (_.options.rtl === true && _.options.vertical === false) {
		            targetLeft = -targetLeft;
		        }
		        if (_.transformsEnabled === false) {
		            if (_.options.vertical === false) {
		                _.$slideTrack.animate({
		                    left: targetLeft
		                }, _.options.speed, _.options.easing, callback);
		            } else {
		                _.$slideTrack.animate({
		                    top: targetLeft
		                }, _.options.speed, _.options.easing, callback);
		            }
	
		        } else {
	
		            if (_.cssTransitions === false) {
		                if (_.options.rtl === true) {
		                    _.currentLeft = -(_.currentLeft);
		                }
		                $({
		                    animStart: _.currentLeft
		                }).animate({
		                    animStart: targetLeft
		                }, {
		                    duration: _.options.speed,
		                    easing: _.options.easing,
		                    step: function(now) {
		                        now = Math.ceil(now);
		                        if (_.options.vertical === false) {
		                            animProps[_.animType] = 'translate(' +
		                                now + 'px, 0px)';
		                            _.$slideTrack.css(animProps);
		                        } else {
		                            animProps[_.animType] = 'translate(0px,' +
		                                now + 'px)';
		                            _.$slideTrack.css(animProps);
		                        }
		                    },
		                    complete: function() {
		                        if (callback) {
		                            callback.call();
		                        }
		                    }
		                });
	
		            } else {
	
		                _.applyTransition();
		                targetLeft = Math.ceil(targetLeft);
	
		                if (_.options.vertical === false) {
		                    animProps[_.animType] = 'translate3d(' + targetLeft + 'px, 0px, 0px)';
		                } else {
		                    animProps[_.animType] = 'translate3d(0px,' + targetLeft + 'px, 0px)';
		                }
		                _.$slideTrack.css(animProps);
	
		                if (callback) {
		                    setTimeout(function() {
	
		                        _.disableTransition();
	
		                        callback.call();
		                    }, _.options.speed);
		                }
	
		            }
	
		        }
	
		    };
	
		    Slick.prototype.getNavTarget = function() {
	
		        var _ = this,
		            asNavFor = _.options.asNavFor;
	
		        if ( asNavFor && asNavFor !== null ) {
		            asNavFor = $(asNavFor).not(_.$slider);
		        }
	
		        return asNavFor;
	
		    };
	
		    Slick.prototype.asNavFor = function(index) {
	
		        var _ = this,
		            asNavFor = _.getNavTarget();
	
		        if ( asNavFor !== null && typeof asNavFor === 'object' ) {
		            asNavFor.each(function() {
		                var target = $(this).slick('getSlick');
		                if(!target.unslicked) {
		                    target.slideHandler(index, true);
		                }
		            });
		        }
	
		    };
	
		    Slick.prototype.applyTransition = function(slide) {
	
		        var _ = this,
		            transition = {};
	
		        if (_.options.fade === false) {
		            transition[_.transitionType] = _.transformType + ' ' + _.options.speed + 'ms ' + _.options.cssEase;
		        } else {
		            transition[_.transitionType] = 'opacity ' + _.options.speed + 'ms ' + _.options.cssEase;
		        }
	
		        if (_.options.fade === false) {
		            _.$slideTrack.css(transition);
		        } else {
		            _.$slides.eq(slide).css(transition);
		        }
	
		    };
	
		    Slick.prototype.autoPlay = function() {
	
		        var _ = this;
	
		        _.autoPlayClear();
	
		        if ( _.slideCount > _.options.slidesToShow ) {
		            _.autoPlayTimer = setInterval( _.autoPlayIterator, _.options.autoplaySpeed );
		        }
	
		    };
	
		    Slick.prototype.autoPlayClear = function() {
	
		        var _ = this;
	
		        if (_.autoPlayTimer) {
		            clearInterval(_.autoPlayTimer);
		        }
	
		    };
	
		    Slick.prototype.autoPlayIterator = function() {
	
		        var _ = this,
		            slideTo = _.currentSlide + _.options.slidesToScroll;
	
		        if ( !_.paused && !_.interrupted && !_.focussed ) {
	
		            if ( _.options.infinite === false ) {
	
		                if ( _.direction === 1 && ( _.currentSlide + 1 ) === ( _.slideCount - 1 )) {
		                    _.direction = 0;
		                }
	
		                else if ( _.direction === 0 ) {
	
		                    slideTo = _.currentSlide - _.options.slidesToScroll;
	
		                    if ( _.currentSlide - 1 === 0 ) {
		                        _.direction = 1;
		                    }
	
		                }
	
		            }
	
		            _.slideHandler( slideTo );
	
		        }
	
		    };
	
		    Slick.prototype.buildArrows = function() {
	
		        var _ = this;
	
		        if (_.options.arrows === true ) {
	
		            _.$prevArrow = $(_.options.prevArrow).addClass('slick-arrow');
		            _.$nextArrow = $(_.options.nextArrow).addClass('slick-arrow');
	
		            if( _.slideCount > _.options.slidesToShow ) {
	
		                _.$prevArrow.removeClass('slick-hidden').removeAttr('aria-hidden tabindex');
		                _.$nextArrow.removeClass('slick-hidden').removeAttr('aria-hidden tabindex');
	
		                if (_.htmlExpr.test(_.options.prevArrow)) {
		                    _.$prevArrow.prependTo(_.options.appendArrows);
		                }
	
		                if (_.htmlExpr.test(_.options.nextArrow)) {
		                    _.$nextArrow.appendTo(_.options.appendArrows);
		                }
	
		                if (_.options.infinite !== true) {
		                    _.$prevArrow
		                        .addClass('slick-disabled')
		                        .attr('aria-disabled', 'true');
		                }
	
		            } else {
	
		                _.$prevArrow.add( _.$nextArrow )
	
		                    .addClass('slick-hidden')
		                    .attr({
		                        'aria-disabled': 'true',
		                        'tabindex': '-1'
		                    });
	
		            }
	
		        }
	
		    };
	
		    Slick.prototype.buildDots = function() {
	
		        var _ = this,
		            i, dot;
	
		        if (_.options.dots === true) {
	
		            _.$slider.addClass('slick-dotted');
	
		            dot = $('<ul />').addClass(_.options.dotsClass);
	
		            for (i = 0; i <= _.getDotCount(); i += 1) {
		                dot.append($('<li />').append(_.options.customPaging.call(this, _, i)));
		            }
	
		            _.$dots = dot.appendTo(_.options.appendDots);
	
		            _.$dots.find('li').first().addClass('slick-active');
	
		        }
	
		    };
	
		    Slick.prototype.buildOut = function() {
	
		        var _ = this;
	
		        _.$slides =
		            _.$slider
		                .children( _.options.slide + ':not(.slick-cloned)')
		                .addClass('slick-slide');
	
		        _.slideCount = _.$slides.length;
	
		        _.$slides.each(function(index, element) {
		            $(element)
		                .attr('data-slick-index', index)
		                .data('originalStyling', $(element).attr('style') || '');
		        });
	
		        _.$slider.addClass('slick-slider');
	
		        _.$slideTrack = (_.slideCount === 0) ?
		            $('<div class="slick-track"/>').appendTo(_.$slider) :
		            _.$slides.wrapAll('<div class="slick-track"/>').parent();
	
		        _.$list = _.$slideTrack.wrap(
		            '<div class="slick-list"/>').parent();
		        _.$slideTrack.css('opacity', 0);
	
		        if (_.options.centerMode === true || _.options.swipeToSlide === true) {
		            _.options.slidesToScroll = 1;
		        }
	
		        $('img[data-lazy]', _.$slider).not('[src]').addClass('slick-loading');
	
		        _.setupInfinite();
	
		        _.buildArrows();
	
		        _.buildDots();
	
		        _.updateDots();
	
	
		        _.setSlideClasses(typeof _.currentSlide === 'number' ? _.currentSlide : 0);
	
		        if (_.options.draggable === true) {
		            _.$list.addClass('draggable');
		        }
	
		    };
	
		    Slick.prototype.buildRows = function() {
	
		        var _ = this, a, b, c, newSlides, numOfSlides, originalSlides,slidesPerSection;
	
		        newSlides = document.createDocumentFragment();
		        originalSlides = _.$slider.children();
	
		        if(_.options.rows > 1) {
	
		            slidesPerSection = _.options.slidesPerRow * _.options.rows;
		            numOfSlides = Math.ceil(
		                originalSlides.length / slidesPerSection
		            );
	
		            for(a = 0; a < numOfSlides; a++){
		                var slide = document.createElement('div');
		                for(b = 0; b < _.options.rows; b++) {
		                    var row = document.createElement('div');
		                    for(c = 0; c < _.options.slidesPerRow; c++) {
		                        var target = (a * slidesPerSection + ((b * _.options.slidesPerRow) + c));
		                        if (originalSlides.get(target)) {
		                            row.appendChild(originalSlides.get(target));
		                        }
		                    }
		                    slide.appendChild(row);
		                }
		                newSlides.appendChild(slide);
		            }
	
		            _.$slider.empty().append(newSlides);
		            _.$slider.children().children().children()
		                .css({
		                    'width':(100 / _.options.slidesPerRow) + '%',
		                    'display': 'inline-block'
		                });
	
		        }
	
		    };
	
		    Slick.prototype.checkResponsive = function(initial, forceUpdate) {
	
		        var _ = this,
		            breakpoint, targetBreakpoint, respondToWidth, triggerBreakpoint = false;
		        var sliderWidth = _.$slider.width();
		        var windowWidth = window.innerWidth || $(window).width();
	
		        if (_.respondTo === 'window') {
		            respondToWidth = windowWidth;
		        } else if (_.respondTo === 'slider') {
		            respondToWidth = sliderWidth;
		        } else if (_.respondTo === 'min') {
		            respondToWidth = Math.min(windowWidth, sliderWidth);
		        }
	
		        if ( _.options.responsive &&
		            _.options.responsive.length &&
		            _.options.responsive !== null) {
	
		            targetBreakpoint = null;
	
		            for (breakpoint in _.breakpoints) {
		                if (_.breakpoints.hasOwnProperty(breakpoint)) {
		                    if (_.originalSettings.mobileFirst === false) {
		                        if (respondToWidth < _.breakpoints[breakpoint]) {
		                            targetBreakpoint = _.breakpoints[breakpoint];
		                        }
		                    } else {
		                        if (respondToWidth > _.breakpoints[breakpoint]) {
		                            targetBreakpoint = _.breakpoints[breakpoint];
		                        }
		                    }
		                }
		            }
	
		            if (targetBreakpoint !== null) {
		                if (_.activeBreakpoint !== null) {
		                    if (targetBreakpoint !== _.activeBreakpoint || forceUpdate) {
		                        _.activeBreakpoint =
		                            targetBreakpoint;
		                        if (_.breakpointSettings[targetBreakpoint] === 'unslick') {
		                            _.unslick(targetBreakpoint);
		                        } else {
		                            _.options = $.extend({}, _.originalSettings,
		                                _.breakpointSettings[
		                                    targetBreakpoint]);
		                            if (initial === true) {
		                                _.currentSlide = _.options.initialSlide;
		                            }
		                            _.refresh(initial);
		                        }
		                        triggerBreakpoint = targetBreakpoint;
		                    }
		                } else {
		                    _.activeBreakpoint = targetBreakpoint;
		                    if (_.breakpointSettings[targetBreakpoint] === 'unslick') {
		                        _.unslick(targetBreakpoint);
		                    } else {
		                        _.options = $.extend({}, _.originalSettings,
		                            _.breakpointSettings[
		                                targetBreakpoint]);
		                        if (initial === true) {
		                            _.currentSlide = _.options.initialSlide;
		                        }
		                        _.refresh(initial);
		                    }
		                    triggerBreakpoint = targetBreakpoint;
		                }
		            } else {
		                if (_.activeBreakpoint !== null) {
		                    _.activeBreakpoint = null;
		                    _.options = _.originalSettings;
		                    if (initial === true) {
		                        _.currentSlide = _.options.initialSlide;
		                    }
		                    _.refresh(initial);
		                    triggerBreakpoint = targetBreakpoint;
		                }
		            }
	
		            // only trigger breakpoints during an actual break. not on initialize.
		            if( !initial && triggerBreakpoint !== false ) {
		                _.$slider.trigger('breakpoint', [_, triggerBreakpoint]);
		            }
		        }
	
		    };
	
		    Slick.prototype.changeSlide = function(event, dontAnimate) {
	
		        var _ = this,
		            $target = $(event.currentTarget),
		            indexOffset, slideOffset, unevenOffset;
	
		        // If target is a link, prevent default action.
		        if($target.is('a')) {
		            event.preventDefault();
		        }
	
		        // If target is not the <li> element (ie: a child), find the <li>.
		        if(!$target.is('li')) {
		            $target = $target.closest('li');
		        }
	
		        unevenOffset = (_.slideCount % _.options.slidesToScroll !== 0);
		        indexOffset = unevenOffset ? 0 : (_.slideCount - _.currentSlide) % _.options.slidesToScroll;
	
		        switch (event.data.message) {
	
		            case 'previous':
		                slideOffset = indexOffset === 0 ? _.options.slidesToScroll : _.options.slidesToShow - indexOffset;
		                if (_.slideCount > _.options.slidesToShow) {
		                    _.slideHandler(_.currentSlide - slideOffset, false, dontAnimate);
		                }
		                break;
	
		            case 'next':
		                slideOffset = indexOffset === 0 ? _.options.slidesToScroll : indexOffset;
		                if (_.slideCount > _.options.slidesToShow) {
		                    _.slideHandler(_.currentSlide + slideOffset, false, dontAnimate);
		                }
		                break;
	
		            case 'index':
		                var index = event.data.index === 0 ? 0 :
		                    event.data.index || $target.index() * _.options.slidesToScroll;
	
		                _.slideHandler(_.checkNavigable(index), false, dontAnimate);
		                $target.children().trigger('focus');
		                break;
	
		            default:
		                return;
		        }
	
		    };
	
		    Slick.prototype.checkNavigable = function(index) {
	
		        var _ = this,
		            navigables, prevNavigable;
	
		        navigables = _.getNavigableIndexes();
		        prevNavigable = 0;
		        if (index > navigables[navigables.length - 1]) {
		            index = navigables[navigables.length - 1];
		        } else {
		            for (var n in navigables) {
		                if (index < navigables[n]) {
		                    index = prevNavigable;
		                    break;
		                }
		                prevNavigable = navigables[n];
		            }
		        }
	
		        return index;
		    };
	
		    Slick.prototype.cleanUpEvents = function() {
	
		        var _ = this;
	
		        if (_.options.dots && _.$dots !== null) {
	
		            $('li', _.$dots)
		                .off('click.slick', _.changeSlide)
		                .off('mouseenter.slick', $.proxy(_.interrupt, _, true))
		                .off('mouseleave.slick', $.proxy(_.interrupt, _, false));
	
		            if (_.options.accessibility === true) {
		                _.$dots.off('keydown.slick', _.keyHandler);
		            }
		        }
	
		        _.$slider.off('focus.slick blur.slick');
	
		        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {
		            _.$prevArrow && _.$prevArrow.off('click.slick', _.changeSlide);
		            _.$nextArrow && _.$nextArrow.off('click.slick', _.changeSlide);
	
		            if (_.options.accessibility === true) {
		                _.$prevArrow && _.$prevArrow.off('keydown.slick', _.keyHandler);
		                _.$nextArrow && _.$nextArrow.off('keydown.slick', _.keyHandler);
		            }
		        }
	
		        _.$list.off('touchstart.slick mousedown.slick', _.swipeHandler);
		        _.$list.off('touchmove.slick mousemove.slick', _.swipeHandler);
		        _.$list.off('touchend.slick mouseup.slick', _.swipeHandler);
		        _.$list.off('touchcancel.slick mouseleave.slick', _.swipeHandler);
	
		        _.$list.off('click.slick', _.clickHandler);
	
		        $(document).off(_.visibilityChange, _.visibility);
	
		        _.cleanUpSlideEvents();
	
		        if (_.options.accessibility === true) {
		            _.$list.off('keydown.slick', _.keyHandler);
		        }
	
		        if (_.options.focusOnSelect === true) {
		            $(_.$slideTrack).children().off('click.slick', _.selectHandler);
		        }
	
		        $(window).off('orientationchange.slick.slick-' + _.instanceUid, _.orientationChange);
	
		        $(window).off('resize.slick.slick-' + _.instanceUid, _.resize);
	
		        $('[draggable!=true]', _.$slideTrack).off('dragstart', _.preventDefault);
	
		        $(window).off('load.slick.slick-' + _.instanceUid, _.setPosition);
	
		    };
	
		    Slick.prototype.cleanUpSlideEvents = function() {
	
		        var _ = this;
	
		        _.$list.off('mouseenter.slick', $.proxy(_.interrupt, _, true));
		        _.$list.off('mouseleave.slick', $.proxy(_.interrupt, _, false));
	
		    };
	
		    Slick.prototype.cleanUpRows = function() {
	
		        var _ = this, originalSlides;
	
		        if(_.options.rows > 1) {
		            originalSlides = _.$slides.children().children();
		            originalSlides.removeAttr('style');
		            _.$slider.empty().append(originalSlides);
		        }
	
		    };
	
		    Slick.prototype.clickHandler = function(event) {
	
		        var _ = this;
	
		        if (_.shouldClick === false) {
		            event.stopImmediatePropagation();
		            event.stopPropagation();
		            event.preventDefault();
		        }
	
		    };
	
		    Slick.prototype.destroy = function(refresh) {
	
		        var _ = this;
	
		        _.autoPlayClear();
	
		        _.touchObject = {};
	
		        _.cleanUpEvents();
	
		        $('.slick-cloned', _.$slider).detach();
	
		        if (_.$dots) {
		            _.$dots.remove();
		        }
	
		        if ( _.$prevArrow && _.$prevArrow.length ) {
	
		            _.$prevArrow
		                .removeClass('slick-disabled slick-arrow slick-hidden')
		                .removeAttr('aria-hidden aria-disabled tabindex')
		                .css('display','');
	
		            if ( _.htmlExpr.test( _.options.prevArrow )) {
		                _.$prevArrow.remove();
		            }
		        }
	
		        if ( _.$nextArrow && _.$nextArrow.length ) {
	
		            _.$nextArrow
		                .removeClass('slick-disabled slick-arrow slick-hidden')
		                .removeAttr('aria-hidden aria-disabled tabindex')
		                .css('display','');
	
		            if ( _.htmlExpr.test( _.options.nextArrow )) {
		                _.$nextArrow.remove();
		            }
		        }
	
	
		        if (_.$slides) {
	
		            _.$slides
		                .removeClass('slick-slide slick-active slick-center slick-visible slick-current')
		                .removeAttr('aria-hidden')
		                .removeAttr('data-slick-index')
		                .each(function(){
		                    $(this).attr('style', $(this).data('originalStyling'));
		                });
	
		            _.$slideTrack.children(this.options.slide).detach();
	
		            _.$slideTrack.detach();
	
		            _.$list.detach();
	
		            _.$slider.append(_.$slides);
		        }
	
		        _.cleanUpRows();
	
		        _.$slider.removeClass('slick-slider');
		        _.$slider.removeClass('slick-initialized');
		        _.$slider.removeClass('slick-dotted');
	
		        _.unslicked = true;
	
		        if(!refresh) {
		            _.$slider.trigger('destroy', [_]);
		        }
	
		    };
	
		    Slick.prototype.disableTransition = function(slide) {
	
		        var _ = this,
		            transition = {};
	
		        transition[_.transitionType] = '';
	
		        if (_.options.fade === false) {
		            _.$slideTrack.css(transition);
		        } else {
		            _.$slides.eq(slide).css(transition);
		        }
	
		    };
	
		    Slick.prototype.fadeSlide = function(slideIndex, callback) {
	
		        var _ = this;
	
		        if (_.cssTransitions === false) {
	
		            _.$slides.eq(slideIndex).css({
		                zIndex: _.options.zIndex
		            });
	
		            _.$slides.eq(slideIndex).animate({
		                opacity: 1
		            }, _.options.speed, _.options.easing, callback);
	
		        } else {
	
		            _.applyTransition(slideIndex);
	
		            _.$slides.eq(slideIndex).css({
		                opacity: 1,
		                zIndex: _.options.zIndex
		            });
	
		            if (callback) {
		                setTimeout(function() {
	
		                    _.disableTransition(slideIndex);
	
		                    callback.call();
		                }, _.options.speed);
		            }
	
		        }
	
		    };
	
		    Slick.prototype.fadeSlideOut = function(slideIndex) {
	
		        var _ = this;
	
		        if (_.cssTransitions === false) {
	
		            _.$slides.eq(slideIndex).animate({
		                opacity: 0,
		                zIndex: _.options.zIndex - 2
		            }, _.options.speed, _.options.easing);
	
		        } else {
	
		            _.applyTransition(slideIndex);
	
		            _.$slides.eq(slideIndex).css({
		                opacity: 0,
		                zIndex: _.options.zIndex - 2
		            });
	
		        }
	
		    };
	
		    Slick.prototype.filterSlides = Slick.prototype.slickFilter = function(filter) {
	
		        var _ = this;
	
		        if (filter !== null) {
	
		            _.$slidesCache = _.$slides;
	
		            _.unload();
	
		            _.$slideTrack.children(this.options.slide).detach();
	
		            _.$slidesCache.filter(filter).appendTo(_.$slideTrack);
	
		            _.reinit();
	
		        }
	
		    };
	
		    Slick.prototype.focusHandler = function() {
	
		        var _ = this;
	
		        _.$slider
		            .off('focus.slick blur.slick')
		            .on('focus.slick blur.slick', '*', function(event) {
	
		            event.stopImmediatePropagation();
		            var $sf = $(this);
	
		            setTimeout(function() {
	
		                if( _.options.pauseOnFocus ) {
		                    _.focussed = $sf.is(':focus');
		                    _.autoPlay();
		                }
	
		            }, 0);
	
		        });
		    };
	
		    Slick.prototype.getCurrent = Slick.prototype.slickCurrentSlide = function() {
	
		        var _ = this;
		        return _.currentSlide;
	
		    };
	
		    Slick.prototype.getDotCount = function() {
	
		        var _ = this;
	
		        var breakPoint = 0;
		        var counter = 0;
		        var pagerQty = 0;
	
		        if (_.options.infinite === true) {
		            if (_.slideCount <= _.options.slidesToShow) {
		                 ++pagerQty;
		            } else {
		                while (breakPoint < _.slideCount) {
		                    ++pagerQty;
		                    breakPoint = counter + _.options.slidesToScroll;
		                    counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;
		                }
		            }
		        } else if (_.options.centerMode === true) {
		            pagerQty = _.slideCount;
		        } else if(!_.options.asNavFor) {
		            pagerQty = 1 + Math.ceil((_.slideCount - _.options.slidesToShow) / _.options.slidesToScroll);
		        }else {
		            while (breakPoint < _.slideCount) {
		                ++pagerQty;
		                breakPoint = counter + _.options.slidesToScroll;
		                counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;
		            }
		        }
	
		        return pagerQty - 1;
	
		    };
	
		    Slick.prototype.getLeft = function(slideIndex) {
	
		        var _ = this,
		            targetLeft,
		            verticalHeight,
		            verticalOffset = 0,
		            targetSlide,
		            coef;
	
		        _.slideOffset = 0;
		        verticalHeight = _.$slides.first().outerHeight(true);
	
		        if (_.options.infinite === true) {
		            if (_.slideCount > _.options.slidesToShow) {
		                _.slideOffset = (_.slideWidth * _.options.slidesToShow) * -1;
		                coef = -1
	
		                if (_.options.vertical === true && _.options.centerMode === true) {
		                    if (_.options.slidesToShow === 2) {
		                        coef = -1.5;
		                    } else if (_.options.slidesToShow === 1) {
		                        coef = -2
		                    }
		                }
		                verticalOffset = (verticalHeight * _.options.slidesToShow) * coef;
		            }
		            if (_.slideCount % _.options.slidesToScroll !== 0) {
		                if (slideIndex + _.options.slidesToScroll > _.slideCount && _.slideCount > _.options.slidesToShow) {
		                    if (slideIndex > _.slideCount) {
		                        _.slideOffset = ((_.options.slidesToShow - (slideIndex - _.slideCount)) * _.slideWidth) * -1;
		                        verticalOffset = ((_.options.slidesToShow - (slideIndex - _.slideCount)) * verticalHeight) * -1;
		                    } else {
		                        _.slideOffset = ((_.slideCount % _.options.slidesToScroll) * _.slideWidth) * -1;
		                        verticalOffset = ((_.slideCount % _.options.slidesToScroll) * verticalHeight) * -1;
		                    }
		                }
		            }
		        } else {
		            if (slideIndex + _.options.slidesToShow > _.slideCount) {
		                _.slideOffset = ((slideIndex + _.options.slidesToShow) - _.slideCount) * _.slideWidth;
		                verticalOffset = ((slideIndex + _.options.slidesToShow) - _.slideCount) * verticalHeight;
		            }
		        }
	
		        if (_.slideCount <= _.options.slidesToShow) {
		            _.slideOffset = 0;
		            verticalOffset = 0;
		        }
	
		        if (_.options.centerMode === true && _.slideCount <= _.options.slidesToShow) {
		            _.slideOffset = ((_.slideWidth * Math.floor(_.options.slidesToShow)) / 2) - ((_.slideWidth * _.slideCount) / 2);
		        } else if (_.options.centerMode === true && _.options.infinite === true) {
		            _.slideOffset += _.slideWidth * Math.floor(_.options.slidesToShow / 2) - _.slideWidth;
		        } else if (_.options.centerMode === true) {
		            _.slideOffset = 0;
		            _.slideOffset += _.slideWidth * Math.floor(_.options.slidesToShow / 2);
		        }
	
		        if (_.options.vertical === false) {
		            targetLeft = ((slideIndex * _.slideWidth) * -1) + _.slideOffset;
		        } else {
		            targetLeft = ((slideIndex * verticalHeight) * -1) + verticalOffset;
		        }
	
		        if (_.options.variableWidth === true) {
	
		            if (_.slideCount <= _.options.slidesToShow || _.options.infinite === false) {
		                targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex);
		            } else {
		                targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex + _.options.slidesToShow);
		            }
	
		            if (_.options.rtl === true) {
		                if (targetSlide[0]) {
		                    targetLeft = (_.$slideTrack.width() - targetSlide[0].offsetLeft - targetSlide.width()) * -1;
		                } else {
		                    targetLeft =  0;
		                }
		            } else {
		                targetLeft = targetSlide[0] ? targetSlide[0].offsetLeft * -1 : 0;
		            }
	
		            if (_.options.centerMode === true) {
		                if (_.slideCount <= _.options.slidesToShow || _.options.infinite === false) {
		                    targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex);
		                } else {
		                    targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex + _.options.slidesToShow + 1);
		                }
	
		                if (_.options.rtl === true) {
		                    if (targetSlide[0]) {
		                        targetLeft = (_.$slideTrack.width() - targetSlide[0].offsetLeft - targetSlide.width()) * -1;
		                    } else {
		                        targetLeft =  0;
		                    }
		                } else {
		                    targetLeft = targetSlide[0] ? targetSlide[0].offsetLeft * -1 : 0;
		                }
	
		                targetLeft += (_.$list.width() - targetSlide.outerWidth()) / 2;
		            }
		        }
	
		        return targetLeft;
	
		    };
	
		    Slick.prototype.getOption = Slick.prototype.slickGetOption = function(option) {
	
		        var _ = this;
	
		        return _.options[option];
	
		    };
	
		    Slick.prototype.getNavigableIndexes = function() {
	
		        var _ = this,
		            breakPoint = 0,
		            counter = 0,
		            indexes = [],
		            max;
	
		        if (_.options.infinite === false) {
		            max = _.slideCount;
		        } else {
		            breakPoint = _.options.slidesToScroll * -1;
		            counter = _.options.slidesToScroll * -1;
		            max = _.slideCount * 2;
		        }
	
		        while (breakPoint < max) {
		            indexes.push(breakPoint);
		            breakPoint = counter + _.options.slidesToScroll;
		            counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;
		        }
	
		        return indexes;
	
		    };
	
		    Slick.prototype.getSlick = function() {
	
		        return this;
	
		    };
	
		    Slick.prototype.getSlideCount = function() {
	
		        var _ = this,
		            slidesTraversed, swipedSlide, centerOffset;
	
		        centerOffset = _.options.centerMode === true ? _.slideWidth * Math.floor(_.options.slidesToShow / 2) : 0;
	
		        if (_.options.swipeToSlide === true) {
		            _.$slideTrack.find('.slick-slide').each(function(index, slide) {
		                if (slide.offsetLeft - centerOffset + ($(slide).outerWidth() / 2) > (_.swipeLeft * -1)) {
		                    swipedSlide = slide;
		                    return false;
		                }
		            });
	
		            slidesTraversed = Math.abs($(swipedSlide).attr('data-slick-index') - _.currentSlide) || 1;
	
		            return slidesTraversed;
	
		        } else {
		            return _.options.slidesToScroll;
		        }
	
		    };
	
		    Slick.prototype.goTo = Slick.prototype.slickGoTo = function(slide, dontAnimate) {
	
		        var _ = this;
	
		        _.changeSlide({
		            data: {
		                message: 'index',
		                index: parseInt(slide)
		            }
		        }, dontAnimate);
	
		    };
	
		    Slick.prototype.init = function(creation) {
	
		        var _ = this;
	
		        if (!$(_.$slider).hasClass('slick-initialized')) {
	
		            $(_.$slider).addClass('slick-initialized');
	
		            _.buildRows();
		            _.buildOut();
		            _.setProps();
		            _.startLoad();
		            _.loadSlider();
		            _.initializeEvents();
		            _.updateArrows();
		            _.updateDots();
		            _.checkResponsive(true);
		            _.focusHandler();
	
		        }
	
		        if (creation) {
		            _.$slider.trigger('init', [_]);
		        }
	
		        if (_.options.accessibility === true) {
		            _.initADA();
		        }
	
		        if ( _.options.autoplay ) {
	
		            _.paused = false;
		            _.autoPlay();
	
		        }
	
		    };
	
		    Slick.prototype.initADA = function() {
		        var _ = this,
		                numDotGroups = Math.ceil(_.slideCount / _.options.slidesToShow),
		                tabControlIndexes = _.getNavigableIndexes().filter(function(val) {
		                    return (val >= 0) && (val < _.slideCount);
		                });
	
		        _.$slides.add(_.$slideTrack.find('.slick-cloned')).attr({
		            'aria-hidden': 'true',
		            'tabindex': '-1'
		        }).find('a, input, button, select').attr({
		            'tabindex': '-1'
		        });
	
		        if (_.$dots !== null) {
		            _.$slides.not(_.$slideTrack.find('.slick-cloned')).each(function(i) {
		                var slideControlIndex = tabControlIndexes.indexOf(i);
	
		                $(this).attr({
		                    'role': 'tabpanel',
		                    'id': 'slick-slide' + _.instanceUid + i,
		                    'tabindex': -1
		                });
	
		                if (slideControlIndex !== -1) {
		                    $(this).attr({
		                        'aria-describedby': 'slick-slide-control' + _.instanceUid + slideControlIndex
		                    });
		                }
		            });
	
		            _.$dots.attr('role', 'tablist').find('li').each(function(i) {
		                var mappedSlideIndex = tabControlIndexes[i];
	
		                $(this).attr({
		                    'role': 'presentation'
		                });
	
		                $(this).find('button').first().attr({
		                    'role': 'tab',
		                    'id': 'slick-slide-control' + _.instanceUid + i,
		                    'aria-controls': 'slick-slide' + _.instanceUid + mappedSlideIndex,
		                    'aria-label': (i + 1) + ' of ' + numDotGroups,
		                    'aria-selected': null,
		                    'tabindex': '-1'
		                });
	
		            }).eq(_.currentSlide).find('button').attr({
		                'aria-selected': 'true',
		                'tabindex': '0'
		            }).end();
		        }
	
		        for (var i=_.currentSlide, max=i+_.options.slidesToShow; i < max; i++) {
		            _.$slides.eq(i).attr('tabindex', 0);
		        }
	
		        _.activateADA();
	
		    };
	
		    Slick.prototype.initArrowEvents = function() {
	
		        var _ = this;
	
		        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {
		            _.$prevArrow
		               .off('click.slick')
		               .on('click.slick', {
		                    message: 'previous'
		               }, _.changeSlide);
		            _.$nextArrow
		               .off('click.slick')
		               .on('click.slick', {
		                    message: 'next'
		               }, _.changeSlide);
	
		            if (_.options.accessibility === true) {
		                _.$prevArrow.on('keydown.slick', _.keyHandler);
		                _.$nextArrow.on('keydown.slick', _.keyHandler);
		            }
		        }
	
		    };
	
		    Slick.prototype.initDotEvents = function() {
	
		        var _ = this;
	
		        if (_.options.dots === true) {
		            $('li', _.$dots).on('click.slick', {
		                message: 'index'
		            }, _.changeSlide);
	
		            if (_.options.accessibility === true) {
		                _.$dots.on('keydown.slick', _.keyHandler);
		            }
		        }
	
		        if ( _.options.dots === true && _.options.pauseOnDotsHover === true ) {
	
		            $('li', _.$dots)
		                .on('mouseenter.slick', $.proxy(_.interrupt, _, true))
		                .on('mouseleave.slick', $.proxy(_.interrupt, _, false));
	
		        }
	
		    };
	
		    Slick.prototype.initSlideEvents = function() {
	
		        var _ = this;
	
		        if ( _.options.pauseOnHover ) {
	
		            _.$list.on('mouseenter.slick', $.proxy(_.interrupt, _, true));
		            _.$list.on('mouseleave.slick', $.proxy(_.interrupt, _, false));
	
		        }
	
		    };
	
		    Slick.prototype.initializeEvents = function() {
	
		        var _ = this;
	
		        _.initArrowEvents();
	
		        _.initDotEvents();
		        _.initSlideEvents();
	
		        _.$list.on('touchstart.slick mousedown.slick', {
		            action: 'start'
		        }, _.swipeHandler);
		        _.$list.on('touchmove.slick mousemove.slick', {
		            action: 'move'
		        }, _.swipeHandler);
		        _.$list.on('touchend.slick mouseup.slick', {
		            action: 'end'
		        }, _.swipeHandler);
		        _.$list.on('touchcancel.slick mouseleave.slick', {
		            action: 'end'
		        }, _.swipeHandler);
	
		        _.$list.on('click.slick', _.clickHandler);
	
		        $(document).on(_.visibilityChange, $.proxy(_.visibility, _));
	
		        if (_.options.accessibility === true) {
		            _.$list.on('keydown.slick', _.keyHandler);
		        }
	
		        if (_.options.focusOnSelect === true) {
		            $(_.$slideTrack).children().on('click.slick', _.selectHandler);
		        }
	
		        $(window).on('orientationchange.slick.slick-' + _.instanceUid, $.proxy(_.orientationChange, _));
	
		        $(window).on('resize.slick.slick-' + _.instanceUid, $.proxy(_.resize, _));
	
		        $('[draggable!=true]', _.$slideTrack).on('dragstart', _.preventDefault);
	
		        $(window).on('load.slick.slick-' + _.instanceUid, _.setPosition);
		        $(_.setPosition);
	
		    };
	
		    Slick.prototype.initUI = function() {
	
		        var _ = this;
	
		        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {
	
		            _.$prevArrow.show();
		            _.$nextArrow.show();
	
		        }
	
		        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {
	
		            _.$dots.show();
	
		        }
	
		    };
	
		    Slick.prototype.keyHandler = function(event) {
	
		        var _ = this;
		         //Dont slide if the cursor is inside the form fields and arrow keys are pressed
		        if(!event.target.tagName.match('TEXTAREA|INPUT|SELECT')) {
		            if (event.keyCode === 37 && _.options.accessibility === true) {
		                _.changeSlide({
		                    data: {
		                        message: _.options.rtl === true ? 'next' :  'previous'
		                    }
		                });
		            } else if (event.keyCode === 39 && _.options.accessibility === true) {
		                _.changeSlide({
		                    data: {
		                        message: _.options.rtl === true ? 'previous' : 'next'
		                    }
		                });
		            }
		        }
	
		    };
	
		    Slick.prototype.lazyLoad = function() {
	
		        var _ = this,
		            loadRange, cloneRange, rangeStart, rangeEnd;
	
		        function loadImages(imagesScope) {
	
		            $('img[data-lazy]', imagesScope).each(function() {
	
		                var image = $(this),
		                    imageSource = $(this).attr('data-lazy'),
		                    imageSrcSet = $(this).attr('data-srcset'),
		                    imageSizes  = $(this).attr('data-sizes') || _.$slider.attr('data-sizes'),
		                    imageToLoad = document.createElement('img');
	
		                imageToLoad.onload = function() {
	
		                    image
		                        .animate({ opacity: 0 }, 100, function() {
	
		                            if (imageSrcSet) {
		                                image
		                                    .attr('srcset', imageSrcSet );
	
		                                if (imageSizes) {
		                                    image
		                                        .attr('sizes', imageSizes );
		                                }
		                            }
	
		                            image
		                                .attr('src', imageSource)
		                                .animate({ opacity: 1 }, 200, function() {
		                                    image
		                                        .removeAttr('data-lazy data-srcset data-sizes')
		                                        .removeClass('slick-loading');
		                                });
		                            _.$slider.trigger('lazyLoaded', [_, image, imageSource]);
		                        });
	
		                };
	
		                imageToLoad.onerror = function() {
	
		                    image
		                        .removeAttr( 'data-lazy' )
		                        .removeClass( 'slick-loading' )
		                        .addClass( 'slick-lazyload-error' );
	
		                    _.$slider.trigger('lazyLoadError', [ _, image, imageSource ]);
	
		                };
	
		                imageToLoad.src = imageSource;
	
		            });
	
		        }
	
		        if (_.options.centerMode === true) {
		            if (_.options.infinite === true) {
		                rangeStart = _.currentSlide + (_.options.slidesToShow / 2 + 1);
		                rangeEnd = rangeStart + _.options.slidesToShow + 2;
		            } else {
		                rangeStart = Math.max(0, _.currentSlide - (_.options.slidesToShow / 2 + 1));
		                rangeEnd = 2 + (_.options.slidesToShow / 2 + 1) + _.currentSlide;
		            }
		        } else {
		            rangeStart = _.options.infinite ? _.options.slidesToShow + _.currentSlide : _.currentSlide;
		            rangeEnd = Math.ceil(rangeStart + _.options.slidesToShow);
		            if (_.options.fade === true) {
		                if (rangeStart > 0) rangeStart--;
		                if (rangeEnd <= _.slideCount) rangeEnd++;
		            }
		        }
	
		        loadRange = _.$slider.find('.slick-slide').slice(rangeStart, rangeEnd);
	
		        if (_.options.lazyLoad === 'anticipated') {
		            var prevSlide = rangeStart - 1,
		                nextSlide = rangeEnd,
		                $slides = _.$slider.find('.slick-slide');
	
		            for (var i = 0; i < _.options.slidesToScroll; i++) {
		                if (prevSlide < 0) prevSlide = _.slideCount - 1;
		                loadRange = loadRange.add($slides.eq(prevSlide));
		                loadRange = loadRange.add($slides.eq(nextSlide));
		                prevSlide--;
		                nextSlide++;
		            }
		        }
	
		        loadImages(loadRange);
	
		        if (_.slideCount <= _.options.slidesToShow) {
		            cloneRange = _.$slider.find('.slick-slide');
		            loadImages(cloneRange);
		        } else
		        if (_.currentSlide >= _.slideCount - _.options.slidesToShow) {
		            cloneRange = _.$slider.find('.slick-cloned').slice(0, _.options.slidesToShow);
		            loadImages(cloneRange);
		        } else if (_.currentSlide === 0) {
		            cloneRange = _.$slider.find('.slick-cloned').slice(_.options.slidesToShow * -1);
		            loadImages(cloneRange);
		        }
	
		    };
	
		    Slick.prototype.loadSlider = function() {
	
		        var _ = this;
	
		        _.setPosition();
	
		        _.$slideTrack.css({
		            opacity: 1
		        });
	
		        _.$slider.removeClass('slick-loading');
	
		        _.initUI();
	
		        if (_.options.lazyLoad === 'progressive') {
		            _.progressiveLazyLoad();
		        }
	
		    };
	
		    Slick.prototype.next = Slick.prototype.slickNext = function() {
	
		        var _ = this;
	
		        _.changeSlide({
		            data: {
		                message: 'next'
		            }
		        });
	
		    };
	
		    Slick.prototype.orientationChange = function() {
	
		        var _ = this;
	
		        _.checkResponsive();
		        _.setPosition();
	
		    };
	
		    Slick.prototype.pause = Slick.prototype.slickPause = function() {
	
		        var _ = this;
	
		        _.autoPlayClear();
		        _.paused = true;
	
		    };
	
		    Slick.prototype.play = Slick.prototype.slickPlay = function() {
	
		        var _ = this;
	
		        _.autoPlay();
		        _.options.autoplay = true;
		        _.paused = false;
		        _.focussed = false;
		        _.interrupted = false;
	
		    };
	
		    Slick.prototype.postSlide = function(index) {
	
		        var _ = this;
	
		        if( !_.unslicked ) {
	
		            _.$slider.trigger('afterChange', [_, index]);
	
		            _.animating = false;
	
		            if (_.slideCount > _.options.slidesToShow) {
		                _.setPosition();
		            }
	
		            _.swipeLeft = null;
	
		            if ( _.options.autoplay ) {
		                _.autoPlay();
		            }
	
		            if (_.options.accessibility === true) {
		                _.initADA();
		                
		                if (_.options.focusOnChange) {
		                    var $currentSlide = $(_.$slides.get(_.currentSlide));
		                    $currentSlide.attr('tabindex', 0).focus();
		                }
		            }
	
		        }
	
		    };
	
		    Slick.prototype.prev = Slick.prototype.slickPrev = function() {
	
		        var _ = this;
	
		        _.changeSlide({
		            data: {
		                message: 'previous'
		            }
		        });
	
		    };
	
		    Slick.prototype.preventDefault = function(event) {
	
		        event.preventDefault();
	
		    };
	
		    Slick.prototype.progressiveLazyLoad = function( tryCount ) {
	
		        tryCount = tryCount || 1;
	
		        var _ = this,
		            $imgsToLoad = $( 'img[data-lazy]', _.$slider ),
		            image,
		            imageSource,
		            imageSrcSet,
		            imageSizes,
		            imageToLoad;
	
		        if ( $imgsToLoad.length ) {
	
		            image = $imgsToLoad.first();
		            imageSource = image.attr('data-lazy');
		            imageSrcSet = image.attr('data-srcset');
		            imageSizes  = image.attr('data-sizes') || _.$slider.attr('data-sizes');
		            imageToLoad = document.createElement('img');
	
		            imageToLoad.onload = function() {
	
		                if (imageSrcSet) {
		                    image
		                        .attr('srcset', imageSrcSet );
	
		                    if (imageSizes) {
		                        image
		                            .attr('sizes', imageSizes );
		                    }
		                }
	
		                image
		                    .attr( 'src', imageSource )
		                    .removeAttr('data-lazy data-srcset data-sizes')
		                    .removeClass('slick-loading');
	
		                if ( _.options.adaptiveHeight === true ) {
		                    _.setPosition();
		                }
	
		                _.$slider.trigger('lazyLoaded', [ _, image, imageSource ]);
		                _.progressiveLazyLoad();
	
		            };
	
		            imageToLoad.onerror = function() {
	
		                if ( tryCount < 3 ) {
	
		                    /**
		                     * try to load the image 3 times,
		                     * leave a slight delay so we don't get
		                     * servers blocking the request.
		                     */
		                    setTimeout( function() {
		                        _.progressiveLazyLoad( tryCount + 1 );
		                    }, 500 );
	
		                } else {
	
		                    image
		                        .removeAttr( 'data-lazy' )
		                        .removeClass( 'slick-loading' )
		                        .addClass( 'slick-lazyload-error' );
	
		                    _.$slider.trigger('lazyLoadError', [ _, image, imageSource ]);
	
		                    _.progressiveLazyLoad();
	
		                }
	
		            };
	
		            imageToLoad.src = imageSource;
	
		        } else {
	
		            _.$slider.trigger('allImagesLoaded', [ _ ]);
	
		        }
	
		    };
	
		    Slick.prototype.refresh = function( initializing ) {
	
		        var _ = this, currentSlide, lastVisibleIndex;
	
		        lastVisibleIndex = _.slideCount - _.options.slidesToShow;
	
		        // in non-infinite sliders, we don't want to go past the
		        // last visible index.
		        if( !_.options.infinite && ( _.currentSlide > lastVisibleIndex )) {
		            _.currentSlide = lastVisibleIndex;
		        }
	
		        // if less slides than to show, go to start.
		        if ( _.slideCount <= _.options.slidesToShow ) {
		            _.currentSlide = 0;
	
		        }
	
		        currentSlide = _.currentSlide;
	
		        _.destroy(true);
	
		        $.extend(_, _.initials, { currentSlide: currentSlide });
	
		        _.init();
	
		        if( !initializing ) {
	
		            _.changeSlide({
		                data: {
		                    message: 'index',
		                    index: currentSlide
		                }
		            }, false);
	
		        }
	
		    };
	
		    Slick.prototype.registerBreakpoints = function() {
	
		        var _ = this, breakpoint, currentBreakpoint, l,
		            responsiveSettings = _.options.responsive || null;
	
		        if ( $.type(responsiveSettings) === 'array' && responsiveSettings.length ) {
	
		            _.respondTo = _.options.respondTo || 'window';
	
		            for ( breakpoint in responsiveSettings ) {
	
		                l = _.breakpoints.length-1;
	
		                if (responsiveSettings.hasOwnProperty(breakpoint)) {
		                    currentBreakpoint = responsiveSettings[breakpoint].breakpoint;
	
		                    // loop through the breakpoints and cut out any existing
		                    // ones with the same breakpoint number, we don't want dupes.
		                    while( l >= 0 ) {
		                        if( _.breakpoints[l] && _.breakpoints[l] === currentBreakpoint ) {
		                            _.breakpoints.splice(l,1);
		                        }
		                        l--;
		                    }
	
		                    _.breakpoints.push(currentBreakpoint);
		                    _.breakpointSettings[currentBreakpoint] = responsiveSettings[breakpoint].settings;
	
		                }
	
		            }
	
		            _.breakpoints.sort(function(a, b) {
		                return ( _.options.mobileFirst ) ? a-b : b-a;
		            });
	
		        }
	
		    };
	
		    Slick.prototype.reinit = function() {
	
		        var _ = this;
	
		        _.$slides =
		            _.$slideTrack
		                .children(_.options.slide)
		                .addClass('slick-slide');
	
		        _.slideCount = _.$slides.length;
	
		        if (_.currentSlide >= _.slideCount && _.currentSlide !== 0) {
		            _.currentSlide = _.currentSlide - _.options.slidesToScroll;
		        }
	
		        if (_.slideCount <= _.options.slidesToShow) {
		            _.currentSlide = 0;
		        }
	
		        _.registerBreakpoints();
	
		        _.setProps();
		        _.setupInfinite();
		        _.buildArrows();
		        _.updateArrows();
		        _.initArrowEvents();
		        _.buildDots();
		        _.updateDots();
		        _.initDotEvents();
		        _.cleanUpSlideEvents();
		        _.initSlideEvents();
	
		        _.checkResponsive(false, true);
	
		        if (_.options.focusOnSelect === true) {
		            $(_.$slideTrack).children().on('click.slick', _.selectHandler);
		        }
	
		        _.setSlideClasses(typeof _.currentSlide === 'number' ? _.currentSlide : 0);
	
		        _.setPosition();
		        _.focusHandler();
	
		        _.paused = !_.options.autoplay;
		        _.autoPlay();
	
		        _.$slider.trigger('reInit', [_]);
	
		    };
	
		    Slick.prototype.resize = function() {
	
		        var _ = this;
	
		        if ($(window).width() !== _.windowWidth) {
		            clearTimeout(_.windowDelay);
		            _.windowDelay = window.setTimeout(function() {
		                _.windowWidth = $(window).width();
		                _.checkResponsive();
		                if( !_.unslicked ) { _.setPosition(); }
		            }, 50);
		        }
		    };
	
		    Slick.prototype.removeSlide = Slick.prototype.slickRemove = function(index, removeBefore, removeAll) {
	
		        var _ = this;
	
		        if (typeof(index) === 'boolean') {
		            removeBefore = index;
		            index = removeBefore === true ? 0 : _.slideCount - 1;
		        } else {
		            index = removeBefore === true ? --index : index;
		        }
	
		        if (_.slideCount < 1 || index < 0 || index > _.slideCount - 1) {
		            return false;
		        }
	
		        _.unload();
	
		        if (removeAll === true) {
		            _.$slideTrack.children().remove();
		        } else {
		            _.$slideTrack.children(this.options.slide).eq(index).remove();
		        }
	
		        _.$slides = _.$slideTrack.children(this.options.slide);
	
		        _.$slideTrack.children(this.options.slide).detach();
	
		        _.$slideTrack.append(_.$slides);
	
		        _.$slidesCache = _.$slides;
	
		        _.reinit();
	
		    };
	
		    Slick.prototype.setCSS = function(position) {
	
		        var _ = this,
		            positionProps = {},
		            x, y;
	
		        if (_.options.rtl === true) {
		            position = -position;
		        }
		        x = _.positionProp == 'left' ? Math.ceil(position) + 'px' : '0px';
		        y = _.positionProp == 'top' ? Math.ceil(position) + 'px' : '0px';
	
		        positionProps[_.positionProp] = position;
	
		        if (_.transformsEnabled === false) {
		            _.$slideTrack.css(positionProps);
		        } else {
		            positionProps = {};
		            if (_.cssTransitions === false) {
		                positionProps[_.animType] = 'translate(' + x + ', ' + y + ')';
		                _.$slideTrack.css(positionProps);
		            } else {
		                positionProps[_.animType] = 'translate3d(' + x + ', ' + y + ', 0px)';
		                _.$slideTrack.css(positionProps);
		            }
		        }
	
		    };
	
		    Slick.prototype.setDimensions = function() {
	
		        var _ = this;
	
		        if (_.options.vertical === false) {
		            if (_.options.centerMode === true) {
		                _.$list.css({
		                    padding: ('0px ' + _.options.centerPadding)
		                });
		            }
		        } else {
		            _.$list.height(_.$slides.first().outerHeight(true) * _.options.slidesToShow);
		            if (_.options.centerMode === true) {
		                _.$list.css({
		                    padding: (_.options.centerPadding + ' 0px')
		                });
		            }
		        }
	
		        _.listWidth = _.$list.width();
		        _.listHeight = _.$list.height();
	
	
		        if (_.options.vertical === false && _.options.variableWidth === false) {
		            _.slideWidth = Math.ceil(_.listWidth / _.options.slidesToShow);
		            _.$slideTrack.width(Math.ceil((_.slideWidth * _.$slideTrack.children('.slick-slide').length)));
	
		        } else if (_.options.variableWidth === true) {
		            _.$slideTrack.width(5000 * _.slideCount);
		        } else {
		            _.slideWidth = Math.ceil(_.listWidth);
		            _.$slideTrack.height(Math.ceil((_.$slides.first().outerHeight(true) * _.$slideTrack.children('.slick-slide').length)));
		        }
	
		        var offset = _.$slides.first().outerWidth(true) - _.$slides.first().width();
		        if (_.options.variableWidth === false) _.$slideTrack.children('.slick-slide').width(_.slideWidth - offset);
	
		    };
	
		    Slick.prototype.setFade = function() {
	
		        var _ = this,
		            targetLeft;
	
		        _.$slides.each(function(index, element) {
		            targetLeft = (_.slideWidth * index) * -1;
		            if (_.options.rtl === true) {
		                $(element).css({
		                    position: 'relative',
		                    right: targetLeft,
		                    top: 0,
		                    zIndex: _.options.zIndex - 2,
		                    opacity: 0
		                });
		            } else {
		                $(element).css({
		                    position: 'relative',
		                    left: targetLeft,
		                    top: 0,
		                    zIndex: _.options.zIndex - 2,
		                    opacity: 0
		                });
		            }
		        });
	
		        _.$slides.eq(_.currentSlide).css({
		            zIndex: _.options.zIndex - 1,
		            opacity: 1
		        });
	
		    };
	
		    Slick.prototype.setHeight = function() {
	
		        var _ = this;
	
		        if (_.options.slidesToShow === 1 && _.options.adaptiveHeight === true && _.options.vertical === false) {
		            var targetHeight = _.$slides.eq(_.currentSlide).outerHeight(true);
		            _.$list.css('height', targetHeight);
		        }
	
		    };
	
		    Slick.prototype.setOption =
		    Slick.prototype.slickSetOption = function() {
	
		        /**
		         * accepts arguments in format of:
		         *
		         *  - for changing a single option's value:
		         *     .slick("setOption", option, value, refresh )
		         *
		         *  - for changing a set of responsive options:
		         *     .slick("setOption", 'responsive', [{}, ...], refresh )
		         *
		         *  - for updating multiple values at once (not responsive)
		         *     .slick("setOption", { 'option': value, ... }, refresh )
		         */
	
		        var _ = this, l, item, option, value, refresh = false, type;
	
		        if( $.type( arguments[0] ) === 'object' ) {
	
		            option =  arguments[0];
		            refresh = arguments[1];
		            type = 'multiple';
	
		        } else if ( $.type( arguments[0] ) === 'string' ) {
	
		            option =  arguments[0];
		            value = arguments[1];
		            refresh = arguments[2];
	
		            if ( arguments[0] === 'responsive' && $.type( arguments[1] ) === 'array' ) {
	
		                type = 'responsive';
	
		            } else if ( typeof arguments[1] !== 'undefined' ) {
	
		                type = 'single';
	
		            }
	
		        }
	
		        if ( type === 'single' ) {
	
		            _.options[option] = value;
	
	
		        } else if ( type === 'multiple' ) {
	
		            $.each( option , function( opt, val ) {
	
		                _.options[opt] = val;
	
		            });
	
	
		        } else if ( type === 'responsive' ) {
	
		            for ( item in value ) {
	
		                if( $.type( _.options.responsive ) !== 'array' ) {
	
		                    _.options.responsive = [ value[item] ];
	
		                } else {
	
		                    l = _.options.responsive.length-1;
	
		                    // loop through the responsive object and splice out duplicates.
		                    while( l >= 0 ) {
	
		                        if( _.options.responsive[l].breakpoint === value[item].breakpoint ) {
	
		                            _.options.responsive.splice(l,1);
	
		                        }
	
		                        l--;
	
		                    }
	
		                    _.options.responsive.push( value[item] );
	
		                }
	
		            }
	
		        }
	
		        if ( refresh ) {
	
		            _.unload();
		            _.reinit();
	
		        }
	
		    };
	
		    Slick.prototype.setPosition = function() {
	
		        var _ = this;
	
		        _.setDimensions();
	
		        _.setHeight();
	
		        if (_.options.fade === false) {
		            _.setCSS(_.getLeft(_.currentSlide));
		        } else {
		            _.setFade();
		        }
	
		        _.$slider.trigger('setPosition', [_]);
	
		    };
	
		    Slick.prototype.setProps = function() {
	
		        var _ = this,
		            bodyStyle = document.body.style;
	
		        _.positionProp = _.options.vertical === true ? 'top' : 'left';
	
		        if (_.positionProp === 'top') {
		            _.$slider.addClass('slick-vertical');
		        } else {
		            _.$slider.removeClass('slick-vertical');
		        }
	
		        if (bodyStyle.WebkitTransition !== undefined ||
		            bodyStyle.MozTransition !== undefined ||
		            bodyStyle.msTransition !== undefined) {
		            if (_.options.useCSS === true) {
		                _.cssTransitions = true;
		            }
		        }
	
		        if ( _.options.fade ) {
		            if ( typeof _.options.zIndex === 'number' ) {
		                if( _.options.zIndex < 3 ) {
		                    _.options.zIndex = 3;
		                }
		            } else {
		                _.options.zIndex = _.defaults.zIndex;
		            }
		        }
	
		        if (bodyStyle.OTransform !== undefined) {
		            _.animType = 'OTransform';
		            _.transformType = '-o-transform';
		            _.transitionType = 'OTransition';
		            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.webkitPerspective === undefined) _.animType = false;
		        }
		        if (bodyStyle.MozTransform !== undefined) {
		            _.animType = 'MozTransform';
		            _.transformType = '-moz-transform';
		            _.transitionType = 'MozTransition';
		            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.MozPerspective === undefined) _.animType = false;
		        }
		        if (bodyStyle.webkitTransform !== undefined) {
		            _.animType = 'webkitTransform';
		            _.transformType = '-webkit-transform';
		            _.transitionType = 'webkitTransition';
		            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.webkitPerspective === undefined) _.animType = false;
		        }
		        if (bodyStyle.msTransform !== undefined) {
		            _.animType = 'msTransform';
		            _.transformType = '-ms-transform';
		            _.transitionType = 'msTransition';
		            if (bodyStyle.msTransform === undefined) _.animType = false;
		        }
		        if (bodyStyle.transform !== undefined && _.animType !== false) {
		            _.animType = 'transform';
		            _.transformType = 'transform';
		            _.transitionType = 'transition';
		        }
		        _.transformsEnabled = _.options.useTransform && (_.animType !== null && _.animType !== false);
		    };
	
	
		    Slick.prototype.setSlideClasses = function(index) {
	
		        var _ = this,
		            centerOffset, allSlides, indexOffset, remainder;
	
		        allSlides = _.$slider
		            .find('.slick-slide')
		            .removeClass('slick-active slick-center slick-current')
		            .attr('aria-hidden', 'true');
	
		        _.$slides
		            .eq(index)
		            .addClass('slick-current');
	
		        if (_.options.centerMode === true) {
	
		            var evenCoef = _.options.slidesToShow % 2 === 0 ? 1 : 0;
	
		            centerOffset = Math.floor(_.options.slidesToShow / 2);
	
		            if (_.options.infinite === true) {
	
		                if (index >= centerOffset && index <= (_.slideCount - 1) - centerOffset) {
		                    _.$slides
		                        .slice(index - centerOffset + evenCoef, index + centerOffset + 1)
		                        .addClass('slick-active')
		                        .attr('aria-hidden', 'false');
	
		                } else {
	
		                    indexOffset = _.options.slidesToShow + index;
		                    allSlides
		                        .slice(indexOffset - centerOffset + 1 + evenCoef, indexOffset + centerOffset + 2)
		                        .addClass('slick-active')
		                        .attr('aria-hidden', 'false');
	
		                }
	
		                if (index === 0) {
	
		                    allSlides
		                        .eq(allSlides.length - 1 - _.options.slidesToShow)
		                        .addClass('slick-center');
	
		                } else if (index === _.slideCount - 1) {
	
		                    allSlides
		                        .eq(_.options.slidesToShow)
		                        .addClass('slick-center');
	
		                }
	
		            }
	
		            _.$slides
		                .eq(index)
		                .addClass('slick-center');
	
		        } else {
	
		            if (index >= 0 && index <= (_.slideCount - _.options.slidesToShow)) {
	
		                _.$slides
		                    .slice(index, index + _.options.slidesToShow)
		                    .addClass('slick-active')
		                    .attr('aria-hidden', 'false');
	
		            } else if (allSlides.length <= _.options.slidesToShow) {
	
		                allSlides
		                    .addClass('slick-active')
		                    .attr('aria-hidden', 'false');
	
		            } else {
	
		                remainder = _.slideCount % _.options.slidesToShow;
		                indexOffset = _.options.infinite === true ? _.options.slidesToShow + index : index;
	
		                if (_.options.slidesToShow == _.options.slidesToScroll && (_.slideCount - index) < _.options.slidesToShow) {
	
		                    allSlides
		                        .slice(indexOffset - (_.options.slidesToShow - remainder), indexOffset + remainder)
		                        .addClass('slick-active')
		                        .attr('aria-hidden', 'false');
	
		                } else {
	
		                    allSlides
		                        .slice(indexOffset, indexOffset + _.options.slidesToShow)
		                        .addClass('slick-active')
		                        .attr('aria-hidden', 'false');
	
		                }
	
		            }
	
		        }
	
		        if (_.options.lazyLoad === 'ondemand' || _.options.lazyLoad === 'anticipated') {
		            _.lazyLoad();
		        }
		    };
	
		    Slick.prototype.setupInfinite = function() {
	
		        var _ = this,
		            i, slideIndex, infiniteCount;
	
		        if (_.options.fade === true) {
		            _.options.centerMode = false;
		        }
	
		        if (_.options.infinite === true && _.options.fade === false) {
	
		            slideIndex = null;
	
		            if (_.slideCount > _.options.slidesToShow) {
	
		                if (_.options.centerMode === true) {
		                    infiniteCount = _.options.slidesToShow + 1;
		                } else {
		                    infiniteCount = _.options.slidesToShow;
		                }
	
		                for (i = _.slideCount; i > (_.slideCount -
		                        infiniteCount); i -= 1) {
		                    slideIndex = i - 1;
		                    $(_.$slides[slideIndex]).clone(true).attr('id', '')
		                        .attr('data-slick-index', slideIndex - _.slideCount)
		                        .prependTo(_.$slideTrack).addClass('slick-cloned');
		                }
		                for (i = 0; i < infiniteCount  + _.slideCount; i += 1) {
		                    slideIndex = i;
		                    $(_.$slides[slideIndex]).clone(true).attr('id', '')
		                        .attr('data-slick-index', slideIndex + _.slideCount)
		                        .appendTo(_.$slideTrack).addClass('slick-cloned');
		                }
		                _.$slideTrack.find('.slick-cloned').find('[id]').each(function() {
		                    $(this).attr('id', '');
		                });
	
		            }
	
		        }
	
		    };
	
		    Slick.prototype.interrupt = function( toggle ) {
	
		        var _ = this;
	
		        if( !toggle ) {
		            _.autoPlay();
		        }
		        _.interrupted = toggle;
	
		    };
	
		    Slick.prototype.selectHandler = function(event) {
	
		        var _ = this;
	
		        var targetElement =
		            $(event.target).is('.slick-slide') ?
		                $(event.target) :
		                $(event.target).parents('.slick-slide');
	
		        var index = parseInt(targetElement.attr('data-slick-index'));
	
		        if (!index) index = 0;
	
		        if (_.slideCount <= _.options.slidesToShow) {
	
		            _.slideHandler(index, false, true);
		            return;
	
		        }
	
		        _.slideHandler(index);
	
		    };
	
		    Slick.prototype.slideHandler = function(index, sync, dontAnimate) {
	
		        var targetSlide, animSlide, oldSlide, slideLeft, targetLeft = null,
		            _ = this, navTarget;
	
		        sync = sync || false;
	
		        if (_.animating === true && _.options.waitForAnimate === true) {
		            return;
		        }
	
		        if (_.options.fade === true && _.currentSlide === index) {
		            return;
		        }
	
		        if (sync === false) {
		            _.asNavFor(index);
		        }
	
		        targetSlide = index;
		        targetLeft = _.getLeft(targetSlide);
		        slideLeft = _.getLeft(_.currentSlide);
	
		        _.currentLeft = _.swipeLeft === null ? slideLeft : _.swipeLeft;
	
		        if (_.options.infinite === false && _.options.centerMode === false && (index < 0 || index > _.getDotCount() * _.options.slidesToScroll)) {
		            if (_.options.fade === false) {
		                targetSlide = _.currentSlide;
		                if (dontAnimate !== true) {
		                    _.animateSlide(slideLeft, function() {
		                        _.postSlide(targetSlide);
		                    });
		                } else {
		                    _.postSlide(targetSlide);
		                }
		            }
		            return;
		        } else if (_.options.infinite === false && _.options.centerMode === true && (index < 0 || index > (_.slideCount - _.options.slidesToScroll))) {
		            if (_.options.fade === false) {
		                targetSlide = _.currentSlide;
		                if (dontAnimate !== true) {
		                    _.animateSlide(slideLeft, function() {
		                        _.postSlide(targetSlide);
		                    });
		                } else {
		                    _.postSlide(targetSlide);
		                }
		            }
		            return;
		        }
	
		        if ( _.options.autoplay ) {
		            clearInterval(_.autoPlayTimer);
		        }
	
		        if (targetSlide < 0) {
		            if (_.slideCount % _.options.slidesToScroll !== 0) {
		                animSlide = _.slideCount - (_.slideCount % _.options.slidesToScroll);
		            } else {
		                animSlide = _.slideCount + targetSlide;
		            }
		        } else if (targetSlide >= _.slideCount) {
		            if (_.slideCount % _.options.slidesToScroll !== 0) {
		                animSlide = 0;
		            } else {
		                animSlide = targetSlide - _.slideCount;
		            }
		        } else {
		            animSlide = targetSlide;
		        }
	
		        _.animating = true;
	
		        _.$slider.trigger('beforeChange', [_, _.currentSlide, animSlide]);
	
		        oldSlide = _.currentSlide;
		        _.currentSlide = animSlide;
	
		        _.setSlideClasses(_.currentSlide);
	
		        if ( _.options.asNavFor ) {
	
		            navTarget = _.getNavTarget();
		            navTarget = navTarget.slick('getSlick');
	
		            if ( navTarget.slideCount <= navTarget.options.slidesToShow ) {
		                navTarget.setSlideClasses(_.currentSlide);
		            }
	
		        }
	
		        _.updateDots();
		        _.updateArrows();
	
		        if (_.options.fade === true) {
		            if (dontAnimate !== true) {
	
		                _.fadeSlideOut(oldSlide);
	
		                _.fadeSlide(animSlide, function() {
		                    _.postSlide(animSlide);
		                });
	
		            } else {
		                _.postSlide(animSlide);
		            }
		            _.animateHeight();
		            return;
		        }
	
		        if (dontAnimate !== true) {
		            _.animateSlide(targetLeft, function() {
		                _.postSlide(animSlide);
		            });
		        } else {
		            _.postSlide(animSlide);
		        }
	
		    };
	
		    Slick.prototype.startLoad = function() {
	
		        var _ = this;
	
		        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {
	
		            _.$prevArrow.hide();
		            _.$nextArrow.hide();
	
		        }
	
		        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {
	
		            _.$dots.hide();
	
		        }
	
		        _.$slider.addClass('slick-loading');
	
		    };
	
		    Slick.prototype.swipeDirection = function() {
	
		        var xDist, yDist, r, swipeAngle, _ = this;
	
		        xDist = _.touchObject.startX - _.touchObject.curX;
		        yDist = _.touchObject.startY - _.touchObject.curY;
		        r = Math.atan2(yDist, xDist);
	
		        swipeAngle = Math.round(r * 180 / Math.PI);
		        if (swipeAngle < 0) {
		            swipeAngle = 360 - Math.abs(swipeAngle);
		        }
	
		        if ((swipeAngle <= 45) && (swipeAngle >= 0)) {
		            return (_.options.rtl === false ? 'left' : 'right');
		        }
		        if ((swipeAngle <= 360) && (swipeAngle >= 315)) {
		            return (_.options.rtl === false ? 'left' : 'right');
		        }
		        if ((swipeAngle >= 135) && (swipeAngle <= 225)) {
		            return (_.options.rtl === false ? 'right' : 'left');
		        }
		        if (_.options.verticalSwiping === true) {
		            if ((swipeAngle >= 35) && (swipeAngle <= 135)) {
		                return 'down';
		            } else {
		                return 'up';
		            }
		        }
	
		        return 'vertical';
	
		    };
	
		    Slick.prototype.swipeEnd = function(event) {
	
		        var _ = this,
		            slideCount,
		            direction;
	
		        _.dragging = false;
		        _.swiping = false;
	
		        if (_.scrolling) {
		            _.scrolling = false;
		            return false;
		        }
	
		        _.interrupted = false;
		        _.shouldClick = ( _.touchObject.swipeLength > 10 ) ? false : true;
	
		        if ( _.touchObject.curX === undefined ) {
		            return false;
		        }
	
		        if ( _.touchObject.edgeHit === true ) {
		            _.$slider.trigger('edge', [_, _.swipeDirection() ]);
		        }
	
		        if ( _.touchObject.swipeLength >= _.touchObject.minSwipe ) {
	
		            direction = _.swipeDirection();
	
		            switch ( direction ) {
	
		                case 'left':
		                case 'down':
	
		                    slideCount =
		                        _.options.swipeToSlide ?
		                            _.checkNavigable( _.currentSlide + _.getSlideCount() ) :
		                            _.currentSlide + _.getSlideCount();
	
		                    _.currentDirection = 0;
	
		                    break;
	
		                case 'right':
		                case 'up':
	
		                    slideCount =
		                        _.options.swipeToSlide ?
		                            _.checkNavigable( _.currentSlide - _.getSlideCount() ) :
		                            _.currentSlide - _.getSlideCount();
	
		                    _.currentDirection = 1;
	
		                    break;
	
		                default:
	
	
		            }
	
		            if( direction != 'vertical' ) {
	
		                _.slideHandler( slideCount );
		                _.touchObject = {};
		                _.$slider.trigger('swipe', [_, direction ]);
	
		            }
	
		        } else {
	
		            if ( _.touchObject.startX !== _.touchObject.curX ) {
	
		                _.slideHandler( _.currentSlide );
		                _.touchObject = {};
	
		            }
	
		        }
	
		    };
	
		    Slick.prototype.swipeHandler = function(event) {
	
		        var _ = this;
	
		        if ((_.options.swipe === false) || ('ontouchend' in document && _.options.swipe === false)) {
		            return;
		        } else if (_.options.draggable === false && event.type.indexOf('mouse') !== -1) {
		            return;
		        }
	
		        _.touchObject.fingerCount = event.originalEvent && event.originalEvent.touches !== undefined ?
		            event.originalEvent.touches.length : 1;
	
		        _.touchObject.minSwipe = _.listWidth / _.options
		            .touchThreshold;
	
		        if (_.options.verticalSwiping === true) {
		            _.touchObject.minSwipe = _.listHeight / _.options
		                .touchThreshold;
		        }
	
		        switch (event.data.action) {
	
		            case 'start':
		                _.swipeStart(event);
		                break;
	
		            case 'move':
		                _.swipeMove(event);
		                break;
	
		            case 'end':
		                _.swipeEnd(event);
		                break;
	
		        }
	
		    };
	
		    Slick.prototype.swipeMove = function(event) {
	
		        var _ = this,
		            edgeWasHit = false,
		            curLeft, swipeDirection, swipeLength, positionOffset, touches, verticalSwipeLength;
	
		        touches = event.originalEvent !== undefined ? event.originalEvent.touches : null;
	
		        if (!_.dragging || _.scrolling || touches && touches.length !== 1) {
		            return false;
		        }
	
		        curLeft = _.getLeft(_.currentSlide);
	
		        _.touchObject.curX = touches !== undefined ? touches[0].pageX : event.clientX;
		        _.touchObject.curY = touches !== undefined ? touches[0].pageY : event.clientY;
	
		        _.touchObject.swipeLength = Math.round(Math.sqrt(
		            Math.pow(_.touchObject.curX - _.touchObject.startX, 2)));
	
		        verticalSwipeLength = Math.round(Math.sqrt(
		            Math.pow(_.touchObject.curY - _.touchObject.startY, 2)));
	
		        if (!_.options.verticalSwiping && !_.swiping && verticalSwipeLength > 4) {
		            _.scrolling = true;
		            return false;
		        }
	
		        if (_.options.verticalSwiping === true) {
		            _.touchObject.swipeLength = verticalSwipeLength;
		        }
	
		        swipeDirection = _.swipeDirection();
	
		        if (event.originalEvent !== undefined && _.touchObject.swipeLength > 4) {
		            _.swiping = true;
		            event.preventDefault();
		        }
	
		        positionOffset = (_.options.rtl === false ? 1 : -1) * (_.touchObject.curX > _.touchObject.startX ? 1 : -1);
		        if (_.options.verticalSwiping === true) {
		            positionOffset = _.touchObject.curY > _.touchObject.startY ? 1 : -1;
		        }
	
	
		        swipeLength = _.touchObject.swipeLength;
	
		        _.touchObject.edgeHit = false;
	
		        if (_.options.infinite === false) {
		            if ((_.currentSlide === 0 && swipeDirection === 'right') || (_.currentSlide >= _.getDotCount() && swipeDirection === 'left')) {
		                swipeLength = _.touchObject.swipeLength * _.options.edgeFriction;
		                _.touchObject.edgeHit = true;
		            }
		        }
	
		        if (_.options.vertical === false) {
		            _.swipeLeft = curLeft + swipeLength * positionOffset;
		        } else {
		            _.swipeLeft = curLeft + (swipeLength * (_.$list.height() / _.listWidth)) * positionOffset;
		        }
		        if (_.options.verticalSwiping === true) {
		            _.swipeLeft = curLeft + swipeLength * positionOffset;
		        }
	
		        if (_.options.fade === true || _.options.touchMove === false) {
		            return false;
		        }
	
		        if (_.animating === true) {
		            _.swipeLeft = null;
		            return false;
		        }
	
		        _.setCSS(_.swipeLeft);
	
		    };
	
		    Slick.prototype.swipeStart = function(event) {
	
		        var _ = this,
		            touches;
	
		        _.interrupted = true;
	
		        if (_.touchObject.fingerCount !== 1 || _.slideCount <= _.options.slidesToShow) {
		            _.touchObject = {};
		            return false;
		        }
	
		        if (event.originalEvent !== undefined && event.originalEvent.touches !== undefined) {
		            touches = event.originalEvent.touches[0];
		        }
	
		        _.touchObject.startX = _.touchObject.curX = touches !== undefined ? touches.pageX : event.clientX;
		        _.touchObject.startY = _.touchObject.curY = touches !== undefined ? touches.pageY : event.clientY;
	
		        _.dragging = true;
	
		    };
	
		    Slick.prototype.unfilterSlides = Slick.prototype.slickUnfilter = function() {
	
		        var _ = this;
	
		        if (_.$slidesCache !== null) {
	
		            _.unload();
	
		            _.$slideTrack.children(this.options.slide).detach();
	
		            _.$slidesCache.appendTo(_.$slideTrack);
	
		            _.reinit();
	
		        }
	
		    };
	
		    Slick.prototype.unload = function() {
	
		        var _ = this;
	
		        $('.slick-cloned', _.$slider).remove();
	
		        if (_.$dots) {
		            _.$dots.remove();
		        }
	
		        if (_.$prevArrow && _.htmlExpr.test(_.options.prevArrow)) {
		            _.$prevArrow.remove();
		        }
	
		        if (_.$nextArrow && _.htmlExpr.test(_.options.nextArrow)) {
		            _.$nextArrow.remove();
		        }
	
		        _.$slides
		            .removeClass('slick-slide slick-active slick-visible slick-current')
		            .attr('aria-hidden', 'true')
		            .css('width', '');
	
		    };
	
		    Slick.prototype.unslick = function(fromBreakpoint) {
	
		        var _ = this;
		        _.$slider.trigger('unslick', [_, fromBreakpoint]);
		        _.destroy();
	
		    };
	
		    Slick.prototype.updateArrows = function() {
	
		        var _ = this,
		            centerOffset;
	
		        centerOffset = Math.floor(_.options.slidesToShow / 2);
	
		        if ( _.options.arrows === true &&
		            _.slideCount > _.options.slidesToShow &&
		            !_.options.infinite ) {
	
		            _.$prevArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');
		            _.$nextArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');
	
		            if (_.currentSlide === 0) {
	
		                _.$prevArrow.addClass('slick-disabled').attr('aria-disabled', 'true');
		                _.$nextArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');
	
		            } else if (_.currentSlide >= _.slideCount - _.options.slidesToShow && _.options.centerMode === false) {
	
		                _.$nextArrow.addClass('slick-disabled').attr('aria-disabled', 'true');
		                _.$prevArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');
	
		            } else if (_.currentSlide >= _.slideCount - 1 && _.options.centerMode === true) {
	
		                _.$nextArrow.addClass('slick-disabled').attr('aria-disabled', 'true');
		                _.$prevArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');
	
		            }
	
		        }
	
		    };
	
		    Slick.prototype.updateDots = function() {
	
		        var _ = this;
	
		        if (_.$dots !== null) {
	
		            _.$dots
		                .find('li')
		                    .removeClass('slick-active')
		                    .end();
	
		            _.$dots
		                .find('li')
		                .eq(Math.floor(_.currentSlide / _.options.slidesToScroll))
		                .addClass('slick-active');
	
		        }
	
		    };
	
		    Slick.prototype.visibility = function() {
	
		        var _ = this;
	
		        if ( _.options.autoplay ) {
	
		            if ( document[_.hidden] ) {
	
		                _.interrupted = true;
	
		            } else {
	
		                _.interrupted = false;
	
		            }
	
		        }
	
		    };
	
		    $.fn.slick = function() {
		        var _ = this,
		            opt = arguments[0],
		            args = Array.prototype.slice.call(arguments, 1),
		            l = _.length,
		            i,
		            ret;
		        for (i = 0; i < l; i++) {
		            if (typeof opt == 'object' || typeof opt == 'undefined')
		                _[i].slick = new Slick(_[i], opt);
		            else
		                ret = _[i].slick[opt].apply(_[i].slick, args);
		            if (typeof ret != 'undefined') return ret;
		        }
		        return _;
		    };
	
		}));
	
	
	/***/ },
	/* 642 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
		var $ = __webpack_require__(4);
	
		function Footer() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.Footer = inherit(Footer, BaseModule, {
	
			init: function () {
	
			},
	
			busEvents: {
	
			},
	
			domEvents: {
	
			}
		});
	
	/***/ },
	/* 643 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var commons = __webpack_require__(23);
		var inherit = __webpack_require__(14);
	
		var $ = __webpack_require__(4);
	
	
		function Gadgetbar() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.Gadgetbar = module.exports = inherit(Gadgetbar, BaseModule, {
	
			busEvents: {
				'breakpointChange': 'onBreakpointChange'
			},
	
			domEvents: {},
	
			touchClass: 'is-touch',
	
			init: function() {
				this.$ListOfHearts = this.$ctx.find('.mod-gadgetbar__item--like .mod-gadgetbar__btn:not(.mod-gadgetbar__btn--active)');
				this.$hearts = this.$ctx.find('.mod-gadgetbar__heart-indicator');
				this.$shareLinks = this.$ctx.find('.js-social-share');
	
				this.pagePrint();
				this.initHearts();
				this.initShareLinks();
			},
	
			pagePrint: function() {
				this.$ctx.find('.js-print').on('click', function(event) {
					event.preventDefault();
					setTimeout(function(){ window.print(); }, 200);
				});
			},
	
			initHearts : function() {
				var self = this;
				var iMaxHearts = this.$ListOfHearts.length;
				this.$ListOfHearts
					.on('mouseover', function() {
						var iIndex = $(this).data('heart-index');
						self.updateHeartState(iIndex);
					})
					.each(function(iIndex) {
						$(this).data('heart-index', iMaxHearts - iIndex);
					})
				;
			},
	
			updateHeartState: function(iIndex) {
				// add selected class to current and all below
				this.$ListOfHearts.each(function() {
					var $this = $(this);
					if ($this.data('heart-index') <= iIndex) {
						$this.addClass('is-selected');
					} else {
						$this.removeClass('is-selected');
					}
				});
	
				this.$hearts.text(iIndex);
			},
	
			initShareLinks: function() {
				this.$shareLinks.each(function(i, obj) {
					$(this).share({
						network: $(obj).data('share-network'),
						text: $(obj).data('share-text')
					});
				});
			},
	
			onBreakpointChange: function() {
				if(commons.isTouchDevice()) {
					this.$ctx.addClass(this.touchClass);
				} else {
					this.$ctx.removeClass(this.touchClass);
				}
			}
	
		});
	
	/***/ },
	/* 644 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
		var $ = __webpack_require__(4);
	
		function Header() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.Header = inherit(Header, BaseModule, {
	
			init: function () {
			},
	
			busEvents: {
	
			},
	
			domEvents: {
	
			}
		});
	
	/***/ },
	/* 645 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
	
		var $ = __webpack_require__(4);
	
	
		function LanguageSelector() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.LanguageSelector = module.exports = inherit(LanguageSelector, BaseModule, {
	
			busEvents: {},
	
			domEvents: {
				'click .mod-language-selector__trigger' : 'toggleMenu',
				'click .mod-language-selector__label' : 'toggleMenu'
			},
	
			isOpen : false,
			openClass: 'is-open',
	
			init: function () {
				this.$ctx.on('click', this.onModuleClick.bind(this));
				$(window).off('click.LanguageSelector').on('click.LanguageSelector', this.onBodyClick.bind(this)); //body click & close
			},
	
			onBodyClick : function() {
				this.close();
			},
	
			onModuleClick : function(event) {
				event.stopPropagation();
			},
	
			toggleMenu: function() {
				if(!this.isOpen) {
					this.open();
				} else {
					this.close();
				}
			},
	
			open: function() {
				this.$ctx.addClass(this.openClass);
				this.isOpen = true;
			},
	
			close: function() {
				this.$ctx.removeClass(this.openClass);
				this.isOpen = false;
			}
	
		});
	
	/***/ },
	/* 646 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
		var breakpointHelper = __webpack_require__(22);
		var commons = __webpack_require__(23);
		var $ = __webpack_require__(4);
	
	
		function Navigation() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.Navigation = module.exports = inherit(Navigation, BaseModule, {
	
			busEvents: {
				'breakpointChange': 'onBreakpointChange'
			},
	
			domEvents: {},
	
			options: {
				column_weight:1,
	
				// timing
				// wait ms before hiding navi when mouseout
				ms_delayhide: 1000,
				// duration for shader fade out animation
				ms_shaderfade: 300,
				// duration for flyout slide down animation
				ms_slidedown: 300,
				// wait before opening flyout
				ms_delayshow: 250,
				// duration for mobile sliding
				ms_navislide: 300,
				// shading layer max opacity
				shader_opacity: 0.3,
	
				// html
				html_row:					'<div class="row"></div>',
				html_navicolumn: 			'<div class="cont col-sm-{colwidth} navigation-3"><ul class="nav"></ul></div>',
				html_megadropdowncontent: 	'<div class="row"><div class="col-sm-4 col-md-3 mega-drop-sidebar-wrapper"></div><div class="col-sm-8 col-md-9 mega-drop-navi-wrapper"></div></div>'
			},
	
			init: function () {
				this.$mod = this.$ctx;
				this.$navLevel1 = this.$mod.find('.navigation-1');
				this.$navLevel2 = this.$mod.find('.navigation-2');
				this.$navLevel3 = this.$navLevel2.find(".navigation-3");
				this.hasTopNavigation = this.$navLevel1.length != 0;
	
				this.$navLevel2List = this.$navLevel2.find('> ul');
				this.$navLevel2Items = this.$navLevel2.find(">ul>li");
				this.$navLevel2ItemSelected = this.$navLevel2.find(">ul>li.selected");
	
				this.$megadropdown = this.$mod.find('.mega-drop-anchor');
				this.$megadropdowncontent = this.$megadropdown.find('.mega-drop');
	
				this.$outerwrapper = this.$mod.find(".mega-drop-outer-wrapper");
				this.$megadropwrapper = this.$mod.find(".mega-drop-wrapper");
				this.$megadropfooter = this.$outerwrapper.find(".megadrop-footer-wrapper");
				this.$megadropdowncloser = this.$megadropdown.find(".btn-close");
				this.$shader = this.$mod.find('.mega-drop-shader');
				this.$offcanvas = $(".page");
				this.$contentContainer = $(".page-content");
				this.$contentFooter = $('.mod-footer');
	
				this.$hamburger = this.$mod.find('button.navbar-toggle');
				this.$backbutton = this.$mod.find('.sidebar-offcanvas.navbar .btn-back');
				this.$sidebar = this.$mod.find('.sidebar-offcanvas.navbar');
				this.$mainnavi = this.$mod.find('.navigation-main');
	
				//mrm.util.debug.log("this.hasTopNavigation: " + this.hasTopNavigation);
	
				this.showingMobile = null;
	
				function addSubmenuClasses($nav) {
	
					$nav.find(">ul>li>a").each(function() {
						var $link = $(this);
	
						if ($link.parent("li").find(".navigation").length) {
							$link.addClass("has-mobile-submenu");
						}
					});
				}	
				var current1 = 0;
				function initL2(prefix, $l2) {
				var current3 = 0;
				addSubmenuClasses($l2);
				$l2.data("menupath", prefix);
	
					$l2.find(".navigation-3").each(function() {
	
						var current4 = 0, $l3 = $(this);
	
						$l3.data("menupath", prefix+"-"+current3);
	
						addSubmenuClasses($l3);
	
						$l3.find(".navigation-4").each(function() {
	
							var $l4 = $(this);
	
							$l4.data("menupath", prefix + "-" + current3 + "-" + current4);
	
							addSubmenuClasses($l4);
							current4++;
						});
						current3++;
					});
				}
	
				if ( this.hasTopNavigation ) {
					this.$navLevel1.each(function() {
						var current2 = 0, $l1 = $(this);
						$l1.data("menupath", current1);
						addSubmenuClasses($l1);
	
						$l1.find(".navigation-2").each(function() {
							initL2(current1+"-"+current2, $(this));
							current2++;
						});
						current1++;
					});
				} else {
					var current2 = 0;
					$(".navigation-2").each(function() {
						initL2( "0-" + current2, $(this) );
						current2++;
					});
				}
	
				//this.onBreakpointChange();
	
				$(window)
					.on('load', $.proxy(this.build, this))
					.on('resize', $.proxy(this.updateNavState, this));
				//.on('mediaQueryBreakDetector.breakpointChange', $.proxy(this.onBreakpointChange, this));
	
				this.closeFlyout();
			},	
	
			/**
			 * onhash changed handler (mobile navi)
			 * @param e
			 */
			onHashChanged: function(fun, e) {
	
				var destmenu  = this.groundControl('get')||"",
					lastdepth = (this.lastnavi||"0").split("-").length;
	
				if (!this.hasTopNavigation && lastdepth == 1) {
					lastdepth++;
					if(destmenu)
						destmenu="0-"+destmenu;
				}
	
				//mrm.util.debug.fn("onHashChanged", [destmenu, lastdepth]);
	
				this.lastnavi = destmenu;
	
				if ( destmenu === "" || (destmenu=="0" && !this.hasTopNavigation)) {
					this.$offcanvas.css({right:0});
					this.$navLevel2.removeClass("hide");
					this.$navLevel3.addClass("hide");
					this.$mainnavi.css({left: 0});
					return;
				}
	
				var path = destmenu.split("-");
				var depth = path.length;
				var $menu = this.hasTopNavigation ? $( this.$navLevel1[path[0]] ) : $( this.$navLevel2[path[0]]).parent(),
					submenus = [];
	
				//mrm.util.debug.log("path length: " + path.length);
				//mrm.util.debug.log("path: " + path);
	
				var height = 0;
				if (path.length>1) {
					$menu = $menu.find(".navigation-2").addClass("hide").eq(path[1]);
	
					submenus.push($menu);
					if (path.length>2) {
						$menu = $menu.find(".navigation-3").addClass("hide").eq(path[2]);
						submenus.push($menu);
						if (path.length>3) {
							$menu = $menu.find(".navigation-4").addClass("hide").eq(path[3]);
							submenus.push($menu);
						}
					}
					height = submenus[submenus.length-1].outerHeight();
	
				} else if ( this.hasTopNavigation ) {
					height = this.$navLevel1.outerHeight() + this.$navLevel1.position().top;
				} else {
					$menu.find(".navigation-2").removeClass("hidden-xs");
					height = this.$navLevel2.outerHeight() + this.$navLevel2.position().top;
				}
	
				for ( var i=0; i<submenus.length; i++ ) {
					var $sub = submenus[i];
					$sub.removeClass("hidden-xs hide");
	
					var subheight = $sub.outerHeight() + $sub.position().top;
					height = subheight;
				}
	
				var $self = this;
				this.$megadropfooter.animate(
					{
						top:height + $(".search-bar-wrapper").outerHeight()
					}, function () {
						$self.updateHeight(height);
					});
	
				if (lastdepth>depth) {
					this.$mainnavi.animate({left: (-100*(depth-1))+"%"}, {duration: this.options.ms_navislide});
					return;
				}
	
				// slide in offcanvas container
				this.$offcanvas.css({right:"100%"});
	
				//this.$mainnavi.css({left: 0});
	
				this.$mainnavi.animate({left: (-100*(submenus.length + (this.hasTopNavigation?0:0) ))+"%"}, {duration: this.options.ms_navislide});
	
			},
	
	
			/**
			 * on breakpoint change-handler, re/binds the appropriate handlers
			 */
			onBreakpointChange: function() {
	
				this.groundControl('set');
				this.closeFlyout();
	
				//var actualMobile = $("body").mediaQueryBreakDetector('getBreakpointData').breakpointName == "xs"; from old zwp
				var actualMobile = breakpointHelper.isBreakpoint(mrm.config.breakpoints.XS);
	
				//mrm.util.debug.fn("onBreakpointChange", [actualMobile]);
	
				if (this.showingMobile !== actualMobile) {
					this.$shader
						.off(".navigation");
					this.$navLevel2Items
						.off(".navigation");
					this.$megadropwrapper
						.off(".navigation");
					this.$hamburger
						.off(".navigation");
					this.$backbutton
						.off(".navigation");
					this.$mainnavi
						.off(".navigation");
					this.$megadropfooter
						.off(".navigation");
					this.$contentContainer
						.removeAttr('style');
	
					if (actualMobile) {
						// bind mobile handlers
						this.$hamburger.on('click.navigation', $.proxy(this.onHamburgerClick, this));
						this.$backbutton.on('click.navigation', $.proxy(this.onBackClick, this));
						this.$mainnavi.find('li>a')
							.on('click.navigation', $.proxy(this.onMobileMenuClick, this))
							.on('swiperight.navigation', $.proxy(this.onBackClick, this));
	
	
	
					} else {
						// bind tablet/desktop handlers
						if(commons.isTouchDevice()) {
							this.$navLevel2Items.on("click.navigation", $.proxy(this.onTouchStart2nd, this));
						} else {
							this.$navLevel2Items
								.on("mouseenter.navigation", $.proxy(this.onMouseEnter2nd, this))
								.on("mouseleave.navigation", $.proxy(this.onMouseLeaveNavi, this));
						}
						this.$megadropwrapper
							.on("mouseenter.navigation", $.proxy(function() {this.ishovered = true;}, this))
							.on("mouseleave.navigation", $.proxy(this.onMouseLeaveNavi, this));
	
						this.$megadropfooter
							.on("mouseenter.navigation", $.proxy(function() {this.ishovered = true;}, this))
							.on("mouseleave.navigation", $.proxy(this.onMouseLeaveNavi, this));
	
						this.$shader
							.on("click.navigation", $.proxy(this.closeFlyout, this));
	
						//this.hashControl.off("hashControl.hashChange", $.proxy(this.onHashChanged, this));
	
					}
				}
				this.showingMobile = actualMobile;
	
				this.build();
			},
	
	
			/**
			 * clickhandler for a link in mobile menu
			 * @param e
			 */
			onMobileMenuClick: function(e) {
	
				//mrm.util.debug.fn("onMobileMenuClick");
	
				//if ( $("body").mediaQueryBreakDetector('getBreakpointData').breakpointName !== "xs" ) {
				if ( !breakpointHelper.isBreakpoint(mrm.config.breakpoints.XS)) {
					return;
				}
	
				var $link = $(e.target);
				var $subnavi = $link.closest("li").find(">div.navigation");
	
				// removes all hide classes from menu elements to get the right height
				this.$navLevel1.find(".navigation").removeClass("hidden-xs hide");
	
				if ( $subnavi.length ) {
					this.groundControl('set', $subnavi.data("menupath"));
					e.preventDefault();
					// updates height on submenu link
					this.$contentContainer.removeAttr("style");
					this.updateHeight();
				} else {
					this.groundControl('set');
					// removes height from content container
					this.$contentContainer.removeAttr("style");
				}
	
			},
	
	
			/**
			 * clickhandler backbutton - go back in navi
			 */
			onBackClick: function(evt) {
				var path = this.lastnavi.split("-"),
					pathstring;
				evt.preventDefault();
				path.pop();
	
				pathstring = path.join("-");
	
				if (pathstring==="" || ( pathstring==="0" && (!this.hasTopNavigation) )) {
					this.groundControl('set');
					// removes height from content container
					this.$contentContainer.removeAttr("style");
				} else {
					this.groundControl('set', path.join("-"));
				}
	
				//mrm.util.debug.fn("onBackClick", [path, pathstring]);
	
			},
	
	
			/**
			 * clickhandler for hamburger button
			 */
			onHamburgerClick: function(evt) {
				evt.preventDefault();
				this.groundControl('set', "0");
				//mrm.util.debug.fn("onHamburgerClick");
			},
	
	
			/**
			 * touchstart-handler for the 2nd level menu items
			 * @param e
			 */
			onTouchStart2nd: function(e) {
				var $target = $(e.target),
					$item = e.target.tagName === 'LI' ? $target : $target.closest("LI"),
					hasSubItems = $item.find(".navigation-3").length;
	
				if (!$item.data('clicked') && hasSubItems) {
					$item.closest("ul").find("li").data("clicked", false);
					$item.data('clicked', true);
					e.preventDefault();
					e.overrideDelay = 1;
					this.onMouseEnter2nd(e);
				}
			},
	
	
			/**
			 * onmouseleave-handler for the navigation, sets a timer to close flyout
			 * @param e
			 */
			onMouseLeaveNavi: function(e) {
				this.ishovered = false;
				this.closeTimer = window.setTimeout($.proxy(function() {
					if (this.ishovered) return;
					this.closeFlyout(null, true);
				},this), this.options.ms_delayhide);
	
				if (this.openTimer) {
					window.clearTimeout(this.openTimer);
					this.openTimer = 0;
				}
			},
	
	
			/**
			 * mouseenter-handler for the 2nd level menu items
			 * @param e
			 */
			onMouseEnter2nd: function(e) {
				this.ishovered = true;
				var $item = e.target.tagName === 'LI' ? $(e.target) : $(e.target).closest("LI");
	
				// kill closing timeout
				if (this.closeTimer) {
					window.clearTimeout(this.closeTimer);
					this.closeTimer = 0;
				}
				if (this.openTimer) {
					window.clearTimeout(this.openTimer);
					this.openTimer = 0;
				}
	
				if ( !$item.find(".navigation").length ) {
					// this item has no sub elements.
					this.closeFlyout()
					return;
				}
	
				if (this.flyoutOpened) {
					this.doOpenFlyout($item);
				} else {
					if (e.overrideDelay){
						this.doOpenFlyout($item)
					} else {
						this.openTimer = window.setTimeout($.proxy(function() {
								this.doOpenFlyout($item);
							},this),
							this.options.ms_delayshow
						);
					}
				}
	
				e.preventDefault();
	
			},
	
	
			/**
			 * open mega flyout
			 * @param $item
			 */
			doOpenFlyout: function ($item) {
				//var breakpoint = $("body").mediaQueryBreakDetector('getBreakpointData').breakpointName,
				var breakpoint = breakpointHelper.getBreakpointSize(),
					$mddsidebar = $item.find(".mega-drop-sidebar"),
					$nav3rd = $item.find(".navigation-3").clone().removeClass("hide").css("display","block"),
					columnscount = ( breakpoint == "sm" ) ? 2 : 3,
					plugin = this;
	
				//mrm.util.debug.fn("doOpenFlyout", [breakpoint, columnscount]);
	
				// empty dropdown
				this.$megadropdowncontent.empty();
	
				if ($mddsidebar.length) {
					// have got sidebar: insert a 4-8 col
					this.$megadropdowncontent
						.append(this.options.html_megadropdowncontent);
	
					// put the side content inside
					this.$megadropdowncontent.find(".mega-drop-sidebar-wrapper")
						.append($mddsidebar.clone());
	
					// create grid for navilinks
					this.$megadropdowncontent.find(".mega-drop-navi-wrapper")
						.append( this._generateRow( columnscount ) );
	
				} else {
					// no sidebar, add one column
					columnscount++;
					// create grid for navilinks
					this.$megadropdowncontent
						.append( this._generateRow( columnscount ) );
				}
	
				// measure navi: append to dom and calculate height
				this.$cols[0].append($nav3rd);
	
				this.$megadropdown.show();
	
				var totalheight = $nav3rd.outerHeight(),
					destheight = this.options.column_weight * totalheight / (columnscount-0.5) ,
					curcol = 0;
	
				// remove again
				this.$cols[0].empty();
	
	
				$nav3rd.find(">ul.nav").children().each(function() {
					var $this = $(this);
					plugin.$cols[curcol].append($this);
	
					if (plugin.$cols[curcol].height()>destheight) {
						if (curcol+1<plugin.$cols.length) {
							plugin.$cols[++curcol].append($this.remove());
						}
					}
	
				});
	
				this.$outerwrapper
					.stop(true)
					.animate({
							height: this.$megadropwrapper.outerHeight() + this.$megadropfooter.outerHeight(true)
						},{
							duration:  this.options.ms_slidedown
						}
					);
	
				this.$megadropdowncontent.find(">.row")
					.append(this.$megadropdowncloser);
	
				this.$megadropdowncloser
					.on("click.navigation",  $.proxy(this.onCloseClicked, this));
	
				this.$shader
					.css({
						height: $("body").height() - this.$megadropdown.offset().top - 1
					})
					.stop(true)
					.animate({
							opacity: this.options.shader_opacity
						},{
							duration: this.options.ms_shaderfade
						}
					);
	
				this.openTimer = 0;
				this.flyoutOpened = true;
	
				//mrm.util.debug.fn("doOpenFlyout", [breakpoint, columnscount]);
	
			},
	
	
			/**
			 * close flyout using animations
			 */
			closeFlyout: function() {
	
				//mrm.util.debug.fn("closeFlyout");
	
				this.flyoutOpened = false;
	
				this.$navLevel2Items.data('clicked',false);
	
				this.$outerwrapper
					.stop()
					.animate({
							height:0
						}, {
							duration: this.options.ms_slidedown
						}
					);
	
				this.$shader
					.animate({
							opacity:0
						}, {
							duration: this.options.ms_shaderfade,
							complete: function() {
								$(this).css("height",0);
							}
						}
					);
			},
	
	
			/**
			 * clickhandler for close button
			 * @param e
			 */
			onCloseClicked: function(e) {
				this.closeFlyout();
				if (e) e.preventDefault();
	
				//mrm.util.debug.fn("onCloseClicked");
	
			},
	
			build: function() {
				this.updateNavWidth();
				this.updateNavState();
				this.$navLevel2.css("visibility", "visible");
	
				//mrm.util.debug.fn("build");
	
			},
	
			updateNavWidth: function() {
				$('html').removeClass('nav2ndcollapsed');
				this.$navWidth = this.$navLevel2List.width();
	
				//mrm.util.debug.fn("updateNavWidth");
			},
	
	
			updateNavState: function() {
				$('html').removeClass('nav2ndcollapsed');
				this.$navLevel2ItemSelected.find('>a').css( 'height', '' ); // clear old height
	
				if(this.showingMobile) return;
	
				if(this.$navWidth >= this.$navLevel2.width()) {
					$('html').addClass('nav2ndcollapsed');
					var $sel =  this.$navLevel2ItemSelected.find('>a');
					var itemHeight = this.$navLevel2ItemSelected.height();
					var borderWidth = parseInt($sel.css("border-bottom-width"))||0;
					var paddingBottom = parseInt($sel.css("padding-bottom"))||0;
					var marginTop= parseInt($sel.css("margin-top"))||0;
	
					this.$navLevel2ItemSelected.find('>a').css({height: itemHeight - borderWidth - paddingBottom - marginTop});
				}
	
				//mrm.util.debug.fn("updateNavState");
			},
	
			// set the height of the active nav panel on the content container to prevent empty scolling in mobile mode
			updateHeight: function(h) {
	
				if(this.$megadropfooter.height() === 0) {
					var height = h;
				} else {
					var height = this.$megadropfooter.height() + this.$megadropfooter.position().top - 80;
				}
	
				height = height - this.$contentFooter.height(); //new, because footer is now outside from wrapper
	
				this.$contentContainer.css({
					"overflow" : "hidden",
					"height" : height
				})
	
				//mrm.util.debug.fn("updateHeight", [height]);
	
			},
	
	
			// Major Tom
			groundControl: function (action, value) {
				value = value || false;
	
				if(action == "set")
					this.$mod.data("navpos", value);
	
				else if(action == "get")
					return this.$mod.data("navpos");
	
				else
					return false;
	
				this.onHashChanged();
	
				//mrm.util.debug.fn("groundControl", [action, value]);
	
			},
	
			// privatees
			_generateRow: function(columnscount) {
				var $row = $(this.options.html_row),
					colwidth = 12/columnscount;
				this.$cols = [];
				for (var i=0; i<columnscount; i++) {
					this.$cols[i]=$(this.options.html_navicolumn.replace('{colwidth}',colwidth)).appendTo($row).find("ul");
				}
				return $row;
			}
		});
	
	/***/ },
	/* 647 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
		var breakpointHelper = __webpack_require__(22);
	
		var $ = __webpack_require__(4);
	
	
		function Search() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.Search = module.exports = inherit(Search, BaseModule, {
	
			busEvents: {
				'breakpointChange': 'onBreakpointChange'
			},
	
			domEvents: {
				'click .btn' : 'openSearch'
			},
	
			init: function () {
				this.btnSearch = this.$ctx.find('.btn');
			},
	
			openSearch: function() {
				if(breakpointHelper.isBreakpointOrLarger(mrm.config.breakpoints.SM)) {
					this.$ctx.toggleClass('is-open');
					this.btnSearch.prop('type', 'button');
				}
			},
	
			onBreakpointChange: function(breakpointData) {
				if(breakpointData.isXs) {
					this.$ctx.removeClass('is-open');
					this.btnSearch.prop('type', 'submit');
				} else {
					this.btnSearch.prop('type', 'button');
				}
			}
	
		});
	
	/***/ },
	/* 648 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
	
		var $ = __webpack_require__(4);
	
	
		function StageImage() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.StageImage = module.exports = inherit(StageImage, BaseModule, {
	
			busEvents: {
				'windowResize': 'onWindowResize'
			},
	
			domEvents: {},
	
			init: function () {
				this.picture = this.find('.mod-stage-image__picture');
				this.blurred = this.find('.mod-stage-image__blurred figure');
				this.overlay = this.find('.mod-stage-image__wrapper');
			},
	
			onWindowResize: function() {
				this.blurred.css({
					'margin-left' : this.picture.offset().left - this.overlay.offset().left
				});
			}
	
		});
	
	/***/ },
	/* 649 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
	
		var $ = __webpack_require__(4);
		__webpack_require__(640);
	
		function StageSlider() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.StageSlider = module.exports = inherit(StageSlider, BaseModule, {
	
			busEvents: {
				'breakpointChange': 'onBreakpointChange'
			},
	
			domEvents: {},
	
			dotClass: 'mod-stage-slider--dots',
			tabClass: 'mod-stage-slider--tabs',
			sliderIsActive : false,
	
			init: function () {
				this.$sliderImage = this.find('.mod-stage-slider__image-slider');
				this.$sliderContent = this.find('.mod-stage-slider__topic-slider');
				this.$sliderNavDots = this.find('.mod-stage-slider__dots');
			},
	
			initSlider: function() {
				var autoplaySpeed = this.$ctx.data('sliderPause');
				var animationSpeed = this.$ctx.data('sliderSpeed');
	
				this.$sliderImage.slick({
					autoplay: true,
					autoplaySpeed: autoplaySpeed,
					cssEase: 'ease-in-out',
					speed: animationSpeed,
					dots : true,
					infinite: true,
					asNavFor: this.$sliderContent,
					appendDots: this.$sliderNavDots,
					prevArrow: '<button type="button" class="slick-prev"><span>Previous</span></button>',
					nextArrow: '<button type="button" class="slick-next"><span>Next</span></button>'
				});
	
				this.sliderIsActive = true;
				this.contentSlider();
			},
	
			contentSlider: function() {
				this.$sliderContent.on('init', function() {
					$(this).addClass('is-initialized');
				});
				this.$sliderContent.slick({
					arrows: false,
					fade: true,
					speed: 800,
					asNavFor: this.$sliderImage
				});
			},
	
			destroySlider: function() {
				this.$sliderImage.slick('unslick');
				this.$sliderContent.slick('unslick').removeClass('is-initialized');
				this.sliderIsActive = false;
			},
	
			onBreakpointChange: function() {
				if(this.sliderIsActive) {
					this.destroySlider();
					this.initSlider();
				} else {
					this.initSlider();
				}
			}
		});
	
	/***/ },
	/* 650 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
	
		var $ = __webpack_require__(4);
	
	
		function Subnavigation() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.Subnavigation = module.exports = inherit(Subnavigation, BaseModule, {
	
			busEvents: {
				'breakpointChange': 'onBreakpointChange'
			},
	
			domEvents: {
				'click .mod-subnavigation__label' : 'toggleMenu',
				'click .mod-subnavigation__list a' : 'writePlaceholder'
			},
	
			placeholder: '.mod-subnavigation__label',
			hasPlaceholder: false,
	
			init: function () {
				this.listWrapper = this.find('.mod-subnavigation__list');
				this.listElement = this.listWrapper.find('li');
			},
	
			toggleMenu: function(event) {
				$(event.currentTarget).toggleClass('is-open');
				this.listWrapper.slideToggle();
			},
	
			destroyMenu: function() {
				this.find(this.placeholder).remove();
				this.listWrapper.removeAttr('style');
				this.hasPlaceholder = false;
			},
	
			toggleActiveList: function(target) {
				this.listElement.removeClass('is-active');
				target.addClass('is-active');
			},
	
			createPlaceholder: function() {
				var label = $('<div class="mod-subnavigation__label" />').insertBefore(this.listWrapper);
				var text = this.find('.is-active').text();
				this.hasPlaceholder = true;
				label.append(text);
			},
	
			writePlaceholder: function(event) {
				if(this.hasPlaceholder == true) {
					this.find(this.placeholder).empty().append($(event.currentTarget).text());
					this.toggleActiveList($(event.currentTarget).parent());
					$(this.placeholder).trigger('click');
				}
			},
	
			onBreakpointChange: function(breakpointData) {
				if(breakpointData.isXs) {
					this.createPlaceholder();
				} else {
					this.destroyMenu();
				}
			}
	
		});
	
	/***/ },
	/* 651 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var BaseModule = __webpack_require__(12);
		var inherit = __webpack_require__(14);
	
		var $ = __webpack_require__(4);
	
	
		function Doc_Highlight() {
			BaseModule.apply(this, arguments); // call constructor of super class
		}
	
		window.mrm.modules.Doc_Highlight = module.exports = inherit(Doc_Highlight, BaseModule, {
	
			busEvents: {},
	
			domEvents: {},
	
			init: function () {}
	
		});
	
	/***/ },
	/* 652 */
	/***/ function(module, exports) {
	
		/* WEBPACK VAR INJECTION */(function(global) {/* http://prismjs.com/download.html?themes=prism&languages=markup+css+clike+javascript */
		var _self="undefined"!=typeof window?window:"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope?self:{},Prism=function(){var e=/\blang(?:uage)?-(\w+)\b/i,t=_self.Prism={util:{encode:function(e){return e instanceof n?new n(e.type,t.util.encode(e.content),e.alias):"Array"===t.util.type(e)?e.map(t.util.encode):e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/\u00a0/g," ")},type:function(e){return Object.prototype.toString.call(e).match(/\[object (\w+)\]/)[1]},clone:function(e){var n=t.util.type(e);switch(n){case"Object":var a={};for(var r in e)e.hasOwnProperty(r)&&(a[r]=t.util.clone(e[r]));return a;case"Array":return e.map&&e.map(function(e){return t.util.clone(e)})}return e}},languages:{extend:function(e,n){var a=t.util.clone(t.languages[e]);for(var r in n)a[r]=n[r];return a},insertBefore:function(e,n,a,r){r=r||t.languages;var l=r[e];if(2==arguments.length){a=arguments[1];for(var i in a)a.hasOwnProperty(i)&&(l[i]=a[i]);return l}var o={};for(var s in l)if(l.hasOwnProperty(s)){if(s==n)for(var i in a)a.hasOwnProperty(i)&&(o[i]=a[i]);o[s]=l[s]}return t.languages.DFS(t.languages,function(t,n){n===r[e]&&t!=e&&(this[t]=o)}),r[e]=o},DFS:function(e,n,a,r){r=r||{};for(var l in e)e.hasOwnProperty(l)&&(n.call(e,l,e[l],a||l),"Object"!==t.util.type(e[l])||r[e[l]]?"Array"!==t.util.type(e[l])||r[e[l]]||(r[e[l]]=!0,t.languages.DFS(e[l],n,l,r)):(r[e[l]]=!0,t.languages.DFS(e[l],n,null,r)))}},plugins:{},highlightAll:function(e,n){for(var a,r=document.querySelectorAll('code[class*="language-"], [class*="language-"] code, code[class*="lang-"], [class*="lang-"] code'),l=0;a=r[l++];)t.highlightElement(a,e===!0,n)},highlightElement:function(n,a,r){for(var l,i,o=n;o&&!e.test(o.className);)o=o.parentNode;o&&(l=(o.className.match(e)||[,""])[1],i=t.languages[l]),n.className=n.className.replace(e,"").replace(/\s+/g," ")+" language-"+l,o=n.parentNode,/pre/i.test(o.nodeName)&&(o.className=o.className.replace(e,"").replace(/\s+/g," ")+" language-"+l);var s=n.textContent,u={element:n,language:l,grammar:i,code:s};if(!s||!i)return t.hooks.run("complete",u),void 0;if(t.hooks.run("before-highlight",u),a&&_self.Worker){var c=new Worker(t.filename);c.onmessage=function(e){u.highlightedCode=e.data,t.hooks.run("before-insert",u),u.element.innerHTML=u.highlightedCode,r&&r.call(u.element),t.hooks.run("after-highlight",u),t.hooks.run("complete",u)},c.postMessage(JSON.stringify({language:u.language,code:u.code,immediateClose:!0}))}else u.highlightedCode=t.highlight(u.code,u.grammar,u.language),t.hooks.run("before-insert",u),u.element.innerHTML=u.highlightedCode,r&&r.call(n),t.hooks.run("after-highlight",u),t.hooks.run("complete",u)},highlight:function(e,a,r){var l=t.tokenize(e,a);return n.stringify(t.util.encode(l),r)},tokenize:function(e,n){var a=t.Token,r=[e],l=n.rest;if(l){for(var i in l)n[i]=l[i];delete n.rest}e:for(var i in n)if(n.hasOwnProperty(i)&&n[i]){var o=n[i];o="Array"===t.util.type(o)?o:[o];for(var s=0;s<o.length;++s){var u=o[s],c=u.inside,g=!!u.lookbehind,f=0,h=u.alias;u=u.pattern||u;for(var p=0;p<r.length;p++){var d=r[p];if(r.length>e.length)break e;if(!(d instanceof a)){u.lastIndex=0;var m=u.exec(d);if(m){g&&(f=m[1].length);var y=m.index-1+f,m=m[0].slice(f),v=m.length,k=y+v,b=d.slice(0,y+1),w=d.slice(k+1),P=[p,1];b&&P.push(b);var A=new a(i,c?t.tokenize(m,c):m,h);P.push(A),w&&P.push(w),Array.prototype.splice.apply(r,P)}}}}}return r},hooks:{all:{},add:function(e,n){var a=t.hooks.all;a[e]=a[e]||[],a[e].push(n)},run:function(e,n){var a=t.hooks.all[e];if(a&&a.length)for(var r,l=0;r=a[l++];)r(n)}}},n=t.Token=function(e,t,n){this.type=e,this.content=t,this.alias=n};if(n.stringify=function(e,a,r){if("string"==typeof e)return e;if("Array"===t.util.type(e))return e.map(function(t){return n.stringify(t,a,e)}).join("");var l={type:e.type,content:n.stringify(e.content,a,r),tag:"span",classes:["token",e.type],attributes:{},language:a,parent:r};if("comment"==l.type&&(l.attributes.spellcheck="true"),e.alias){var i="Array"===t.util.type(e.alias)?e.alias:[e.alias];Array.prototype.push.apply(l.classes,i)}t.hooks.run("wrap",l);var o="";for(var s in l.attributes)o+=(o?" ":"")+s+'="'+(l.attributes[s]||"")+'"';return"<"+l.tag+' class="'+l.classes.join(" ")+'" '+o+">"+l.content+"</"+l.tag+">"},!_self.document)return _self.addEventListener?(_self.addEventListener("message",function(e){var n=JSON.parse(e.data),a=n.language,r=n.code,l=n.immediateClose;_self.postMessage(t.highlight(r,t.languages[a],a)),l&&_self.close()},!1),_self.Prism):_self.Prism;var a=document.currentScript||[].slice.call(document.getElementsByTagName("script")).pop();return a&&(t.filename=a.src,document.addEventListener&&!a.hasAttribute("data-manual")&&document.addEventListener("DOMContentLoaded",t.highlightAll)),_self.Prism}();"undefined"!=typeof module&&module.exports&&(module.exports=Prism),"undefined"!=typeof global&&(global.Prism=Prism);
		Prism.languages.markup={comment:/<!--[\w\W]*?-->/,prolog:/<\?[\w\W]+?\?>/,doctype:/<!DOCTYPE[\w\W]+?>/,cdata:/<!\[CDATA\[[\w\W]*?]]>/i,tag:{pattern:/<\/?(?!\d)[^\s>\/=.$<]+(?:\s+[^\s>\/=]+(?:=(?:("|')(?:\\\1|\\?(?!\1)[\w\W])*\1|[^\s'">=]+))?)*\s*\/?>/i,inside:{tag:{pattern:/^<\/?[^\s>\/]+/i,inside:{punctuation:/^<\/?/,namespace:/^[^\s>\/:]+:/}},"attr-value":{pattern:/=(?:('|")[\w\W]*?(\1)|[^\s>]+)/i,inside:{punctuation:/[=>"']/}},punctuation:/\/?>/,"attr-name":{pattern:/[^\s>\/]+/,inside:{namespace:/^[^\s>\/:]+:/}}}},entity:/&#?[\da-z]{1,8};/i},Prism.hooks.add("wrap",function(a){"entity"===a.type&&(a.attributes.title=a.content.replace(/&amp;/,"&"))}),Prism.languages.xml=Prism.languages.markup,Prism.languages.html=Prism.languages.markup,Prism.languages.mathml=Prism.languages.markup,Prism.languages.svg=Prism.languages.markup;
		Prism.languages.css={comment:/\/\*[\w\W]*?\*\//,atrule:{pattern:/@[\w-]+?.*?(;|(?=\s*\{))/i,inside:{rule:/@[\w-]+/}},url:/url\((?:(["'])(\\(?:\r\n|[\w\W])|(?!\1)[^\\\r\n])*\1|.*?)\)/i,selector:/[^\{\}\s][^\{\};]*?(?=\s*\{)/,string:/("|')(\\(?:\r\n|[\w\W])|(?!\1)[^\\\r\n])*\1/,property:/(\b|\B)[\w-]+(?=\s*:)/i,important:/\B!important\b/i,"function":/[-a-z0-9]+(?=\()/i,punctuation:/[(){};:]/},Prism.languages.css.atrule.inside.rest=Prism.util.clone(Prism.languages.css),Prism.languages.markup&&(Prism.languages.insertBefore("markup","tag",{style:{pattern:/(<style[\w\W]*?>)[\w\W]*?(?=<\/style>)/i,lookbehind:!0,inside:Prism.languages.css,alias:"language-css"}}),Prism.languages.insertBefore("inside","attr-value",{"style-attr":{pattern:/\s*style=("|').*?\1/i,inside:{"attr-name":{pattern:/^\s*style/i,inside:Prism.languages.markup.tag.inside},punctuation:/^\s*=\s*['"]|['"]\s*$/,"attr-value":{pattern:/.+/i,inside:Prism.languages.css}},alias:"language-css"}},Prism.languages.markup.tag));
		Prism.languages.clike={comment:[{pattern:/(^|[^\\])\/\*[\w\W]*?\*\//,lookbehind:!0},{pattern:/(^|[^\\:])\/\/.*/,lookbehind:!0}],string:/(["'])(\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,"class-name":{pattern:/((?:\b(?:class|interface|extends|implements|trait|instanceof|new)\s+)|(?:catch\s+\())[a-z0-9_\.\\]+/i,lookbehind:!0,inside:{punctuation:/(\.|\\)/}},keyword:/\b(if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\b/,"boolean":/\b(true|false)\b/,"function":/[a-z0-9_]+(?=\()/i,number:/\b-?(?:0x[\da-f]+|\d*\.?\d+(?:e[+-]?\d+)?)\b/i,operator:/--?|\+\+?|!=?=?|<=?|>=?|==?=?|&&?|\|\|?|\?|\*|\/|~|\^|%/,punctuation:/[{}[\];(),.:]/};
		Prism.languages.javascript=Prism.languages.extend("clike",{keyword:/\b(as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\b/,number:/\b-?(0x[\dA-Fa-f]+|0b[01]+|0o[0-7]+|\d*\.?\d+([Ee][+-]?\d+)?|NaN|Infinity)\b/,"function":/[_$a-zA-Z\xA0-\uFFFF][_$a-zA-Z0-9\xA0-\uFFFF]*(?=\()/i}),Prism.languages.insertBefore("javascript","keyword",{regex:{pattern:/(^|[^\/])\/(?!\/)(\[.+?]|\\.|[^\/\\\r\n])+\/[gimyu]{0,5}(?=\s*($|[\r\n,.;})]))/,lookbehind:!0}}),Prism.languages.insertBefore("javascript","class-name",{"template-string":{pattern:/`(?:\\`|\\?[^`])*`/,inside:{interpolation:{pattern:/\$\{[^}]+\}/,inside:{"interpolation-punctuation":{pattern:/^\$\{|\}$/,alias:"punctuation"},rest:Prism.languages.javascript}},string:/[\s\S]+/}}}),Prism.languages.markup&&Prism.languages.insertBefore("markup","tag",{script:{pattern:/(<script[\w\W]*?>)[\w\W]*?(?=<\/script>)/i,lookbehind:!0,inside:Prism.languages.javascript,alias:"language-javascript"}}),Prism.languages.js=Prism.languages.javascript;
	
		/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))
	
	/***/ },
	/* 653 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var terrific = __webpack_require__(15);
		var $ = __webpack_require__(4);
	
		//$.noConflict(true);
	
		//if( typeof Promise === 'undefined' || typeof Promise.resolve === 'undefined' ){
		    terrific.Application.prototype.start = __webpack_require__(654)
		//}
	
	
		var application = new terrific.Application(document.body, {
		    namespace: window.mrm.modules
		});
		application.registerModules();
		application.start();
	
	
		window.app = application; // for debugging
	
	
	
	
	/***/ },
	/* 654 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
	
		var $ = __webpack_require__(4);
	
		module.exports = function (modules) {
	
		    modules = modules || this._modules;
	
		    var promises = [];
	
		    this._sandbox.dispatch('t.start');
	
		    // start the modules
		    for (var id in modules) {
		        if (modules.hasOwnProperty(id)) {
		            var promise = (function (id) {
	
		                var deferred = $.Deferred();
		                modules[id].start(deferred.resolve, deferred.reject);
		                return deferred.promise;
	
		//                return new Promise(function (resolve, reject) {
		//                    modules[id].start(resolve, reject);
		//                });
		            }(id));
	
		            promises.push(promise);
		        }
		    }
	
		    // synchronize modules
		//    var all = Promise.all(promises);
		    var all = $.when(promises);
		    all
		        .then(function () {
		            this._sandbox.dispatch('t.sync');
		        }.bind(this))
		        .fail(function (err) {
		            throw Error('Starting or synchronizing the modules failed: ' + err);
		        });
	
		    return all;
		};
	
	/***/ }
	/******/ ]);

/***/ }
/******/ ]);
//# sourceMappingURL=doc.js.map